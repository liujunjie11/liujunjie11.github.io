<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>时流记（流时记）</title>
      <link href="/2023/08/28/%E6%97%B6%E6%B5%81%E8%AE%B0%EF%BC%88%E6%B5%81%E6%97%B6%E8%AE%B0%EF%BC%89/"/>
      <url>/2023/08/28/%E6%97%B6%E6%B5%81%E8%AE%B0%EF%BC%88%E6%B5%81%E6%97%B6%E8%AE%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>降罪</title>
      <link href="/2023/04/23/%E9%99%8D%E7%BD%AA/"/>
      <url>/2023/04/23/%E9%99%8D%E7%BD%AA/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>昨日</title>
      <link href="/2023/04/23/%E6%98%A8%E6%97%A5/"/>
      <url>/2023/04/23/%E6%98%A8%E6%97%A5/</url>
      
        <content type="html"><![CDATA[<p>沉浸在轮回的往昔轮奂。昨日。虽陨，犹在。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浊</title>
      <link href="/2023/04/23/%E6%B5%8A/"/>
      <url>/2023/04/23/%E6%B5%8A/</url>
      
        <content type="html"><![CDATA[<p>抛至不寻常于众，持以高见的傲慢，抱以迂伪的欣慰。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>盛夏</title>
      <link href="/2023/04/23/%E7%9B%9B%E5%A4%8F/"/>
      <url>/2023/04/23/%E7%9B%9B%E5%A4%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无</title>
      <link href="/2022/12/05/%E6%97%A0/"/>
      <url>/2022/12/05/%E6%97%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>阴谋</title>
      <link href="/2022/11/17/%E9%98%B4%E8%B0%8B/"/>
      <url>/2022/11/17/%E9%98%B4%E8%B0%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>漫长</title>
      <link href="/2022/10/23/%E6%BC%AB%E9%95%BF/"/>
      <url>/2022/10/23/%E6%BC%AB%E9%95%BF/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>具象</title>
      <link href="/2022/10/08/%E5%85%B7%E8%B1%A1/"/>
      <url>/2022/10/08/%E5%85%B7%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<p>干涸与倦意泛滥，虚空与寂静的重交不再有新意。</p><a id="more"></a><p>任由流意的牵引，将外音扩至撼动肉躯，竟不再习惯于享受与独处的乐趣。将此封意放纵，有意驱散身旁的孤寂与寞觉，沉寂在这古板如常的反复来往中故作踽乐。</p><p>故与时间的流逝，期许更快的脚步，与人们意同，缓缓匆匆，为这虚无循规蹈矩，清醒自知而又不变却着。风雨已然无味，各处显映着空白，无缺的组成令人发闷。前后中途闪烁着熟悉的绚丽霓虹灯彩，扭动着指挥待驱的机器，维持着摇摆的秩序，有序、无序。</p><p>存在的争论不休不绝与耳，还有年老色衰的眼眸，还有深纠于内心的人间至情，好似脱离了，好似清醒了：这值得恐惧的可视的具象。难以接受。与还仅存有的欲望交织，从此依然催生了已避免的体验追寻与好奇，隐隐作祟着，推动着与人情的消融及无法湮灭的系魇，看到了、亦然触碰到了这可怖的真实，因此跳动着的不安袭卷在毫无防备的真意。</p><p>莫口无论与无用的解释与表达，差异突显，事事何能休。争取于精心的搜索与制作，还是急忙来往的心悸，卖力着、诉说着、妄求着被安逸、被掩虚，已然明了这无可消除的芥蒂。坐在对面的同类构画着那于我缥缈无欢的蓝图，抒发着与我无关的口语，贯通经过，怎会不明朗这滑稽人间剧。</p><p>烟火欲火的熏陶，陶冶着无趣与麻木。造就的诡恶猜疑不时展示，行走的无趣依旧在上演，歌颂着何是清欢与悦意的悲凉。不过是万拘一梦，糜烂奢求的妄求在燃烧着，明知变味在其中，为这嬉闹而自惭。</p><p>还有些许什么，还有虚妄什么，不时的觉意，不时的幻营，在幻营中自萦取乐，观望这不值一提的实象。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>真情</title>
      <link href="/2022/10/04/%E7%9C%9F%E6%83%85/"/>
      <url>/2022/10/04/%E7%9C%9F%E6%83%85/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>黄昏</title>
      <link href="/2022/10/04/%E9%BB%84%E6%98%8F/"/>
      <url>/2022/10/04/%E9%BB%84%E6%98%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>混沌</title>
      <link href="/2022/10/04/%E6%B7%B7%E6%B2%8C/"/>
      <url>/2022/10/04/%E6%B7%B7%E6%B2%8C/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>孤独</title>
      <link href="/2022/10/04/%E5%AD%A4%E7%8B%AC/"/>
      <url>/2022/10/04/%E5%AD%A4%E7%8B%AC/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>游离的痛苦</title>
      <link href="/2022/09/23/%E6%B8%B8%E7%A6%BB%E7%9A%84%E7%97%9B%E8%8B%A6/"/>
      <url>/2022/09/23/%E6%B8%B8%E7%A6%BB%E7%9A%84%E7%97%9B%E8%8B%A6/</url>
      
        <content type="html"><![CDATA[<p>这总是游离观望的旅途，无关亦无恙。</p><a id="more"></a><p>剥离在声嚣与蠕动，不绝于耳目。<br>所能不甘接受的圭臬，无可逃避的悸动。<br>安梦觊觎、抛身落影，孑游象外，无意微妙四季、不觉当世梭往。</p><p>往之、往之、当愿归之如倚。</p><p>历游在构，梦离在不时间，术语、狰狞横道。如是倦上心头、厌观世象，曲形诡态在举，还却彩云当空，日熄尤不亡矣。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>争论</title>
      <link href="/2022/09/23/%E4%BA%89%E8%AE%BA/"/>
      <url>/2022/09/23/%E4%BA%89%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<p>在无常的不幸降临，人们本能地争先恐后地为利欲驱使。</p><a id="more"></a><p>与鲜明对比着的是无法预料的不堪的表现。人们，从前演讲过的，还同样记忆犹新。还想做的完美无缺的，同样在脑海反复预演着。同样拘束在名存实亡的规章制度，如此在庸俗中昧心，还不忘反省狡辩。</p><p>要挟表演却一笑了之的经过，以戏乐人间为此开脱，从此再次圆下罪恶。告诫着别样的人们：不能真诚面对，亦不能面对真诚。躯壳脱离，由着意识飘向虚佯的高尚境界，心跳不止，狂跳不止地将谎言顺理成章。</p><p>可悲的懊悔在上演着，把谎言传播，合理便是合法合规合群。是否便是这样的竭力嘶底，维护着仅存的有理有据，把丑恶的一面就此试图永世掩埋。</p><p>争论，是要求把掩饰表演到极致真实的斗争，是可以处变不惊地转换真伪的场地，也是可以摒弃所有教养的道貌岸然。为生存、为活命，还只是不愿承担着的付出，如此争论不休着，戴上私欲诉说各自的真诚。</p><p>暗示着，烙印着生存的字样，在心底为这亲手制造的肮脏的不平窃喜。庆幸着，为这苟欢而侥幸逃脱，不甘的败者成为了被合理践踏取乐的抚慰对象。糜烂着，为这糜烂义正严辞！</p><p>痛恨着，无法做到的无数次的表里不一，总是反复出现在从前、现在、未来的同质演出。从此，做一个，还是重饰这软弱的欺辱者，再在无声无息的夜晚独自诉唱高尚。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>荒谬的温情</title>
      <link href="/2022/09/22/%E8%8D%92%E8%B0%AC%E7%9A%84%E6%B8%A9%E6%83%85/"/>
      <url>/2022/09/22/%E8%8D%92%E8%B0%AC%E7%9A%84%E6%B8%A9%E6%83%85/</url>
      
        <content type="html"><![CDATA[<p>烦躁，急于求成的工作，失去，求生，还是借口。人们抛弃理性与规则原则，把生存作为无数次开脱的理由借口。</p><a id="more"></a><p>俗世的伪乐充斥排挤着应有的真实的欢乐。</p><p>驱车而进退，夹缝求生的丝丝可悲的窃喜油然而生。看着远处的阴郁还是灿烂，所照映在、所反映的雾里朦胧、水墨相间的物体轮廓，行驶在路上还是依旁的器具，在其中的人们洋洋得意着，不再是被人唾弃的对象。心怀着庸俗的期许，因此津津乐道着、自我摧残着，乐此不疲。</p><p>迎面穿透的风雨贯通刺骨，数着江水由枯竭至蛮胀，或许是渔人出猎了，鸟儿们上跳下跃着，顶着金光闪闪，倒映在反射入眼刺目。除了机器转动的聒噪，遗忘在驱驶的路上，只剩下麻木的肉身在熟练着操控着，前往得以填口抚慰俗心的地方。</p><p>这里重复着可悲的轮回。睡眼惺忪无可奈何的懵懂小人儿们，以此为意而又附众于世行道的大人儿们，怀着以值得被需要的心许，如此无动于衷着，重复演变着。从未得到一成未变，造就这呕心沥血的血泪悲歌，人们以此为荣。</p><p>直到这被教育着被需要的要求满足所造诣的温情通融身心，敏感与不安消逝了，时时刻刻训诫着人们迈向大众庸俗。</p><p>带着疲倦不甘与枯燥无味，摆弄着上锁的机器，轻视着无所事事的人们，而妇人们在一旁津津乐道，好似显得乖巧懂事。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>厌倦</title>
      <link href="/2022/09/13/%E5%8E%8C%E5%80%A6/"/>
      <url>/2022/09/13/%E5%8E%8C%E5%80%A6/</url>
      
        <content type="html"><![CDATA[<p>寻求等待着一个契机，将不悦发泄，将混沌理顺。关上窗。没有硝烟的。</p><a id="more"></a><p>为这荒芜一无所有的，增添色彩。</p><p>陈词滥调重复返现着，自圆其说的伪饰不忘上演着。观察着躯壳与极力追寻着的另类躯体，不约而同地表现荒唐与稽谈。肤浅成为了主流词，而人们乐在其中，糜烂的气息愈发沸腾，格格不入的人们无可奈何。</p><p>未久有过新颖的洗露，在这按部就班中勉意维持着郁乐，短暂地在数次来意中复现窘乐，与那般穿梭而过却不慎其中的人们相似，为着欲念还是企图制造荒芜带着痛苦轮生轮为。清醒着试图还是已然把自身摧毁。</p><p>如何还是那番可笑的作为在浮动着，无从挥去。这精心巧构的规则，带来悸动的感觉，深烙其中，环萦着要求。每时每刻重演着的悲剧，习惯冷漠忽略，而计谋与贪心还只是戏笑着演变地从中作祟着，无从逃避，沉默在、行驶在内觉的不宁中，心惊肉跳着，触发了新奇与省意。</p><p>俗世的嘈闹，滔滔不绝的语声噪音，还有一成不变赤裸裸在无息之地。到处散发着利往之交的气息，而落套的人们以简便易行将自己深刻禁锢。无限下沉的陨落制度摇摇欲坠，人们苟活着将此贯彻到底，美妙美好的，化为口中的无稽之谈与冷嘲热讽。</p><p>为苦痛正名，为诡异默许，沉沦不语却大行其道的生存方式，已然成为了这难以撼动的轨渠。至罪不过如此：让新生轮回于无道为道。</p><p>这里以显眼虚假的繁荣掩盖着真实的诡恶及苦痛的行径，以生存要挟为团队的犯罪制造着予无加之罪的机器，把本该的欢声笑语迫变为阴郁。那些惊觉的呼喊与诉求，已被别有用心抹杀。</p><p>亦然开朗了，依旧续避着。厌倦这生生不息，而以无关的羁绊，成为了喋喋不休、欲诉还休的引索。还寓这一场指责的冗余记意。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>颂欢意</title>
      <link href="/2022/09/08/%E9%A2%82%E6%AC%A2%E6%84%8F/"/>
      <url>/2022/09/08/%E9%A2%82%E6%AC%A2%E6%84%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我的大学时光</title>
      <link href="/2022/08/27/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6%E6%97%B6%E5%85%89/"/>
      <url>/2022/08/27/%E6%88%91%E7%9A%84%E5%A4%A7%E5%AD%A6%E6%97%B6%E5%85%89/</url>
      
        <content type="html"><![CDATA[<p>我的大学，我的筑梦年华，我一生的梦魇。s</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的中学时光</title>
      <link href="/2022/08/27/%E6%88%91%E7%9A%84%E4%B8%AD%E5%AD%A6%E6%97%B6%E5%85%89/"/>
      <url>/2022/08/27/%E6%88%91%E7%9A%84%E4%B8%AD%E5%AD%A6%E6%97%B6%E5%85%89/</url>
      
        <content type="html"><![CDATA[<p>那时动荡与不安时时呈现出勾勒的幻想。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的小学时光</title>
      <link href="/2022/08/27/%E6%88%91%E7%9A%84%E5%B0%8F%E5%AD%A6%E6%97%B6%E5%85%89/"/>
      <url>/2022/08/27/%E6%88%91%E7%9A%84%E5%B0%8F%E5%AD%A6%E6%97%B6%E5%85%89/</url>
      
        <content type="html"><![CDATA[<p>欢笑时光相伴与陌生，碾转在数个场景中，无言、匆匆。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>童年</title>
      <link href="/2022/08/27/%E7%AB%A5%E5%B9%B4/"/>
      <url>/2022/08/27/%E7%AB%A5%E5%B9%B4/</url>
      
        <content type="html"><![CDATA[<p>漫长的童年，挤兑着整个年华岁月。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美妙荒芜</title>
      <link href="/2022/07/22/%E7%BE%8E%E5%A6%99%E8%8D%92%E8%8A%9C/"/>
      <url>/2022/07/22/%E7%BE%8E%E5%A6%99%E8%8D%92%E8%8A%9C/</url>
      
        <content type="html"><![CDATA[<p>刻意地安排、蓄意地逃避、失去激情的麻木充斥着毫无生机的重复枯燥。</p><a id="more"></a><p>不变的人群与不变的动机，那条只为寻食充饥的难耐街道，无数人们为琐事奔波的身影匆忙掠过。</p><p>发臭的垃圾气味残留吸附在残缺路面，肆意散发着。林荫小道一旁的河流上浮着人造与自然脱落在其中的随处可见的物品与残枝败叶，河两旁的树儿生长而出的青枝绿叶倒映在水中，浑浊呈糊状的轮廓清晰可见。难以接受的鲜明对比，掺杂着回忆的滋味，泛起数味杂陈的感受难以形容，只是想起过往经过的那些河流，童年里的还是不知何时里的，不禁又细数一番。</p><p>聒噪、宁静、还是悦耳舒心的乐曲反复上演着，带着循环演绎着的臆想，寻求可能带来的一丝新意与喜意。不变的味道与食材，还有不变的作陪娱乐，在自我麻醉中沉沦，在虚伪滑稽中寻乐，在放开之时居然会有害怕沉浸深陷寂静的慌张感觉。将嘈杂厌倦的声音开到可以企图去除寂寞孤独的音量，只为逃避再无可带来欣愉沉思的气氛弥漫。</p><p>幻梦叠加在恍惚现实之间，手足动作协作之间的无感与无法带来新新激情的荒芜周围所展现的神情动态，无趣且麻木着。</p><p>春天、夏天、秋天。街道、人群、气息。欲发逃离却无处可去、却无法自拔。异样荒芜，带来的反复缺陷，造就的谈趣诡谲，再也无法感受到的那样从前的鲜活可期。</p><p>无生息、万般枯寂的岁月，一种平淡无声无息、无蓄无就的异样美妙悄然生息，就此抚慰这时期的孤寂与无赖。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自得</title>
      <link href="/2022/06/20/%E8%87%AA%E5%BE%97/"/>
      <url>/2022/06/20/%E8%87%AA%E5%BE%97/</url>
      
        <content type="html"><![CDATA[<p>在曼妙细腻的脚步中追寻到欣然自得其乐的韵味，没有刻意导向的冗余思维，就此拥有的那份悠然而生的喜意，难以忘怀。</p><a id="more"></a><p>步过时节气息的多变，切身体会到了不同季节天气带来的亲肌感受。细雨至朦胧大雨的转变，路过坑坑洼洼的积水，扑面而来的久违拂面的清新开朗，带来压抑已久的神清气爽。一道光亮与乌云争味，直至被乌云完全密布覆盖，预感到雨要来了。在高楼隔窗看这淅淅沥沥的雨肆意袭来，竟有着豁然开朗久未至的窃喜。</p><p>适宜的温度，漫步在午后寻食的街道，人们吆声着，人们站立着，随时为着饥饿难耐的人们服务。这样适在其中的小城，人们载着小人儿一并往前往后驱车而行，适量的嘈杂与巡街的微风，构造着散发着令人舒适的烟火气息，如此弥漫在倾心周围，连同每一个存在着的，驱散了已久的不愉快，把我推向到那样被野性所激发的要求合群的兴致勃勃。</p><p>回到寂静却只剩自然在作祟的村庄，树叶拍打着发出零零散散声音的林荫小道，与酷暑相较妄想无时无刻不随身沁来的爽遇的风，时小时大，伴随着宁静与前望着的一片绿色遍野，还包裹着的鸟语花香，唯独缺失了一份鸡叫鸭鸣，带来的无限遐想与畅想。身处在悦耳悦心的音乐当中，幻想着在妄想场合下的唱响表演，观望的人们竖耳聆听，台上的自身倾情效仿着演绎着…</p><p>倏尔望见一道亮眼白光散射分割夜空的晚霞，又多端色彩变化着的，有如多彩的霓虹，有如衬映在既红既粉又掺杂几片乌块与一旁彩云相拌的好似画面中的梦幻卷帘般的盛夏暮色，不由地停驻眺望遐想。难得一见的好景与周边尘嚣的人气交合着的，所被这股不常被自身待见的气息感染，感到莫名其妙的惊喜与愉悦。</p><p>在心满意足的回笼早晨，小鸟低语嘻闹在足脚，不一会儿也窜飞走了。周围邻居人家常 见午后打理的菜园，没有灼热照身的烈阳当空，散步在这样悠然自得的街道，自得其乐，就此呈现。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猜想</title>
      <link href="/2022/06/20/%E7%8C%9C%E6%83%B3/"/>
      <url>/2022/06/20/%E7%8C%9C%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<p>有关于人类生物诞生以及外星人相关的个人猜想。猜想即真相，我所认为的真实。</p><a id="more"></a><p>地球生物是他人的实验品；星球是被有意设计构造的；被娱视一般的圈养生物的举动；性欲设定；动物制造投放；灵魂意识；一切困惑来自于难以理解的、被迫接受的人文历史与神话故事掩盖的试图美饰的人为制造，而人们别无选择；感性思维是愚蠢的证明，也是教化蒙蔽的工具；墨守成规的人们无法突破本身的牢笼，而不是低级的身形突破，而是思维突破，而我们可以达到无限；文字是最易表达节约成本时间的方式；文字：物与物的名词搭配与连词；积极健康的发明者被称为大师圣人，是为了避免原始的杀夺导致生命的失去，亦是为了蒙蔽与奴役；随世沉浮的人们，怎样能够试图与他/ 她们接触理解；人类是被设计的低端的智能，嘴巴的设计便是证明。无论怎么看都是丑陋不已的人类千奇百怪的突出闭合物，如何已形成怎样的美感。奇妙晦涩的语言。被建造的现有的，蒙蔽应当正视需求的。恐惧，是营造冲击的最佳推进索。制造本能的恐惧，掀起斗争的端倪。一面追寻渴求着无知，又一面唾弃蔑视着无知。教化吸附无知的人们伴随一生。任何质疑的痛苦亦是如此。好奇，一样的诱惑。人类历史上的血泪史。观念碰撞。人们寻求的利于自身需求的制度以获得更为自在的行动，这与政府的必须规定背道而行。胜利，助兴的本能兽性，为开脱辩护。被混淆的，掺杂的自信。放声大哭，沿街回声，冷眼旁观的屈辱童年。竖起旗帜，印刻上生存，从此大行其道。围观的人们一扫而过，从此作为谈资与汲取。烟火气息的浸泡与灼烧。粗纩的肉身，与意识的对立面。意识沉睡已久导致的失忆。爱被稀释，从此被轻视。宇宙的时间定义，威尔逊访谈。模仿的禁锢，还是自我表达的一种自述，善于发现发掘的新奇体验总是让人欲罢不能的。模仿之后得知的自以为是的见解是否又只是一种自我抚慰：与人们一样，奔波劳碌，为人所需。耳濡目染的影响无法避免，却又是另一种禁锢的开始。文字取悦自己即可，为何增加多余的解读，一种记录。真正所谓的，是遵循到了内心的抉择，还只是获得了外界的认可，而你深陷囫囵。 挖掘真相，又陷入无尽的谎言。为一无所有的，增添色彩。<br>待续…</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>那些女孩</title>
      <link href="/2022/06/14/%E9%82%A3%E4%BA%9B%E5%A5%B3%E5%AD%A9/"/>
      <url>/2022/06/14/%E9%82%A3%E4%BA%9B%E5%A5%B3%E5%AD%A9/</url>
      
        <content type="html"><![CDATA[<p>某个时分回忆起的过往岁月里，那些挥之不去的女孩形象们。</p><a id="more"></a><p>待续…</p>]]></content>
      
      
      <categories>
          
          <category> 故事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 故事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>所谓</title>
      <link href="/2022/06/13/%E6%89%80%E8%B0%93/"/>
      <url>/2022/06/13/%E6%89%80%E8%B0%93/</url>
      
        <content type="html"><![CDATA[<p>说。</p><a id="more"></a><p>事件频频发生着，目不暇接地发生着，当荒谬的丑事被揭露，高傲自大的管理者们带着刻板的印象与维稳的说辞，把私心美饰为官方说明，责罚不安分的造事者。人们相互以刻板的印象作依据，无视该有的多元与理智，去把各不相干的人们定罪，为无法直视着的自身装缀。手握着不义之财的人们，在虚伪的界面祈福。有意无意愚昧无知的人们为暴君辩护，把矛盾激化带到造就另一个悲剧。脆弱伪善的人们被刻意维护着的丑事刺激，当频发的刺激无法得到理想的解围无法得到合理的说服，慢慢作茧自缚变得自以为的百毒不侵的麻木。</p><p>人无完人，十无十全美的陷阱，让我们习惯性认为丑恶应当被理解、应当被接受，美好的期待从此慢慢被自我磨灭。让那些自私自利的管理者们得逞，以夸夸其谈的安稳换得以人民为基的经济机器。义正言辞地将假象散播，混淆着为生存良知挣扎着的人们所诉求着的真相。以正义之名将无名氏击杀殆尽，以好维持这来之不易的、鲜血淋漓的钢铁之基。愚昧还是附和着、拥护着假象带来的国泰民安、欣欣向荣与官明正取。</p><p>当人们无法面对真实的自身的丑恶，企图将不合理掩饰为合理的存在，不合理将成为人们乐意为之辩护的尊严基础。当一个国家的领导阶层为了稳固因民异带来的摇摇欲坠，从而做出各种不合理的举动以强词夺理之时，这个民族、这个社会在未来的很长一段时间将会充满荒谬与谎言。一切好似理所当然着发生着，接受这不公不平的事实，还是由人们本身不愿失去的私欲所构成的，维持着摇摇欲坠的和谐假象，甘愿为之奉上滑稽的表演。</p><p>人类世界的和谐共处建立在以强权威严的假象之下。当富有激情饱满的人们，当被寄予美好意愿的人们为琐事焦头烂额，为生存抛弃尊严，为责任所束缚之时，只会剩有一条选择同流合污的道路。周围的人们无时无刻不在如此教育着后生的人们最终如何尽早地迈向庸俗。当思想随着精力被慢慢消损殆尽，变为由着规则与欲望指使的行尸走肉。无处感叹诉求的人们，强责怪命运的不公，接受着被愚弄的结局，再去为之美饰为“人生”。</p><p>当以假乱真横冲直撞地充斥着，当人们惯以假言假语着诉说着、摆弄着，人们的耐心与严肃将被干扰，长久以往如此进行着，都会向着肤浅前行，大众心态娱乐化，所有的过往的均将成为谈笑风生的笑语。当值得关注的事态被演示，神圣的宣判亦显得无力与滑稽。还在讨论着体制差异的人们，沉迷着表象带来的片刻欢愉，失去本有的真实意义。被指使着的胡言乱语，没有实际体验的妄言虚设，再去将愚蠢的人们欺骗。领导者们相互争吵，试图将气焰燃烧殃及到本已处于水深火热之中的人民们，而人民们相互示好。</p><p>人的一切动机激于本能的发自内心的欲望。欲望分有界限，有的欲望可以作为长久持续的激励动力，而有的欲望不过是瞬息一念之间。性欲作为最为低级的本性欲望，却能控制无数新奇的人们，这种欲望不应被遮掩，否则必然会适得其反驱使更多人的好奇，当欲望与新奇相掺杂，才是各种悲剧的开始。这个世界被点缀的如此引人注目，与生俱来禁锢原地的人们为了妄寻出其不意的新喜，如此卑贱的苟延残喘着，变得甘愿为不幸与悲哀辩护。</p><p>人们生产生存于这个被精密设计的空间里，愚钝的人们任人摆布着，一生与不幸挂钩，惊醒的人们不堪其扰地活着，一生走在解答的路上。金钱作为流通的交易物品，身陷无时无刻不布满消费陷阱的地带里，欲望被要求激发殆尽。如此荒唐地循环着、倦缩着痛苦着，形成如此被要求生存的世世代代的羊圈里。大众的命运是被定型、是要求被贯彻的，所谓上层的人们营造各种理念与观念，不过是为了把丰富人间讲述的如此光明正大。本一无所有的人世间，被别有用心的人们陈述营造的如此荒诞不经，从此失去本有的纯粹，从此被一脉相承着，如此演变成如今更为不堪的现代，人们被引导着称之为“文明”。</p><p>女人们被一脉相承如此教育引导着相夫教子，使得出奇也显得稀奇。女人们为抉择而徘徊着幻想着憧憬着 ，企图以依偎寻求庇护的女人们，只能理所当然的承受与被接受。性欲横流不屑于东躲西藏的人类社会里，不解的女人如同被发泄寻求的猎物，如此使得猎人们蠢蠢欲动着。受到欲望相向的诱惑，相互相向的逐渐变质，使得悲剧重演不再让人困惑。短暂的寻求新奇，让宝贵的、不宝贵的均变为习以为常的碌碌无为与匆匆忙忙。</p><p>当理想与选择背驰而行，再如何显得正确无比的选择均只会埋下引发悲剧的隐患，因为迁怒会变的义正言辞。当物欲追求与职业精神相交合，所有的精神都会变得脆弱不堪，当人们只是为了生存而选择，精神赋予只是多余的滑稽。如此，当宝贵的精神被稀释抛弃，注定使得悲剧频发不再稀有，社会引导注定分崩离析，导向重演。私欲，行动的驱动力，也是悲剧的制造剂。身处不悦带来的迁怒具有感染性，会带给整个社区乃至人类社会以悲剧的导火索。而迁怒深具隐蔽麻痹性，所以使得人们在引发悲剧时浑然不知。</p><p>教育是为了维稳，更像是被引导着的要求专一醒悟，是为了目的达成而衍生的施予行动。可以是训导的作用，也可以是为反抗寄予厚望的报复行为作用，这是两种相向观念的对抗斗争，也是大众赖以生存的求生之道。大众选择学习、依赖学习，更多时候因此清醒却又深陷其中的奋力挣扎，不过是为了物质或精神达成明显的蜕变。获取知识，只是为了更为清晰地去认知这个早已分崩离析的世界。授道与学习从来不是纯粹性的，所有的行动均带有难以启齿的目的性。而结论必须是绝对的偏向个人导向的极端，这点毋庸置疑。杂乱的接收与絮乱的思索，使得人们游离在因不断产出结论的道路上迷乱徘徊。游离，游离在传统的一脉相承与新兴的外来知识里，无时无刻不带来无以定论的不安与忧虑。陶醉，陶醉在乐此不疲的思如泉涌里尽情享受与思索。如此津津乐道的挖掘与自我瓦解，真是一番极致的难得的欢乐境遇。</p><p>陈词滥调是不可避免的、无法逃避的。妄想勾勒与众不同的字词表达所悟所想，不过还是痴心妄想的。而字词终只是承接的醒目工具，思想才显得多姿多彩。摆脱相仿的人们的腔调与风格，在自我沉思中寻求真意，才只能展现真实的自我。以心眼去观察，以心语去描述，在心境中描绘，令人困扰的有意无意的模仿始终应当去抛却应对。每一个个体均是无数个体的缩影，人们在迷乱中企图涅磐重生，造就寻找真我的道路上磕磕绊绊、如影随形无法摆脱。厌倦已有的理论，妄求固有的突破，如此矛盾着寻求解脱着。唯有相信自我的表达，塑造自我的批判，才是不被困扰的意义所在。接纳包容批判个体的倾诉，如此营造更为令人欣喜的思境，带着那份不该抛弃的意气风发。抛弃固有的因个体偏导群体附和的无处不在的从古至今的刻板印象，发掘个体的独异，如此欣欣向荣地决意。</p><p>人的烦恼可以确定的是：均来自外界的干扰。自印证那句“庸人自扰”。时而理性与感性的交杂表现，是无法理清的情绪变换所导致的清醒的理性与荒唐无边的感性。贫穷更应当在乎于精神世界的匮乏，不应当成为掩饰的言辞借口。外在的成功总是被需要与尘世的共情与需求相挂钩，口面上的才华必须与金钱地位与知名度以衬托。掺杂着各种告知与刻意，所有的韵味均已变味。</p><p>看人们臃肿难堪的身材与东倒西歪的面孔，如何也难以去取悦去理解，亦然无法接纳。抛却错综复杂的各种因素去审视，把偏见贯彻到底，一味地将刻板印象刻画的栩栩如生，再去相传与无知的人们。在这荒谬的荒漠里，人们争相着献媚讨好，呻吟着且挣扎着。出奇的人们显得格格不入，被合理合法地铲除，无限地要求与世俗看齐，要求这样摇摆不定的人们去沉入庸俗，迈向无限的堕落。而真正的堕落在于失去了清醒清晰的独立思索，变得与奔波在苦难人间的大众一气呵成、不分彼此。</p><p>幸福是无数片刻幸运相较无数片刻不幸所得出产出的侥幸。如此践踏在不幸的事物之上不知羞耻地大言不惭地所追寻所描述的可笑感觉。自然与人世间的不公是注定的，出身的无法决定便是最好的证明，相较所被描绘的物质优越的人们在出身之时便已能决定更能无限接近这正行使着的规则，继而可能去改变续写规则。看着墨守成规的体育项目反复被表演着，完美复现的人将被冠以滑稽的尊重与冰冷的碳矿化合物，从而失去应当附有无限激情无常的挑战精髓与真正所在无时无刻不再宣传的无穷魅力。在刻意谋划的牟利的熏陶下，真诚的诉求是显得可笑滑稽的。</p><p>陷入尘轮，带着好奇与执念的人们为突破划有的阶层，如此兢兢业业着，如此卖命追寻着。早已注定的无法改变的尘锁照扣映在每个人身上，无法脱逃。回到那样不被涣散的专心致志地去思索，忘却世俗的沉沦与诱惑，回到那样空灵意味漫长的境遇，不再需要了，无需忧虑了，都不值得了。</p><p>白日是要求人们踏上轨迹持续被挟意乱情迷且安身立命的时间，夜晚是卸下负担苟且偷生的时刻。有多少个夜晚灯火通明的纵情纵欲，就有多少深谙其中的哀嚎挣扎。同样的纷纷扰扰着的，发生着，逃避着，掩饰着，重复着，如此反反复复。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上大学</title>
      <link href="/2022/06/03/%E4%B8%8A%E5%A4%A7%E5%AD%A6/"/>
      <url>/2022/06/03/%E4%B8%8A%E5%A4%A7%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>上大学是一件如今回想仍旧心怀激情的喜事，对我、对家人来说或许都是。我的大学时光，对我影响深刻，回味着孩童时代为之书笔的岁月，我也认为值得。惘然地接受期间带给我的质变与享乐，同时也照着模仿感恩着人间爱。上大学，永远都离不开父亲的身影，还有母亲的眼泪。</p><a id="more"></a><p>还记得在学习驾车回家的午后，带着一份假装刻意的不屑与渴求的侥幸，如此查询得到的高考成绩，还算是如意。父亲为了让我能在家乡能有一番作为，与我产生分歧，争吵不休、面红耳赤，母亲的理解还是不解。最终还是请人师的帮助下选择了跨越大半个中国的大学。</p><p>犹记离发前夜，母亲为我收拾衣物与常备，倏尔责备、倏尔喋喋不休、倏尔泪声俱下。心寄窃喜与羞窘，递去擦泪的纸巾与微颤难安的心情。抚慰、舒缓，父亲的沉默与焦措。新喜的逃离，妄想着相较当下的自由与被描绘得令人遐想的美妙，无时无刻不在骄纵着。</p><p>父亲仍心有余悸，询问着去时的路上旅客。同省的旅人与我们背道而驰的选择，相互怀着离别与祈盼，我们相谈甚欢，各取自益。让人感觉到如此不易的意外热情，更添喜色。在人潮中穿行直至再为难休却早已被激情拥裹，一望天色蓝白相交，稍稍吵耳的机动发条，让人新喜的午后中餐，故作镇定的小憩姿态。一切心灌着向往与狂激。</p><p>降驱行驶着，我看见白雪覆盖依然几点绿黑崭露头角。一旁的久未旅行的父亲也开始感觉到新鲜起来，不知怎么的，初始的激情逐渐消殒，可能是久喜复平。落地之后的拥挤与喧闹与昨日一同无异，眼望着不同口音与相同生相的人们络绎不绝，人们各自为着悸动行驶着各自的肢体，说着言不由衷的言语。</p><p>前去的小车上，路过这久浊的城市，新鲜的电视语言，无感的跨河大桥，直到校园内景。我与父亲拖着装满母亲安置物品的行李箱子。那日清晨，忘却奔波的疲惫与饥饿，红色球场场地上好似一望无垠，直伴着我们走过大半个无意。阳光清醒照耀，清新空气扑鼻，真切实意的鸟语花香不绝于耳，本已无心无意的心又开始跳动起来。中途中的迷茫与校友的带行指引，找到了往后数年的安居之所，父亲随我安置，我开始难以抑制内心的渴望，开始有模有样地与陌生的同学装腔作势着，一旁的父亲憨笑附和着。</p><p>体验过学校食堂的便饭，父亲邀我去一赏这名付冰城风光，而我欣然拒绝。父亲或许也是按耐不住内心的欣喜了，相较那个数十年载的小城确实是如同挣脱枷锁一般的狂放。回到母亲从前向我们倾诉那般的一样，回到了青年懵动时代的老城，自然不得自在与安立。我亦如此。</p><p>依旧是新人新事迎新送旧，同学们千奇百怪的面孔喜上眉梢，夜晚相继自我介绍，导员吩咐着后续军训之旅。这种感觉不同往日时光中的新旧交替，相较从前更有更上一层次的喜欲缠身，这喜伴随了我许久难忘的时光。</p><p>来日，父亲要回去小城维持家中生计了，向我道别。那日余晖，广场上人来人往，父亲嘱咐我要好学自重，我那时心中不屑回应，只希望摆脱旧人旧事。看着父亲捂着来时的背包，走时数步回头不忘回望着我，我开始想起了母亲与伴我成长的小城与亲朋，霎那间悲痛急涌上心头直欲掉泪。我开始体会到了父亲的不易与深藏着的流露，过往所有的回忆在这生地在那瞬间奔涌难以安抚。我站立着望着父亲的身影直至消逝在转角，我的悲痛开始减少并且从此延续。</p><p>难忘、自难忘。我不但开始怜悯自我，更是怜悯早已深纠惭愧的父母心意，我开始明白，我所欠缺的，我永远无从亦无以回报。从此不再拥有如想象当中的所妄想的自由，亦是我开始游离约束的开始之旅。</p>]]></content>
      
      
      <categories>
          
          <category> 故事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 故事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>假隐士</title>
      <link href="/2022/05/31/%E5%81%87%E9%9A%90%E5%A3%AB/"/>
      <url>/2022/05/31/%E5%81%87%E9%9A%90%E5%A3%AB/</url>
      
        <content type="html"><![CDATA[<p>一般不悦之后的驱车直入，走过熟悉又稀清的乡间大道，一座圈养儿时及为新人祝场的被装饰的旧房，还有傍晚时分红日的映霞与隔离下的空白。</p><a id="more"></a><p>未曾忘怀的老邻居们，在从前那般热闹人烟的村头，如今只剩下无奈的及享乐残生的妇人们。望去，望到从前，忆往日时光，再也听不见了，回忆中的乡音们，再也看不到了，记忆中的人们。</p><p>二爹与踽乐的娃娃，只见得老人家举手投足间的自得其乐，娃娃不明所以间地嬉说着暑假即将来临的畅想，我们在一旁感叹着迎合。此时此刻，竟然如此强烈着的羞愧与不安，同时居然还多了一份释然。</p><p>面对了无声息的寂静，鸡鸭的声鸣怎也突地听不见了，只见春节时期与人们欢声笑语着的玩伴，好似灰溜溜地着急滑动着手机从我们身旁走过。天色渐渐黑了，一道望去村的另一头，除了显得冗余的路灯在隐隐发亮着，没有了一丝可照亮前路的灯火了。走过一家又一家再也熟悉不过的地域，老人们坐着望着，我们走过，与好似仍有期盼的人们四目相对着，但我们都无言着、微笑着忽略了。美梦复现终是不再了，期盼着的美好也终于破灭了，无望人生在此刻展现得淋漓尽致，等死的人们像是一尊尊被精雕细琢的铜像。看着看着，心也随之亮了，也凉了。</p><p>不知是否真的习惯了孤寂，还是只是习惯了浮华的周围，心跳着，又像是落空了，可能是失去了，此前那般无畏的妄求隔世的欢乐梦乡。回望从前那般的不知羞耻的，竟然只剩下想要逃离遮蔽的昧心。</p><p>这里的孩子们，追寻着现实的规则，渴求着寻求，或许是无法熄灭的欲火，或许是祈求改变的决心，又或许是何乐而不为地尝鲜与求名为利的俗心。但在此刻与死寂一般的家乡相比，一切可猜测的、不可猜测的都成为了合理的需求。沉迷在虚浮的灯光四射的大舞台里，人们相依起舞，人们为撑起和谐着共处，失去真诚，抛弃真诚，嘲讽真诚…村里的孩子们也失去了，也成为了人们都憧憬着的城里人、未被世道抛弃的现代人。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次相亲</title>
      <link href="/2022/05/31/%E4%B8%80%E6%AC%A1%E7%9B%B8%E4%BA%B2/"/>
      <url>/2022/05/31/%E4%B8%80%E6%AC%A1%E7%9B%B8%E4%BA%B2/</url>
      
        <content type="html"><![CDATA[<p>去年新年到来之际，我还在父母身旁帮忙守生意之时，姐姐说姐夫他老头给我介绍了一个他们嫡亲家的相亲对象，还是村支书的亲侄女，还说不轻易介绍之类的话。我听了便觉得可笑，不愿多去理会，但是姐姐不饶人，多次要我发个人照片过去以答复那边的介绍人，我便不耐烦，发了几张还算是合意的个人照，便当场跟她理论了起来，为当下的这种风气嗤之以鼻，女方成为了皇上，而我成为了待选的妃子。而她却当我不经事太过于较真暗自嘲笑我。我只好无奈苦笑不愿再多作说辞。</p><a id="more"></a><p>新年第一天，驱车煎熬着恍恍惚惚到了家门口，疲倦与不适都已烟消云散。白天忙着去各种应酬与敷衍，到了晚上，姐姐与姐夫极力要求我去见见那个相亲对象，我便有些不耐烦，一味想着拒绝了事。难得新年之际可得一番清净，家里边还不安宁，又去外边找不自在，实在是有些自找罪受。但紧接着她们又谈到说是村支书的亲侄女，一般不轻易介绍，而且是第一次相亲，在外地深圳工作。在她们多嘴多舌而我本身很无聊的情景下，我便来了兴致，问了那女孩的学历情况以及她那边是怎么个说法，跟我一样也是本科学历，她妈妈说要找一个“志同道合”的人。我听了，兴致便愈发高涨起来，这可不像是农村女孩说出来的词啊，想必可以做一番交流与了解。于是，与姐姐姐夫一拍即合，第二天去她们村与那个女孩见见面。</p><p>第二天一早，我便有些不适的感觉了，为什么要我去见这个女孩，而不是我们约定一个地方或者是她来见我呢，我有些难以接受。自从见过家兄从前那般相亲，还驱车老远跑去见那些个相亲对象，我当时便感觉不像个正事，费时费力不说，还把自身低人一等的实质表现的淋漓尽致。我可不是为了讨老婆的，我们应当处于一个平等的姿态，双方都应拿出对等的诚意去完成这件事，否则我是难以接受的。直到在去的路上，我还一直耿耿于怀，如果因为这次我开了头，意味着家里人会认为我已经妥协，接受了这样令人膈应的事实，搞不好以后她们都会强制要求我去相这样类似的亲了，而此前我从未正面表示接受这样的事。路程不算远，直到我下车，姐姐便领着我去那村支书的家方向去了。去的路上姐姐要塞给我一包烟，说到了地方记得给那家的男主人客套发烟，我便坚持并且有些不愉快道：我是什么样的人就做什么样的事，我不抽烟也不喝酒，我不会做这样的事的。而姐姐一再要求，而我一再拒绝，直到了那家门口。我问她有没有见过这女孩，哪怕照片呢，她说没有，我便有些发怒了，太不靠谱。进了家门，看见两个中年妇女与我姐姐笑嘻嘻的交谈起来，想必就是那村支书和那女孩的妈妈了，还有一个中年男人看了我一眼便往后头走了。我未做多想，在我还没有所反应就已被带到了隔壁的房间里，余光中看到了在深处站起来的、双手合握在身前的女孩，皮肤挺白，五官倒是很清秀。此时那边的长辈想多作一番介绍，这下让我第一次当媒人的姐姐和第一次在家乡相亲的我不知所措，很是不自在了。我看大家都支支吾吾的，我当即打断她们的本就含糊不清的交谈，就说让我们自己了解吧，你们出去吧。她们如同如释重负，赶紧随声附和道：好好，你们自己聊聊。这下好了，关上门我却是更加惊慌失措了，第一次面对于一个陌生女孩，还在如此狭小的空间里，我感觉到全身燥热躁动了起来，已经能够清晰的感觉到了自己涨的红彤彤的脸庞，火辣辣的，让我的动作也不知作出怎样合适的变动了。</p><p>我像极了那些在书上、电视上所呈现的初次面对男女关系时的羞涩男孩们，身不由己地做出、说出一些毫无知觉的言行举止，刚开始这毫无疑问使得我和这位女孩极不自在。在坐下之后，我才朦胧地感觉面前的女孩确实是一位长相可嘉的异性，这下使得我有些兴致勃勃了起来。在此期间我们聊到了工作以及兴趣爱好，我们也相互介绍了自身的基本情况，她也表示她是96生人，我对此毫无置疑。她表示她是第一次相亲，她脸颊上的出现的红晕，也让我深信不疑。在我从前所做的工作上，她居然也有一丝了解，让我误以为她是同行中人。在兴趣爱好上居然也有爱好读书的习惯，这些可让我欣喜来劲起来了，我们聊了最近看的那些书，她说到了路遥的&lt;人生&gt;，正好我也在年前看完了，正好借此机会试试她的水平，也好借此耗耗时间，不过这让我对她的印象更为美好了一些。在那一刻，我感觉我遇到了可以作为知己的异性，而我本身不喜与异性交朋友，正好或许这是一个绝佳的机会。在不知不觉已过半时，我们或许是都感觉到了是时候结束了，我起身要求加个微信吧，她欣然同意，互相询问了对双方的感觉，以勉强还算是合适结束了这次本不乐意却带来意外之喜的面对面相亲之旅。</p><p>在回到家的路上，我可谓是还未回过神儿，我确定我已是表浅的看上了她。而在基于网络上的聊天，我不再游刃有余，试着积极散发本有的可笑的所谓的优势，就像着动物寻求着配偶交配一般的滑稽，而我乐在其中。隔天，我思来想去，我想着跟她敞开心扉谈谈以后的发展，于是在那个夜晚我难眠。在白天，我踏上寻她的路，在路上我心花怒放，当见到她向我跑过来，我望着她后面的本是欢聚一堂的亲戚朋友，只能以颜笑了知。在巡走的路上，我以为她与我一样的，对对方都是饱满的热情与积压已久的甘畅淋漓，可我还是错误的预计了。她不但对我没有表现出预想中的热情，还对我表示了不太合适的想法，而我不甘心，想着以强词夺理挽留，可失落还是无法说服。在那一刻，她的谎言都能让我以为是可爱的虚荣心所致。</p><p>在拉她去城中闲逛的路上，她或许是客套，又或许是好心好意。我感受到她无知地临危不惧，还有坚挺笔直的朴素自信。我与她对视在小餐厅的位置，我故作姿态，转头不住地望着她的眼，观察着她的脸庞，即便有着风霜已然刻画，我依然为此着迷着，流连忘返至今。我手托着她的背，带领着我们不知何去向的双方，如此安详，我那时想着：若是能长久如此，该多好。听着她已在减肥瘦身，我便吐露真诚。真真假假，我已沉醉。在驱车回家的路上，阳光照在她的脸上，我盘旋在她周围，感觉到那样的不真实，是她本身仅是礼貌的微笑，还是这此时此刻本有的拘束。</p><p>在回去的夕阳路上，安详的感觉未曾中断，予我不一般的温情与感受。我那时想，如果就此能共度一生，也是极好的、心甘情愿的选择。而我却感受到她的温冷，她于我，没有那样特殊的感情的流露与表达。我想着，不如就此放弃吧。于是，在放弃的那一晚至今，我都是迷惑但又明了的状态。</p><p>在分开之后，会听到那边的流言四起，我亦是愤怒亦是欢喜。这对我而言成为了一个回头的名正言顺的理由。在那个午后，我借此机会去到了媒人家门口，以解释的口吻试着去试探，但都已无济于事。我想，是真正的该结束了。这样滑稽的感性。也许只是印象中美好想象的虚持，还只是肤浅表象的一贯亮眼，美妙的加持，这样模糊、迷惑。</p><p>在这深夜里，回望着，时而会憧憬，时而会幻想。我会怀念着。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 故事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 故事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>往事</title>
      <link href="/2022/05/31/%E5%BE%80%E4%BA%8B/"/>
      <url>/2022/05/31/%E5%BE%80%E4%BA%8B/</url>
      
        <content type="html"><![CDATA[<p>总是会在往事中行走徘徊，如恍惚行走在石路上，那样含糊不清却绵绵不绝的感觉。</p><a id="more"></a><p>熟悉的深闺里，醒来的好多次，都会有一种苦涩惆怅的感觉。不受控制地被带回到往事中又去回味思索，继而带来更多的失落之感。一个枕头也能寄予许多从前的滋味。从前那些未能得到的或许已得到如愿结局的人事都开始一一浮现。</p><p>许久未闻烟火的气息了，走下楼去，散步在暖阳和煦的晨阳里，新风拂面而来，一股欣喜之情却油然而生。无意中地感知到了在风中飘荡的栀子花香，把我拉回到了孩提时代，那样猝不及防的。</p><p>我的童年在记事起，处在一个人气还算旺盛的村子。爹爹婆婆早出晚归，在我放学归家到离家不远的小桥时总是会好运的遇到他们俩人扛着锄头准备回家做饭。还有我那在学校总是时不时被同年级的男孩女孩喜欢也排挤的、偶尔显得孤独却默默在身后守着我们的姐姐。有一次学校组织学生腰鼓队，姐姐以良好的外形获得了老师们的赏识。那天放学她们穿着清一色的表演服装，画着有些牵强的妆容，我只记得我的姐姐闪耀其中，是最为夺目的人物，我在队伍后或者是队伍旁总是盯着姐姐在看，不知是自豪还是为她骄傲的陌生感觉。那天姐姐直到随着我到家门口都面无表情一言未发，我数次与她对目，她好似将我无视。我站在家门口，看着队伍开始敲锣打鼓直奔去了后头湾。</p><p>家的后厨房旁有一处小院子，通常都是在圈养的家禽活动的场地。但在院子中间有一颗我记事以来便已亭亭玉立的花树，每到夏日炎炎，每到暖阳当空，我饥渴地跑去厨房喝水时总是一股浓浓的花香，格外刺鼻，以至于后来在他乡我闻到这样的花香总是不自主地被回忆起这棵树。有时有小伙伴到我家来玩，一起讨论这是颗什么树，姐姐说这是“栀子花树”，而那时懵懂的我只能相信她的说法了。后来的日子里，至今我都无法忘记这棵树，直到这棵树什么时候已经不在了，被砍伐丢弃了，我脑海里依旧会记得从前的情境，记得它结出来的纯白却渗黄的花瓣儿，总是散发着浓烈花香的味道。我数次回到梦里，发现它孤清的身影，在主人们都不在的日子里，在人气渐渐都已稀释的日子里，它在自己的日子里该生花生花，该飘零飘零…</p><p>……</p><p>往事，是生活中意料之外的调料剂，是那朦朦胧胧却又铭记于心的不灭记忆。记忆，是愁，是美，更是编织无穷幻梦的素材集。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 故事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 故事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂</title>
      <link href="/2022/05/31/%E6%9D%82/"/>
      <url>/2022/05/31/%E6%9D%82/</url>
      
        <content type="html"><![CDATA[<p>乱文。</p><a id="more"></a><p>内心挣扎，气盛与错觉，混沌。人民是政府集团的附属品与消耗品。关于对窦唯、人们的盲目跟风与无知取宠。不必去争端、不必去强求，时间会证明一切。国与国是两个政府之间的博弈，人民老百姓永远只是附属品及消耗品。当代中国社会集体腐败，根源来自于中共领导层体制，市场乱象、配置不公，众多问题显而易见。做题：学会包容非议与所谓的不完美。重视关于痴狂制作人私人生活的可笑心里，窦唯，积极面对他们的作品即可，其他的均为滑稽之举。始终相信着有着美好向往的那一群人在为着这片土地燃烧自我。社会乱象丛生，微博删帖典型代表。人这样卑贱的活着，只是为了还债，时常充满空虚，始终寻求着被填满。又是怎样的被造化。闲情逸士在当今被取笑为不务正业，不思进取，玩物丧志之人，逸士犹如当街老鼠，提心吊胆，抑郁难熬。后宫甄嬛主角因一丝纯粹的感情与温情的幻想破灭，使得一切变味，善用心计对付所有，寻求依靠，为己谋生计？利益？这些带给我的启示：曾经不一样为这世间所倾心感性，如今却也变得市侩与漠情……过年，从前与现在。让我深陷在幻梦里，不愿醒。也别来打扰。在幻想中去弥补过去的现在的以为的那些憾事。路遥《人生》中的高加林。读书空给予了一副清高模样。刘巧珍对高加林的爱恋，足以改编成一部电影。年轻人应当心存幻想与理想，但也不应忽却眼下的现实生活。莫负眼前人，莫负心中义，莫失了生活分寸与原则。珍惜眼前人。路遥《人生》一章“并非结局”：人生起起落落漂浮不定，又如何去妄想定义这样的“人生”。人们总是乐意倾心于当下的自以为是的欢乐时光，继而在不幸降临后暗自颓废与悔恨。人生均为咎由自取，是事人抉择的因果。如有一丝热爱，就能算是活着。激情燃烧岁月。看得太多想的太多居然越发缺乏自信了..面对挫折居然第一步想的就是后退，这点值得去注意反思。真的值得去怀疑感情中的种种原则与底线吗，始终相信好的姻缘如何又会让你痛苦呢。痛苦与欢乐相对、想当。回忆困扰的思索。公德约束不了任何人，人们只会相信所认同的。好奇心也存在舒适圈，熟悉的、易操作的、可把握的。幻想几乎都是美梦，这点值得考究。表达真实情感才是最重要的。虚伪的真诚。商品，去明码标价，去说服别人自己拥有的技能吧。富养精神，琴棋书画。歌曲，发泄情绪及回味过往中的种种寄托哀思。脑子是有多么混沌才会说出那样的话来，将自我作践，将她人奉承。读书的意义，人各有异，各有所思各有所爱。社交媒体的影响，但与娱乐至死有区别。当一件事暴露在大众视野，说明早已存在许久。行为、感情上应当都是平等的。抑郁症，无病呻吟的典型托词。当今大环境的无奈。雨后清新凉爽宜人。好奇禁忌却能得怡然自得，带来另一种释怀。何尝不能这样由着性子去接触更多类似的禁忌，却能挖掘到意想不到的思索片刻，解开迷惑与恐惧，更能清晰看到人生百态，实则是一种上好的躬行践知之事。通过各种表面上的条令及规矩去看待的人事，是最为肤浅且最具迷惑性的。欲望造作。大众风气的不幸是大多数的不幸所组成。世界秩序的本质：无政府状态。任何情绪化都会带来颠覆性战略错误。大国：不在于野蛮挑战旧秩序，而在于推进维护国际和平的责任与能力。如此大言不惭的人，把情绪带给人们去认同这样滑稽的定论。煎熬。记得他的本性：为姐姐出头却向亲弟下手。假清高。高雅：表现内心精神世界的哲学，低俗：文学白话文之间的拐弯抹角。以他人的苦痛衬托自己的欣愉，这是一种罪恶。苦痛与痛苦的两异。那些后天荒唐的人，不过是本性使然，本性释放。老实而聪明而非愚钝，单纯而美好而非臆想。聪慧由经验与见识滋养。在有些方面的经验之谈是灵丹妙药，有些方面却是束缚愚见，逃不过两面性的禁锢。爱情幻梦破碎之后的妥协，或者是与爱情无望的无奈，便是对婚姻最大的伤害，亦是对自身最大的屈辱。自知之明的限度。自我狭隘与妄想束缚的冲撞所导致的矛盾，尊重多元化的思想，保留批判的底气。人们面对过往的过错与不甘，发觉可定夺结论的不争事实，一切困惑与猜疑都会烟消云散。当感觉不适的时候才是最真实正常的。疑惑：向下兼容的婚姻与被人操控的社会意识。结婚有托付这种说辞。为父母感到不安，为其未来感到忧虑。满目疮痍的内在。传统与现代的婚姻观念的区别与转变与不适与失效。家庭悲剧：透支父母多年积蓄，当事人的理所当然，父母的满面愁容，均历历在目。别拿放纵放肆践踏道德的底线与原则。迷茫因未知。浅薄的人生道理往往是被人追崇的。自圆其说的臆想。二泉映月阿炳自杀身亡与广为流传的生编硬造的另类结局：符合当下政治需求的扭曲事实。工作折磨，生活意义，需要思考的问题。梦想，欲望。说慌。摆渡人：细腻、丰满、动人。美丽的童话说辞，把嘴缝上。歪风邪气。隐士、错误的相亲选择。待业啃老。看破在相亲中的各种困惑。怀疑。建立在他人更不幸的基础上获得解脱。企图需求共鸣的声音为自身建立合法性。续命。不自知的人们注定经受不住诱惑，仅凭脆弱的公德约束本身不可靠。寻求一些佐证验证自我的想法，获得一致，企图共鸣，这是一种什么心态，值得思索。善心泛滥的人们，构建假和谐的表象。被需要，有作用带来的心理安慰，带来的心安理得，带来的存在意义，还是本身的一种被动塑造接受。把慌圆的心安理得，让我感觉到痛苦。梦境中感觉到的真实，渴望成为现实的感觉，值得思索。面对当下的经历，获取真实的感悟，得到不断的思索人生。真正的为自己的人生负责，或者是体验人生。不愿去用通俗化的言语去解释，继而引发冗余。爱情应当掺杂着感性。所谓为题。责任与工作，仅仅是为谋生之道而毫无职业道德，必定会发生意料之中的悲剧。实现中的热点事件的打压，而非光明正大的解决，那些良知者的痛苦。富足而又宁静的感觉。幻想、现实，游离。男找兼下的女，以爱之名，满足私欲。见怪不怪不能失去判断性，不能认为便是理所当然、正确使然。当见过的大多数并不能成为偏见的理由。89.64揭露人民军队不是为了保护人民，只是保护政权的刽子手团体。别去沉醉迷醉现实，而是去感悟体验。相亲的别扭在于你必须去直白的面对相亲对象，必须直白的得到失败或成功的结局。大多数的现实悲剧：相亲。踟蹰者，踟蹰不前。虚伪的真情，还是称心如意的私心。当无法看透现象的本质，就容易被肤浅蒙蔽自我认知。当你人生无望祈求通过婚姻寻求动力压力与期望，这是一种本末倒置的扭曲现象，而当找到了人生愿奋不顾身的希望，婚姻或许真的只是意愿选择体验的可选经历，而精神需求，所谓通过婚姻巩固这样的需求，本身就是扭曲的，婚姻的本质便是责任与义务。糊涂的选择必然付出糊涂的代价。糊涂人生：人生就是选择，工作，事业，婚姻。弘扬正气，避嫌丑恶：防止因现实丑恶因素的改动困境失去向往美好的希望；还只是一种掩盖丑恶的行径。浑浊的泪水。经验之谈对迷惑的影响。挣扎着绝望着哭喊着寻求拯救比躺着被砍杀更令人触目惊心，鲜活着的生灵在眼前被戮杀被糟践，是足以触动普通人的内心深处的，而镇压着不被暴露出来的问题，不被极端无知的人们所作辞，散发恐惧，散发不安，直至政权社会是否稳定被质疑被否定。麻木、冷漠面对不失怜悯之心，本身就是一种无能冷漠。性欲是欲望的最低级。麻雀戏水，微风徐徐，吾欲往之。蒙慧慧的故事。荒芜的感觉。善良的、被蒙蔽的人们的祈求。味道。像动物一样的，嗅着、晒着，感受阳光的热情，以此作为生存的意义之一。结合当下，找到舒适的感觉。大多数的外在物质条件决定认知，还是一种不必要的自信冗长。人的劣根性：无法被动接受失败、拒绝、不如意的结局，总是喜好相比他人更为悲催的人生经历以证实、维护良好的自身形象，避免逃避本应承受的不适与失落的事实，自我安慰、逃避的典型。当诉求成为一种司空见惯的现象，善良会被验证，麻木会变为大多数。寥寥数语足以勾勒，冗长的诉说反倒显得繁杂。歌词在某些时候能赋予更多的内涵与意义，而音乐能营造更为深邃的意境。人们总是赋予击败挫折、摆脱困境之后的重生为成长，不过是别样的自我安慰与多余的经验增长、认知变化罢了。儿时的小人梦想。同理心、被需要的、欲望、意义。城市、空虚。猜想、外星人、人类的形成。母亲、父亲。残存的记忆与不甘的影像。戏子的盛典、火车上旅途。以上俯视下的傲慢与惯性。面对刻板上的弱小、人们可以肆无忌惮。悲剧接踵而至，还未适应疏解，却已迷乱。荒谬的世事，无休无止的刺激，带给我更回新颖的感觉。安倍之死带来的惊慌。现实悲剧：各种不幸作为刺激点。良者为之愤慨，鄙者为之嘲讥。模仿、效仿的同质化，尽力摆脱。陈词滥调，无法避免的。怂恿与自我怂恿。谎言与真实。被迫接受、话术上的自我保护，迁怒、发泄。伤害被传递、被发泄，由此引发的由荒谬说辞的重连反应，导致的由变到质的变化。盛夏时节的蝉鸣鸟语、还有艳日映射下的清香散发，夹杂着冲喜般的悠乐感觉。家庭与国家都是悲剧，展现的都是喜剧。每个人都做了亏心事，不合理将被正常化。欲望与爱情。不合理。在划地为牢的阶层里自导自演着并且自娱自乐着。儿时的舒适光景，柔和温暖的暖阳天，母亲忙碌着摆弄洗晾衣服，父亲慵懒地躺着、玩弄着一般趣味。夕阳、扭曲的年老弃虫、树影斑驳的痕迹、恶臭的水沟与倒映着的绿树。印象。欲望与表象迷惑与自解。矛盾的憧憬。极端是存在的，也是不存在的，现实因不同而不同，美好愿望中的想象与期盼。庸俗、大众，还是千篇一律的如此活着。政治是偏向一端的典型极端。炎炎夏日，人们避暑乘凉。出于欲望的讨好与迎合便是所谓爱情的开始。儿时同学向我们讲述了自家养的熊猫的故事。村子里，我们结伴同行，说着一知半解的玩笑话，轮流着展现新奇有趣。与儿时记忆里一样喧闹繁旧的镇市场。教导劝导是天性。死亡推动认知。明知故犯。趣味。哺乳待宰的羔羊孩子们好奇着。虚光构建，忘记痛楚的幻境。打扮的光鲜亮丽，去到最耀眼的舞台弄姿舞骚，口述着义正严辞。虚假的，失去原本的意义。厌倦。虚伪的说辞。把苟延残喘美饰。虚空年华，欲念指引。无知的悔恨，还是自我疏解安慰的鄙夷。指使的控制，愚人的狂欢。幽茫岁月。不朽的精神体，可有可无的实体。睡眠，精神体。时间。谈谈恐惧。艺术家，与众不同的最高庸俗者。真相被混淆，愚昧无知的人们如此信奉、深信不疑着。愚蠢至极的人们沉迷规则继而被规则愚弄着。所有明面上的艺术都是被刻意捧设构造的表演形式，与崇高无关。虚伪的人们一面幻想着被真诚温暖以待，又一面不知廉耻地妄想被牵引着释放本压抑着的狂野幻想。被投射的画面与声音，还有一群自娱自乐的人们，企图从中获取些什么。无妄的人们怎么还不知晓所被灌输的会被自身效仿而不是深刻思索所得的思维结论是如此脆弱不堪的。清醒清晰着发掘与认知是一种无比至上的快乐。人们挥霍着坑蒙拐骗的不义之财，并且以此为乐。奇奇家的小秋千。摩登的繁华为你们照应、是你们的预选坟墓。这渐长的不适与诡异，慢慢被迫成为合理。媚俗着的，还是俗味蠢蠢欲动着，如此反复强调着，竟然如此不安着。心灵丰巧，调皮敏感，活脱脱的一个活力充满生机激情的新生儿，值得呵护着、敬畏着。貌似神离。貌是神离。儿时午夜的电闪雷鸣狂风暴雨。被欺辱的刘飞，呼唤我的刘飞，在树上吆喝着“大俊杰”，招着手儿，无法忘怀的欣慰与愧疚。那次相亲的安详。彩云晚霞。变质起源于自以为是的错觉。一旦认为庸俗合理且乐在其中，便是堕落的开始。谎言是需要有生命力的。流于表面的均已失去原本核心意义。光鲜亮丽的背后只剩下满目疮痍。贫穷具有一脉相承的继承性，及以少数富有与多数贫穷相被屏障隔离的封闭性。愚蠢愚昧同样具有一脉相承的继承性，贫穷与愚蠢愚昧的关联性。风筝：妈带娃-妈浮-娃牵妈。国家与政府所要求需要的是被教化训化的人们。所有的制度都是名存实亡，无法得到真正约束拘束。严肃要求的规章制度被摒弃，取而代之的是轻松愉快无需约束的戏乐人间。与众不同的错觉与傲慢。世俗观念的束缚还是本心引致，这样不适的感觉。合作，无需多余的理予。意愿才是实在本身，其余都是自以为是的了解。撞车了。在深川的后窗，微风吹拂，清新的气息，树叶飘淅，后绿山，点缀的黄土小路延绵而上，还有那个大眼睛女孩。电影：健忘村。混沌的来源。电影：蝴蝶君。主题：孤独。在经济适得的前提下，人们可以无妄执行。世界是女人们的灯光舞台，她们花枝招展着、制造的清香弥漫着、面目上不屑地麻木着，轻视着线下不堪的一切。荒茫的人世间，人们凭借着仅存的幻想追寻着、探求着互瑱的欣慰，从此如此迷盲地走向死亡。清秋的早晨，妇人们闲聊，突显老成与成熟。大道旁小鸟儿成群上跳下跃，我们夹缝求生。街道，阳光，窗口，人们。女人们的装敛，人们的装敛。急功近利的教育社会，人们把信仰抛弃。人们气宇轩昂地夸赞讲述所见所闻，对象成了人们自己。装饰被卸下，剩下行走后的回声空旷。主题：同化。流浪，游离。流于表面的所有不应笃信，如此看着表露的滑稽。黄昏、女孩、石子。郁郁葱葱。凉爽的夏风习习，与动听的歌一齐，为喜事筹备忙碌，变得有意义。烈日晴空无垠，树衣摇曳生姿，心生欢喜。迷雾掩半，缭绕映影。热浪。散播编弄是非、脱离真相的虚假信息，挑拨离间群主之间的合作团结。人们汇聚一堂，把苦难忽略，淡化猜疑。结婚，拜祖。以外乡人的身份为荣。无知即纯粹。谎言不拘于形式。将人们诱骗，为瑱欲私行。迷雾开了，江水涨了，渔人开始狩猎了。所被构造的语词是基于某一方面的优势与累计所成，而最为基本的便是坚实的届时现实基础与思想沉淀基础。失去关注便会失去意义。天雷地火，告召天下。如此无奈的被抛弃。力所不及的无能造就颤动的开始，而心心悸悸的绝望造成平庸的沉沦。可笑的压制与蜂拥而上的献媚讨好。蒙蔽人们还算清澈的双眼，再去从中获取私利。阳光下合理合据的得体正如昏暗下流动无束的诡恶。唯有一个可以自由的前提：理解抛弃对生存的需求以及对死亡的恐惧。不应忘却对恶性的警惕。任何的优势在当下与近期的对比中被体现，而人们的习惯于遗忘。普光，迷雾弄影。这里的人生是纵欲与抑欲的反复过程。这里的约束是一部分人祈求着的公平正义。夹缝求生地角逐，奇谲不假思索地作为，烙印生存的求真。时消恍惚，不时清醒的恍惚。沉重的眼眸垂吊着，散发着枯燥乏味，脸上洋溢着的不快乐，昏昏欲睡，无动于衷这种种抉择。创造无端的感情与无稽，把稳固紧扣与大众轮回。可以确定的是：情形的定义基本上是由应对的策略所定制散发的。秋高气爽。遗传性的天赋被有意稀释隔绝。媒体的创建与宣传使得一切成为理所当然。恐惧，是营造冲击的最佳推进索。制造本能的恐惧，掀起斗争的端倪。一面追寻渴求着无知，又一面唾弃蔑视着无知。白雾迷蒙，污渍浸润；金光破射，万象丛生。年青：任由自如的身躯，无所畏惧的心情。絮粒飞舞，反往之间。阴雨绵绵，争先恐后赶匆忙。物体临摹在烟雨中，动物一成不变行驶着，而人群人头钻动着，千奇万变，展开、封合。生存方式的不同，不存在高低贵贱，不存在雅俗之分。如万千野兽一般的目嗅着阳光，细吸着空气，为凉爽舒适而心宜，为饥渴干燥而觅食，从未有过多余的托辞与变通，如此生生不息着苟合，为不解却寻道而续气着。这成为了我们的理所当然。争前赶后，编织追续着无意义。这贫瘠的世间，人们践踏着血泪，把自身欣慰，如此恬不知耻的、生生不息着。疲于奔命，一件无关紧要的事被放大宣扬，代表着另一件更有价值的事情被瞒压。文明教育让人们变得分散、脆弱。娱乐至死：在倦意放纵下的娱乐丧失原则底线，丢失理智灵魂。文明建立在虚假之上。理想是个体的完美臆想。当今现代是从古至今无数血泪历史堆积铸成的仍旧七零八落的荒芜之地。冬日当空，软弱无力。所谓的圆滑不过是擅长伪装与粉饰，即虚伪。由机器自导自演，而人们囫囵其中。聒噪。乐钟于文字的确意与新颖，无感于世事无常的变迁。乐意被这烟火焚烧，沉醉在世事纷扰。痛苦根源：妄求成为当前不匹配的。将他人更为惨痛的以此为安慰，是一种残忍。井然有序地静待消亡。所有的所有本应存在，而被要求着引导遗忘与消融。苦难的生成与被接纳是人们自寻苦乐自作短见的起源。如此美好的时忆：纯粹与心目中的完好是可以存在的。如何去探讨扭曲状态下的人性，本身如此唐突。混沌，愤慨与无奈交织所被引诱着的。游离、抽离、脱离。泛射着金黄刺眼，一梦华胥。天寒地冻，小心地滑，哈市景象。浅雪深雪覆盖万事万物，一番别致。拖行着编织的扫帚。在以往未知的事物，所造就的非同凡响的鬼斧神工。精湛的话术带来虚假的幻象，从此被冠名理所当然。</p><p>……</p><p>为了一个较为理想下的结局，会习惯性将自我伪装，不由得去讨好周围的人事。事后却是暗自悔恨方才内外不一的表现。为何屡次重复这样的情景却无可奈何。人善于在有无意识下做出无法掌控的善变举动。人的天性之一为：在面对他人的苦痛时，总是一副好为人师、津津乐道的样子。</p><p>欲望是冷漠无情的。也是言行举止的驱动力。妄想不被欲望袭侵、控制本身便是一种奢妄。任何一种感官刺激均能得到欲望的激发，大多数人，是欲望支配的躯壳。无法真正摆脱欲望，欲望如影随形，没了欲望的组成，人将不再是人。矛盾…矛盾…不再是以往那般的困惑。多数所不被看好的“人欲”更像是被多数人唾弃的那部分扰人清梦的欲望。可悲的是，人无法控制欲望的喷发，只能以意志强加抑制。归结于完美、纯粹的话题，“完美的神设”的说辞本身是不牢靠不可信的。</p><p>时常出现的幻梦梦想，或许是基于一个臆想的环境作出妄想的举止，得到一定的解脱与自慰自娱。说到底不过是一种不适当下的妄想情结与臆欲其中的欲望组合，又或者是一种自我臆想的理想状况所折现。所忧虑的是：随着不断的解读是否会失去这样宝贵不易的能力于幻想。对于那些心存理想、现实不得意的人们来说实在是再好不过的灵丹妙药。</p><p>面对太多无奈的现实情境，无法去清晰表达，禀着出口必失的原则，以及无法得到完全理解共情的事实，何不闭上想要大声诉说企图需求欣慰的嗓门。甘愿把嘴巴缝上，去看待周围的生灵涂炭。这些易被满意、易被伤害的脆弱肤浅的人们呵，面对你们亦包括我自身，我不知该如何去说，亦不愿去说。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>所言</title>
      <link href="/2022/05/18/%E6%89%80%E8%A8%80/"/>
      <url>/2022/05/18/%E6%89%80%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<p>妄言、桎梏、囹圄、迷乱、困惑、痛苦、狰狞、欺瞒、狡辩、解释、接洽、循环。有意去麻醉逃避，却更是落得个心神不宁的下场。如何去面对内心的混沌，如何又去细细解剖现实的扭曲，无法一一得到契合的自解，而痛苦只会堆积愈发蛮缠。</p><a id="more"></a><p>不知从何说起，只是依旧有着遗余的未被完全接纳的心思，有着无法被完全稀释的孤独，有着难以却妄想抛弃的丑陋作为，还有那无时无刻不再煎熬着的囫囵矛盾。变得无法去真正面对现实中的困顿，没有勇气去与不合理的现实法则和解，选择再也轻松不过的逃避，却依旧心存自视甚高的梦想。为了巩建与众不同的合理合法，为了凸显接轨正道的体现，欺瞒毅然成为屡试不爽的包装工具，可以说着言不由衷的弥天大谎，可以凌驾于亲情无度剥削，可以无端在行为上指手画脚、侃侃大谈身旁的不公与不平，肆意抒发自以为是的公德品质。面对私心与欲望，你我均已面无全非。面对突如其来、避之不及的丑恶人性，要挟生存为私欲、虚无的体面辩护，要挟可动人心扉的高尚品质，为私行护航。如此难以避免的丑恶呵，我该如何去与自己、人们和解。还是任凭它们流行，以“人性本如此”的说辞将自我麻木，放弃本无力的挣扎与狡辩，去与它们同流合污吗？妄想追寻自我纯洁无暇的现实空间，却早已是千疮百孔的丑陋模样。</p><p>一度为这个浑浊的现实而困惑而迷失，不该只是个人的问题。人们无法因各位掌权者戏弄人间、酿成悲剧频发的事实而纾困。当各种不幸降临到各种生存的人们身上，人们只能被迫自我消化、自我和解。当一个掌权者或一个政治团体失去了真正可依赖的建立自身合法性的取缔因素方面，这个表面被无限驯化的民族是否会有意想不到的反抗呢？这是我所有的困惑。但反而面对个人自我的私心，这样的问题亦然成为掩饰虚伪的说辞。混沌的世间，人们为安身立命、满足私欲，一切可见的可利用的均是可作为自身筹码的道具。手握不义之财的“成功者”，可以为视为蝼蚁的人们灌输假清高的经验，将虚伪展现于清醒的人们仔细端详。依旧是处于水深火热中的人们呵，哪里会是你们真正想要歇脚的角落呢，沉迷于表象的浮华，或许又是一句“活该”，一句“无知”将你们定质的呢。面对现实中的种种无奈，人们却更是可以心安理得的偷欢了。</p><p>因无法接洽当下现实总是浮现的各种扭曲，无法接受当下总是言不由衷的虚伪自身，更是无法预见未来是否能够达成全面纾解的忧虑。这便是备受煎熬的思虑根源。</p><p>总是反反复复地重复着诉说、诉求什么。坚守内心所向往的纯粹纯洁，奉行以真诚示人的信念态度。即便是因此失去些本就妄想的东西，至少还能因此为当下的失落所自纾。直到死亡那一刻，变得真正麻木，失去的均已失去，不再拥有这番敏感自如的躯壳，不再可因此产出可运用自如的思源，或许便是我真正妥协的时刻。</p><p>至此当下的境地，我需要振作，我需要腐朽的金钱，我需要一份自力更生、自强不息的底气。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>假清高</title>
      <link href="/2022/03/21/%E5%81%87%E6%B8%85%E9%AB%98/"/>
      <url>/2022/03/21/%E5%81%87%E6%B8%85%E9%AB%98/</url>
      
        <content type="html"><![CDATA[<p>雅俗共赏的假清高，自欺欺人的伪君子。</p><a id="more"></a><p>满嘴仁义道德的道貌岸然，掩饰内心极度不安的暗涌流动。把丑恶嘴脸美化至忘乎所以吧，美化到理所当然，美化到事实如此吧。自欺欺人、不知羞耻诉说着内心的脆弱，打着真诚的旗号，渴求把性欲指向的人们蒙骗。变味的现实，已成务实的真理了呵。表面虚假的宽容，却装着是需求纯洁纯粹的私心。挂着朗朗上口的良善，把他人的苦痛及痛苦衬映得出的欣愉罢了呵。脱口而出的理论依据，不过是扭曲愚昧的道德说辞罢了呵。</p><p>假清高的俗人，也是伪君子的罪人。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>粉饰</title>
      <link href="/2022/03/18/%E7%B2%89%E9%A5%B0/"/>
      <url>/2022/03/18/%E7%B2%89%E9%A5%B0/</url>
      
        <content type="html"><![CDATA[<p>过去犯下的罪孽深重的人们，你们不该从此刻意去粉饰本应有的丑恶嘴脸。大大方方去忏悔、去坦露、去改变，别再去造成可避免的悲剧，更别带给无辜无知的人们以无限伤痛。</p><a id="more"></a><p>你们在纯真懵懂的年代，为了满足因欲望引诱而发的空虚，甘愿把身体上的纯洁出卖被恶人玷污。沉浸在那样虚无缥缈的被人构造的幻境中，你们认为那就是最为至高的情感，直到虚假的感性将你包围，围堵在触手可碰的阴暗角落，从此你便记得那是最美好的你，这是最为值得回味的纯真情感。呵，如此令人可笑的自欺欺人的美梦年华呵。纯洁在你们眼中算得了什么呢，不过是可有可无的装饰品罢了。脑海里甘愿被愚昧充斥支配着，不求自解，甘愿沉沦，无所事事的空虚在一个个夜晚渴望被填满。</p><p>走出花园，面对于美梦即将破灭的现实。你们可以给予其任何自以为正确的理由：不过是荒唐年代所犯下的无知罪恶罢了。从此，埋葬你因无知愚昧制造的肮脏过往，到一个新的地方开启你满面荣光的新生活。一切都是那么轻而易举地得到。呵，有时感叹世间就是这么不公不平，对于那些不知真伪、不明真相还深陷其中自得其乐的人呵，我为你感到悲哀，为你感到痛惜。“谁都有不堪的过去”。一句话便把所有的罪孽都粉饰得自以为天衣无缝，内心却是依旧需求被无度的原谅。</p><p>别再去欺骗早已破烂不堪的自身了，别再穿上可爱模样的外在去把真诚的人们诱骗了。去认真正视你们实实在在的愚蠢、去审视你们过往天真烂漫的无知，再去换取一个沉痛新生的忏悔吧。去真真正正为可敬可佩可爱的人们做些什么，撕下你们刻意粉饰的虚伪吧。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>火车上的邂逅</title>
      <link href="/2022/03/18/%E7%81%AB%E8%BD%A6%E4%B8%8A%E7%9A%84%E9%82%82%E9%80%85/"/>
      <url>/2022/03/18/%E7%81%AB%E8%BD%A6%E4%B8%8A%E7%9A%84%E9%82%82%E9%80%85/</url>
      
        <content type="html"><![CDATA[<p>大学二年级，期盼着的寒假终于到来。还记得放假前为了如愿回家，拿着手机疯狂地守着抢票软件抢票的情景，抢到了票之后便急忙与一同约好回家的老乡分享喜悦。即便是为了同乡的好友选择煎熬漫长的坐票又有何不可呢，乐在其中的滋味倒还时时在后来的宁静中与梦中回味着呢。如此惬意的大学生活呵！</p><a id="more"></a><p>唉，到了放假的高峰期呵，许多在哈尔滨的大学都陆续放人归家了。一路上坐着再也熟悉不过的36路公交车，车上的校友都是喜气洋洋的一片景象：大家都面带着笑容与身旁的友人交谈着什么，不时地望着且讨论窗外的风景，不时地谈论已过去的学期里的校园趣事。回家的激动心情颜露于表。当公交车快到火车站时，我和老表腿都酸死了，巴不得快些下车赶到车站找个地方坐下好生歇歇，慢慢等车聊聊琐事开开玩笑也是一大快事呀。终于，看着人们拿着笨重的行李，而我却只背着一个里边儿装着电脑等重要设备的书包，相较之下，我不免心中暗喜呵：看我多轻松、多聪明，看你们多么受罪呵！</p><p>到了车站之后由于人太多不得不站着等火车到来了。还好等的时间不是太久，验票口开通之后，心情也不再沉闷了，井然有序地跟着“大部队”人流前行着，直到进入通往车厢的人行通道，心怀激情，生怕落后于他人脚步，在楼梯上走着便开始急急忙忙看着静静下边停在铁轨上的节节火车厢了。到了下边地面，朦胧着双眼想要找到车票上对应着的车厢号。经过一番折腾，唉，总算是找到了，也顺利给通勤员验票上了车，坐到了梦寐以求的座位上之后，为老表安置好了行李，而我只需把背包背到前边儿便可暇意坐下静候时光流逝了。打开手机看看时间，才发现已是下午六时时分了，外边儿天色早已暗下来了。原本车外边仍然寒冷刺骨的天气，到了车里边儿之后因为有了空调的加持，居然也有些燥热难耐了。正当想着要做些什么，对面的俩人儿也来了，一男一女，看着不像是情侣。女孩也是拖着一个行李箱，没办法，只得帮忙安置安置了。在一切都貌似准备好之后，长舒一口气，坐在座位上就等火车启动启程了。彼时不经意地一看，对面座位上的女孩却于我而言有一番风味呵：长着一张略显大气的脸，虽然画着破绽百出的妆容，但确实是愈看愈有一番滋味的耐看型靓女呵。我此刻有些心悸了。</p><p>火车启程了，有意借着跟坐在里边儿的老表搭话，想着也能借此机缘跟对面的俩人搭搭话。打发打发无聊时光，还能逗逗长相不错的女孩真是一大幸事儿。想到此，因为我对面的是男孩，对面里边儿的是那个女孩。我决定先拿男孩开刀再慢慢铸成目的：你们是哪个学校的呀？男孩说：是那个华德学院的。我刚开始还没听清楚他说的什么，也罢，醉翁之意不在酒不在他身上。我为了不被身旁的老表怀疑嘲笑便故作大方作出一副也不好冷落了人家姑娘的姿态去主动问那女孩：你呢？那女孩竟面有些害羞道：我们是哈工业华德学院大一的。我一听哈工业三个字，呵，在哈尔滨乃至全国都是赫赫有名的名校呀，我不由得有些惊讶且有些肃然起敬起来。方才一会我才发觉事情没那么简单，因为我有同届的老乡在哈工业上学呢，放假之前有联系，她可没有放假呢。细细一思索：原来是挂牌的私立院校呵。多余的话我又不便多说了，只好引开话题避免尴尬了。然后我便自告奋勇：我们是黑科技的。对面俩人还打趣道：黑科技是高科技的意思吗？哈哈，我这人就有自嘲的习惯，这下可中了我的下怀之意了：对啊，就是黑龙江科技大学，俗称黑科技，高级吧！此时此刻已是欢笑一片的场景了。再看看对面的女孩，抿嘴笑不漏齿，竟然还有些婴儿般的红晕上脸，可谓是一个可爱的形象呵！我也因此更为心花怒放了，内心压抑已久的激动已是在喷发边缘，我想我是要决定在此大放阙词的了，嘿嘿。</p><p>不知不觉，欢乐的气氛已是爆发全场。对面的男孩一开始也是不喜言笑的，由于我和老表痛快地聊着，时不时开着极具内涵的玩笑，他也开始被带动起来加入了我们的闲聊之中来。我这人一旦兴致来了便停不下来，心中积满已久的闷骚在此时此刻体现的淋漓尽致。因为平时喜欢读些闲书，积累思索了许多自认为新意极具幽默感的句词，终于可借此抒发抒发了。若是能博得美人一笑也是极好的事儿呀。由于我们讨论的热火朝天，时不时哈哈大笑，里边之前只顾着笑的女孩终于也参与进来发话闲聊了。在闲聊中，大家都在有意无意中知晓了对方的名字。这姑娘姑且在此叫她小贺吧，至于那个男孩的名字我早已是忘的九霄云外了。之后的闲聊之中，我们三个男生好似心有灵犀似的就地专门拿小贺的说辞开玩笑，她说一句，我便能臆想出各种说辞随性而不失幽默地来回应她的话，时常把周围的人逗的笑的拢不了嘴，当然我也身在其中并且乐在其中呵！好几次我哈哈大笑时把头望向隔壁座位上的几位女生，才知她们早就将目光投向我们这边了，也是露齿抿嘴地笑着。估计又是被这股难得的喜气感染到了吧。这个记忆我尤其深刻。</p><p>在一片欢声笑语中，时光度过地那是相当快。夜幕早已低垂，周围人们的呼声也渐渐稀少起来了，走过通道去解手，有些买的是站票的人们堆挤在有限的拥挤的位置，有时不得不迈开大腿轻声跨越过去，生怕将熟睡的人惊醒。待我回到座位上，已是晚上十二点的时分了。睡眼朦胧，困得不行。咪了咪眼，在我再次睁开眼时，却发现对面的小贺慌忙地将手机收回，她这个动作我亦发觉到她在拿手机偷拍我，我对她笑了笑，不想她也因此红了脸，用手蒙着脸明显感觉到她在嬉笑着。呵，我方才以为她早已熟睡了呢，没想到趁我不注意在痴迷我的美色呀。我想着这下估计也睡不着觉了，也来了兴致了，便挥手示意她去车厢头聊聊，也暗算着要质问质问她偷拍我是什么意思。出乎意料的是，小贺并即刻没有同意我的邀请，此刻我早已是睡意全无了。但是过了片刻，小贺站起来想要去车厢头的小空间歇歇腿，跨过数双插枝走道的腿脚，我看着她就此慢慢走过去的背影，我心生了一个想跟她过去的念头。我心想着这是个机会，再者腿也是酸的不行，站起来缓和缓和一下也挺好，便也起身跟着她走了过去。到了中间的小空间，我们两个面对面，刚开始只是前呼后应的搭着话。在后边因双方聊的较为投机，顺其自然地聊到了我们在各自学校发生的一些事情。我始终还记得她看着我的眼，说出她在学校受到的一些委屈与冷落，说到情深处居然看到她情不自禁地流下晶莹剔透的泪水，那时我的心轻微地颤动了一下：如此纯真善良可爱的女孩呀。我不愿让她独自伤心落泪，便也真诚地回望着她的眼，诉说了我在刚刚进入大学时遇到的一些挫折与克服的方式。四目相对的诚意以及我真诚地吐露或许是感染到了她，她最终也因此喜笑颜开，我那时是陷于一种复杂的感情当中：或许是寂寞已久产生的错误情愫夹杂着的助人为乐的成就感。我不明白这是不是一个错误的开始，至少是对于她而言。</p><p>次日，白天时间依旧是祥和一片。我提出一起组队打游戏的想法，老表和对面的男孩附和着同意，因为小贺不玩这游戏，只好我们三个男生一起玩了。因为火车上网络总是时时波动着的不稳定，我们只好铤而走险冒险试试了，火车上太无聊了，总得制造点乐子和话题呀。预料之中的是，游戏过程非常卡顿，造成了极不好的游戏体验，只好强制退游作罢。这时因为火车到目的地还有一段距离，我们便又开始扯各种话题聊了起来。从中得知了小贺是要去武汉找朋友玩儿，所以到了傍晚她得先行下车了。武汉是我老家省会，真是哪壶不该提哪壶呵，我跟她说了我的一些背景身世及介绍了武汉的著名小吃：热干面。借此机会又吹嘘了一番自我以为的广泛见识，我亦明显感觉到她的态度对我有所转变，变得热情高涨、能言善语起来。期间我们还谈到了她家乡的一些所见所闻，讨论了一些历史遗留问题，她也与我坦诚相对。我此刻已是有些欣喜若狂了，碰到一个如此能聊得来如此投机的异性是如此不易呀。我想这便是缘，妙不可言的缘。欢乐的时光总是很快，武汉快要到了，我心已有些不舍了。我便向她提出加上联系方式的请求，为了不被同行的老表和对面的男孩猜疑我的动机，我只好也顺手要来了对面男孩的联系方式，而小贺也与其交换了联系方式，我当时还打趣儿到：你们到时候可以多联系联系，互相有个照应。可见我当时的虚伪造作。到了武汉，车厢乘务员也吆喝着到站了到站了，我便帮着小贺摆好行李目送着她走出了车厢。</p><p>小贺一走，心里却有些失落了。没了取乐的对象，更没了调侃的动力，唉。还好离我的目的地只差几个小时便到了。小贺下车时分正好是可以出门逛街的时间，她说过她的同学朋友在车站外等她。但我没想到在我届时闭目养神的时候，她却主动联系了我，告诉我她刚刚吃了热干面，也正在和朋友逛街玩乐，一连贯的字词间看得出来她很开心。我却有些不知所措了，因为我能明显感觉到她对我的好感，但为了保持分寸，我故祝她玩得开心。直至我到了目的地，她也没再联系我了。放假到了父母这边，母亲很高兴，每天我还没睡醒，早餐便已买好送到我床边了。对于母亲而言，能在此时此刻当牛做马地照顾我是一件很难得的事，在她心中总是对我抱有愧疚，认为我跑到北国去读大学，她因此照顾不到是一种缺失。显而易见的是，我继承了母亲的这种善良，而母亲继承了外婆的善良。我刚开始每天不是睡觉就是骑车到这个生活了数十年的小县城逛来逛去，或者是去从前的母校打打球、流流汗，过的很是惬意。直到一天晚上小贺又主动联系了我，她说她早已回到了云南的家了，我便又心生欢喜地跟她基于一个手机火热地聊了起来，这对我来说是一件惊喜的事，我也能预想到我跟这个女孩之间会有些意料之中的事情要发生。不可否认的是，我对她亦有好感，基于那种特殊感情的好感，对我而言，除了这种特殊感情的好感，不可能存在什么男女友谊的好感。她那张脸从此刻对我而言便有了特殊的意义，即便不是一张特别出众的脸，但一直在我脑海回味徘徊。于是一天晚上，我蒙着被子瞒着早已是鼾声如雷熟睡当中的父母跟她正聊的热火朝天的时候，我便大胆地说出了我的困惑：你是不是喜欢上我了呢。小贺一开始还有些惊慌失措，有些狡辩的字词，我为了不让她难堪，我便先她一步说出了我的想法：我也喜欢你。我们两个从此便成为了人们口中的情侣了。我只记得那天晚上很静很静，月光照射进我的床边，我把头从被子里冲出来，两手抓紧把仍亮透透的光屏扣在狂跳不止的胸膛，我能感受到我压抑不住的窃喜，还有合不拢嘴的嘴角，很开心地在笑着。呵，今夜注定无眠。</p><p>她发给了我在火车上时偷拍我的照片，我还因此打趣儿：是不是因为我英俊潇洒的脸庞所以才喜欢我的。她为了陪我打游戏，下载了一个从未接触过的游戏，即便她屡屡犯错被我责骂也傻傻在电话那头笑着。因为她上的是私立院校，意味着每年的学费会很昂贵，她告诉我她要去做一份售货员的兼职赚点钱好交学费。再去的路上给我打视频电话，在公交车上，在去的地铁火车上，她小心翼翼地护好她的手机，我让她先关了吧，到了我们再打，她装着没听到。快到工作地点的路上，她依旧一边把手机尽量靠近耳朵旁以好听清我说的话，还给我看看周围的高楼大厦。到了工作的位置，她说她要化妆了，对着屏幕当镜子涂口红，涂完还问我好不好看。到了傍晚时分，她不顾家人在身边依旧给我打视频电话，她的勇气在此时此刻明显是大于我的。我却有些受宠若惊。别扭地跟她弟弟打着招呼，她还笑我虚情假意。从此我便享受到了两情相悦的美妙绝伦，从此这份感觉让我明白了爱情的真谛。如此美好纯粹的爱恋呵，将会成为我一生最为美好的告诫与教训，它始终告诉我：真正的爱情是怎样轻而易举又怎样动人心扉的。在她面前，我可以无限邋遢，无限自在，而她可以为我妥协，妥协到让我有些不知好歹的程度。对于我的邋遢，在每一次值得纪念的日子里，来到我的虚拟空间给我留言。“舍得刮胡子了？”“今天是在一起的第一个月”“今天是在一起的三个月”“晚安”…以至于我后来有些得意忘形了。我是矛盾的，如此轻易获得的感情让我迷茫却也安逸了，我认为我不管做什么说什么，她都能乖乖听我的话了。</p><p>在这场虚无缥缈的闹剧之中，基于我欲求不满的贪婪与胆大包天的好奇，她满足了我从小到大的所有的幻想。直到我们都开学了，我去车站接她回校的那一晚，我们尽鱼水之欢之时，我闭上眼还带着些羞涩，她主动拥上来深情地吻着我，我也从此沦陷，愈发大胆起来。我亲吻着她的断指，我们乐在其中，更为明确的说，是我更加乐在其中。我让她欲火焚身，面对她的疯狂，我却沉默不语了。我的欲望已经满足了，我的幻想已经实现了，在她身上没有了我强烈需求的东西了。回望当时的感受，我有些困惑我始终不明白，我对她的真实感情究竟是什么样的，究竟是基于什么才被激发出来的。但在那一晚之后，好似梦醒了一般，朦胧的美妙感觉也灰飞烟灭了。在回到各自的学校之后，她好似还深陷其中无法自拔，而我早已回归到清醒的状态去继续我从前的荒唐事业了，好似她从来没有出现过，又好似这么一个她，熟悉却又无可厚非。她给我打视频电话，诉说着她的思念，我却无动于衷，就像是面对对我日思夜想的母亲一般的，冷漠至极。终于有一天，她问我，为什么在送她回去的那一天没牵着她的手，而我却只抛给她敷衍的句词。她问我的问题，我却当她太愚笨，如此简单的问题都没有自己的构想答案。像个长辈似的对她大为教导大为指责。是的，我对她没了从前那般开始的激情了，我不知该如何面对她的热情与追问了，我只好给她一些期待，期待下次相聚我会表现的更好，就如她所愿的从前一般。但我也无时无刻不在表达我的丑恶，这让她不适，最终起了疑心。唉，在苦苦煎熬了数月的一天夜晚，她问我是不是该放手了，她让我去找个同届同岁的女孩重新开始新的恋情去吧。我一开始有些慌了神，但却认为理所当然地把问题答案交予她来作答。从此，这段我少有未来臆想的恋情结束了。我或许有些不甘吧，我不忍心伤害她，我告诉她：我是喜欢你的，不是玩弄你的。她是否真的相信我的话呢，至少我们开始在手机上，结束在手机上，我在结束之后也没再主动去她学校找她团聚过一次，即便我平常时常在手机上给予她数次承诺。</p><p>唉，我对她是真的爱情吗？还只是急于填满的肤浅喜欢？我很困惑。但可以明确的一件事是：她喜欢我，胜于我喜欢她许多许多。我冷静下来较快，她清醒下来较慢，分道扬镳早已是命中注定的了。在这深夜写下这些文字，我却有些心有余悸了，最后的我太冷漠，冷漠的我自己都有些不认识我自己了，带给她的伤害我在后来的时光体会中也认识到了。或许是我臆想出来的感受吧，或许是我们本该如此的命运缘分吧。小贺带给我的感觉，我却终生难忘掉了。她的名字我这一生会记得，她对我的情感我也会不时回味。那样美妙的感觉，我始终难忘。有时做梦会梦见她流泪，醒来满是愧疚，我兴许是做错了事。对她而言，真的不太公平。</p><p>从遇到小贺直到结束那段恋情之后，我再也没遇到如她对我那般的女孩了。</p>]]></content>
      
      
      <categories>
          
          <category> 故事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 故事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>烦</title>
      <link href="/2022/03/18/%E7%83%A6/"/>
      <url>/2022/03/18/%E7%83%A6/</url>
      
        <content type="html"><![CDATA[<p>烦！今晚是真他妈烦啊，最厌恶什么话不能痛痛快快地说开了。再也不想因为什么琐事再去唠唠叨叨个不停了。他妈的！烦透了！</p><a id="more"></a><p>最烦的事莫过于至亲至爱的人对自身的误解、逼迫及扭曲。没有忌讳的事，抛开世俗的枷锁，想必独裁者会把所有异见者都当街杀光吧。面对现实事物无法按照设想中的、所认同着的理念去进行着。面对突如其来意想不到的琐碎之事，把有限的精力去被迫消耗掉，显得冗余且多余，除了无奈还是无可奈何！</p><p>是不被身旁所在意的人们理解、认同及注意吗？如此非必要地去诉求。唉唉唉，不过是面对于情感的羁绊及现实的无奈呀。执笑意与不屑去面对，有时不过也显得过于自负了。碰到最烦的人事，碰到了终究还是会烦啊。</p><p>儿女私情之间的必须要做的妥协作为，面对两者之间必有的差异。处事风格能不能别再如此复杂呢？奶奶的，烦透了！烦极了！解释、解释、解释些什么呢，啰啰嗦嗦、唠唠叨叨把耐心都耗光了！真是向往快意人生，特别是面对这种羞羞答答的情感：行就行，不行就痛痛快快不行吧！还要人去没皮没脸去苛求什么东西呢！烦！烦透了。</p><p>多嘴多舌的人，竟如何会有多余的舌根子去叨烦他人的琐事呢。学会闭嘴，学会体谅不会是什么难事吧！发展点见不得人的爱好也有何不可吧！何必花费宝贵有限的时间去猜测想法、扭曲事实呢。</p><p>奶奶的…可笑的是我呵！原本想将这种牢骚心情记录下来发泄发泄，却不想想着急切要去如何解释生活中难以避免的烦恼之事是如何形成以及如何去解释其中的意义了…哈哈哈，弄巧成拙适得其反，痛快，痛快呵！</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>忧虑</title>
      <link href="/2022/03/17/%E5%BF%A7%E8%99%91/"/>
      <url>/2022/03/17/%E5%BF%A7%E8%99%91/</url>
      
        <content type="html"><![CDATA[<p>任何一种被拿来做外在掩饰的政治制度，不应成为被蒙蔽的理由与借口。探讨各自心中所认同的价值观念，一味地诉求达到面向所被编织的积极因素，理性会被泯灭至尽。而面对任何事物及理念的两面性，就能从此冠冕堂皇甘愿沉沦了吗？若是如此，冷漠亦会变得理所当然。</p><a id="more"></a><p>内心所追求的不过是这样美好的愿景：人们可以在各自的领域畅所欲言，在各自的职位上各尽其责而不用担心失业的问题，不再因不同与权威的话语而忌惮害怕等等。而美好的愿景终究于美好的想象与憧憬，又何以去嘲讽与扭曲呢？面对于肮脏不宁的生存环境，人们都选择带上虚伪的面具，说着基于条条框框的言语，像一只兢兢业业的蚂蚁，更像一只胆战心惊的兔子。在当代的美好或许是难以现实的了，又为何不去大胆诉说内心美好的心愿，至少让下一代、下一个人去了解与感悟，继承这种理想，从此被延续。</p><p>不安，忧虑。仅仅是面对一个发自内心衷肠的诉说真实的言语，却能引发得到如此多的人的附和。异议的声音是不被允许的定时炸弹，言论环境竟已恶化到如此触目惊心的地步。埋没灵魂的人们凭借着理所应当的现实外衣，自甘带上无可奈何的手套，去做那些本身厌恶至极的丑事，仅仅是为了一幅光鲜亮丽的外壳，良知与理想于这些人又算得了什么呢。是啊，在当今现实，善良是无知懦弱的同义词，良知是被人轻视的街头飘零物。真正的懦弱如何又是怎样被代言被扭曲的呢。把真正可贵可爱的品质交予金钱与欲望去审视，是如此的肤浅。与生存去挂钩，又是如何迷惑那些思想混沌的人们的呢。为丑恶犯罪，与欲望交合，再去为罪恶辩护，这便是真正的懦弱。</p><p>意识形态的侵蚀，教导人们如何去表达需要被表达的正确的意义，寻求需要被定义的意义。面对浮躁与刻意，宁静也不再宁静。获得一个问题，得到多种解说，一一去与自己碰撞，却落得个七零八落、失魂落魄。真诚单纯的人们会气愤难舒，聪慧机灵的人们却选择不屑不顾，任由“陷阱式”的问题愈发放大，又是怎样的一种漠视与罪恶呢。是啊，人们没了信仰，没了理想，看待权威的眼神也变得不一般的锐利。胸有成竹的权威人士们，拿着附意真理的枪炮，从此可以得意洋洋地去敷衍了。“人们过得不好，是因为人们的问题！”如此堂而皇之的大话又是如何不知羞耻地被诉说着呢，却依旧不失忠实的愚昧听众。</p><p>我所忧虑着的究竟是基于什么理念呢？一份不失理智的浅薄的社会责任感罢了。不过是为了寻求一个权衡利弊，不过是为了寻求一份心安理得，娱乐至死的时代假象面前，闲情逸致的诉求是可笑的。接触到更多被有意封禁的禁忌，却能将欲望看穿，理解释怀所谓的人生百态了。不过是自得其乐罢了，去自得其乐去吧。只要不去做什么伤天害理、见不得人的勾当。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赖皮的人</title>
      <link href="/2022/03/14/%E8%B5%96%E7%9A%AE%E7%9A%84%E4%BA%BA/"/>
      <url>/2022/03/14/%E8%B5%96%E7%9A%AE%E7%9A%84%E4%BA%BA/</url>
      
        <content type="html"><![CDATA[<p>去年五月份正处于燥热难耐的盛夏，距离大学毕业也将近一年时间了，而我的工作还没有稳定下来。至此，在本地早已安家落命的小爷给我发来了一条他公司的招聘信息，我一看：五年相关工作经历、专业还不是我的专业、当地三大电信运营商之一的国企。我想，我大抵是要去做炮灰的了。</p><a id="more"></a><p>毕业之后我想找个离家近些的地方工作，父亲老是担心我的工作问题，这次肯定是他老人家拜托小爷给注意到的工作机会了。听闻父亲说，小爷要去了两千元的红包，请了招聘分公司的高层熟人吃了一顿饭，顺便把我这要过去的简历也给那些老总看了看。一个无所事事的下午，接到了小爷的电话，给我说明了参加笔试的时间及地点。我当时还抱着一丝侥幸与欣喜：小爷这人挺靠谱的呀，以后可得对他好点，至少拜年什么的得积极一点了，嘿嘿。可不是吗，在这鸟不拉屎、年青人都很少见的小城市，能够得到这样一个社招进国企的机会，我这样的毕业都未满一年的简历都能拿到笔试机会，可望是未来可期呵。万一真进去了，年薪十来万在当地可谓是美滋滋的生活啊～最为重要的一点是：这是看着我长大的小爷第一次介绍的他所熟悉的领域的工作。乍一想，奶奶的，这种好事怎么可能落到我头上呢，我这样的除了我小爷外毫无人脉关系的小市民能得到这样的机会，并且我小爷在本公司还不是什么厉害的高层呼风唤雨的角色，其他那些深藏不露的狠人指不定也是虎视眈眈着的呀。而且，早就听闻国企社招普遍找关系走后门的故事，我这小心儿又是颤了颤数抖，心中燃起的小火苗已经是快要被沮丧与不安浇熄殆尽了。</p><p>到了笔试的日子，带着打印出来的简历及相关材料，打的士来到了招聘分公司的门口。一下车，燥热的不行，把衣服脱了一半，鬼清楚中午的太阳竟如此火辣呢。装腔作势地抬头望了望周围，想观摩观摩公司的大厦景象，内心已经是不自主地充满了无限遐想了。奶奶的，简直是失望至极：跟当地高级饭店一样的建筑规模，年代久远的陈旧气息扑面而来。还真别说，身旁一辆上世纪流行的如今很少见的那种小桥车样式便从不远处穿梭了过去。呆了呆数秒，竟找不到该去哪儿参加笔试了。没办法，先问问旁边的保安大哥吧。问完才发现，这如同小区的门禁摆设竟是堂堂三大运营商之一的国企的门面，还是我少见多怪了。罢了罢了，如果真的能进，何不是一种能混吃等死的莫大机遇呀，再说了，国企也不会缺钱发不起工资的吧。</p><p>进去之后找不到地方笔试，只见一个牌子上边写着：笔试请上三楼，面试请上二楼。我忐忑着上了楼，一路上没见几个人，进了笔试的楼层之后，前边便是一个开会的会议厅。果不其然，笔试是在会议厅举行啊。找了个地方把带的东西放下来，我当时还以为竞争者会不少，以为桌子上会贴纸条写着参加笔试者的名字呢。我便逛了溜了几圈，一个桌子一个桌子地察看，没想到根本就是自作多情了，这就是这公司员工与领导的名字嘛。快到点儿了，看了看周围寥寥数几的竞争者啊，心中不免暗喜。正当我又再次燃起以为胜利在望的小火苗之后，突然看见两个像二流子似的小伙子进来了，其中一个居然还他娘穿的拖鞋来参加的笔试：这两人勾肩搭臂，活脱脱像是中学时代不务正业的小混混造型嘛。正当我怀疑这两人到底是不是参加笔试的人，直到一位女士拿出了试卷，吆喝着笔试即将开始，我确定已是定局了。</p><p>我囫囵吞枣地写完了这如同公务员试题的试卷，心里愈发不是滋味儿。奶奶的，我不就是炮灰吗，二流子都来参加笔试了，绝对是有背景的主儿呀。至此时刻，我已是明了了，火苗早已消失没了踪迹了。写完了之后，我下楼准备回家呆着思考下一步该怎么办了，一边走出大门，一边暗自在内心贬低：这就是国企的风采啊？这是国企的的作风啊？好歹也是一个江汉地区的分公司呀…愈想愈不是滋味儿，奶奶的，最主要的还是那份挫败感在作怪。出门等了半个钟硬是没找到一个砍价合适的的士，来的时候十来块，回去就要二十来块了，奶奶的！一不做二不休，找个开小电动的砍砍价回去吧。上车了之后，发现是一个戴着小墨镜的男人开的车，又是一个活脱脱的二流子啊…心里顿时又翻滚倒腾了起来。砍价砍到了十五块，行，就这么回去吧，早回早安心。回去的路上有一搭没一搭的跟这位小哥聊着，关键也没那心思，我当时吧是这么个状态：在大城市呆久了的人，见惯了灯红酒绿，习惯了孤孤单单的生活作风的人。此时此刻，一股失落感猛然而生，我可真是猝不及防啊。聊了几句便不想多说话了。没想到，车走了一半儿了，招聘分公司的人打来电话要我去参加面试。他娘的，这是什么狗屁国企啊，真的受够了。这种作风真是令我匪夷所思、大为一惊啊。没办法，内心如何不爽快，不也得乖乖回去参加面试吗，万一我是内定者呢～未想到的是，离几百米就到家了，又要转回去了，估计又要二十分钟左右了。期间公司的人打了好几个电话催，我只得一边道歉一边解释呵，奶奶的，错可真不在我啊，你们叫人笔试完什么话也没留，笔试的人走了才告知这么一出，她妈的！老子很不爽哟！</p><p>三个轮子的电动车终于到了门口了，眼前又是那样熟悉的厌恶的环境，心情却交杂着丝丝惊喜与憧憬。可这位司机小哥却不乐意了，道：我都把你送回来了，你得给我两趟的钱啊。我一想，真他娘倒大霉了，离家还有好几百米的距离不说，从半路转回来的，你这破车速度这么慢耽误我面试不说，还趁火打劫？我届时便跟他理论起来了。不想催面试的又打来电话了，我只好作罢，当是吃亏了，便极不情愿地付了两趟车的钱。下了车，习惯性地“谢谢”之后，便急忙向门口赶去。见到门口迎接我的女士，又是跟我道歉又是跟我好生解释了一通，我便不好多说什么了，原本想好好质问质问发泄发泄的，作罢。进去面试，三个面试官问了问在校的情况以及做过的项目流程内容，一路上自以为还算是聊得来，最后一分钟却都改口：这个工作岗位招的或许不太适合我，但是叫我回去等通知。奶奶的，我算是可以真正确认一件事儿了：这个岗位被更有权势背景的人拿走了。</p><p>丧气的出了门，摸了摸口袋，上摸摸下摸摸，心神还未定呢，发现身份证丢了。这可是大事呀！估摸着是丢在那三轮小电动上了，想起面试期间没接一个电话，绝对是那二流子司机打来的了。问了问门口保安，确有其事，那司机本想放身份证到保安大哥那的，最后却没放。我方才意识到我要被人宰了！我打电话过去打算质问是怎么回事：喂！你在哪啊？是不是想敲诈啊？什么意思？可不是吗，肯定是有鬼啊。连续打了几个电话，差点跟他吵起来了，那二流子给了我个地址叫我过去找他拿回我的身份证。没办法，只好找小爷来帮帮忙，这会刚好是中午饭点，估摸着不会耽误什么事。打了一个电话给小爷：小爷，我估计是遇到二流子，您有空过来跟我去个地方拿回我的身份证。小爷欣然答应。不一会上了小爷的车，小爷在车上给那小子打了电话，那小子还不依不饶，气势甚足呵！好小子，碰了面看我小爷怎么收拾你！</p><p>到了那二流子指定的地儿，一下车我便拿出百元大钞准备买包好烟给小爷，虽然知道我那老实人老爸肯定给过好处了，但是这会事出由我，我单独“孝敬孝敬”也是应该的嘛。推了推搡，小爷欣然接受，换了两包五十元的烟丢进了车里。同时也拿出了电话不停催那二流子人在哪，还一边安慰我道：没事儿，小爷这边有人，一个电话便能定位他的家庭地址，找帮人修理修理这小子。嘿！还真别说，小爷打了个公司电话给同事，叫同事帮忙查查这二流子的信息，因为是扩音电话，我可听的是满心欢喜啊。嘿嘿，二流子司机，你这会儿是遇到硬茬了，非他娘治治你这歪风邪气不可！这会我可是对小爷充满了信任与信心呵！可算是也能扬眉吐气一回了！等了十来分钟吧，期间小爷找了个就近的饭店准备解决解决午饭的问题，因为会担心耽误小爷工作，便也跟小爷聊了聊，小爷说没事。那二流子终于是出现了。我跟小爷凑上去，小爷在前，我紧跟在后。小爷气势汹汹，拿出一根烟递过去，说了说好话，想不到还真遇到了赖皮小人儿了：认为还给我身份证不是天经地义的事儿，必须要我“孝敬孝敬”他才能还回我的身份证。奶奶的，这会儿我跟小爷算是火气冲天了，小爷道：你妈的，信不信老子找人做了你？我也大声喝道：弄死你！嘿！这会儿那二流子倒是来劲儿了：哟嚯！你们牛逼啊，那倒是找人来弄我试试！完了，这会是真遇到赖皮的人儿了！</p><p>期间这赖皮小人软硬不吃，硬是要跟我们干一架的架势。小爷这会儿倒是软了无计可施了，又开始说好话了。没法儿，我看形势不太对，只好一边倒跟着小爷嬉皮笑脸在那陪不是、说好话了。奶奶的，这叫什么事儿！小爷也是个不靠谱的主儿啊！最终，小爷也没招儿了，只好叫来了他老婆来救场。关键时刻还是女人管用啊，再者也是因为确实有几把刷子吧，硬是用两包好烟换回了我的身份证。吃饭期间，我打趣儿的自嘲又同时安抚小爷道：没想到这家伙不吃您这套啊，这赖皮小人真的是无可奈何呀。小爷又随声回应，好似为了挽回一丝颜面：那是为了你着想啊，要不然弄他还不容易啊。吃完了饭，小爷开车送我回去。一路上，为了安抚自己和小爷只好东扯扯西扯扯。说了说面试的事，小爷还安抚我道：没事，人家还准备直接录用你的，这走的都是过程，放心吧准备等通知上班吧。我这一路上倒是数味杂陈，很不是滋味儿…</p><p>回到家之后，把这事跟我爸妈交代了一下，没想到老父亲把中午的饭钱和烟钱都给转过去了。小地方真的是鱼龙混杂，群魔乱舞呵。没有过硬的人际关系还想进国企？门儿都没有！回到家至此，我脑子亦是一片混乱了。</p><p>号称“铁饭碗”的国企最后肯定是没能进去了。小爷这样两边解释道：能力还不行啊！被更有背景的人占去了…我思量来思量去，都他妈是赖皮小人啊！</p>]]></content>
      
      
      <categories>
          
          <category> 故事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 故事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>察言</title>
      <link href="/2022/03/14/%E5%AF%9F%E8%A8%80/"/>
      <url>/2022/03/14/%E5%AF%9F%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<p>阳光明媚、春风和煦的午后，闭上眼细细思索到的一些托辞与感想。</p><a id="more"></a><p>好奇与无知交杂着的放纵，是无数罪恶的根源。如今的好奇更倾向于自我的舒适圈，在这样可预见的、可操控的圈子里怡然自得，可谓是一种良好的、明哲保身的品质。好奇更为曼妙无比的感觉，寻求体验到共鸣的深意。共鸣是一种干涩无奈的寄托且欠缺表达自我的意识表现。当拥有了可确切表达内心所感所想、可将其较为恰当实体化的能力，一切乐曲与书籍可寄托的情绪与感受都是冗余且多余的存在。于我而言，选择笔杆子的形式将内心积压着的思绪万千形象化是一件激动人心且心生向往的事。幽思冥想到的是常为之神往的乐曲，其中所蕴涵着的歌词曲意是否已将我同化且改造？使得我去刻意陷入其中所表达的情绪与感想，继而使得我去模仿、改变自我。想到此处，何不为一种可取乐的方式呢。即便会心甘情愿深陷其中，获取得到从未拥有的感觉，却不过是当下真实的自我与其结合营造而出的深层意境罢了。</p><p>表达真实的自我，是如此令人神驰的愿景。去阅读与感受，不过是为了更好描述这样的真实。真实与自我，再掺杂着无声的静界可谓是无上的欢乐梦乡。艺术家们带着一份真实与幻想便可以是无与伦比的美轮美奂了。看到这样一个<a href="https://www.bilibili.com/video/BV16a41187Un?spm_id_from=333.337.search-card.all.click" target="_blank" rel="external">视频</a>，格格不入的风格或许会带给懵懂的人们以迷惑，随性不失雅兴地表达真我，可谓是一种无可言表的至雅。把周围人们不解风情的声音都包揽进来吧，把车水马龙的嘈杂也拉拢到身边吧，把猜疑与嘲笑的神情也深刻到脑海吧，无我是狂热、宽容的。包罗万象的胸襟，令人神往。开阔到无垠的边界，触摸到至上的欢乐。格物致知的深意，可谓是上上译音呵。</p><p>无巧不成书，只是缺乏明鉴的感知。带给人新颖的惊喜与思索，滋养囚禁着的惰性与妄想。自以为高人一等、衣食无忧的代表们，说着自欺欺人的话语，带着虚伪的面具，“为民为国”的字词是保障自身利益的托辞，是令人作呕的虚像。愚昧的人们又是怎样的一种狂妄，面对不明其意的“富养”，自以为是解得表面的假意，把愚昧授意于无辜的下一代吧。如此可见的滑稽表现，无言令人痛心疾首的诉求，并非只是抛给无奈现实可了之，应该带给这些人们以觉悟，避免美妙生命被持续摧残的现实悲剧。由市侩与冷漠孵育而出的养料，喂养纯粹纯真的人们，带来明码交易的自我作践，奉于献媚讨好的虚情，诉说自我不堪的价值所值，把自己物化，讨求一份可暂且避免谴责的工作薪资，吃着由口水汗水翻炒而成的饭水。一切都是那么理所应当、自得其乐呵。时代的演化不是寄望的借口，切勿盲目无知，丢失美好的良知，更别因此迁怒于其它事物，把一切否定，加以愚昧的肤浅被人同化呵。古人的思想可谓是高深莫测的。琴棋书画可谓是不可多得的妄想，却是最为高品的教育。奇思妙想的碰撞、欣欣向荣的交织、琴声画艺的抚媚才是至高的享受呵。</p><p>当今可见关于“婚恋”的焦虑从何而来呢。“看见养狗的妇人，便想到其与狗交合之事”的肤浅愚见又怎样复现在脑海呢。面对肆无忌惮的利益获取、毫无底线的贪婪成性的实景是原罪。这样的现实实景应当被约束，而不是视之不见的狡辩与转移视线的把戏有意加持，风气需要处于上层建筑中的那些心怀良知的人们去构建，人们美好的愿景需要这些人去依托。可怜可悲的人们呵，你们应当独立自强，切勿被假象所迷惑自困。应当心怀那样美好的感觉，即便没有当下可即时触碰的享受，关心所爱之人，带来未来共同生活的希望，而不是以爱之名无度索取，把深陷其中的良善人们欺骗。善良的人们要坚强，保持向上的决心，重要的或许不再重要，坚持表达真诚的意愿，感受会带来疑惑的答案。两情相悦的爱情真谛如此难得，所心生向往的、所梦寐以求的憧憬会给予前进的动力与希望。别去漠视，别去扭曲，更别去忧怨。</p><p>肤浅的喜欢，只是重复的无聊与无趣。被各种成见与道理组成的自我中心，是否应当警惕“文化入侵”的悲观趋势。不过是所认同自我所认同的，所愿汲取的知识智慧罢了。人的自由选取与文化的流动本质又如何去避免矫正，可谓是痴心妄想的。可见坚守自我、保持真实的状态是不易的。赋予读书的意义不应当是为生存所做的措辞。如有所得，去做一个“书呆子”吧。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>约束</title>
      <link href="/2022/03/08/%E7%BA%A6%E6%9D%9F/"/>
      <url>/2022/03/08/%E7%BA%A6%E6%9D%9F/</url>
      
        <content type="html"><![CDATA[<p>真正能对人起到约束作用的是什么呢？这世间表面上的明文规定以及隐形规则或许都不是具有绝对约束力的，这是我的想法。</p><a id="more"></a><p>为达到稳固社会及巩固统治阶级输出意志的目的，法律像是神圣不可侵犯的至高约束力量。凭借着可以轻易将人定罪的能力，给人以绝对权威要求绝对服从的威慑力，但依旧没有阻止更多的“犯人”因此被送入所谓的监狱中去。道德规范是隐形的不具强制力的法律，由此相较于话语更为专业表述化的法律，约束力自然是更低一筹的了。因为无知愚昧才会导致的因果关系吗，于我而言，这可真是最为肤浅极具掩饰的说法了。指不定在这三更半夜里，还有一群所谓的精通法律条文的律师在研究其中是否具备可钻空子的时机，苦苦探求可侥幸得到的纰漏，换取梦寐以求的利益需求呢。</p><p>最常见的道德规范，是处于不同生长时期的人们所接触的不同环境下的明文规定或者是口传心授。面对于某种极其强烈想要达到的目的，这一切却是如此脆弱不堪。对于那些在学校考场里想尽心思不惜以作弊手段获取高分的学生，就是最好的例证。而我们也不得不接受这样一个可悲的现实：更多的学生只不过是因为胆怯才没有做出类似越界的行为。足以证明，公德约束只不过是维持表面和谐的无用泡沫，经不得实打实的推敲，更不用说能借此约束内心复杂且擅长伪装不露于表面的人们了。</p><p>“文化”具备这样的约束力吗？我想是具备一定约束力的。经过人们细腻入魂、感同身受地消化，化为所认同的且坚持信仰的理论与经验，由此运用到现实生活中去，去把自己的行为话语规范化以避免不必要的麻烦。然而，面对强大的诱惑，依然不缺有人会抛之不顾，贪婪的本性是不可撼动的。值得探究的是，获取更多的理论与经验之后，人们会更加凭借自我的直觉去面对、去解决生活中的绝大多数问题了。</p><p>人类是被表面驯服的野兽本质是未曾改变的。要去追求所谓的绝对约束力可谓是痴心妄想的。正如不完美才是人间常态，纯粹与完美不过是美好想象一般的。说来说去，不过又是“纯粹”的界限之内的问题演化罢了…我可真是大费周折却又是故弄玄虚一番了。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>夜</title>
      <link href="/2022/03/06/%E5%A4%9C/"/>
      <url>/2022/03/06/%E5%A4%9C/</url>
      
        <content type="html"><![CDATA[<p>想要一份纯粹无暇的真情，带着不安与惶恐。</p><a id="more"></a><p>夜，是荒诞无度的衬映，无数虚情假意都开始泛滥起来。金钱、逃避、虚荣、浮腐…怎会如此不安，再次徘徊在爱恨边缘。良知在忌惮些什么，不愿被丑恶玷污，想要抓住真诚的痴妄难以安抚。</p><p>是要因此把自己变得疯狂，把目光变得敏锐，带着表面的凶狠，去试探身旁的纯洁与纯粹。猜疑，把欲望也压的喘不过气。从此也变得惶恐。</p><p>怎会不明白纯粹是种奢望，却依旧摆脱不了它的诱惑。可笑至极，也是天真的遐想，梦到痛的给予，也害怕踏出梦乡一刻。</p><p>我一直是个如此天真的理想主义者。也清楚现实不能给我生存的土壤，总是在挣扎，总是在重复，总是在抉择…犹豫不决，因此也变得胆怯。面对真实的自己，早已千疮百孔的良心，已被虚伪填充。</p><p>夜，如此漫长。蒙上双眼，先把自己遗忘，渴望在又一个梦里得到解脱。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>幻想·结婚</title>
      <link href="/2022/03/04/%E5%B9%BB%E6%83%B3%C2%B7%E7%BB%93%E5%A9%9A/"/>
      <url>/2022/03/04/%E5%B9%BB%E6%83%B3%C2%B7%E7%BB%93%E5%A9%9A/</url>
      
        <content type="html"><![CDATA[<p>月明星稀，霓虹闪耀，你我的甜蜜为这寂静平淡的夜更添一丝涟漪。</p><a id="more"></a><p>拉着你的手在暖风轻拂的灯火微暗的街道，一句话也不想说，就此沉沁在这样心照不宣却心满意足的感觉。看着你同我一样，嘴角带着难以不被察觉的或许是幸福的微笑，目光也变得清晰明亮起来。抬头望月，阴晴圆缺，却也如此醉人心脾。我停下脚步，拉起你另外一只手，此时我们四目相对。看着你我的眼睛，倒映着此刻双方的羞涩模样。内心感到从所未有的欣愉喷涌而出，好似已经触碰到了那梦寐以求的“幸福”。</p><p>“我们结婚吧！去领那一纸婚约，让它把我们束缚，永远将你我束缚，不死不休。如果结婚就是一意孤行与自欺欺人的莽撞，我宁愿撞死在这样每日可与你五指相扣的美梦里。”</p><p>明显感觉到你我的脸都红透了，好似要发出一对红光，要去与周围多彩绚丽的霓虹共舞一般。你低下了头，呢喃着什么字。我的心狂跳不止，我急切想要你的回应，不自觉将整个身体向你倾斜过去，只想听到那一个会让我此刻灵魂出窍、魂牵梦萦的字。</p><p>“好！”</p><p>行为不受控制地将你紧紧拥入我怀，你头发里散发出来的清香已然将我熏醉，我已然忘乎所以。也感觉到从你身体散发出的热度要把我灼伤一般，情不自禁把嘴唇靠近你的额头，轻吻。也不知是否深情了，在那样美妙的感觉里。拥抱了许久，忘记了时间，迷失了空间。我轻轻将你安抚在我面前，我早已热泪盈眶不能自己了，这一刻无数次出现在我的梦里，此时此刻终于如愿以偿。望着你的眼，拿出那两个寄托着我无限遐想的盒子，里面是刻着我母校名字的纪念戒指。我在毕业时特意订做的两个戒指，我想把另外一个寄予我这生的挚爱，以此寄语我无法表述的情感。我把盒子打开，准备为你带上，才发现你纤细的手指没一个是能完全吻合这枚戒指的尺寸的。我们相视一笑以好似作了一番自嘲的苦笑，看到你泪痕满面，这一刻我才发现你也是泪流不止过。</p><p>“多想让你这辈子都带着这枚戒指，我这辈子都不用收回。盒子我留着，戒指你带着，我这辈子只想结这一次婚。如果真有那么不堪的一天，请你把它还给我，我要把它丢进火炉里溶化掉。”</p><p>我们哭泣着再次紧紧相拥…</p><p>……</p><p>所谓的文人就是擅长组词造句的俗人啊。从前看&lt;摆渡人&gt;，觉得其中描述的各种细节是那么的多余，但数次回味，毕竟也是细腻动人，栩栩如生呵！我这写作水平倒是相形见绌了…东改西改，不像个样子…就如此先行笨拙地描述出来且记录着吧。如今发现，没有当心地将从前一闪而过的灵感与奇思妙想记录在此真的是罪不可赦。如今倒是慢慢的回归到从前那般闲情逸致的感觉了，写作的欲望倒也是愈发膨胀起来了，于我而言，可真是久违的欣喜了。就此从此写到死吧。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 幻想 </category>
          
          <category> 梦 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 幻想 </tag>
            
            <tag> 梦 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>活在当下</title>
      <link href="/2022/03/04/%E6%B4%BB%E5%9C%A8%E5%BD%93%E4%B8%8B/"/>
      <url>/2022/03/04/%E6%B4%BB%E5%9C%A8%E5%BD%93%E4%B8%8B/</url>
      
        <content type="html"><![CDATA[<p>活在当下，享受当下。</p><a id="more"></a><p>把最为沁人心脾的乐曲放大到最大声，情不自禁将双手伸开浮在空中忘情挥动。闭上双眼，一眼望河川，一眼望到宇宙边缘。触手可碰围绕着的点点缀缀的星空，小心翼翼将一颗星粒捧起，拇指从两侧轻轻滑动抚摸，却感到那样意想不到的温暖，由着手指直击到全身上下，舍不得放手。待我睁开眼，将你看个清楚，是怎样一个小东西这样让人惊喜。呵！是你呵，那双灵动淘气的眼，那如樱桃般微张的小嘴儿，那位梦中常客的小美人儿。依稀记得你扎着两个小辫儿，回头向我抿嘴一笑的小脸儿，将我的心都融化了。将你的小脸就这样捧着，看着你不时眨动着的小眼儿，这样安详。多想这一刻便能成为永恒…一片寂静，你的影像也消散了。祝你平安、愿你快乐。</p><p>在虚无中感受到人们的畅所欲言，大家的心此刻紧紧相连在一起。我们围着一个个看似总也逃脱不了的话题，谈笑风生。你们滔滔不绝地故事将我温暖，你们鼓起勇气讲出口的痛楚将我感染，我多想到你身边看着你的眼睛把我自己也倾吐个痛快，我多想抱着你给你我为数不多的温柔…朋友，珍重。</p><p>还有、还有你们，我至亲至爱的人们。一张张饱经风霜的脸，一双双暗淡无光的眼，紧闭着想要大口呼吸的嘴。将经历的苦痛独自扛在肩上，将留下的泪水紧锁在眼眶，将想要诉说的痛楚埋葬在内心深处。给自己给人们加油打气，明天更美好。别、别让岁月为你们刻上不可抹去的深壑的皱纹，别让战争的罪波及到你们此刻深陷的美梦…</p><p>阳光大道牵引我前进，我变得像鸟儿一样，尽情飞舞。望尽一马平川，望尽人山人海，望尽荣华富贵，望尽叹息与孤独。</p><p>天堂就在不远处。活在当下，享受当下，便是最为清晰的捷径。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Forever Young</title>
      <link href="/2022/03/03/Forever%20Young/"/>
      <url>/2022/03/03/Forever%20Young/</url>
      
        <content type="html"><![CDATA[<p>Alphaville - Forever Young/Gregorian - Forever Young</p><a id="more"></a><p>Let’s dance in style,<br>让我们纵情起舞<br>Let’s dance for a while<br>共舞即刻忘却时间<br>Heaven can wait,<br>温馨天堂指日可待<br>We’re only watching the skies<br>尽情专注仰望天空<br>Hoping for the best,<br>心怀最为美好的期许<br>But expecting the worst<br>却也怀抱最坏的噩耗<br>Are you gonna drop the bomb or not?<br>你是否已决定抛下罪恶的炸弹？</p><p>Let us die young or let us live forever<br>要么让我们英年早逝、要么让我们长生不老。<br>We don’t have the power,<br>我们无法决定去留<br>But we never say never<br>但却可以拥抱希望永不言败<br>Sitting in a sandpit,<br>坐在沙坑上冥想<br>Life is a short trip<br>生命之旅如此短暂<br>The music’s for the sad man<br>以此乐抚慰身心悲痛的人们</p><p>Can you imagine when this race is won?<br>何以去想象比赛胜利的那一刻？<br>Turn our golden the faces into the sun<br>面绣金光昂首向阳<br>Praising our leaders,<br>高赞我们的领袖<br>We’re getting in tune<br>让我们齐声高唱<br>The music’s played by the madman<br>以疯狂筑台狂奏高歌</p><p>Forever young,<br>永远年青<br>I want to be forever young<br>这便是我的愿望<br>Do you really want to live forever?<br>你又不何尝为此垂涎？</p><p>Some are like water,<br>有人柔情似水<br>Some are like the heat<br>有人热情似火<br>Some are a melody and some are the beat<br>有人挽旋如歌、有人奏乐相伴<br>Sooner or later,they all will be gone<br>但或早或晚，人们终将逝去<br>Why don’t they stay young?<br>为何青春转瞬即逝无法永驻？</p><p>It’s so hard to get old without a cause<br>任岁月徒增我们无可奈何<br>I don’t want to perish like a fading horse<br>不愿像褪色残喘的老马一般灰飞烟灭<br>Youth’s like diamonds in the sun<br>青春如同钻石般璀璨夺目<br>And diamonds are forever<br>恒久闪耀</p><p>So many adventures given up today<br>有许多艰难险阻还要去亲历体会<br>So many songs we forgot to play<br>有许多倾心的歌儿还来不及去唱<br>So many dreams swinging out of the blue<br>还有许多的遥不可及的欢乐梦想<br>Oh let it come true<br>我们要把它们实现<br>Forever young<br>永远年青<br>I want to be forever young<br>这是我的愿望</p><p>……</p><p>依旧记得初次听到这首歌时的热泪盈眶，从前的那般美好总是浮现在眼前，挥之不去…时常出现在我的梦里。</p><p>重新填词，以此纪念曾经美好的年华，以此寄予当下美好的心愿。</p><p>2022.03.03-17:02.天气-阴。</p>]]></content>
      
      
      <categories>
          
          <category> 歌曲 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 歌曲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦呓</title>
      <link href="/2022/03/02/%E6%A2%A6%E5%91%93/"/>
      <url>/2022/03/02/%E6%A2%A6%E5%91%93/</url>
      
        <content type="html"><![CDATA[<p>还是依旧喜欢挖掘一些隐晦干涩的本质，附以较为恰当的字词去表达内心的困惑与解惑。</p><a id="more"></a><p>时常见着这样一群人，带着一股热劲儿，身着自以为得体的服装，幻想着能在大都市获取一定的财富与地位，为此这些人总是容易陷入失落的境地，想要回头却发现早已习惯纸醉金迷、便捷无度的生活难以回头了。大城市里处处存在商业化的运作，有着适于商业生长的土壤，吸引无数怀抱侥幸的人在此生根发芽。社会由群体构成，社会的发展也摆脱不了被冠以公平交易的运作本质的了。城市的运作需要积极工作、奋发向上的思想去做支撑，许多还处于懵懂徘徊阶段的人们被带动，这样的氛围教导人们未雨绸缪，教导人们如何通过获取更多的物质及满足更多的欲望去透支自己有限的生命。直到物质条件达到可以衣食无忧的地步，这些人依旧囫囵吞枣地相信这才是人生的意义。这样的被带动被动赋予的意义，如何又算得上真正的意义。或许这些人直到死去的那一刻都无法真正醒悟明白过来，活在这样被人精心编织的美梦里。</p><p>这是一个外在看似心安理得井然有序的怪圈，也是一个由着一群大昏蛋带着一群小昏蛋去复现重复生活的悲剧。这些人完全可以在通过简单劳动填饱肚子之后，静下来心来去思索真正想要的需求。有许多外在的物质不过是让自己变得庸俗附众，许多不必要的欲望膨胀会导致扭曲的发展。或许在年老色衰之时猛然醒悟回望过去匆匆忙忙的时光，曾经单纯年少想做的真正称心如意的事也是依旧未完成。</p><p>生活的真谛是如此的简单，便是意义被赋予与赋予的区别。有时不必要的热爱也显得多余，热爱本身也是脆弱易逝的。热爱因诱惑而产生，因为有了对诱惑的向往，从此热爱也会变得一发不可收拾了。一些宏伟高大的建筑显得是如此的虚伪，以这样的外在把不清醒的人们诱惑，抒发被寄予的思想与情怀，又是如此的肤浅与滑稽。何不把这些可教育的东西真实地描述写进课本里去，让人们真正地去感悟体会。人，找到真正的自我是一件不易的事，掺杂着无数真真假假的事物与思想，从中好不容易获取到独立思考的能力，却发现出发点便是充满错误与欺骗的地区，这会给人沉痛的灵魂打击，雾里看花的现状会容易让人变得安于现状、停滞不前。这又是怎样的一种不可避免的惨剧。</p><p>或许你没有想象中那么能干，欲望也没你想象中的那么多。但是，追求并且呈现内心深处真正想要的东西并不是什么可作为逃避的理由与借口。身边有这样一群人，时时刻刻想着把自己此刻在做的或者是此刻想说的都慷慨地暴露在大众面前，显得自己跟得上外面早已是难以捉摸的生活节奏，这样掩盖内心真实的虚伪与无能，告诉大众自己在吸收经验正在“成长”变得“成熟”的道路上前进。这真的是你想要的生活状态吗，还只是自欺欺人的把戏罢了。许多这样的人们为了外在的安逸与得体，不得不向外界妥协，展现那看着令人别扭不堪的所作所为，这样可不是真正的自在，只是毫无尺度地展示虚伪罢了。这样的人又如何获取真正的欢乐与自由呢。要知道，真正的自由可不是处于所谓的思想“成熟”及处于衣食无忧安逸度日的状况下的，而是面对人间的问题与困惑依旧可以赤裸裸且不失纯粹地脱离出来的。别再去拿什么“成长”的字词去敷衍聊以自慰。</p><p>有那么一些人总是无所事事，沉溺于低级趣味，再去有意无意制造低级趣味。有时去探讨所谓的低级趣味，基于人各有异的差异性，所谓的“低级”“高级”倒也显得滑稽傲慢了。“真诚”正在变得稀有变得被一部分人唾弃，真诚被迫与无知年青挂钩，真正有益的良性发展空间正在被有意慢慢侵蚀。终有一天，这里会变成制造昏蛋的名副其实的工厂，或许早已是如此。社会中的各种乱象并不是一蹴而就的，而是随着时代发展的外在需求与外在变化源远流长并且不断变化着的。裹着理所应当的外表，却是虚伪难当的内在，理智的人们应当保持极致的理智。</p><p>我一直所认同的即是把生活变得简单，把自己变得单纯且聪明。唯有如此，我才会感觉自己还活着，并且活得多姿多彩。有时面对自己的内心，依旧有着可恨的恶习盘旋，有时面对生活中的人事，依旧不失虚伪不实的作词。我清楚的知道，这些东西我是难以摆脱的了。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爱情</title>
      <link href="/2022/03/02/%E7%88%B1%E6%83%85/"/>
      <url>/2022/03/02/%E7%88%B1%E6%83%85/</url>
      
        <content type="html"><![CDATA[<p>爱情，是个老生常谈的话题。这样特殊的感情与亲情、友情相较却有着深刻的致盲性与欺瞒性。</p><a id="more"></a><p>无论是现实中还是书本中，总有着痴情苦笑人。一梦繁华，为佳人着迷，成就一段乱世绝恋，动人心扉，亦令人久久难以忘怀，时常不自觉流连忘返，时常向往美梦可再重演。一梦金秋，苦涩无奈的恋情也随着落叶缓缓飘零猛然散落，却不叫人深得释怀，但却落得个是为造化弄人，有缘无份，爱情的幻梦已然在此破碎。爱情像是被精心编织的美梦，人们总是带着侥幸与期待希望能在现实中去把梦实现。无人不知爱情的美妙，无人不晓爱情的魔力，脱离现实的爱情，这是怎样的一场人间悲剧。</p><p>爱情能给人带来极端的盲目性，人们乐意沉迷于覆盖着丑陋中的美妙虚幻中去，即便人们会认识到自己已然深陷这虚伪的一切，自欺欺人且依旧为此着迷。太多的书籍影视作品把爱情变得像是冠冕堂皇的谎局，实际上大多数真正的爱情，来去匆匆，转瞬即逝。爱情的概念是抽象模糊的，但也不得不承认，爱情的魅力是无穷的。</p><p>体验享受爱情带来的欣愉与感动，习惯性忘却在其中受到的冷漠与孤独，这是一种常见的乱象，甚至于叫人匪夷所思，不可思量。现实中所谓的的爱情与许多不可避免的因素及情欲相交杂，早已失去了应有的模样与姿态。或许也与人们处于当下的失落，常常习惯性回味过往时光中的美好时光以求自慰有着不可分割的关系，被描述出来的所谓的爱情早已变味变态。超脱于理智之外的爱情，在那样一段懵觉的热恋时光里，双方的弱点与恶习都可以被肆无忌惮地无视与原谅，但在激情过后的难以挽回的岁月里，所谓的爱情更像是一种为附和大众、安抚良知及避免谴责的习惯性行为。</p><p>时常被冠以“真爱”的爱情又是怎样的一种苦涩与身不由己的无奈呢。两个复杂痛苦的灵魂，被扣上外界胜付美名的至上之情，为了不负这纯粹高尚的爱情，甘愿为此将灵魂修修补补，到将死之至，自甘刻意去拾荒最美的感觉，以爱之名了却敷衍的一生。真是一场滑稽的错觉，可叫人醉生梦死的欺瞒体会。</p><p>对于那些仍旧抱有最为理想化的爱情观念的人们，无疑是幸福的，无疑也是最为痛苦的。被回忆被情欲所困，何尝不失为一种自解与自娱呢，面对早已面无全非、物非人非的苍白现实，或许能带来那么一丝丝的快乐与激情吧。</p><p>……</p><p>梦你。你变得沉默寡言，失去了往日记忆中那样的活力与生机。别让俗套的庸脂俗粉爬满你清纯无比的脸，就想此刻尽情与你激吻到忘乎所以。仿佛又回到那个阳光抚媚的午后，太阳光轻柔地照射在你脸上，而我红着脸从你身旁走过，紧张得不知所措，不想却成为了我一生最为难忘的美景。好想就此与你激吻到忘乎所以。</p><p>我又何尝不是这样的一个天真的昏蛋。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>年青的心</title>
      <link href="/2022/02/26/%E5%B9%B4%E9%9D%92%E7%9A%84%E5%BF%83/"/>
      <url>/2022/02/26/%E5%B9%B4%E9%9D%92%E7%9A%84%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<p>年青的心，应当拥抱良知，拥抱理想，心怀理想。凭借经验与智慧，不断改变认知，不附炎趋势，不固步自封。</p><a id="more"></a><p>何不去勇敢接触极致丑恶的人事，颠覆所有天真烂漫的想象。从此，把理所当然从内心深处抹去，大胆去猜疑：不过是野心家们的杀戮舞台。把极致的丑恶当作巩固曾经所向往的美善的肥料，坚定永葆积极的意志。不再因被开膛破肚手握仍旧活蹦肉跳的心脏而心悸，不再因被手持利刃缓缓割下头颅而害怕，也不再因善良无辜的人们被枪炮击杀直至脑肝涂地而怨恨…直到梦被迫破碎，去亲抚曾经那个在一旁胆小哭泣的自己，怀疑、迷茫、仿徨…直到灼热的良知将我唤醒，拥抱善良，拥抱希望，拥抱所爱。</p><p>何不先去盲目鲁莽地去探索深渊中的重雾迷蒙，去清醒认清所在的局势，直到探求已久的真相浮现在眼前。别再去为了曾经的幼稚而忏悔不已，别再因无知去犯下无可挽回的罪恶，更别再响应某种所谓的号召将自己迷失。需要坚定不移的勇气，更需要梦寐以求的更多的智慧，把曾经的美梦无限接近于现实去复现。心怀大爱，拥抱所有，拨开云雾即是那番柳岸花明又一村的风景。</p><p>何不去拥抱孤独，从此肆意掌握前进的风舵，找到自我，享受自我，沉迷自由。别再因欲望而沉沦，别再因愚昧而忏悔，更别再因麻木而迷失。否定绝对以及纯粹，正视且接受一切的不完美，拥抱残缺，充实自己。</p><p>野心家们，别再因可笑的情结把人们当作可有可无的附属品，别再让炮火连天、无家可归的惨剧在今日再次重演。停止你们欲盖弥彰、华而不实的句词，去真正体恤人们的疾苦，别再让可怜可悲的人们流泪。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自白</title>
      <link href="/2022/02/20/%E8%87%AA%E7%99%BD/"/>
      <url>/2022/02/20/%E8%87%AA%E7%99%BD/</url>
      
        <content type="html"><![CDATA[<p>话语是误会的根源，却又不能什么都不说。</p><a id="more"></a><p>“玫瑰花，你看她娇艳动人，却浑身长满了刺，为了不叫人轻浮，总是那样自相矛盾着。去观察她的行为，而不是注意她的言语。我那时太年青，不懂得如何去爱她。”</p><p>面对这样一朵玫瑰花，我吐露真诚，倾我所有，只为她能为我卸下盔甲、抛却佯装，只为我一人所折服。拥有这样一朵独一无二的玫瑰花，我们可以相拥而眠，却发觉她依旧不安的心，激情过后我冷漠地将她抛弃，为了不让内心受到应有的谴责，将过错全部推予她，再自认为潇洒地离去；拥有这样一朵独一无二的玫瑰花，我时时刻刻把她捧在手心，整日小心翼翼担心吊胆，不愿让她受到一点儿委屈，即便有着一条怎么也跨越不过去的鸿沟，也不愿让她因生活琐事而苦闷，宁愿做个苦笑颜开的小丑。失去这样一朵可爱可怜的玫瑰花，我深感自责，无时无刻不在为自己犯下的罪而忏悔；失去这样一朵玫瑰花，我心心念念的玫瑰花，却不过是虚幻泡影中最为美好的想象；失去这样一朵玫瑰花，即便我想交心予她，她却依旧保持高傲的姿态，从未向我展现那会让我魂牵梦萦的笑容…痛苦让我清醒，把无奈交给世间早有的“缘分”，从此去尝试着学会变得洒脱自如，刻意让自己不困于情。</p><p>时常会有这样一个梦：我拥有这样一朵玫瑰花，我们在白昼时分耳语交融，身旁有彼此便感到心安，午夜时分缠绵相拥，缓缓入梦。在春分时期，一同去感受春意盎然；在炎炎夏日，一同去观赏晴空万里；在静默深秋，一同心照不宣静安心；在呼啸寒冬，一同沉醉于屋里热气腾腾的美好时分…去观潮起潮落，去赏日起日落，携手向白头。</p><p>“你应该…你不应该…”</p><p>到所谓的现实生活中去磨练，将你本性中的激情强压到最底层，去迎合可能会出现的出其不意，去学会伪装，去学会管理，去学会模仿，再去将自己迷失，陷入常伴的痛苦中去。</p><p>不愿，不愿失去这样天真敏感的自己，也不愿变得麻木，更不愿失去会做梦的能力。迷茫，却也不过是为生存所作的措辞。无感于浮华世间的富贵与奢靡，更不屑于随波逐流的潮流。到头一梦，万境归空，做一个书呆子不好吗。何苦要拿生活中所受的苦，去把那样美好的自己丢失呢。</p><p>“这虚伪的人类社会，为了人间的宏伟，至上的欢乐稀薄得像空气。”</p><p>不要再去为了某种刻意去漂泊去奔波，直至到了那样预想中的无可挽回的境地才知后悔。人的一生总会有一时的堕落时光，何不乐在其中去，在此真正询问自己的内心，寻求迷失已久的答案，让自己活得更为通透些。</p><p>好想随心所欲，在不再自困的前提下，却又矛盾的享受自困的感觉。</p><p>心浮气躁，再而三地将《瓦尔登湖》与《小王子》阅读了一遍，本文基于此。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>真正的自由</title>
      <link href="/2022/02/19/%E7%9C%9F%E6%AD%A3%E7%9A%84%E8%87%AA%E7%94%B1/"/>
      <url>/2022/02/19/%E7%9C%9F%E6%AD%A3%E7%9A%84%E8%87%AA%E7%94%B1/</url>
      
        <content type="html"><![CDATA[<p>被爱包围，从此获得至上的快乐。</p><a id="more"></a><p>别怕，还有什么值得害怕。挣脱思想的漩涡，泥沼涅槃重生，要飞，忘我无目的地飞，在此刻获取真正的自由，要如何去形容这样无以言表的感觉。</p><p>今夜，再一次找寻回自我。</p><p>……</p><p>去淡忘所有的不甘与悲伤，善待总也挥之不去的丑恶，变得清醒且盲目，真正摆脱在世间的忧愁，再也不屑于去谈论什么对与错，追究什么贻笑大方的真理，也不再自甘向世俗成见低头，就此一意孤行触摸久违的自由。</p><p>不惑便是真正的自由。无关责任，无关贫富，也无关是否存在。过往的一切，喜也好，哀也罢，都不过是夜晚时分筑梦的材料。活力从内心深处喷涌，感到难得已久的心旷神怡。</p><p>变得纯粹，获得新生。不再局限于这早已坚不可摧的牢笼，也不再理会这根深蒂固的成见，就此挟着自我达到忘我。</p><p>唯有维持这真正的自由，沉醉享受在那无边无际的天空自由翱翔，才能逃脱这条被精心设计的荆棘之路。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>成见</title>
      <link href="/2022/02/15/%E6%88%90%E8%A7%81/"/>
      <url>/2022/02/15/%E6%88%90%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<p>人们总是妄想摆脱成见，却又不断制造新的成见。</p><a id="more"></a><p>有时会在想，读万卷书，行万里路，真的能摆脱世俗的成见吗？这个提问或许本身就是一种成见。从小耳濡目染接受周围环境人们给予的成见，再去有意识的通过学习、模仿、思索制造成见，在某一时刻，抛却旧的成见，制造新的成见，这便是一种悲哀吧。</p><p>人们冠名为“成长”，本质却不过是阅历与经验的积累所导致的成见变化罢了。何为真正的“成长”？我想这个词本身就值得去质疑，再去与“成熟”联名，这个形容总是感觉词不达意。这个现实社会要求有手有脚的人去自力更生，要求生活必须与工作挂钩，要求去为人类大家庭做出奉献，再去灌输实现自身价值理想的正面观点，这便是最为熟悉不过的世俗成见了吧。这种类似的成见是伴随着我们生理成长而积累的，并且是根深蒂固动弹不得却也毫无意识到的。我依旧能感受到在从前大学毕业之后所陷入的焦虑无力的感觉，这样的成见无不再时时刻刻去要求我做些什么，要求我不再去自甘堕落，要求我去为社会为自己为父母去正面应对独自生存的问题。成见，便是人痛苦的根源。</p><p>有时能意识到这些个成见，却也不再那么痛苦了。人，既然会有痛苦的时候，就应该去沉迷、感受于这种痛苦，去仔细体会这种痛苦带来的身心不适，继而再去解析背后的本质，而不是被这种情绪所吞没，更不应该迷失在痛苦的无尽边缘。可悲的是，现实总是那么不尽人意的。</p><p>成见能为社会带来稳固，却也能给生在其中的人们带来无止境的痛苦与空虚。生活中的常态是：人们一面去应付成见带来的负面影响，一面又在感受甚至于享受成见带来的正面影响。然而，人只有抛弃当下的成见，才有可能获得当下暂时的心安理得，才有可能迎来新生。在每个人的人生中，这是一个反反复复的过程，谁也无法避免。有时，“个性”不过也是自我成见的代名词罢了。谈到这里又联想到所谓的“成长”与“成熟”了，自我成见其实也是脆弱不堪的。在现实中，除了明面上所规定的条规制度之外，许多问题几乎是没有准确的答案与明晰的界限的，只能通过自我成见去慢慢消化。人，无法摆脱各种现实因素的干扰，基本上也就不存在真正的“个性”了。</p><p>许多在人世间中的字词形容，更像是一种可见的无奈，因而导致词不达意是常态，只可意会不可言传在这时却是最为恰贴不过的了。</p><p>“纯粹”不再存在，是一种痛苦，也是一种不完美。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两个思索</title>
      <link href="/2022/02/13/%E4%B8%A4%E4%B8%AA%E6%80%9D%E7%B4%A2/"/>
      <url>/2022/02/13/%E4%B8%A4%E4%B8%AA%E6%80%9D%E7%B4%A2/</url>
      
        <content type="html"><![CDATA[<p>今天想谈谈一些想法，反思最近一些事情，还是有些收获。</p><a id="more"></a><p>就在刚刚了解到自己怎么的就突然缺乏自信心了…我亦是感觉到莫名其妙，同时亦感觉新奇不已，我这人可是一直爱盲目乐观，爱盲目自信的啊。</p><p>缺乏自信的第一表现即是遇到生活中的种种挫折就想着逃避、想着后退。这个问题好像困扰我许久了…不知何时开始，我遇到一些挫折就不愿去直面应对，从而用各种理由与说辞说服自己去后退去接受这样的现实，这可是一种潜移默化的被慢慢缺乏自信了啊。幸好意识到这样的问题及时，否则会耽误我多少正事啊，不然我又将陷入孤立无助的无尽深渊中去…想想就觉得后怕。</p><p>值得思索，也值得警醒。或许是在满怀信心去做某些事情却频频遭遇失败继而引发自我怀疑所导致的后果吧，这种感觉可是在刚大学毕业那会极为强烈，那时的我差点没缓过来…如今再去依稀审视，除了感觉害怕却也只剩后怕了。一时一刻的缺乏自信会导致潜意识下的连锁反应的，继而导致一事无成，这样的状态持续加重不仅仅是会导致身心不适引发自我否定，还会导致陷入长时间的悲观失望的状态中去。最为可怕的是，本身很难去意识到自己正在沉沦于这样的生活状态。</p><p>联想到一些片段，我想除了缺乏自信会导致陷入麻木中的迷茫之外，各种不同的状态不也是如此吗。在认清生活的真相之后，反而也引发对各种事情的怀疑与思索了。在以某种无我状态去投入某件事之后，却也以这种状态去面对生活中大大小小的人与事了，这样去解释“潜移默化”，我想再也合适不过了。可悲的是，人很难去时时刻刻认清自身的状态。</p><p>最近在过年期间参加了一场相亲。如今在此时此刻再去回味，只是感觉像是做了一场梦，我现在已经是梦醒时分的状态了。去回忆这场相亲中的点点滴滴，我反而更为忌惮其中掺杂着的各种复杂的人事关系了。早已变味变质的情感被精心设计安排，我不但未感觉不适，居然感觉到新奇，更多的却是一种想看好戏的好奇心理，有时吧，却也告诉自己，这只是被人为设计的邂逅罢了。</p><p>好的姻缘吧，我想在一开始不会让人感觉到痛苦的吧。面对现实中的不良风俗习惯与不良风气盛行，我差点就让自己妥协了。曾经体会到两情相悦带来的妙不可言，我又如何去说服自己去接受这些“邪风歪气”呢。面对一个非两情相悦的场景亦或是单相思的人，又如何会有想去赴汤蹈火，在所不惜的欲望呢。好不容易会意到洒脱的真谛，思索到了其中的玄机，我又如何说服自己去回头呢。</p><p>别去丢失自我，亦别失了分寸才好。情，固然妙不可言，固然可叫人生死相许，却亦最难阻止自己去“发情”。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>囚</title>
      <link href="/2022/02/12/%E5%9B%9A/"/>
      <url>/2022/02/12/%E5%9B%9A/</url>
      
        <content type="html"><![CDATA[<p>迷茫，还是迷茫。快乐，倒也快乐。永远也无法逃脱“囚徒”的命运。</p><a id="more"></a><p>到底什么才是内心真正的富足呢？有时沉沁在书海里不问世事，尽量用音像去填补剩余的空虚，久而久之，去发掘所谓的新奇倒也有些腻烦了。去寻求这世间情爱，去体验更多的喜哀，丰富所谓的人生吗…只是感觉无趣且后怕。去无奈接受这变质的情感，说服自己去妥协接受去感受，别扭别扭还是别扭…心神不安，又去如何感受这样的情感带来的片刻美妙，没有准备好迎接这一切的到来，不想去面对现实的冰冷，此时此刻，好想变成一棵树，去与自然作伴，去与鸟儿交耳，去感受阳光的慰抚，也去感受寒冬的侵蚀…</p><p>我在想，这世间所谓的内心的富足是否就是一种麻痹自我意识的妥协与自我敷衍呢。去选择一份发自内心热爱的事业，去感受其中带来的快感与快乐，但到梦醒时分却一样感到无力迷茫，恍惚一生，碌碌无为去换取短暂的心安，这便是人生的煎熬罢。一味尝试着去通晓万物之理，去体会其中的妙不可言，去获取其中带来的欣愉，沉醉在那样不能言语的美梦中去。</p><p>…</p><p>嘴角带着微笑，去接受自然的馈赠，去欣然接受未知的安排，去幻想体验新奇又神秘的未来。去攻克艰难，去获取快感，再次沉醉于当下会即刻消逝的美好感觉。在身心痛苦时想起这时的美好，在美好时分去忘却所有忧愁，活得个干净利落，活得个有血有肉去体会世间所有的有情有义。</p><p>去细腻入微感受字间的温柔，去触碰抚摸体会周围的生意，去构造、沉醉在那无以言表的深远意境。那是我的温柔乡。</p><p>人生，是两个极端：喜与悲。是四种味道：酸、甜、苦、辣。</p><p>嘘～别再多言，去倾心体会。对，去甘愿做个乐在其中的“囚徒”，去甘愿做个悠然自得的痴子，去甘愿做个清醒自扰的庸人。去发掘，去感受，去体会，去忘情麻醉、沉醉…反反复复，乐此不疲。这就是我想要的人生。</p><p>喂喂～别深陷其中无法自拔，毕竟谁也无法免俗。</p><p>言毕…2022年估计又能敷衍过去了，嘿嘿～</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦</title>
      <link href="/2022/02/03/%E6%A2%A6/"/>
      <url>/2022/02/03/%E6%A2%A6/</url>
      
        <content type="html"><![CDATA[<p>让梦穿梭于现实，构造绚丽多彩、多式多样的浮想连篇。害怕梦被惊醒，无助无力于幻梦破碎之后的狼藉。多想这都是一场梦。</p><a id="more"></a><p>一场梦，我游离在每一帧的翻篇，只是感觉苍白。看着来来往往的行人说着笑着喊着，望不见它们的脸，如同幽灵浮光掠影，于我沉沁这好不真实的感觉，给我的第一感觉：这是梦，这都不是真实的。我方才后怕起来，我究竟在所谓的现实还是在梦里，我惆怅，我迷茫，我惊惶失措…</p><p>害怕，害怕每一场梦的发生，潜伏在背后的灾祸正在虎视眈眈望着这样悠然自得的我们，美好在此刻破碎，这样活着这样游离着，终点和出口在哪呢…</p><p>肌肤的刺痛让我清醒，这也是现实，我是这浮华世间的一员。我是病了吗？这是不是属于某种精神病的症状？这世间命运的枷锁让我深陷囫囵，这世间所谓的温情让我沉溺迷恋，以前那般闲情逸致又浮现在眼前。如果这是所谓的代价，如果这是所谓的责任，如果说不过是还没有适应，这种感觉真的是生不如死。但我贪恋，贪恋可能即时出现的美好，贪恋又一场场能拨动心弦的美妙梦境，我贪婪成性，贪婪能在那样的梦里继续游离，没有目的，抛开一切，去踏上曾经以为的那条无尽之路，在这条路上，我满心欢喜，从未有过的心旷神怡的感觉。在现实中，我发现我不自主的笑了。</p><p>去说去做去讨好你曾经讨厌的一切，再去把自己撕的粉碎。去梦里寻求安慰，告诉自己：这都是一场梦。是啊，这都是一场梦啊，我扮演着不同的角色，我可以不看周围人们的脸色，也不必心有余悸的顾虑别人的感受，我悠然自得，我得意洋洋，我可以肆无忌惮的做自己…</p><p>多想这都是一场梦。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>膈应</title>
      <link href="/2021/01/30/%E8%86%88%E5%BA%94/"/>
      <url>/2021/01/30/%E8%86%88%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<p>总是会因为某些原因导致自我怀疑，这个人类社会上，给人以显得多么微不足道甚至于可有可无的感觉。也总是会因为某些事情，与自我的三观产生冲突，与以往一般的，不断自我折磨，却也容易迷失自我。</p><a id="more"></a><p>前些时候甘愿沉沦于麻木不仁，最近也才发现好像只是因为懒惰和迷茫所导致变得消沉罢了。心境变得不再像在校园时候那般游刃有余了，自从出了校园之后，接踵而来的莫名其妙的压力时时难以挥去，挂在心头上，给人以难以言表的窒息感。是自我感觉到的太多了，还是这个人类社会要求一个所谓的成年人的约束太多了，实际上虽然均与以上两个方面都有或多或少的联系，但每次想到这些强制压在身心上的社会责任，精神世界里也如同被人铐上枷锁，想逃离却也无动于衷的无力感总是让人感觉不自在，继而数次影响到身边的人也是一种可数的悲剧。</p><p>不知不觉却又好似朦胧不清间，科比去世已有一周年了，且在去年的特殊时期，因为一种新冠病毒毫无征兆的爆发，使得整个国家处于水深火热之中。然而因为早期一些政府官员的隐瞒，导致如今过去虽已有一年，如今全世界却也难免逃脱于这种病毒的折磨。在过去的那一段难熬的日子里，有无数无辜的死难者被丢掉宝贵的性命，本该在这数字翻新的一年里为这些人们给予哀悼与同情，但如今的人们却倾心于戏子与小丑的家事，并且在哪里都是津津乐道，好似过去的一年里那些无辜死难者都是罪有应得，都是命里该绝。人们倾心于被设计好的国泰民安里，依旧不忘游山玩水，不忘侃侃而谈那些过往本该可悲可泣的人事。不得不让人感觉到后怕，即便也知道了那些可笑的把戏，不也眼睁睁看着周围的人们深陷其中，而自己却也动弹不得这样的局面。我感觉可悲的同时也不忘羞耻，甚至于无地自容，要我与这些人为伍。</p><p>或许每个时代都是混乱的时代。在当今这个互联网发达的网络时代，即便也伴随着各种见不得光的隐形限制与约束，各式各样的人均可在网络上畅所欲言，即便强制性的实名制发言，人们依旧可以不负责任的表达内心的虚伪。人们沉沦与利益，却也不忘在这个早已糜烂不堪的地带展示一下自我内心的丑恶人性，因为这些人有意识的横冲直撞，如今这个本以七零八落的社会变本加厉朝向更为悲观趋势发展，社会价值观被有意操控，道德风气使得人心惶惶，无数从小怀着美好人生愿望长大的一批又一批的年青人们被迫迷茫，被迫接受这样的可悲现实，继而要求其中大多数变成身心上的平庸世俗之辈碌碌无为过完“平凡一生”。人类历史生涯乐此不疲，生生不息，像野草一般，春风吹又生。我感觉不幸的同时亦感觉有幸去清醒的认识这个早已根深蒂固的社会结构体系，即便我也无能为力。</p><p>我是否过于悲观，是否过于敏感了，即便我生活在这个社会环境当中，也知道这样的结构我难以甚至于无法去改变一丝一毫。坚持着去感受更多的身边遇到的美好的人与事吧，我会有那一天，我想要的答案会清晰地跃然在此。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>熟悉的厌恶</title>
      <link href="/2020/12/28/%E7%86%9F%E6%82%89%E7%9A%84%E5%8E%8C%E6%81%B6/"/>
      <url>/2020/12/28/%E7%86%9F%E6%82%89%E7%9A%84%E5%8E%8C%E6%81%B6/</url>
      
        <content type="html"><![CDATA[<p>些许日子没上来矫情发泄，在这深夜想着来记录一下这段时间里的感受。</p><a id="more"></a><p>如今写这些东西没有从前那般自然而然去倾诉了，有时突然的想去记录一下当下的感悟，但直至在打开电脑的一瞬间又开始感觉矫情了，慢慢的，变得不愿去公开谈论自己的内心，甚至于很享受这样的自我囚禁的状态，其实这种情况早已存在许久。越来越少的去写这些所谓的人生感悟与所谓的人生成长记录，我的生活本来也是一团糟，愈发倾向于混吃等死的人生理想了。但我同时居然也沾沾自喜起来，我还是如从前那般敏感与自我真实，我也感到庆幸，关于在百无聊赖的时候去选择阅读，暂时性的在书本中脱离现实，同时也会意外的发现一些情投意合的观点与新颖的认知思考，对我来说实在是一种再好不过的虚度光阴的方式了。</p><p>最近喜欢上了看戏和小说。这里说的戏更像是反应世俗之见与剧本演员本身不漏明显的破绽，并且富有那么些戏剧性以及内涵的电影。而关于小说，从前的我不爱看小说这一类的书籍，甚至于爱加以讽刺自以为是的小说模式，时常在内心暗自贬低。但是自从我看到了&lt;人间失格&gt;这本自述体小说，让我看到了许多真实的场景，常常不自觉的在脑海浮现自身与书中情节相似的人生经历，也常常引发我对过去以及现在的思考。我发现，原来这样的第一人称的自述体小说也可以让我像着迷于文学哲学一样的，不时的兴奋，不时的清醒。直到现在，我又迷上了&lt;月亮与六便士&gt;，同样也能看到自身的许多自身的影子。坦白从宽的交代，从前那般的讨厌小说，其实也不过是自身孤陋寡闻导致的偏见罢了，也只是被专项引导产生的偏差所产出的错误认知罢了。如今也发觉，不是所有的小说都是如同如今电视上的国产烂片一样令人作呕的，即便如此，有些国产片也是非常经典值得一看的不是。</p><p>来到父母这边两个月了，我亦是悲喜交加，“悲”更倾向于自身的胆怯与能力不足，还有一些难以避免的世俗之见缠身难以释怀。“喜”更倾向于能够无时无刻感受到所谓的人间温情，不时的能给人带来些许感动与温暖。我的灵魂认知其实大部分都是难以捉摸的，我如同行尸走肉，只是为了活着而活着，我不知道未来的方向，但也倾心享受于当下的安逸，我想这辈子我估计会一意孤行到底，落得个狼狈不堪，落得个应当活该，但我还是没有自我感觉无地自容的窘态，但世俗无时无刻不在纠缠于我，我亦无法完全去摆脱世俗，只好一边将就着，直到会有真正释怀、真正解放的一天。我始终相信，或许人这一生的最为值得可歌可泣的战争是与世俗的斗争，必定掀得腥风血雨。一场修行也罢，活在当下，随遇而安不失为一种自我嘲弄与自我妥协呢，又或许不失为一种闲情逸致呢。过于复杂也好，随性或许也不失为一种自我解脱呢。</p><p>唉，累了累了，今天就写到这里吧。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>外婆</title>
      <link href="/2020/10/30/%E5%A4%96%E5%A9%86/"/>
      <url>/2020/10/30/%E5%A4%96%E5%A9%86/</url>
      
        <content type="html"><![CDATA[<p>可悲滴人儿，只有感性时才发觉到自己原来还是个人儿。</p><a id="more"></a><p>今晚想起了去世已久的外婆，格外的想念。记得小时候去外婆家，每次都是大早上，骑着自行车，跟爹爹两个人沿着去学校的那条路一直到街市上，外婆外公家就在街市上开了家草药店。我的外公在我印象中一直是个风度翩翩，说起话来声音格外敞亮的人。那时小，每次去都会看到满是人山人海的购买草药的农家人，虽然门前声音嘈杂不堪，但外公的声音总是最清晰好辩的。我的外公很有谱很有气势，给人有股说不上来的威武霸气的感觉，所以小时候我很怕跟他说话，但是每次在我去的时候，他都会故意用手去抓抓我的腋下窝，但我因为很怕他，每次都是不敢笑，他就说我是个傻蛋吧，说着说着我也越来越害怕以至于想哭想逃离他的手掌心，而他因此也笑嘻嘻的，不过在我印象中，外公也是个不苟言笑的人，后来妈妈告诉我，他老人家年轻时是个干部，人有风度是在当地人尽皆知的事。</p><p>我的外婆，听我妈妈说，她老人家原来是个下乡的知识分子，后来嫁给了外公，再之后的事，妈妈也不多说了。我的外婆是个心地善良的女人，也是在当地人尽皆知的事，当初我的外婆去世摆戏台子时，居然有个老太太在台下一边抹起眼泪一边道外婆是个多么好的人啊命不该绝。外婆不喜欢打牌，从前打牌输了两毛钱，她老人家由此责备起自己来说道：两毛钱可以买一袋盐了。在这之后，外婆再也没碰过牌，她老人家是个念佛之人，在家里供着菩萨，每天都会拜一拜，在我模糊的印象中，她老人家从前好像给我买了个玉菩萨叫我戴着来着，因为我嫌麻烦就放在家里没戴，如今也早已不知去向了。外婆是06年去世的，依稀记得来到外婆出殡的那天，舅舅哭得还躺在床上抽搐，床边就是他的两个姐姐在抹眼泪，也就是我的妈妈和姑姑。这成为了我一生难忘的画面之一。外婆去世出殡那天，我和爹爹依旧骑着自行车赶着去那个草药店，那时的我的心情依旧还记得，我更多的居然害怕见到我的妈妈。来到那个再也不能再熟悉的房间，舅舅躺在床上，妈妈抹着泪跟我说：俊阿，婆婆死了，婆婆死了嘚…我那时也泪如雨下，不断哽咽，其实也不知是因为外婆的离世，还是因为此时此景的渲染导致的，但那时的感觉我一直都有着身临其境的情结，如今此时此刻想起不禁眼眶也快湿润起来。</p><p>小时候每次来到外婆家，在平时跟家里的爹爹婆婆生活习惯了之后，突然要来到这里玩两天(那时一般是放假或者是周末去呆上几天)，居然在爹爹离开之时感觉到非常不舍，感觉外婆家好陌生，特别是二楼曾经舅舅舅娘的新房，里面虽然有很多曾经小表弟看过的奥特曼影碟片，我因为害怕被外婆外公发现，每次都不敢上去，而且二楼因为打扮清凉，空间很大，一到晚上灯光阴暗，我更加害怕上楼去了，如今想起依稀感觉到一丝凉意在心头…我原本是个非常胆小的人，很怕鬼，如今本质依旧如此。不过我还是为了看奥特曼，每次偷偷的上去把小表弟的奥特曼碟片插放在裤袋就急急忙忙一边往后看一边像兔子似的往楼下冲，怕鬼啊…真的怕，下楼之后还得装出一副没事的模样，以便更好的把好不容易到手的奥特曼碟片带回家去慢慢赏析，下次再来时再换新的，以此反复有多次了，带回家之后我能看个好些遍不觉得腻歪，当个宝似的供起来，生怕把碟片弄坏了不好对外婆那边的小表弟一家做交代。哈哈，如今想起甚是感觉滑稽不已。</p><p>在周末尾了，外婆要送我回家了，有段时间因为我没有自己的自行车，是坐着爹爹的自行车的前座来的，所以那时回家的时候只能走回去。外婆送我走小路，走到三分之一还多点的路吧，外婆才愿意慢慢的让我自己走回去，在这之前我一直叫外婆别管我了，叫她老人家快回去，因为那时也是吃了晚饭才回去了，所以天色也不算是很早了。只是记得她老人家的身影，随着我走的越来越远，她的身影亦越来越小了，但依稀记得每次回头望望她老人家还在不在时，她老人家还在向我招手，好似在告诉我慢慢走，婆婆还在呢。直到拐弯看不见外婆的小小身影了，我也大步向家走去了，也不知外婆是否还在张望着呢，她那可爱又可怜的小外孙。今夜写下这小段文字不禁让我愈发伤感，眼眶眼泪在打转，憋憋气，硬是没让流下来。</p><p>听说原来外婆在世时，外公跟外婆吵架，外公一气之下把外婆膜拜多年的菩萨像给打碎了，我听到这个消息时，顿时感觉心如绞痛，外婆一生清清郁郁，平时只爱拜祖求香，她老人家当时一定非常伤心吧。不明白，在外婆去世出殡的那一天，外公躬下腰来欢迎领导还一边道自己的老婆死了的情景，我如今依旧难以忘怀。还有，还有外婆那小小的身影，我每次回头回望时的招手，也是我一生难忘的画面。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反省</title>
      <link href="/2020/10/19/%E5%8F%8D%E7%9C%81/"/>
      <url>/2020/10/19/%E5%8F%8D%E7%9C%81/</url>
      
        <content type="html"><![CDATA[<p>浑浑噩噩过了这么久，还是漫无目的。</p><a id="more"></a><p>没想法没目标，生活过得很麻木，但也算不上糟糕。来到这个已度有半生时光的地方倒也可以以陪伴父母为借口许得个心安理得，想来倒也觉得讽刺，曾经一直嗤之以鼻的东西，如今不也让自己无地自容。仔细想想，其实自己或许也只是在逃避罢了。</p><p>一直以来，当自以为认清生活的真相之后，却也变得自私自利并且麻木不仁了，时常感觉生活没意义并且缺少激情，甚至到有了想一去了知的想法。一生仅为苟且偷生，顿时感觉受不了这样的煎熬，一直以来可笑的自尊心让我感觉为这番活着过于无趣。但，又时常再想，这是否又是一个可作为逃避理由的铺垫呢。只是发觉自己变得迟钝了许多，没了生活的动力之后，如行尸走肉一般了。总是那么个想法：死就死吧，烂命一条！</p><p>有那么一句话：好死不如赖活着。这句话倒给了我一丝想下去的欲望…是啊，活下去体验更多自己的人生其实也挺有意思的，毕竟做为一个有自我意识的生灵，我还是想以第一视角多看看以后自己会变成什么样的。在家里待了大半年了，人也愈发消沉了，对什么都不感兴趣了，却也想着每天按时吃饭以便好赖活着，这段时间里接触了不少游戏作品，没想到催生出了一个为体验到更多有趣游戏为未来目标赖活着的理由了。此时此刻想起倒也觉得有那么一些任性了，哈哈哈，却也想苦笑自嘲一番了。</p><p>好些时间没在深夜写这些东西了，现在倒也觉得舒畅了不少。自从月初抱着帮忙父母以及混日子的心态来到这里之后，天天跟着这群最亲的人有说有笑，如今再跟老母亲老父亲沟通交流之后，心境也越来越开朗开明一些了。但说真的，曾经自己一味跑到北国读书，每次离家都让老母亲一把泪一把鼻涕的，哭得那么伤心的，如今想起却也忘不了当时的伤感。我的老父亲想着再拼几年退休之后到仙北的小区当个保安欢度余生作了，唉，想想也觉得自己多么混蛋了，我的老父亲太过于人情世故了，但我却没有活成他们期许的样子，至少是个像样点的工作。老父亲的心境较从前平稳了许多，或许是老了，心中的那股劲儿暂时使不出来了罢。老父亲也真的老了。</p><p>来了半个月了，偶然发现店后边堆积如山的衣服，这是我在这里从小到大从未见过的狼狈，老父亲何时受过这种气？如今学生足不出户，小手指点一点，手机购物一站式服务到家，早已普及到家家户户所学校了，不得不承认，实体店还是受到了不小的冲击的啊。不过看到慢慢年老的父母，心里真的不是滋味，从前他们意气风发的身影依旧不无时无刻在我脑海里返现，人啊，不服老不行啊。但，我那老母亲依旧是充满着少女气息的模样，时而古怪精灵，时而深沉作语，不得不让我感觉惊喜。我的老母亲真是一个好人，也是一个知性的女人，论性格，这辈子就我所认识的所有女人堆里我最满意之一也包含我的老母亲了。</p><p>回到正题，如今的我，状态正慢慢回归到从前所谓的“正轨”上了。有时看到年老的父母干的那么辛苦，唉，心里很不是滋味。如今走上了考公的不归路了，想来也是讽刺啊，但想法也今非昔比了，何必纠结于那些东西呢？不过是幼稚的执念罢了。从前一直不愿进体制工作，如今想着，都选择了赖活着了，既然生活重心不愿放在工作上，那就不如找个有保障的工作好死赖活着吧，总会有一些期许和未来可期的目标的吧，不然真的活得真的太无趣了。</p><p>写到这里也该作个结尾了。说真的，面对父母，我亏欠了他们太多了，我几辈子估计都还不完。真的希望你们健健康康的，再多活个五十年，体验以后更多各式各样的生活，好好的去见证你们菜鸟儿子的成长吧。我啊，也差不多该好好解决工作上的事了，别让我老父母瞎操心了。不过对于结婚这件事，我还真没多余的打算，一个人过着不也挺舒服的，何必过那种夫妻面对面的生活，我这人孤僻习惯了，想想那样的生活，我顿时感觉不自在了，罢了，随遇而安安放处理之。</p><p>今天因为一直很郁闷的心情，火气突然上来把我那可怜可爱的小侄子以自己的方式教训了一下下，唉，今天一天的心也是浮躁不已，希望好好安放一下作罢。毕竟新的目标才刚刚浮现，但要做的事确实也有很多要去做。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小黑屋的猜想</title>
      <link href="/2020/09/02/%E5%B0%8F%E9%BB%91%E5%B1%8B%E7%9A%84%E7%8C%9C%E6%83%B3/"/>
      <url>/2020/09/02/%E5%B0%8F%E9%BB%91%E5%B1%8B%E7%9A%84%E7%8C%9C%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<p>最近在观看一些人性生理的视频之后，有了一个猜想：即若是人生来关在一个与世隔绝的地方(我暂且把这地方比喻成一个小黑屋)，但这地方除此人之外别无他人以及任何现代设施，一切保持原始的自然模样。那么，这个人的最终思想会发展成什么样子？</p><a id="more"></a><p>于我而言，以我为出发点的，言不由衷的想到两性关系的现实现象。总是因为为了解决一系列的需求而去接触一些相关的知识，从而满足好奇，亦或者是说为了填补无处安放的欲望空洞。比如为了解决性生理需求，面对异性时，久而久之居然会出现所谓的“邪淫”残影。对于这种情况，总是会有一番“欲求不满”“走火入魔”的说辞，但也显得无力且荒谬了，不妨直接称之为世俗之见。从而我将其放大至整个人际社会，一切很多的情况却与之可相提并论。那么，如果一个人从出生以来便与世隔绝，会发展成什么样呢？这时不免想到“人之初，性本善本恶”的命题，但在我的这个猜想里，这样的命题更像是一种伪命题，因为我所探究的、想要获取的答案里远比这个命题更有开放性以及鲁棒性。</p><p>不得不说，如今的人们都是因为在接触人际社会这个群体，不断获取亦或者是刷新自我认知的一个过程，从认知到学习模仿，进而不断积累形成自我意识的一个思想成长过程。如果抛开这一切，回归到比原始社会更为清净的地方，没有其他动物所在，仅仅是一个可以让人衣食无忧的前提下，那么，一个人出生在这种地方，这个人会是形成什么样的思想思维呢？让我好奇不已。臆想到当初有过所谓的“狼孩”，但仔细一想，不过也是受到了生存环境的影响罢了，而我的假设，却只是在已有衣食无忧并且没有动物存在的前提下的“小黑屋”。当然，若是假设回到原始森林的人际社会，那么，人肯定会变得与野兽无异，当然，如今的这种社会确实也是如此…不过也是另一个话题了…</p><p>思量再思量，或许这种猜想只能永远存在我的猜想里了，我也根本想象不出答案。只能在此基础上再做假设，这个“小黑屋”的衣食无忧的资源是有限的，那么无疑这个人也会慢慢变成一个为生计而发愁的人。如果说，再以原有假设，源源不断的衣食无忧可提供的前提下，那么这个人或许只是被生理需求所支配的行尸走肉罢了？这样的说辞或许更为准确。联想到有时认为“文化”的存在是一种祸害，这样的想法或许显得极端了，一种存在的东西必然有两面性。</p><p>结论：会变成被生理需求支配的行尸走肉。但这样的生活在如今恐怕也是许多人的目标之一吧…但亦取决于个体罢了。仔细揣摩，或许很多的现存的一些观念以及精神文化，或许真的为人们塑造了更为多姿多彩的目标，正是如此，世界也变得绚丽多彩起来。</p><p>此时联想到自身进退两难的退意，显得有些另类了…或许，工作会给自身带来一定的安心，不谈周围世事人事束缚，至少也是为了自己能安稳的活着罢。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么样的自我</title>
      <link href="/2020/07/28/%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%87%AA%E6%88%91/"/>
      <url>/2020/07/28/%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E8%87%AA%E6%88%91/</url>
      
        <content type="html"><![CDATA[<p>妈妈有小病住院，在今日还动了手术，而我没有去陪伴她，下午兄长打电话过来，说妈妈哭了，感觉她心情很不好，我顿时也感觉自己的浅薄与可笑。</p><a id="more"></a><p>有时我一直以自我的要求去看待事物与周围的人事，并且一直以不拘小情来鞭策自己，但却面对于未曾结识之人的一丝情意与馈赠，一味的想着报恩抱德，平时也总是以“以德报怨”“有血有肉”来说服自己并且鞭策自己，不想如今面对于父母的大恩大德，我又是这般狼狈可笑的模样。</p><p>一面以所谓的自我来试图说服自己，又一面刻意抵制传统的会意，却不想啊却不想我那时刻躺在病床上无助且脆弱的母亲…我是个不折不扣的混蛋罢。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>医院</title>
      <link href="/2020/07/21/%E5%8C%BB%E9%99%A2/"/>
      <url>/2020/07/21/%E5%8C%BB%E9%99%A2/</url>
      
        <content type="html"><![CDATA[<p>今天爹爹身体不舒服，小爷请假和我一起陪同他老人家去了一趟市医院。</p><a id="more"></a><p>时隔差不多半年，从过年那段时间自己执意要回来，现今回去已是初夏了。回去的路上，一片生机勃勃的景象，春意盎然的一片绿油油，加以自然的点缀之下，但却与潮湿的空气以及村子里人气无处可寻的环境形成了强烈的反差。我最为难以忍受这样的环境，让人憋屈，无数次梦里出现的场景却展现在我眼前，让我难忘。</p><p>走进市区医院的大门，已是早上七点钟了。但在医院这个地方，依旧不缺少所谓的人气，至少在我进去到离开，人来人往一直都是络绎不绝的。其中的包括各年龄段的、各式各样的人，却做着同样的事：挂号、付费、检查。之后方才走上爬楼寻医的路。</p><p>这次去医院与以往不同，给我的感觉更为强烈，人的生命真的如草芥一般，太过于脆弱了，但相较于生命，其余在人世间的东西又有多重要呢。或许有吧，我也不愿再去多想。</p><p>今天有意无意望着爹爹，感觉他老人家还是长得跟以前一样，走路也是潇洒自如，但他老人家脱了帽子之后，却也少了些许过往那般的年轻的气息了…</p><p>愿家里的两位老人家长命百岁。也祝愿天下老人家老有所依，身体健康。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>什么夜什么思</title>
      <link href="/2020/07/21/%E4%BB%80%E4%B9%88%E5%A4%9C%E4%BB%80%E4%B9%88%E6%80%9D/"/>
      <url>/2020/07/21/%E4%BB%80%E4%B9%88%E5%A4%9C%E4%BB%80%E4%B9%88%E6%80%9D/</url>
      
        <content type="html"><![CDATA[<p>不明白且疑惑，在宁静的夜空下，居然再次泛起心里无数遐想，过去多时了。</p><a id="more"></a><p>想来却也觉得可笑，不过是一段充斥着百无聊赖的荒芜岁月罢了，一段所谓的网络情缘，我却为此昏了头，想想也觉得可笑。两头都是爱空想的幻想家，我一直以为自己无比理智，无懈可击，可在面对与感情，却也不过一盘散沙罢了。如今面对这样的结局，或许是冥冥中的天意？还是自古已有的报应？…我却也不好琢磨，只能责怪于那该死的机缘不对吧…但经过此次回望过去的自己，不妨也记得给那个女孩带来的巨大伤害，我却不以为然，这是对贸然开始的感情的惩罚吗，却也不过是为自己的罪行开脱罢了。呵，面对于如今自己这幅模样，慢慢的亦开始厌恶起来，我做的事太过分却不自知，唯有忏悔，唯有为自己的罪行不断开脱寻找借口罢了。</p><p>相较于这段所谓的网络情缘，却也不自觉的想偷笑。自己喜欢的究竟是什么，在最后也一览无余，我不过是一个污秽不堪的混蛋罢了。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenCV Python版本错误</title>
      <link href="/2020/05/28/OpenCV%20Python%E7%89%88%E6%9C%AC%E9%94%99%E8%AF%AF/"/>
      <url>/2020/05/28/OpenCV%20Python%E7%89%88%E6%9C%AC%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p>出现的错误描述：<code>cv2.error: OpenCV(4.2.0) /Users/travis/build/skvark/opencv-python/opencv/modules/imgproc/src/shapedescr.cpp:315: error: (-215:Assertion failed) npoints &gt;= 0 &amp;&amp; (depth == CV_32F || depth == CV_32S) in function &#39;contourArea&#39;</code>。</p><a id="more"></a><h1 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h1><p><code>OpenCV-python</code>的版本问题所导致，可适当将现有的版本进行降低再进行尝试。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> OpenCV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> OpenCV </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中导入包的问题</title>
      <link href="/2020/05/28/Python%E4%B8%AD%E5%AF%BC%E5%85%A5%E5%8C%85%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/05/28/Python%E4%B8%AD%E5%AF%BC%E5%85%A5%E5%8C%85%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>解决的问题描述：<code>ModuleNotFoundError: No module named &#39;&#39;; &#39;&#39; is not a package</code>。</p><a id="more"></a><p>在GitHub上下载的一段代码运行出现导入包的错误，如本身有个<code>code</code>的包，其中包含的函数我使用了<code>code.A</code>(代码import code.A)，结果出现了以下错误：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ModuleNotFoundError: No module named <span class="string">'code'</span>; <span class="string">'code'</span> <span class="keyword">is</span> <span class="keyword">not</span> a package</div></pre></td></tr></table></figure><p>后来在eclipse上重新新建了一个Python包，新建的包下边均会出现一个<code>__init__.py</code>，我把这个<code>__init__.py</code>复制了一份，粘贴在了以上出现问题的包中，发现可以正常运行了。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>新建一个<code>__init__.py</code>即可。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><a href="https://blog.51cto.com/2338053/1982977" target="_blank" rel="external">你所不知道的 【ModuleNotFoundError: No module named ‘’; ‘’ is not a package】</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python pip常用命令</title>
      <link href="/2020/05/27/python%20pip%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2020/05/27/python%20pip%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>最近使用的<code>pip</code>模块的简单记录。</p><a id="more"></a><h1 id="升级pip"><a href="#升级pip" class="headerlink" title="升级pip"></a>升级pip</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m pip install --upgrade pip</div></pre></td></tr></table></figure><h1 id="pip使用"><a href="#pip使用" class="headerlink" title="pip使用"></a>pip使用</h1><h2 id="pip安装包"><a href="#pip安装包" class="headerlink" title="pip安装包"></a>pip安装包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install 安装包名</div></pre></td></tr></table></figure><h2 id="pip安装指定版本包"><a href="#pip安装指定版本包" class="headerlink" title="pip安装指定版本包"></a>pip安装指定版本包</h2><p>指定版本，使用<code>==</code>操作符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install tensorflow(包名) == <span class="number">1.13</span><span class="number">.1</span></div></pre></td></tr></table></figure><h2 id="pip查看是否已安装"><a href="#pip查看是否已安装" class="headerlink" title="pip查看是否已安装"></a>pip查看是否已安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip show --files 安装包名</div></pre></td></tr></table></figure><h2 id="pip列出所有安装的库"><a href="#pip列出所有安装的库" class="headerlink" title="pip列出所有安装的库"></a>pip列出所有安装的库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip list</div></pre></td></tr></table></figure><h2 id="pip检查哪些包需要更新"><a href="#pip检查哪些包需要更新" class="headerlink" title="pip检查哪些包需要更新"></a>pip检查哪些包需要更新</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip list --outdated</div><div class="line">pip list  --outdated --format=columns</div></pre></td></tr></table></figure><h2 id="pip升级包"><a href="#pip升级包" class="headerlink" title="pip升级包"></a>pip升级包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install --upgrade 要升级的包名</div></pre></td></tr></table></figure><h2 id="pip-批量升级包"><a href="#pip-批量升级包" class="headerlink" title="pip 批量升级包"></a>pip 批量升级包</h2><p>借助<code>pip-review</code>进行包的批量升级操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install pip-review</div><div class="line">pip-review --local --interactive</div></pre></td></tr></table></figure><h2 id="可用的pip命令"><a href="#可用的pip命令" class="headerlink" title="可用的pip命令"></a>可用的pip命令</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">&gt;&gt; pip --help</div><div class="line"> </div><div class="line">Usage:  </div><div class="line">pip&lt;command&gt;[options]</div><div class="line"> </div><div class="line">Commands:</div><div class="line">install                    安装包.</div><div class="line">uninstall                  卸载包.</div><div class="line">freeze                     按着一定格式输出已安装包列表</div><div class="line">list                       列出已安装包.</div><div class="line">show                       显示包详细信息.</div><div class="line">search                     搜索包，类似yum里的search.</div><div class="line">wheel                      Buildwheelsfromyourrequirements.</div><div class="line">zip                        不推荐.Zipindividualpackages.</div><div class="line">unzip                      不推荐.Unzipindividualpackages.</div><div class="line">bundle                     不推荐.Createpybundles.</div><div class="line">help                       当前帮助.</div><div class="line"> </div><div class="line">GeneralOptions:</div><div class="line">-h,--help                 显示帮助.</div><div class="line">-v,--verbose              更多的输出，最多可以使用<span class="number">3</span>次</div><div class="line">-V,--version              现实版本信息然后退出.</div><div class="line">-q,--quiet                最少的输出.</div><div class="line">--log-file&lt;path&gt;          覆盖的方式记录verbose错误日志，默认文件：/root/.pip/pip.log</div><div class="line">--log&lt;path&gt;               不覆盖记录verbose输出的日志.</div><div class="line">--proxy&lt;proxy&gt;            Specifyaproxyintheform[user:passwd@]proxy.server:port.</div><div class="line">--timeout&lt;sec&gt;            连接超时时间(默认<span class="number">15</span>秒).</div><div class="line">--exists-action&lt;action&gt;   Defaultactionwhenapathalreadyexists:(s)witch,(i)gnore,(w)ipe,(b)ackup.</div><div class="line">--cert&lt;path&gt;              证书.</div></pre></td></tr></table></figure><h1 id="pip下载过慢的解决方案"><a href="#pip下载过慢的解决方案" class="headerlink" title="pip下载过慢的解决方案"></a>pip下载过慢的解决方案</h1><p><code>pip install 安装包名 -i 镜像源</code>，提升下载/更新速度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install django -i https://pypi.tuna.tsinghua.edu.cn/simple</div></pre></td></tr></table></figure><p><code>pip</code>镜像可选项：</p><ul><li><p>清华——<br><a href="https://pypi.tuna.tsinghua.edu.cn/simple/" target="_blank" rel="external">https://pypi.tuna.tsinghua.edu.cn/simple/</a></p></li><li><p>中科大——<br><a href="https://pypi.mirrors.ustc.edu.cn/simple/" target="_blank" rel="external">https://pypi.mirrors.ustc.edu.cn/simple/</a></p></li><li><p>阿里云——<br><a href="https://mirrors.aliyun.com/pypi/simple/" target="_blank" rel="external">https://mirrors.aliyun.com/pypi/simple/</a></p></li><li><p>豆瓣——<br><a href="http://pypi.douban.com/simple/" target="_blank" rel="external">http://pypi.douban.com/simple/</a></p></li></ul><h2 id="设为默认配置镜像"><a href="#设为默认配置镜像" class="headerlink" title="设为默认配置镜像"></a>设为默认配置镜像</h2><p>升级 pip 到最新的版本后进行配置：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install pip -U</div><div class="line">pip config set <span class="keyword">global</span>.index-url https://pypi.tuna.tsinghua.edu.cn/simple/</div></pre></td></tr></table></figure><p>此命令行对等于修改文件：</p><h3 id="window端"><a href="#window端" class="headerlink" title="window端"></a>window端</h3><p>在 windows 命令提示符（控制台）中，输入<code>%APPDATA%</code>，进入此目录<br>在该目录下新建名为 pip 的文件夹，然后在其中新建文件 pip.ini。（例如：”C:\Users\Administrator\AppData\Roaming\pip\pip.ini”）</p><p>在文件中填入以下内容并保存（可替换为上述不同的镜像地址）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[<span class="keyword">global</span>]</div><div class="line">index-url = http://pypi.douban.com/simple</div><div class="line">[install]</div><div class="line">trusted-host=pypi.douban.com</div></pre></td></tr></table></figure><h3 id="Linux-Mac："><a href="#Linux-Mac：" class="headerlink" title="Linux / Mac："></a>Linux / Mac：</h3><p>文件地址为 ~/.pip/pip.conf，其余相同。</p><h3 id="下载超时解决方案"><a href="#下载超时解决方案" class="headerlink" title="下载超时解决方案"></a>下载超时解决方案</h3><ol><li>网速波动影响，多次尝试可解决；</li><li>尝试切换<code>pip</code>源。</li></ol><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><p><a href="https://blog.csdn.net/TeFuirnever/article/details/90300861?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-10.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-10.nonecase" target="_blank" rel="external">python中pip安装、升级、升级指定的包</a></p></li><li><p><a href="https://blog.csdn.net/liangpingguo/article/details/105928401?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-6" target="_blank" rel="external">Python使用pip更新所有已安装包的方法</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/46975553" target="_blank" rel="external">pip下载python库太慢怎么办？</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python复习笔记</title>
      <link href="/2020/05/23/Python%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2020/05/23/Python%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>太久没动程序了，参加<a href="https://www.kaggle.com/c/competitive-data-science-predict-future-sales" target="_blank" rel="external">Kaggle:Predict Future Sales</a>，顺便将之前学的快速复习一下，在此做个摘抄笔记。</p><a id="more"></a><h1 id="Python-print-函数生成Loading…"><a href="#Python-print-函数生成Loading…" class="headerlink" title="Python print()函数生成Loading…."></a>Python print()函数生成Loading….</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>以下是 print() 方法的语法:</p><p><code>print(*objects, sep=&#39; &#39;, end=&#39;\n&#39;, file=sys.stdout, flush=False)</code></p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul><li>objects – 复数，表示可以一次输出多个对象。输出多个对象时，需要用 , 分隔。</li><li>sep – 用来间隔多个对象，默认值是一个空格。</li><li>end – 用来设定以什么结尾。默认值是换行符 \n，我们可以换成其他字符串。</li><li>file – 要写入的文件对象。</li><li>flush – 输出是否被缓存通常决定于 file，但如果 flush 关键字参数为 True，流会被强制刷新。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line">print(<span class="string">"---RUNOOB EXAMPLE ： Loading 效果---"</span>)</div><div class="line"></div><div class="line">print(<span class="string">"Loading"</span>,end = <span class="string">""</span>)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</div><div class="line">    print(<span class="string">"."</span>,end = <span class="string">''</span>,flush = <span class="keyword">True</span>)</div><div class="line">    time.sleep(<span class="number">0.5</span>)</div></pre></td></tr></table></figure><blockquote><p>来源：<a href="https://www.runoob.com/python3/python-func-print.html" target="_blank" rel="external">https://www.runoob.com/python3/python-func-print.html</a></p></blockquote><h1 id="help-函数显示自建函数说明"><a href="#help-函数显示自建函数说明" class="headerlink" title="help()函数显示自建函数说明"></a>help()函数显示自建函数说明</h1><p>看程序一目了然：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">least_difference</span><span class="params">(a, b, c)</span>:</span></div><div class="line">    diff1 = abs(a - b)</div><div class="line">    diff2 = abs(b - c)</div><div class="line">    diff3 = abs(a - c)</div><div class="line">    <span class="keyword">return</span> min(diff1, diff2, diff3)</div><div class="line">    </div><div class="line">help(least_difference)</div><div class="line">&gt;&gt;Help on function least_difference <span class="keyword">in</span> module __main__:</div><div class="line"></div><div class="line">least_difference(a, b, c)</div><div class="line"></div><div class="line"><span class="comment">#j加上函数注释</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">least_difference</span><span class="params">(a, b, c)</span>:</span></div><div class="line">    <span class="string">"""Return the smallest difference between any two numbers</span></div><div class="line"><span class="string">    among a, b and c.</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    &gt;&gt;&gt; least_difference(1, 5, -5)</span></div><div class="line"><span class="string">    4</span></div><div class="line"><span class="string">    """</span></div><div class="line">    diff1 = abs(a - b)</div><div class="line">    diff2 = abs(b - c)</div><div class="line">    diff3 = abs(a - c)</div><div class="line">    <span class="keyword">return</span> min(diff1, diff2, diff3)</div><div class="line">    </div><div class="line">help(least_difference)</div><div class="line">&gt;&gt;Help on function least_difference <span class="keyword">in</span> module __main__:</div><div class="line"></div><div class="line">least_difference(a, b, c)</div><div class="line">    Return the smallest difference between any two numbers</div><div class="line">    among a, b <span class="keyword">and</span> c.</div><div class="line">    </div><div class="line">    &gt;&gt;&gt; least_difference(<span class="number">1</span>, <span class="number">5</span>, <span class="number">-5</span>)</div><div class="line">    <span class="number">4</span></div></pre></td></tr></table></figure><blockquote><p>总结：<strong>加了注释的函数使用help()会展现说明(即函数本身注释说明)。</strong></p></blockquote><h1 id="max-函数调用自建函数"><a href="#max-函数调用自建函数" class="headerlink" title="max()函数调用自建函数"></a>max()函数调用自建函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">mod_5</span><span class="params">(x)</span>:</span></div><div class="line">    <span class="string">"""Return the remainder of x after dividing by 5"""</span></div><div class="line">    <span class="keyword">return</span> x % <span class="number">5</span></div><div class="line"></div><div class="line">print(</div><div class="line">    <span class="string">'Which number is biggest?'</span>,</div><div class="line">    max(<span class="number">100</span>, <span class="number">51</span>, <span class="number">14</span>),</div><div class="line">    <span class="string">'Which number is the biggest modulo 5?'</span>,</div><div class="line">    max(<span class="number">100</span>, <span class="number">51</span>, <span class="number">14</span>, key=mod_5),</div><div class="line">    sep=<span class="string">'\n'</span>,</div><div class="line">)</div><div class="line"></div><div class="line">&gt;&gt;</div><div class="line">Which number is biggest?</div><div class="line"><span class="number">100</span></div><div class="line">Which number is the biggest modulo 5?</div><div class="line"><span class="number">14</span></div></pre></td></tr></table></figure><blockquote><p>来源：<a href="https://www.kaggle.com/colinmorris/functions-and-getting-help" target="_blank" rel="external">https://www.kaggle.com/colinmorris/functions-and-getting-help</a></p></blockquote><h1 id="字符串易冲突点"><a href="#字符串易冲突点" class="headerlink" title="字符串易冲突点"></a>字符串易冲突点</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">What you type...What you getexampleprint(example)</div><div class="line">\'    ''What\'s     What's up?      </div><div class="line">\<span class="string">"   "</span><span class="string">"That's \"cool\" That's "</span>cool<span class="string">"</span></div><div class="line"><span class="string">\\   \   "</span>A mountain: /\\<span class="string">"A mountain: /\</span></div><div class="line"><span class="string">\n"</span><span class="number">1</span>\n2 <span class="number">3</span><span class="string">"1</span></div><div class="line"><span class="string">    2 3</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">hello = "</span>hello\nworld<span class="string">" 对等 triplequoted_hello = "</span><span class="string">""</span>hello</div><div class="line">world<span class="string">"""</span></div></pre></td></tr></table></figure><h2 id="str-split-相反对等str-join"><a href="#str-split-相反对等str-join" class="headerlink" title="str.split()相反对等str.join()"></a>str.split()相反对等str.join()</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">datestr = <span class="string">'1956-01-31'</span></div><div class="line">year, month, day = datestr.split(<span class="string">'-'</span>)</div><div class="line">&gt;&gt;</div><div class="line"><span class="number">1956</span> <span class="number">01</span> <span class="number">31</span></div><div class="line"></div><div class="line"><span class="string">'/'</span>.join([month, day, year])</div><div class="line">&gt;&gt;</div><div class="line"><span class="string">'01/31/1956'</span></div></pre></td></tr></table></figure><h2 id="str-format-多种展示方法"><a href="#str-format-多种展示方法" class="headerlink" title="str.format()多种展示方法"></a>str.format()多种展示方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#直接调用</span></div><div class="line"><span class="string">"&#123;&#125;, you'll always be the &#123;&#125;th planet to me."</span>.format(planet, position)</div><div class="line"></div><div class="line"><span class="comment">#切片调用，可配合运算符等</span></div><div class="line"><span class="string">"&#123;&#125; weighs about &#123;:.2&#125; kilograms (&#123;:.3%&#125; of Earth's mass). It is home to &#123;:,&#125; Plutonians."</span>.format(</div><div class="line">    planet, pluto_mass, pluto_mass / earth_mass, population,</div><div class="line">)</div><div class="line"></div><div class="line"><span class="comment">#索引调用</span></div><div class="line">s = <span class="string">"""Pluto's a &#123;0&#125;.</span></div><div class="line"><span class="string">No, it's a &#123;1&#125;.</span></div><div class="line"><span class="string">&#123;0&#125;!</span></div><div class="line"><span class="string">&#123;1&#125;!"""</span>.format(<span class="string">'planet'</span>, <span class="string">'dwarf planet'</span>)</div><div class="line">print(s)</div></pre></td></tr></table></figure><blockquote><p>来源：<a href="https://www.kaggle.com/colinmorris/strings-and-dictionaries" target="_blank" rel="external">https://www.kaggle.com/colinmorris/strings-and-dictionaries</a></p></blockquote><p>待续….</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春寒意暖</title>
      <link href="/2020/04/20/%E6%98%A5%E5%AF%92%E6%84%8F%E6%9A%96/"/>
      <url>/2020/04/20/%E6%98%A5%E5%AF%92%E6%84%8F%E6%9A%96/</url>
      
        <content type="html"><![CDATA[<p>这是个春风得意、暖意洋洋的日子。</p><a id="more"></a><p>雨过后，一股清新的新风，</p><p>一杯热气腾腾的豆奶茶，</p><p>一碗香气撩人的饺子面。</p><p>没错，还有我那嗷嗷作响的饥肠和久违为至的豁然开朗。</p><p>我想我是感觉到这种简单生活的幸福以及乐趣了，更难得的恐怕还是豁然开朗吧。</p><p>我第一时间想到了“丰衣足食”这个词，还感觉到了“衣食无忧”的罪恶感，不免又开始暗自庆幸并且暗自担忧起来。</p><p>我需要做些什么了…</p><p>这篇文章的创建是在前天，我的感受以及感想油然而生，没想到还是因为懒惰拖到了两天后的今晚，因为有着想要急切记录下来的心情，不妨就这样一遍简单拂过罢了。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Window10下玩《奥日与黑暗森林》（Ori and the Blind Forest）</title>
      <link href="/2020/04/20/Window10%E4%B8%8B%E7%8E%A9%E3%80%8A%E5%A5%A5%E6%97%A5%E4%B8%8E%E9%BB%91%E6%9A%97%E6%A3%AE%E6%9E%97%E3%80%8B%EF%BC%88Ori-and-the-Blind-Forest%EF%BC%89/"/>
      <url>/2020/04/20/Window10%E4%B8%8B%E7%8E%A9%E3%80%8A%E5%A5%A5%E6%97%A5%E4%B8%8E%E9%BB%91%E6%9A%97%E6%A3%AE%E6%9E%97%E3%80%8B%EF%BC%88Ori-and-the-Blind-Forest%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>以此文章来记录我近期接触<a href="https://store.steampowered.com/" target="_blank" rel="external">steam</a>以及正版单机游戏的故事以及一些小问题的记录，以观后效之用。</p><a id="more"></a><p>众所周知，steam是一个游戏平台，里面的游戏应有尽有，花样百出，令人目不接遐…但是基本大部分游戏都是要花钱的。因为一个巧合我接触到了<a href="https://baike.baidu.com/item/%E5%A5%A5%E6%97%A5%E4%B8%8E%E9%BB%91%E6%9A%97%E6%A3%AE%E6%9E%97/16082025?fr=aladdin" target="_blank" rel="external">奥日与黑暗森林》（Ori and the Blind Forest）</a>这款游戏，这是一款非常独特的游戏，它的背景音乐以及原创故事就在开场动画的一瞬间就将我深深的吸引住了，为此我发誓不管花多少钱我都要玩到这款游戏，并且将其长期收藏起来，于我而言，这款游戏真的是一款艺术品级别的游戏啊！</p><p>首先当然是第一时间下载了<a href="https://store.steampowered.com/" target="_blank" rel="external">steam</a>客户端，因为心生向往，我将手头的window以及Mac笔记本均装上了相对应版本的steam平台，但是由于内存不足的问题，我将主平台选择在了window<br>本上，后来发现这是一个明智的选择。因为本身不是很喜欢那种主流的电视单机游戏，平时也不是很感兴趣，没想到因为奥日这款游戏成功将我拉到了这个类型的游戏领域，真的是无意间扩大了我的游戏视野…因祸得福？哈哈，不过最后的游戏购买确实也让我付出金钱代价…我像入了 魔怔一般，发狂般的将自己喜欢的龙珠系列的主流单机游戏下了个遍，另外也想补上小时候的游戏情怀，我又在网上找到了<a href="https://tieba.baidu.com/p/6153817871" target="_blank" rel="external">龙珠Z：电光火石3的游戏资源</a>以及<a href="https://pan.baidu.com/s/1oxU80fXGIuFUPMN_QB4zmw" target="_blank" rel="external">数码宝贝格斗编年史</a>（<strong>提取码: 2twn</strong>）的镜像资源，成功还原了我小时候花钱去人家家里体验多时的游戏…这该死的情怀啊！</p><p>好了，废话不多说了，好好记录下我刚开始接触steam以及奥日这款游戏的故事。</p><h1 id="奥日"><a href="#奥日" class="headerlink" title="奥日"></a>奥日</h1><p>这款游戏有所谓的<strong>终极版</strong>！即全名为Ori and the Blind Forest: Definitive Edition（奥日与黑暗森林：终极版）…</p><blockquote><p>致于喜欢中意这款游戏的玩家可参考区别链接：<a href="https://www.zhihu.com/question/378720422" target="_blank" rel="external">奥日与黑暗森林原版和终极版有什么区别？</a><br>终极版在淘宝和杉果游戏平台均可买到，而且用<strong>买终极版的钱里还自然打包了原版在里面！</strong>但是不幸的是，我已经花了原版的冤枉钱了…</p></blockquote><p>另外下载完终极版因为是英文版的，这就需要下载<a href="https://dl.3dmgame.com/patch/70819.html" target="_blank" rel="external">中文补丁</a>了，下载完解压，然后在已经安装在steam上的游戏设置如下操作：</p><ul><li>将下载解压完的补丁文件放在存奥日终极版的根目录下；</li><li>之后点开steam客户端奥日的游戏设置按钮；</li><li>浏览本地文件打开根目录下的中文补丁程序即可，其中的程序选择汉化游戏之后，系统会自动在桌面创建汉化完的奥日终极版游戏快捷方式。</li></ul><blockquote><p>因为之前不知道怎么汉化的流程，费了好大力气才在一个帖子上看见怎么操作，在此记录一下以观后效之用！</p></blockquote><p>关于这款游戏的疑惑就记录到这里吧，作为我小白已入门的操作证明以及记录吧…</p><h1 id="steam"><a href="#steam" class="headerlink" title="steam"></a>steam</h1><p>第一次接触这个steam，而且下载的是steam客户端，没想到确无形中带来了很多的问题：</p><h2 id="steam客户端些许界面乱码的问题"><a href="#steam客户端些许界面乱码的问题" class="headerlink" title="steam客户端些许界面乱码的问题"></a>steam客户端些许界面乱码的问题</h2><p>这个问题其实有些莫名其妙，最后得知其实是网络问题，客户端的一些界面如果乱码的话，需要额外使用加速器的梯子才能正常打开，不过使用翻墙软件也是可以正常打开的，说明在客户端的一些界面是已经被墙了的…而在<a href="https://store.steampowered.com/" target="_blank" rel="external">steam网页端</a>是不需要这么多的额外操作的，本地网络下就可以正常打开。</p><blockquote><p>这里有一个<a href="https://steam.wyjsq.cn/" target="_blank" rel="external">steamspeed</a>专门用于配合steam客户端使用的加速器，不过在我下载之后系统有提示病毒威胁，我就没采用此程序，不过因此也意外发现其实用翻墙软件也是可以打开客户端别墙界面的。</p></blockquote><h2 id="steam上购买提示重复购买，需稍后重试"><a href="#steam上购买提示重复购买，需稍后重试" class="headerlink" title="steam上购买提示重复购买，需稍后重试"></a>steam上购买提示重复购买，需稍后重试</h2><p>这个问题因为是在客户端购买游戏时，翻墙不顺畅，所以导致了好几次支付宝支付界面弹不出来，之后确有了提示重复购买，需稍后重试的问题，关于这个问题仅需要等待一小段时间，然后再次开启购买界面点击购买就没这个问题了。</p><blockquote><p>关于避免这个问题的最好办法就是以后购买支付去<a href="https://store.steampowered.com/" target="_blank" rel="external">steam网页端</a>就行了，<strong>在steam购买时要一气呵成，不然也容易出现问题</strong>。</p></blockquote><h2 id="steam提示凭证失效，需再次输入密码"><a href="#steam提示凭证失效，需再次输入密码" class="headerlink" title="steam提示凭证失效，需再次输入密码"></a>steam提示凭证失效，需再次输入密码</h2><p>这个问题我在一些论坛上所了解到的如下：</p><ul><li>网络不顺畅；</li><li>IP有变化；</li><li>号被人盗了（极小可能）</li></ul><p>….</p><p>因为接触了steam以及一些单机游戏，反正是真正的实践性的开阔了我的游戏视野，也不再将视野总是放在腾讯的几个游戏上了…不过我为此也付出了巨大的金钱代价…心在滴血啊，不过想着是为了支持正版，又是自己本身喜欢的游戏，又何乐而不为呢。最后，我又额外添置了Xbox的游戏手柄，我的心真疼。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聊赖日子</title>
      <link href="/2020/03/19/%E8%81%8A%E8%B5%96%E6%97%A5%E5%AD%90/"/>
      <url>/2020/03/19/%E8%81%8A%E8%B5%96%E6%97%A5%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p>以此记录这段时间的百无聊赖。</p><a id="more"></a><p>迷茫、麻木、颓废。是我这段时间的主题词，我不屑于去工作了，也不屑于认真去生活了，彻彻底底变成一个麻木的杂种。可以理所当然的享受挥霍被给予的伸手张来，而疫情的限制也顺理成章成为我皇而堂之的理由。我也振振有辞、胸有成竹的去评判一件事和某个人了，由此我自所谓的不屑，亦然成为我堕落颓废的衍生品。</p><p>我好似行尸走肉，我的世界同时也进入一片雾茫。前面失去了曾经耀眼的光芒，我也失去了生活的理想，我变得百无聊赖了，不，应该说早就变得百无聊赖了。无节制的颓废与无节制的放纵，这是痛苦的挣扎，也是短暂可耻的快乐源泉，曾经的我好似早已面无全非，我也不再是曾经的我了。还是安稳变成了借口，让我心甘情愿接受这无趣的折磨与煎熬…我是痛苦的，也是极度麻木的，我只是再次看不到希望了。</p><p>我也明白，这不过是无能的迷茫…</p><p>我需要改变，也需要奋进起来，摆脱这早就让我作呕的生活状态。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观《一句顶一万句》</title>
      <link href="/2019/12/11/%E8%A7%82%E3%80%8A%E4%B8%80%E5%8F%A5%E9%A1%B6%E4%B8%80%E4%B8%87%E5%8F%A5%E3%80%8B/"/>
      <url>/2019/12/11/%E8%A7%82%E3%80%8A%E4%B8%80%E5%8F%A5%E9%A1%B6%E4%B8%80%E4%B8%87%E5%8F%A5%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p>前些天看了一部电影叫做<a href="https://v.qq.com/x/cover/tldyy9mk2ladxmg/u0025f9l380.html" target="_blank" rel="external">“一句顶一万句”</a>。</p><a id="more"></a><p>电影的开头是在民政局，有人离婚也有人结婚。一对男女高高兴兴的等着拿结婚证，工作人员问了他们为什么结婚，这对男女的回答是“因为说的来话，下句没说就知道对方要说什么”。转眼十年过去，这对夫妻有了自己的孩子，十年前原本有希望成为军官的男主人公因为一些原因，在人生事业上不是很顺利，导致女主人公在每次听取男主人公说自己的未来展望时很不屑，也有些无所谓了。其中女主人公最后选择了出轨，男主人公跟踪发现之后，也掌握了证据，他跟女主人公坐在一起聊了聊这个事，其实他也接受不了这个事实，原本只是打算以离婚来要挟女主人公悔改，他问了原因，女主人公的回答是：“感觉我们在平时生活中已经说不上话、对不上话了，跟以前不一样了，而跟他，我能说上话”。他们的孩子知道了这个事之后，彻夜难眠，最终大病一场。电影的结局是男主人公想拿刀跟女主人公同归于尽时，他们的孩子给爸爸打了一个电话：“….不去香港了，我们去青岛，香港有海，青岛也有海…“。剧中人有一句话：”日子不是过从前的，而是过以后的“。这句话我第一次听到我不能完全理解，两个人从相识到相知再到相爱再到结婚，一同历经生活的磨练，两个人饱经风霜难免都不会变得沉默寡言。曾经的无话不谈变得面面无言，这是什么原因？我在这时突然又想起来一个我看过的韩国广告，开头里面是一对夫妻想要离婚，妻子沉默了一会提出一个要求，就是再等一个月时间，但是在这一个月里要求男方每天在起床时跟她说早安，并且吻她的额头作为早礼，要求男方每天去上班跟她说“我去上班了”，中午和晚上回家说“我回来了”，并且要给她一个拥抱，最后他们夫妻两个这样做了一个月之后，他们找到了以前的感觉，一个月前要离婚的事也就烟消云散了。我突然就恍然大悟了，是啊，或许生活中的压力会使得夫妻生活也陇上一层压抑感，或许也会让彼此两个人变得沉默寡言，但是却不知这其实都是暂时的一种习惯，两个人沉默寡言久了自然就成了一种习惯，自然也就毫无激情可言了。回想上面的那个韩国的广告，爱其实也很简单，其实爱也能成为习惯，不过是一句早安晚安和一个疲惫后的拥抱…两个人的日子是两个人过下去的，但是选择却是可以不断变化的，有些话，有些微小的细节其实很简单就能体现爱意，只是我们大多数人都忽略了，因为生活中的种种因素，或许变得懒惰了，或许变得无所谓了，但是如果每天只要有了那些微小的细节去表达体现彼此的爱意，或许婚姻就不会变得毫无激情可言，或许婚姻就是另一种结局，而这个结局两个人都能去做选择得到。这部电影的名字“一句顶一万句”不妨可以理解为：爱人的一句可以顶上陌生人的一万句。当今的婚姻有很多是很浮躁的，很多的两个人敢于勇敢的结婚，但是却没有维护好婚姻，很多时候不过是败在了习惯上，败在了选择上，而这些其实都可以去改变。</p><p>婚姻或许并不是爱情的坟墓，大多数时候不过是我们没有习惯性去维护。</p><p>我其实也联想到了我现在跟那个南国异性的这种情况，哈哈，我跟她现在也是可以无话不谈，会不会有哪一天？但是我已经有了答案。我曾经在大二有过一个感慨：“活着生活，在无数个平平淡淡里，在有些个出其不意里”。现在我想用在两个人的姻缘之上做一些改变，那就是：“两个人平平淡淡的生活，但基于爱，而大多数时候的出其不意也都能化解。”后知后觉，我发现我现在就是对她无话不谈，突然莫名就有些后怕起来，哈哈。</p><p>后记以及偏题记～</p><p>我最近发现我来北京实习的这段时间，我居然慢慢的变得迂腐了，很多条条框框开始束缚着我了，我也开始变得有些轻浮，居然也会动不动张口就去下结论去评价人和事了。我在学校其实不是这样的。我想我还需要去适应一些东西，但是也要坚定自己！</p><p>环境与人本身是两回事，只不过有时糊涂了不容易区分，就容易无法自拔了。</p><p>其实这些我可以写成一篇文章来记录下来的，但是既然是以介绍一个电影的形式牵连出来的感想，而且想要介绍的对象是给南国异性的，我不妨就当在南国异性那里做文章了，哈哈。因为还是想记录下这些文字，就在博客复制过来这些文字了，打字这么多还是很不容易滴～～</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北京的雪</title>
      <link href="/2019/11/30/%E5%8C%97%E4%BA%AC%E7%9A%84%E9%9B%AA/"/>
      <url>/2019/11/30/%E5%8C%97%E4%BA%AC%E7%9A%84%E9%9B%AA/</url>
      
        <content type="html"><![CDATA[<p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/51381575073851_.pic.jpg" alt=""></p><p>北京的雪来的在我意料之中。但没想到北京的冬天会这么冷…</p><a id="more"></a><p>不知不觉来到北京快近三个月，此刻的我不仅心无波澜，居然偷偷感到一丝的心安。同时也感觉莫名其妙的，为什么感到心安呢？是自我麻醉还是故弄玄虚？我想后者的部分会更多一些，哈哈。</p><p>如今，慢慢的，居然开始变得不那么喜欢雪了。回首当初见过的冰天雪地与壮阔冰江，那时的我欢喜的不得了，以为眼前看到的就是世界上最为美丽的风景。回望过去，当时的我还很所谓的自以为是，但是回想身处在当时的环境当中，不禁又再次感到心旷神怡的那种久违的感觉，那种感觉早已经深深刻在我的骨子里了。那时的风景与我，都很美好。如今再次看到雪覆盖大地，已经身处在北京了。</p><p>北京北京，这个地方，这个字词，当初承载着无数人的梦想与希望，有人有所谓的失败有人有所谓的成功，居然在当下成为了广大民众敬而远之的“网络热词”，我明白亦理解其中的含义为何，但是对于我来说不过都是平淡无奇。其中的情怀，包括的那些人们的青春梦想，埋葬在这里继续传承。好似有些偏题了呢…</p><p>看到雪，亦面无表情心无波澜了。回想当初的选择与安逸，我反而没有一丝后悔，我或许是麻木了，但我亦更清醒了。</p><p>看到雪，心生厌恶过。不喜欢这过分的纯白无暇，亦不喜欢在其覆盖下的黑压压的土地，即使有丑陋也有美丽，每当想到雪慢慢化去之后的那一片苍茫，我居然会感觉到作呕。</p><p>今天看到北京的雪，我看到了曾经的我和现在的我。不再痴迷于一片外在风景，更多的是会联想到背后的丑恶。我确实有些变得所谓的“消极”？但如今每到有感概也不像曾经那么偏激了，但我有时候又宁愿自己变得偏激一些。矛盾着矛盾着，我感觉我亦收获了很多，我不叫它是所谓的“成长”，只是我在不断的释怀之中明白了更多。写到这里，思绪居然会感觉到很混乱，心境也不再平静。</p><p>我是有些胡编乱造了呢，还是变得生疏了，感觉变得不自然了。我可能是变得有些做作了，还带着虚伪，还带着虚荣，变得不像自己了，不像从前那样豁达的自己了。</p><p>每一次蜕变可能都会伴随着心惊肉跳吧，带着一些不安，或许是不习惯了？亦回首多次闭上眼睛深沉思考，获得出来的结论与自我安慰都是沉默以对和心无波澜一般的，居然感觉有些不甘心，我是要和自己怄气。</p><p>我或许是变得更为明智了吧。虽然有时不近人情，显得绝情亦显得冷漠，但我亦然心安理得，我不认为这是封闭，只不过不再那么轻浮于人事。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用scrapy问题汇总</title>
      <link href="/2019/09/13/%E4%BD%BF%E7%94%A8scrapy%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"/>
      <url>/2019/09/13/%E4%BD%BF%E7%94%A8scrapy%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>待完成….</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
          <category> Scrapy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda2/3在eclipse中分开下载Python2/3库</title>
      <link href="/2019/09/11/Anaconda2:3%E5%9C%A8eclipse%E4%B8%AD%E5%88%86%E5%BC%80%E4%B8%8B%E8%BD%BDPython2:3%E5%BA%93/"/>
      <url>/2019/09/11/Anaconda2:3%E5%9C%A8eclipse%E4%B8%AD%E5%88%86%E5%BC%80%E4%B8%8B%E8%BD%BDPython2:3%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>记录一下在我使用eclipse上的Python插件PyDev结合Anaconda2/3下载相关Python库的过程，我使用的是MacBook Pro。</p><a id="more"></a><p>实际上有两种可操作的下载方式：</p><ul><li>使用命令行下载</li><li>结合PyDev设置下载</li></ul><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul><li>需要将Anaconda2和Anaconda3的版本分别安装成功在电脑上</li><li>安装eclipse以及Pydev相关插件</li></ul><h1 id="结合命令行下载"><a href="#结合命令行下载" class="headerlink" title="结合命令行下载"></a>结合命令行下载</h1><p>一般在成功安装Anaconda2和Anaconda3之后均需要环境配置，很简单，即使用相关命令打开Mac终端系统文件配置，添加入Anaconda2和Anaconda3的文件路径，然后快速使命令生效即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#vim编译器打开相关文件</span></div><div class="line">vim ~/.bash_profile</div><div class="line"></div><div class="line"><span class="comment">#一般的配置即添加相关路径即可</span></div><div class="line">export PATH=/opt/local/bin:/opt/local/sbin:$PATH</div><div class="line"><span class="comment">#如下我的配置</span></div><div class="line"><span class="comment"># added by Anaconda2 5.1.0 installer</span></div><div class="line">export PATH=<span class="string">"/anaconda2/bin:$PATH"</span></div><div class="line"></div><div class="line"><span class="comment"># added by Anaconda3 5.1.0 installer</span></div><div class="line">export PATH=<span class="string">"/anaconda3/bin:$PATH"</span></div><div class="line"></div><div class="line"><span class="comment">#使得命令快速生效</span></div><div class="line">source ~/.bash_profile</div></pre></td></tr></table></figure><blockquote><p>具体可参考：<a href="https://www.jianshu.com/p/acb1f062a925" target="_blank" rel="external">MAC 设置环境变量PATH 和 查看PATH</a></p></blockquote><p>在配置好以上环境问题之后，这样便使得：</p><ul><li>Anaconda2中的python2版本替代了系统默认的python2</li><li>Anaconda3中的python3版本替代了系统默认的python3</li></ul><p>这样便可以使用pip命令分别安装相关package了，非常方便：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#python2下载package</span></div><div class="line">py <span class="number">-2</span> -m pip install *</div><div class="line"></div><div class="line"><span class="comment">#python3下载package</span></div><div class="line">py <span class="number">-3</span> -m pip install *</div></pre></td></tr></table></figure><p>另外提示一下，Anaconda2与Anaconda3的安装顺序决定了系统的默认python版本，比如我是先安装的Anaconda2，后来安装的Anaconda3中的Python3即为系统的python版本了，在使用<code>pip install *</code>时直接下载到Anaconda3的python3中的package目录。</p><blockquote><p>这里参考了：<a href="https://blog.csdn.net/qq_39081974/java/article/details/79716942" target="_blank" rel="external">python2和python3分别安装包</a></p></blockquote><h1 id="结合PyDev设置下载"><a href="#结合PyDev设置下载" class="headerlink" title="结合PyDev设置下载"></a>结合PyDev设置下载</h1><h2 id="导入Anaconda2与Anaconda3中的python"><a href="#导入Anaconda2与Anaconda3中的python" class="headerlink" title="导入Anaconda2与Anaconda3中的python"></a>导入Anaconda2与Anaconda3中的python</h2><p>这一个方法当然需要先将eclipse以及相关的Pydev插件安装好，另外需要将安装好的Anaconda2与Anaconda3中的python导入进去。</p><ul><li>Project -&gt; Properties -&gt; PyDev - Interpreter/Grammar</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-51-09.gif" alt=""></p><p>之后在此界面添加安装Anaconda2与Anaconda3的python源路径即可，或者可以试试<code>Quick Auto - Config</code>快速找到并且添加系统中有效的python源。</p><ul><li>New… -&gt; Browse相关python源路径即可</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-51-50.gif" alt=""></p><ul><li>Quick Auto - Config可快速找到系统并且添加有效python源</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-52-14.gif" alt=""></p><blockquote><p>这个不是很准确，有时候并不能起到实质性作用，推荐自己手动添加。</p></blockquote><h2 id="分别手动选择pip下载package"><a href="#分别手动选择pip下载package" class="headerlink" title="分别手动选择pip下载package"></a>分别手动选择pip下载package</h2><p>首先确定已经将Anaconda2与Anaconda3的python源路径添加成功，这样才能使得eclipse识别已有的package。</p><p>分别点击Anaconda2与Anaconda3的python源路径会发现下方会出现eclipse已经识别的package以及相关目录结构。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-53-25.gif" alt=""></p><p>这时仅需要点击在右的<code>Install/Uninstall with pip</code>使用pip下载package，或者<code>Install/Uninstall with conda</code>使用conda命令下载package入相对应的Anaconda2与Anaconda3。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-04-2020%2019-54-00.gif" alt=""></p><p>这样就完成了分别下载package的任务，以前还是小白的时候不懂，现在经过摸索之后慢慢明白了该怎么去处理Anaconda2与Anaconda3分别下载package的问题，特在此记录下来。</p><h1 id="额外可参考链接"><a href="#额外可参考链接" class="headerlink" title="额外可参考链接"></a>额外可参考链接</h1><ul><li><a href="https://pip.pypa.io/en/stable/" target="_blank" rel="external">pip官网文档</a></li><li><a href="https://www.eclipse.org/" target="_blank" rel="external">Eclipse官网</a></li><li><a href="https://www.anaconda.com/" target="_blank" rel="external">Anaconda官网</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Anaconda </category>
          
          <category> Python </category>
          
          <category> eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> eclipse </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬取虎扑新闻</title>
      <link href="/2019/09/11/Python%E7%88%AC%E5%8F%96%E8%99%8E%E6%89%91%E6%96%B0%E9%97%BB/"/>
      <url>/2019/09/11/Python%E7%88%AC%E5%8F%96%E8%99%8E%E6%89%91%E6%96%B0%E9%97%BB/</url>
      
        <content type="html"><![CDATA[<p>这个是在北京实习期的公司要求做的一个小的项目，简单在此做个主要内容的解析以及相关主要代码的分享。</p><a id="more"></a><h1 id="简要解析"><a href="#简要解析" class="headerlink" title="简要解析"></a>简要解析</h1><p>首先以爬取新闻内容以及来源等主要信息为例。</p><ul><li>爬取的来源链接：<a href="https://voice.hupu.com/china/1" target="_blank" rel="external">https://voice.hupu.com/china/1</a></li></ul><p>其中的题目以及时间和来源以及可以在静态页面上进行抓取，直接利用Python的相关库进行清洗提取即可。另外在主页面可以抓取到每一条新闻的内容页面，内容页面即包括了文字及图片，这些均可直接提取。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-15%20%E4%B8%8B%E5%8D%881.36.32.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-15%20%E4%B8%8B%E5%8D%881.39.47.png" alt=""></p><p>另外为了获取新闻的浏览量，我们选择了进入新闻相应的论坛进行了爬取，如下可知：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-15%20%E4%B8%8B%E5%8D%881.40.40.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202020-05-15%20%E4%B8%8B%E5%8D%881.41.17.png" alt=""></p><p>关于这个浏览量是实时变化的，所以需要额外解析。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/May-15-2020%2013-46-08.gif" alt=""></p><blockquote><p>可得实时变化的链接为：<a href="https://msa.hupu.com/thread_hit?tid=35418557&amp;_=1589521335428" target="_blank" rel="external">https://msa.hupu.com/thread_hit?tid=35418557&amp;_=1589521335428</a></p><p>通过缩减URL可得：<a href="https://msa.hupu.com/thread_hit?tid=35418557" target="_blank" rel="external">https://msa.hupu.com/thread_hit?tid=35418557</a></p></blockquote><p><code>tid</code>  即为每个文章URL上的的ID。</p><h1 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h1><p>主要贴上用Scrapy写的解析部分的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># -*- coding:UTF-8 -*-</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">@time：2019.9.10</span></div><div class="line"><span class="string">@author: junliu</span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> os, sys</div><div class="line"><span class="keyword">import</span> time, datetime</div><div class="line"><span class="keyword">import</span> cookielib</div><div class="line"><span class="keyword">import</span> urllib2</div><div class="line"></div><div class="line">reload(sys)</div><div class="line">sys.setdefaultencoding(<span class="string">"utf-8"</span>)</div><div class="line"> </div><div class="line"><span class="comment"># 虎扑CBA新闻：https://voice.hupu.com/cba</span></div><div class="line"><span class="comment"># 虎扑NBA新闻：https://voice.hupu.com/nba</span></div><div class="line"><span class="comment"># 虎扑足球新闻：https://voice.hupu.com/soccer</span></div><div class="line"><span class="comment"># 虎扑中超足球新闻：https://voice.hupu.com/china</span></div><div class="line"><span class="comment"># 翻页示例：https://voice.hupu.com/china/page/</span></div><div class="line">    </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_new_info</span><span class="params">()</span>:</span></div><div class="line">    nba_url = <span class="string">'https://voice.hupu.com/nba'</span></div><div class="line"><span class="comment">#     comment_url = 'https://www.ixigua.com/api/commentv2/video_comment?group_id=6733070858316677644&amp;item_id=6733070858316677644&amp;group_source=2'</span></div><div class="line">    html = get_html_res(nba_url)</div><div class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">    new_list = soup.find(<span class="string">'div'</span>, class_=<span class="string">'news-list'</span>)</div><div class="line"><span class="comment">#     print len(new_list.find_all('li'))</span></div><div class="line"><span class="comment">#     print new_list.find_all('li')[-1]</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> new_list.find_all(<span class="string">'li'</span>):</div><div class="line">        <span class="keyword">print</span> i.find(<span class="string">'div'</span>, class_=<span class="string">"list-hd"</span>).get_text().strip()</div><div class="line">        <span class="keyword">print</span> i.find_all(<span class="string">'a'</span>)[<span class="number">0</span>].get(<span class="string">'href'</span>)</div><div class="line"><span class="comment">#         get_new_content(i.find_all('a')[0].get('href'))</span></div><div class="line">        <span class="keyword">print</span> i.find_all(<span class="string">'a'</span>)[<span class="number">1</span>].get(<span class="string">'title'</span>)</div><div class="line">        st = i.find_all(<span class="string">'a'</span>)[<span class="number">1</span>].get(<span class="string">'title'</span>)</div><div class="line">        format = datetime.datetime.strptime(st, <span class="string">'%Y-%m-%d %H:%M'</span>)</div><div class="line">        time_tuples = format.timetuple()</div><div class="line">        <span class="keyword">print</span> int(time.mktime(time_tuples))</div><div class="line">        <span class="keyword">print</span> <span class="string">'*'</span> * <span class="number">30</span></div><div class="line">        <span class="keyword">print</span> i.find(<span class="string">'span'</span>, class_=<span class="string">"other-left"</span>).get_text().split(<span class="string">' '</span>)[<span class="number">-1</span>].rstrip()  </div><div class="line">        name = i.find(<span class="string">'span'</span>, class_=<span class="string">"other-left"</span>).get_text().split(<span class="string">' '</span>)[<span class="number">-1</span>].rstrip()</div><div class="line">        keyword = <span class="string">'虎扑'</span></div><div class="line">        <span class="keyword">if</span> keyword <span class="keyword">in</span> name <span class="keyword">or</span> keyword == name <span class="keyword">is</span> <span class="keyword">True</span>:</div><div class="line">            item = <span class="number">0</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            item = <span class="number">1</span></div><div class="line">        <span class="keyword">print</span> item</div><div class="line">        <span class="keyword">print</span> <span class="string">'*'</span> * <span class="number">20</span></div><div class="line">        <span class="keyword">print</span> i.find_all(<span class="string">'a'</span>)[<span class="number">2</span>].get(<span class="string">'href'</span>)</div><div class="line">        <span class="keyword">print</span> i.find_all(<span class="string">'a'</span>)[<span class="number">3</span>].get(<span class="string">'href'</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_new_content</span><span class="params">(url)</span>:</span></div><div class="line">    url = url</div><div class="line">    html = get_html_res(url)</div><div class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">    items = []</div><div class="line"><span class="comment">#     if soup.find('div', class_="artical-main-content").img is not None:</span></div><div class="line"><span class="comment">#         content = soup.find('div', class_="artical-main-content")</span></div><div class="line"><span class="comment">#         for link in content.find_all('p'):</span></div><div class="line"><span class="comment">#             if link.find('img') is not None:</span></div><div class="line"><span class="comment">#                 print link.find('img').get('src')</span></div><div class="line"><span class="comment">#     else:</span></div><div class="line"><span class="comment">#         pass</span></div><div class="line">    </div><div class="line">    <span class="keyword">print</span> soup.find(<span class="string">'div'</span>, class_=<span class="string">'artical-content-read'</span>)</div><div class="line"><span class="comment">#     print soup.find('div', class_='artical-importantPic').img.get('alt')</span></div><div class="line"><span class="comment">#     print soup.find('div', class_='artical-importantPic').img.get('src')</span></div><div class="line"><span class="comment">#     print soup.find('div', class_="artical-main-content").get_text()</span></div><div class="line">    <span class="keyword">print</span> soup.find(<span class="string">'div'</span>, class_=<span class="string">"artical-importantPic"</span>).img</div><div class="line">    content = soup.find(<span class="string">'div'</span>, class_=<span class="string">"artical-main-content"</span>) </div><div class="line">    <span class="keyword">for</span> content_html <span class="keyword">in</span> content.find_all(<span class="string">'p'</span>):</div><div class="line">        <span class="keyword">print</span> content_html</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_bbs_info</span><span class="params">(url)</span>:</span></div><div class="line"><span class="comment">#     url = url</span></div><div class="line">    url = url</div><div class="line">    html = get_html_res(url)</div><div class="line">    soup = BeautifulSoup(html, <span class="string">'lxml'</span>)</div><div class="line">    infos = soup.find(<span class="string">'span'</span>, class_=<span class="string">"browse"</span>).get_text().replace(<span class="string">'\n'</span>, <span class="string">''</span>).encode(<span class="string">'utf-8'</span>)</div><div class="line">    comment_num = re.match(<span class="string">'^.*?(\d+).*$'</span>, infos).group(<span class="number">1</span>)</div><div class="line">    bbs_id = url.split(<span class="string">'/'</span>)[<span class="number">-1</span>].split(<span class="string">'.'</span>)[<span class="number">0</span>]</div><div class="line">    browse = get_html_res(<span class="string">'https://msa.hupu.com/thread_hit?tid='</span> + bbs_id)</div><div class="line">    <span class="keyword">print</span> comment_num, browse</div><div class="line">    item = []  <span class="comment"># 用于存标签字段 </span></div><div class="line">    item1 = []  <span class="comment"># 用于存链接</span></div><div class="line">    tags = soup.find(<span class="string">'div'</span>, class_=<span class="string">"basketballTobbs_tag"</span>)</div><div class="line">    <span class="keyword">for</span> tag <span class="keyword">in</span> tags.find_all(<span class="string">"a"</span>):</div><div class="line">        item.append(tag.get(<span class="string">'href'</span>))</div><div class="line">        item1.append(tag.get_text())</div><div class="line">    <span class="keyword">print</span> item, item1</div><div class="line">        </div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_cookies</span><span class="params">(url)</span>:</span></div><div class="line">    url = url </div><div class="line">    session = requests.session()</div><div class="line">    response = session.get(url=url)</div><div class="line">    <span class="keyword">print</span> session.cookies.get_dict()</div><div class="line">    </div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_html_res</span><span class="params">(url)</span>:</span></div><div class="line">    session = requests.session()</div><div class="line">    url = url</div><div class="line">    headers = &#123;</div><div class="line">        <span class="string">'accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3'</span>,</div><div class="line">        <span class="string">'accept-encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</div><div class="line">        <span class="string">'accept-language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</div><div class="line">        <span class="string">'cache-control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">        <span class="string">'cookie'</span>: <span class="string">'_cnzz_CV30020080=buzi_cookie%7Cdddeb463.80b3.1b1e.9890.4620154a3f87%7C-1; _dacevid3=dddeb463.80b3.1b1e.9890.4620154a3f87; _cnzz_CV30020080=buzi_cookie%7Cdddeb463.80b3.1b1e.9890.4620154a3f87%7C-1; Hm_visit=1568082562621; Hc_visit=1568082562631; sajssdk_2015_cross_new_user=1; sensorsdata2015jssdkcross=%7B%22distinct_id%22%3A%2216d19010eaf7a9-0e6d57be88ed6f-38677501-1296000-16d19010eb0310%22%2C%22%24device_id%22%3A%2216d19010eaf7a9-0e6d57be88ed6f-38677501-1296000-16d19010eb0310%22%2C%22props%22%3A%7B%7D%7D; __dacevst=f0c555d7.42b2f9a7|1568097712872'</span>,</div><div class="line">        <span class="string">'Referer'</span>: <span class="string">'https://voice.hupu.com/nba'</span>,</div><div class="line">        <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36'</span></div><div class="line">        &#125;</div><div class="line">    request = session.get(url=url, headers=headers)</div><div class="line">    request.encoding = <span class="string">"utf-8"</span></div><div class="line">    html = request.text</div><div class="line">    <span class="keyword">return</span> html</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line"><span class="comment">#     get_xigua_info("https://www.ixigua.com/i6733070858316677644/")</span></div><div class="line">    get_new_info()</div><div class="line"><span class="comment">#     get_new_content('https://voice.hupu.com/cba/2475206.html')</span></div><div class="line"><span class="comment">#     get_cookies('https://voice.hupu.com/nba')</span></div><div class="line"><span class="comment">#     get_bbs_info('https://bbs.hupu.com/29489225.html')</span></div><div class="line"><span class="comment">#     get_html_res('https://voice.hupu.com/cba/2474694.html')</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure><p>其他的感觉也没什么好说的…</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
          <category> Scrapy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python爬取西瓜视频信息及真实地址</title>
      <link href="/2019/09/09/Python%E7%88%AC%E5%8F%96%E8%A5%BF%E7%93%9C%E8%A7%86%E9%A2%91%E4%BF%A1%E6%81%AF%E5%8F%8A%E7%9C%9F%E5%AE%9E%E5%9C%B0%E5%9D%80/"/>
      <url>/2019/09/09/Python%E7%88%AC%E5%8F%96%E8%A5%BF%E7%93%9C%E8%A7%86%E9%A2%91%E4%BF%A1%E6%81%AF%E5%8F%8A%E7%9C%9F%E5%AE%9E%E5%9C%B0%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<p>这个是在去北京实习时，带我的师傅给我的一个任务，已经解析出来了，在这里记录一下。</p><a id="more"></a><p>因为时间问题，先耽搁下来，以后有机会再补全内容。先在下方贴上对我解析有帮助的文章链接，以观后效之用。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/32037022" target="_blank" rel="external">今日头条 视频解析 批量下载</a></li><li><a href="https://www.jianshu.com/p/63f3f25d3a03" target="_blank" rel="external">头条视频采集 带GUI界面 和代码详细注释</a></li><li><a href="https://www.jianshu.com/p/6ca1344a09db" target="_blank" rel="external">Python爬虫技巧-西瓜视频MP4地址获取</a></li><li><a href="https://docs.python.org/zh-cn/3/library/re.html" target="_blank" rel="external">re — 正则表达式操作</a></li><li><a href="https://juejin.im/post/5c8f15bde51d451d1118db99" target="_blank" rel="external">爬虫必备：Python 执行 JS 代码 —— PyExecJS、PyV8、Js2Py</a></li><li><a href="https://gitee.com/zuzong/python/blob/master/头条视屏抓取/net/DownVideo.py" target="_blank" rel="external">相关代码库</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>死亡之后，意识的猜想</title>
      <link href="/2019/07/10/%E6%AD%BB%E4%BA%A1%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%84%8F%E8%AF%86%E7%9A%84%E7%8C%9C%E6%83%B3/"/>
      <url>/2019/07/10/%E6%AD%BB%E4%BA%A1%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%84%8F%E8%AF%86%E7%9A%84%E7%8C%9C%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<p>人死之后会是什么样？人真正的神秘的地方即“意识”，又是这么一回事？今晚我有些想要记录的东西。这是我的猜想记录。</p><a id="more"></a><p>曾经有数次我有过短暂濒死状态，这些个经历我一直耿耿于怀并且百思不得其解，现今我开始慢慢的意识到，原来那或许就是说无谓的“濒死状态”了。在我的中学时代有一半是睡不好觉的，那个时期我真正的感觉生不如死，加上长期的“一事无成”，我的心理状态每天都是郁郁沉沉的，如今回想也是不忍回看的。每个晚上我都是处于挣扎的状态，常常睁着眼睛到第二天是常有的事，导致于我在那段时间特别害怕到晚上，以及害怕有安静的时刻。或许是因为睡眠原因还是身体本身有其他原因，我在那段时期经常性的会突然两眼一黑即倒地，有时在上课时突然两眼一黑倒在课桌上，然后又突然睁开眼睛，脑子陷入一种放空状态，另外也是懵懂的一种状态。令我记忆犹新的是我在初中时看舍友玩棋，我弓着身子突然想站起来，还没完全站起来，我便直接整个身子倒了下来，可能时间持续了好几秒，以至于旁边的同学都在我突然睁开眼睛回过神来猛的站起来问我“怎么了？”…这段画面这些年来一直在我脑海里徘徊着，直到前些日子我重新将关注点拉到“人体”上，我才有所顿悟。</p><p>人体是神奇的，我无数次幻想我们是被精心设计出来的人偶，这一点在我最近就开始了解到的两性之间的一些性学知识和相关的人体器官以及从前就有的一些相关的感慨为引点，我对于“人体”不得不发出惊叹，人体好似被设计的天衣无缝，面对各种情况面面俱到，活脱脱的一个“鬼斧神工”罢！在我的心里我一直认为，人体就是被设计出来的。再者，如今的主流假设说法即人类是由微生物到人猿进化而来的，这一点我是不认同的，因为其中虽然由于我本人对于这方面知识认知有限并且视野还不是特别开阔，我只能看到一些疑点，但是仅仅只是怀疑。</p><p>回到正题，在我经常性的“两眼黑倒”，那些个的霎那间我是处于无意识状态的，即眼前一片黑暗，我什么也感觉不到，如同绝对的“无”状态，没有所谓的回马灯旋转回忆，也没有所谓的灵魂升天说法，但是在现今我认为这不过是电波的残留造成的罢！在我看来，整个宇宙即包括地球如同一个场源，而我们脑中的电波即所谓的脑电波是长存的，电波即代表意识的存在，而在“人死”的瞬间（肉体即刻死亡不代表意识即刻消失），是有着电波残留的，这些或许可以解释上方的回马灯以及灵魂升天的说法，即不过是因电波残留导致意识残留，所以有影像残留是正常的。在所谓的意识真正的消失之后即代表电波回到了上方提到的场源中，继而若是有了新的新生儿肉体（主要），回到场源的电波即有可能附着在这些肉体身上，继而慢慢的形成新一轮的“意识”，因为电波可能会呆在场源长短的缘故，会导致电波强度减弱（主要情况）亦或者少数加强（导致所谓的附在上个肉体上的意识残留）。一个人的意识主要受牵于肉体的经历环境，所以意识能学习形成到哪种地步都是不一样的。这恰恰可以解释梦镜的由来，可以理解为意识残留。</p><p>另外，对于几秒的“先知”情况，我想不过是先几秒的预想罢，并且恰恰是有几率的符合上了罢…</p><p>文末，记录一下偏题的心得：我又回到了曾经那个犟傲的状态，不过那确实是真真正正的我以及我想要的我啊！</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>步步深渊</title>
      <link href="/2019/06/25/%E6%AD%A5%E6%AD%A5%E6%B7%B1%E6%B8%8A/"/>
      <url>/2019/06/25/%E6%AD%A5%E6%AD%A5%E6%B7%B1%E6%B8%8A/</url>
      
        <content type="html"><![CDATA[<p>年轻过早的选择安稳，好似一眼将整个人生都已经看破。</p><a id="more"></a><p>明白了生活的真相与这世间的本质，或许会慢慢的变得世故了，停止思考，停止活动，停止人生…这样的人生未免太过于无趣与狼狈了。曾经几时的我又何尝不是如此呢？在某一时刻认识到所有的真相，看清身边的本质，我沉沦了，我亦沉默了，我开始慢慢的步入深渊，开始觉得一切如何发展都是理所当然了，这世间亦不过如此不是？我的生活从那时起开始失去从前的激情以及目标，人生好几回好似就可以一眼望到头，我却也倒悠然自得了。</p><p>这绝非是我想要的生活。死于安乐的心，是我沉沦的本质。</p><p>回望这些月的日子，我花耗精力在玩乐之中，自以为早已看清所有，但是生活中确实还有我要去完成的事情以及目标。一旦陷入一种自我感觉的“安稳”，对于我其实也是矛盾的，我放不下抛弃所有，我依然坚持关注世事如昨即便在游乐的日子里，我是痛苦的。</p><p>这绝不是所谓的迷茫，也不是自己可以找借口去说服自我的一种敷衍，只是我对于目前烦腻的状态失去激情，继而让我的生活失去了目标罢了。我需要重塑内心的丰富多彩与色彩斑斓，我依稀也能感觉到从前的满足与充实。</p><p>这或许总归会是我要面对的一道坎，早点面对与醒悟何尝又不是一种好事。富于形式的生活是我丧失激情与希望的跛脚石，我却被它击垮在地，代价是我为时不多的依旧流血的生命，我是可笑的，当初的我最为看不惯的，却在我身上体现的淋漓尽致了。</p><p>那时的我，是可悲的，也是最不应该的。在现在看来，或许也是幸运的。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于爬取NBA官网(NBA.com)数据</title>
      <link href="/2019/06/18/%E5%85%B3%E4%BA%8E%E7%88%AC%E5%8F%96NBA%E5%AE%98%E7%BD%91-NBA-com-%E6%95%B0%E6%8D%AE/"/>
      <url>/2019/06/18/%E5%85%B3%E4%BA%8E%E7%88%AC%E5%8F%96NBA%E5%AE%98%E7%BD%91-NBA-com-%E6%95%B0%E6%8D%AE/</url>
      
        <content type="html"><![CDATA[<p>关于<a href="https://ca.nba.com/" target="_blank" rel="external">NBA官网</a>的数据爬取的解析，其中记录了视频源链接(可直接进行下载的链接)以及文字的可爬取解析过程。</p><a id="more"></a><h1 id="爬取视频解析过程"><a href="#爬取视频解析过程" class="headerlink" title="爬取视频解析过程"></a>爬取视频解析过程</h1><p>以<a href="https://www.nba.com/history/legends/profiles/michael-jordan" target="_blank" rel="external">《Legends profile: Michael Jordan》</a>为例，其中有视频亦有文字。在爬取这些个视频之前我以为又是<a href="https://zh.wikipedia.org/wiki/M3U" target="_blank" rel="external">M3u8格式</a>的，曾经在国内主流视频平台均有见到过这种格式，至今我还没有完全破解该格式爬取的方法…所以心里没底。出乎意料地，在<strong>NBA官网上都是<code>.mp4</code>格式的。</strong>爬取解析过程中也是很轻松就爬取到了视频源。</p><p>千言万语不过一张图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-06-18%20%E4%B8%8A%E5%8D%8810.31.10.png" alt=""></p><blockquote><p>即打开对应的<a href="https://zh.wikipedia.org/wiki/XMLHttpRequest" target="_blank" rel="external"><code>.XHR</code>格式</a>的进行筛选，即可在其中查找到资源源地址，发现每一个视频都有这么一个文件，里面就可以查找到视频的各种清晰度等信息…整个过程还是很轻松的。<strong>其实这种方法可以适用很多网站！</strong></p></blockquote><p>以下为动图操作演示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Jun-18-2019%2010-33-35.gif" alt=""></p><blockquote><p>拿到视频的源地址之后，可直接用浏览器进行下载即可，当然若是下载的多可用Python写个爬虫程序亦可。</p></blockquote><h1 id="关于文字解析"><a href="#关于文字解析" class="headerlink" title="关于文字解析"></a>关于文字解析</h1><p>可先看以下的图解析：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-06-18%20%E4%B8%8A%E5%8D%8810.35.22.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Jun-18-2019%2010-34-51.gif" alt=""></p><blockquote><p>实际上可发现文字部分还是属于一种静态资源的(实际上文字资源都是这么一回事…)关于静态资源的爬取就不多说了，直接启用Python结合一些模块爬取是最快的。</p></blockquote><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>通过结合<strong>Chrome浏览器</strong>下载下来的视频演示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Jun-18-2019%2010-43-07.gif" alt=""></p><p>就这样了～</p>]]></content>
      
      
      <categories>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记6.5</title>
      <link href="/2019/06/05/%E6%9D%82%E8%AE%B06-5/"/>
      <url>/2019/06/05/%E6%9D%82%E8%AE%B06-5/</url>
      
        <content type="html"><![CDATA[<p>烦躁…疯狂…</p><a id="more"></a><p>烦躁，面对于形式主义的考试，我是矛盾的。不甘心于这种“默写考试”，但是一边又急切地希望考试可以简单易过一点…处于中间状态下，我整个人都是无言以对的，无论是面对自己，还是这早已无任何意义的考试。但是，我必须明白一点，这种考试与真正的考试是不同的。面对考试，我早已心生厌倦，特别是无意义的形式考试，面对于这样的考试，我在选择了一条曾经从未想过的方式去解决，居然还感到窃喜，尽管心中会有那么一点的不甘与内疚，但是总体上我还是可以说服自己去接受的…面对怎样的考试，我想还得分清主次，做到分条斯里，万万切记：并不是所有考试均如此，并不是所有考试均值得我去这么做！</p><p>趣事，选课老师泪撒讲台，原因是因为看到有学生通过出卖国家机密获取私人利益，而深感自责。这是一种有趣的现象。究竟是他们被洗脑至深，还是我们这一代已无法无天了？世上本没有绝对的正确与错误，思想何妨又不如此。许多的人与事关乎于事主本人，其中的真相又何从得知呢，一己之言产生的偏见是屡见不鲜的，若是借此投机取巧，另有用心，这真的是罪大恶极了。矛盾，矛盾，矛盾…世间真真假假，在外人看来大多不过是雾里看花，糊里糊涂罢了。</p><p>疯狂，王者荣耀的黑色产业链居然是处在违法的基础之上。我因为沉迷于这款游戏无法自拔了，数次有这种想要加入的冲动，最终还是理性占了上风。然而因为需求催生出来的市场，我却不过是其中为虎作伥的其中一员罢了。另外前段时间我过于自我放纵了一点，无数次怀疑这世间规定于秩序的合理性，貌似又并非完全的合理，这些终究是属于少数人制定的世间规则。绝对上的、表面上一本正经的成功往往又是见不得光的。我开始怀疑，在这世间行走的游刃有余，真正的做到风生水起，我还得付出相较如今多大的代价，哪怕是这条小命呢。</p><p>顺便记录一下，第一次的电话面试，因为这些天没有课，整个人都是昏昏沉沉的，着迷于打游戏混时间，整个人都是浑浑噩噩的…思维有时变得不再清晰明朗，这一点是致命的…另外，反思与总结总是少不了的课题之一，我需要更多的锻炼与更多的自信与淡定去面对每一天要发生的种种，尽管最后还是不怎么如意，但是大多数却也真的是事在人为的罢了。</p><p>最近的这些天摆脱于从前匆忙的时光，我渐渐的开始认识到了从前不曾察觉到的一些觉悟与认识，这一点算是一些收获吧。</p><p>昨天是“<a href="https://zh.wikipedia.org/wiki/%E5%85%AD%E5%9B%9B%E4%BA%8B%E4%BB%B6" target="_blank" rel="external">六四事件</a>”三十周年的日子，时光匆匆而过，但是留下的东西却也倒让一些人心惊胆战，继而搞得人人自危，人心惶惶，真的是有过之矣。这种丑态真的是滑稽亦可笑了。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于iPhone已购买app应用在iPad上下载使用</title>
      <link href="/2019/05/16/%E5%85%B3%E4%BA%8EiPhone%E5%B7%B2%E8%B4%AD%E4%B9%B0app%E5%BA%94%E7%94%A8%E5%9C%A8iPad%E4%B8%8A%E4%B8%8B%E8%BD%BD%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/05/16/%E5%85%B3%E4%BA%8EiPhone%E5%B7%B2%E8%B4%AD%E4%B9%B0app%E5%BA%94%E7%94%A8%E5%9C%A8iPad%E4%B8%8A%E4%B8%8B%E8%BD%BD%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>今天在iPhone上购买了一个应用，发现在iPad上提示还有要付款的按钮，现在已解决，在此记录一下。</p><a id="more"></a><p>平时经常可在<code>AppStore</code>一个应用上写着<code>提供iPhone App</code>或者是<code>提供iPad App</code>，实际上，<strong>在iPhone中购买了之后，在iPad中是可以免费下载的，也就是一边设备购买付款成功了之后，在另一边设备登陆同一个Apple ID的情况下也是可以不必再次付款下载的，比如在iPhone上已购买下载了，这样在iPad上登陆同一个Apple ID搜索到这个购买的app是可以直接进行下载的。<code>iPhone App</code>/<code>iPad App</code>就是一次付款，两边使用的。</strong></p><p>如果先在iPhone/iPad上进行付款购买了一款app应用，但是基本上在iPad/iPhone上还是显示“付款金额的按钮”，这时点击这个按钮会弹出一个窗口提示“已购买了，可免费下载”(前提是同一个已付款购买的Apple ID的登陆)。</p><p>另外小记一下在使用<code>Apple ID</code>付款购买之后，购买记录显示其处于“待处理”并且没有单号编码出现的情况下的状态，<strong>其实这属于正常的等待行为，因为在与Apple交易付款成功需要一定的时间过渡，耐心等待单号编码出来，此时即代表与Apple交易付款成功了。这种情况可能会影响上面说的“一次购买，两边使用”的情况，耐心等待“待处理”的字样变成单号编码交易成功，之后再尝试也是可以的。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> iPhone </category>
          
          <category> iPad </category>
          
          <category> app应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> iPad </tag>
            
            <tag> iPhone </tag>
            
            <tag> app应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记5.10</title>
      <link href="/2019/05/10/%E6%9D%82%E8%AE%B05-10/"/>
      <url>/2019/05/10/%E6%9D%82%E8%AE%B05-10/</url>
      
        <content type="html"><![CDATA[<p>曾经一致认为的真理，现今一直在动摇。</p><a id="more"></a><p>“民主”与“独裁”，曾经在我一致认知之下，其实不过是最为表面的一面。“民主”不过属于少数人的民主，“独裁”亦然属于少数人的独裁，没有哪个机制是绝对的，相对的却只有“好”与“坏”的当权者或者是执政党。曾经我把“民主”想的太过于美好（以美国为参照物），我早应当意识到这些想法是不现实的，是属于理想状态下的，绝对的“民主”，绝对的“独裁”，这是我曾经偏向的两个极端。</p><p>……</p><p>在政府与人民之间往往有着不可跨越的鸿沟，然而偏见往往来源自不理解。将要行使任务的政府没有深入了解每一个受到牵连的人的想法，总是容易独自行使大权，这往往使得这些大多数人们的利益受损。在另一方面，这些人们自然会形成一股反抗的力量，从而使得政府与人民之间的矛盾开始建立。当然，作为第三方旁观者，其间的复杂性往往还要大的多。当地政府接到“上级”的命令行事（往往是关乎仕途的任务），或许加上更多的因素影响使得任务快速开始进展，照顾不到大多数受牵连的人们的利益所得，长期以往，就会造成官民矛盾的加深。但是当事情发生，人民总是会习惯性将责任归于政府身上，久而久之，另一股“反势力”亦然崛起…这是一个复杂性极强的真命题，在政府与民众之间，太过于偏向哪一方都是不理性的，在没有更多的调研的情况下亦然如此。</p><p>在中国，政府与民众之间的关系处理亦然还有很长一段路要走。</p><p>……</p><p>最近在“五一”之前通过网络有意无意看到了<a href="https://zh.wikipedia.org/zh/婉容" target="_blank" rel="external">末代皇后“婉容”</a>与<a href="https://zh.wikipedia.org/zh/嵯峨浩" target="_blank" rel="external">末代皇妃“嵯峨浩”</a>的图片，从此被她们两人的容颜深深的吸引了…我废寝忘食地花了三天去研读了关于她们的史料书籍。当然，其中最为吸引我的全是她们身后的故事以及那个战火纷飞的年代，无论是谁都难以逃过这场洗礼。每当联想到那个年代千千万万的人们，我突然也不再执着的去为以上两位女性感到极度的惋惜了。然而，因为了解到了婉容皇后的学识背景，深知她是个有智慧，且知书达理的具“现代思想”的女性，所以起初我始终都不相信她跟别人有“私通”一事，但是通过查看其当时身边人的回忆录，我只能去说服自己去相信确实是有着这么一个历史事件存在的…为此我亦感到痛惜，同时也满怀同情。</p><p>……</p><p>最近通过“五一”小长假，我又回到了“王者荣耀”的怀抱，所幸没有以前刚刚玩的时候那般痴迷了，不过时常想买下一些想买的东西，借此机会我偶然了解到了通过退款苹果“app store”免费获取游戏点卷一事，这个问题迄今存在好些年了。我好几次忍不住怀着这种想法想要自己去试试看，但是还是忍住了，但是，我却选择了去购买那些用这个方法得到点卷的人所出售的商品…我亦属于为虎作伥了，因为有需求才会产生市场，我亦是没有资格去评论这件事的，然而，我选择了用少部分钱去安慰自己的内心，使得良心受到的谴责更少一些罢了…我也是有些可笑了呢…但是我坚决不会去做那件实属“诈骗”行为的操作的！</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记4.24</title>
      <link href="/2019/04/24/%E6%9D%82%E8%AE%B04-24/"/>
      <url>/2019/04/24/%E6%9D%82%E8%AE%B04-24/</url>
      
        <content type="html"><![CDATA[<p>最近在身旁看到一些现象产生的想法。</p><a id="more"></a><p>最近身旁发生的一些事还是有些堵心的，算不上什么难言之隐，只是我也越来越沉默了，越发没有当初的“意气风发”了。碰到站在讲台上的大学老师一副奴才样，我是不忍心揭穿或者是不愿去计较的，人各有异罢了。</p><p>最近上的课的几个老师是与我的价值观格格不入的。在他们身上我难看到几点“客观”存在，大多数时候而是不停地在以主观形式去歌颂、去包庇，甚至毫无立场的去扭曲。如此滔滔不绝地“长篇大论”为生产？为生存？坐在讲台下的我想到“为生存”的一个因素，不免感觉有一股人人自危的硝烟感，心里也是感到岌岌可危的…天下之无道也久矣。深感当今的大学教育真是荒无人烟的感觉，伟大的“百年名校”梦怕是遥不可及矣。</p><p>另外的一个老师以“加分”为由，引诱学生去回答小学水准的问题，可笑的是居然有很多在坐的大学生乐此不疲，个个激情满满，好个朝气蓬勃！荒谬的教育，除了分数还是分数，除了分数一无所有。</p><p>关于食堂的公共座位的问题早已是泛滥成灾，不可收拾了。公共资源属于大家的，不知是哪群占座的杂种们传下来的规矩，一度好似属于私人座位了，他人想要坐在这里之前都还要客气讨问“请问这里有人吗？”，真是荒谬滑稽、可笑至极了。若是讨问的人自以为这是礼貌，那又真的是滑天下之大稽了。</p><p>一些所谓的“成功人士”前几天发表的关于“996”的看法，真是进退两难的窘样。中国的“成功人士”，“大企业家”真是可悲的人物，官前为生，民前为名，甚是悲哀乎。可怜但不值同情，正所谓可怜之人必有可恨之处矣。</p><p>苟志于礼，就此打住。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>996的帽子</title>
      <link href="/2019/04/13/%E2%80%9C996%E2%80%9D%E7%9A%84%E5%B8%BD%E5%AD%90/"/>
      <url>/2019/04/13/%E2%80%9C996%E2%80%9D%E7%9A%84%E5%B8%BD%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<p>早就想就<a href="https://996.icu/#/zh_CN" target="_blank" rel="external">“996.ICU”</a>一事做一些感想记录了。</p><a id="more"></a><p>不得不承认这个社会上的一些错误概念是极具迷惑性的，它们都有一个共同的特点：带着“心安理得”的帽子，带着“有理不怕影子斜”的帽子。也确实影响到了当今的一些人们，时不时就会看到有人被这些稍微夸大其词带起来的节奏牵着走，这些人往往也有一个共同的特点：那就是缺乏独立思考的意识。有时这些“披着羊皮的狼”的概念也极容易影响到一些独立思考能力尚不成熟的人，从而让人大惊：“句句在理”的错相，“头头是道”的误感。</p><p>一个国家政府为何总是要宣扬“国民要爱国”？而转身对外却又总是另一番矛盾的话(“人类无国界”、“人类大家庭”等)。一个政府该怎么做总是由一些主要执政人员来做决策的，这一点无论是在所谓的“民主”、“非民主”国家均如此，可以这么说，一个政府，一个国家是由这一些人掌控、发号命令的。当执政党受到了国外对手的压力就会时不时发动“爱国运动”，这是一个政府的一贯作风，平时的“爱国”即是做为为了未来威胁的保障。当然，一个国家政府中的一些执政人员亦然也有所谓的“使命感”，但是往往这样的人被认定为“做不成大事”被上层人员晾在一边。这个丑陋的世界是由一群丑陋的人群组成的，一个丑陋的人是由它丑陋的所作所为造成的。</p><p>反观所谓的企业无不如上如此。</p><p>何为“996”，实际上均是企业方面的要求；何为“奋斗”，往往是发自一个人内心的行动。这两者之间是完全不同的性质与概念。当今中国社会在早已非常流行的“成功文化”大趋势的笼罩下，一个所谓的“成功人士”往往说的一句话总是容易被人们牢记在心，深受“成功文化”影响的人甚至整日在研究这些话，企图从中找到奥秘助自己更上一层楼，早日达到“成功”的境界。仔细琢量，这种文化在整个人类历史中总是不缺范例，各种“成功人士”有很多相似之处也是值得一思的。放眼望去，人类圈子里从来不会缺少可笑与滑稽之人与荒唐无稽的事，与一个家庭的明争暗斗的性质没什么两样。另外，一个人别想着总是把自己所谓的”人生经验“强套在别人身上，难免会有一天引火自焚，这往往是所谓的大多数”成功人士“都会犯的通病。</p><p>生活在当今的中国社会上的人们较生活在上个世纪的清末年代的人们没什么两样，相较当今的主流国际文化，绝大部分国人还是格格不入的。一个国家真正的发达不应是外在的物质层面，应当要以精神文化为第一要义做为主要的衡量标准，这一点国人“还需努力”。</p><p>“996运动”应当成为一场打破荒诞无稽的“平反运动”，还给这个社会一部分正常的价值观。但在另一方面，要让那些思想僵化的人们醒悟实在是一种挑战。</p><p>我期待，同时也在盼望。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac上用iMovie为视频加上水印</title>
      <link href="/2019/04/12/Mac%E4%B8%8A%E7%94%A8iMovie%E4%B8%BA%E8%A7%86%E9%A2%91%E5%8A%A0%E4%B8%8Alogo%E6%B0%B4%E5%8D%B0/"/>
      <url>/2019/04/12/Mac%E4%B8%8A%E7%94%A8iMovie%E4%B8%BA%E8%A7%86%E9%A2%91%E5%8A%A0%E4%B8%8Alogo%E6%B0%B4%E5%8D%B0/</url>
      
        <content type="html"><![CDATA[<p>最近用到的iMovie有点多，研究了一下怎么在这个软件上为视频加上水印，在此记录以观后效之用。</p><iframe width="500" height="315" src="https://www.youtube.com/embed/fNIom-y2vcI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><a id="more"></a><p>在此之前必须要有一张自己的<code>.PNG</code>格式的图片，也就是要嵌入视频中的水印部分。</p><p>一. 在视频已经编辑好之后，将此图片拖入软件中：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Apr-12-2019%2017-48-08.gif" alt=""></p><p>二. 并且将图片拉至覆盖全视频：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Apr-12-2019%2017-48-27.gif" alt=""></p><p>三. 设置画中画以及摆设位置：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Apr-12-2019%2017-48-44.gif" alt=""></p><blockquote><p>设置完之后预览，你会发现视频中全程都有这个水印了！</p></blockquote><p>四. 保存文件。大功告成！</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> Mac </category>
          
          <category> iMovie </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> iMovie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在Mac上利用QuickTime Player录制系统声音</title>
      <link href="/2019/04/12/%E5%85%B3%E4%BA%8E%E5%9C%A8Mac%E4%B8%8A%E5%88%A9%E7%94%A8QuickTime-Player%E5%BD%95%E5%88%B6%E7%B3%BB%E7%BB%9F%E5%A3%B0%E9%9F%B3/"/>
      <url>/2019/04/12/%E5%85%B3%E4%BA%8E%E5%9C%A8Mac%E4%B8%8A%E5%88%A9%E7%94%A8QuickTime-Player%E5%BD%95%E5%88%B6%E7%B3%BB%E7%BB%9F%E5%A3%B0%E9%9F%B3/</url>
      
        <content type="html"><![CDATA[<p>最近做几个视频需要录制一些素材，其中就需要录制系统声音这一部分，以前就有过研究，一直没研究明白，现在终于解决了，在此记录以观后效之用。</p><iframe width="500" height="315" src="https://www.youtube.com/embed/PLAxg1GhgEw" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><a id="more"></a><h1 id="下载Soundflower"><a href="#下载Soundflower" class="headerlink" title="下载Soundflower"></a>下载Soundflower</h1><p>首先在<a href="https://github.com/mattingalls/Soundflower/releases" target="_blank" rel="external">Soundflower</a>上下载最新的或者是对应的版本。</p><blockquote><p>下载好之后看下面的操作。</p></blockquote><h1 id="配置音频"><a href="#配置音频" class="headerlink" title="配置音频"></a>配置音频</h1><p>首先打开Mac上的<code>实用工具</code>，点击<code>音频MIDI设置</code>：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8A%E5%8D%8811.45.25.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8A%E5%8D%8811.47.42.png" alt=""></p><blockquote><p>如上设置。</p></blockquote><h2 id="偏好系统声音设置"><a href="#偏好系统声音设置" class="headerlink" title="偏好系统声音设置"></a>偏好系统声音设置</h2><p>打开<code>偏好系统设置</code>，点击<code>声音</code>进入设置：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8A%E5%8D%8811.53.12.png" alt=""></p><p>之后按下图显示的设置：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8A%E5%8D%8811.54.10.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8A%E5%8D%8811.55.08.png" alt=""></p><blockquote><p>如上设置，<code>Soundflower(2ch)</code>是仅仅表示系统声音的选项。</p></blockquote><h1 id="配合QuickTime-Player录制"><a href="#配合QuickTime-Player录制" class="headerlink" title="配合QuickTime Player录制"></a>配合QuickTime Player录制</h1><p>首先在主屏幕的上方可以看到的声音图标，按下<code>OPtion</code>键点击查看如下：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8A%E5%8D%8811.58.38.png" alt=""></p><blockquote><p>以后可通过这个图标自行调节声音选项，很是方便。</p></blockquote><p>打开<code>QuickTime Player</code>，点击<code>文件</code>选择<code>新建屏幕录制</code>：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8B%E5%8D%8812.01.31.png" alt=""></p><blockquote><p>或者使用对应的快捷键也行。</p></blockquote><p>之后就是QuickTime Player录制前的配置：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Apr-12-2019%2012-04-08.gif" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8B%E5%8D%8812.04.36.png" alt=""></p><p><strong>录制完成之后你会发现录制完成的声音比平时正常的的系统声音小了不少！！！以下是解决方案。</strong></p><h2 id="声音小的解决方案"><a href="#声音小的解决方案" class="headerlink" title="声音小的解决方案"></a>声音小的解决方案</h2><p>打开Mac自带的<code>iMovie</code>(其他的软件亦可，主要是调节一下声音即可)，进行以下的操作：</p><ul><li>首先新建一个视频项目：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Apr-12-2019%2012-11-36.gif" alt=""></p><ul><li>之后导入录制好的影片并且进行声音设置：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Apr-12-2019%2012-21-34.gif" alt=""> </p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-04-12%20%E4%B8%8B%E5%8D%8812.24.27.png" alt=""></p><ul><li>保存文件：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Apr-12-2019%2012-22-03.gif" alt=""></p><blockquote><p>选择的音量越大，之后导出来的影片声音就会越大，比如我选择了<code>400%</code>，导出来的影片的声音就会比平时正常的系统声音要大声好几倍！平时只要设置成<code>100%</code>加上<code>自动</code>的选项，之后导出来就是平时正常的系统声音了。</p></blockquote><p>另外，在测试声音的大小时，如果是插上耳机是不会影响测试的，在<code>输出设备</code>选择<code>耳机</code>或者是<code>多输出设备</code>都是不影响声音从耳际传出的(如果前提是插上耳机)。</p><p>导出成功之后在保存的目录下打开影片就会发现声音和系统声音大小一致或者是比系统声音还要大了(可自行如上设置即可)。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><p><a href="https://mp.weixin.qq.com/s?__biz=MzI4NjQwMDQ1NQ==&amp;mid=2247484132&amp;idx=1&amp;sn=d50b714a03a577ece629490c796db868&amp;chksm=ebdcc84cdcab415a3618753e565873fb53f7ef6c24930f46e60f0e030a238d50e1a3e9088971#rd" target="_blank" rel="external">用Mac自带的QuickTime Player录制只有系统声音的视频教程</a></p></li><li><p><a href="https://www.zhihu.com/question/20251726" target="_blank" rel="external">macOS 下怎么录屏，能同时保留声音？有哪些较好的解决方案？</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 软件使用 </tag>
            
            <tag> QuickTime Player </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3 PyQt5界面开发:YouTube-dl Mac版GUI实用下载工具</title>
      <link href="/2019/04/10/python3-PyQt5%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91-YouTube-dl-Mac%E7%89%88GUI%E5%AE%9E%E7%94%A8%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/04/10/python3-PyQt5%E7%95%8C%E9%9D%A2%E5%BC%80%E5%8F%91-YouTube-dl-Mac%E7%89%88GUI%E5%AE%9E%E7%94%A8%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>最近因需求自行开发了一个基于<a href="https://github.com/ytdl-org/youtube-dl#embedding-youtube-dl" target="_blank" rel="external">YouTube-dl</a>的下载界面，其中可提供下载最好质量的音频、视频文件，并且实现了添加代理的需求。</p><a id="more"></a><p>以下为现今的半完成品代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> youtube_dl</div><div class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> *</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stream</span><span class="params">(QtCore.QObject)</span>:</span></div><div class="line">    newText = QtCore.pyqtSignal(str)</div><div class="line">     </div><div class="line"><span class="comment">#     def flush(self):</span></div><div class="line"><span class="comment">#         sys.setrecursionlimit(10000) </span></div><div class="line"><span class="comment">#         ys.stdout.write(text)</span></div><div class="line"><span class="comment">#         sys.stdout.flush()</span></div><div class="line">         </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(self, text)</span>:</span></div><div class="line">        self.newText.emit(str(text))</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThreadWorker</span><span class="params">(QThread)</span>:</span></div><div class="line">    newText = pyqtSignal()</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, parent=None)</span>:</span></div><div class="line">        super(ThreadWorker, self).__init__(parent)</div><div class="line">        self.working = <span class="keyword">True</span></div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></div><div class="line">        self.working = <span class="keyword">False</span></div><div class="line">        self.wait()</div><div class="line">    </div><div class="line"><span class="comment">#     def run(self):</span></div><div class="line"><span class="comment">#         Up = YouTube_dl_MacGUI()</span></div><div class="line"><span class="comment">#         self.sys.stdout = Stream(newText=Up.onUpdateText)</span></div><div class="line"><span class="comment">#         </span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">while</span> self.working == <span class="keyword">True</span>:</div><div class="line">            <span class="string">"""</span></div><div class="line"><span class="string">            下载音乐/音频</span></div><div class="line"><span class="string">            """</span></div><div class="line">            Youtube_UI = YouTube_dl_MacGUI()</div><div class="line">            proxy = Youtube_UI.add_proxy().proxy</div><div class="line">            ydl_opts = &#123;</div><div class="line">                <span class="string">'format'</span>: <span class="string">'140'</span>,</div><div class="line">                <span class="string">'proxy'</span>: proxy,</div><div class="line">                <span class="string">'writesubtitles'</span>: <span class="string">'Yes'</span>,</div><div class="line">                <span class="string">'allsubtitles'</span>: <span class="string">'Yes'</span></div><div class="line">                &#125;</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                start = time.time()</div><div class="line">                <span class="keyword">with</span> youtube_dl.YoutubeDL(ydl_opts) <span class="keyword">as</span> ydl:</div><div class="line">                    ydl.download([Youtube_UI.YouTube_URL_Line.text()])</div><div class="line">            <span class="keyword">except</span>:</div><div class="line">                print(<span class="string">"Sorry，your proxy can't use! or URL format error！"</span>)</div><div class="line">            end = time.time()</div><div class="line">            <span class="keyword">return</span> <span class="string">"use time:&lt;&#123;0&#125;&gt;"</span>.format(end - start) </div><div class="line"> </div><div class="line">        self.newText.emit()</div><div class="line"></div><div class="line">         </div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span><span class="params">(QRunnable)</span>:</span></div><div class="line">    newText = pyqtSignal(str)</div><div class="line"></div><div class="line"><span class="meta">    @pyqtSlot()</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></div><div class="line">        self.newText.emit()</div><div class="line">        </div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">YouTube_dl_MacGUI</span><span class="params">(QWidget)</span>:</span></div><div class="line"><span class="comment">#     proxy = 'socks5://127.0.0.1:1080'  # default proxy</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line"><span class="comment">#         self.threadpool = QThreadPool()</span></div><div class="line"><span class="comment">#         worker = Worker()</span></div><div class="line"><span class="comment">#         self.threadpool.start()</span></div><div class="line">        <span class="comment"># 自定义输出流</span></div><div class="line"><span class="comment">#         sys.stdout = Stream(newText=self.onUpdateText)</span></div><div class="line"><span class="comment">#         self.MyThread = ThreadWorker()</span></div><div class="line"><span class="comment">#         self.MyThread.start()</span></div><div class="line"><span class="comment">#         sys.stdout = self.MyThread.newText.connect(self.onUpdateText)</span></div><div class="line"><span class="comment">#         MyThread.start()</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Working</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        线程启动</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.MyThread = ThreadWorker()</div><div class="line">        self.MyThread.start()</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add_proxy</span><span class="params">(self, proxy)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        添加代理之用，默认显示为'socks5://127.0.0.1:1080'</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.proxy = proxy </div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            print(<span class="string">"Current Proxy:&lt;&#123;0&#125;&gt;"</span>.format(self.proxy))</div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            print(<span class="string">"Sorry，your proxy can't use!"</span>)</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">down_Music</span><span class="params">(self, url)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        下载音乐/音频</span></div><div class="line"><span class="string">        """</span></div><div class="line">        ydl_opts = &#123;</div><div class="line">            <span class="string">'format'</span>: <span class="string">'140'</span>,</div><div class="line">            <span class="string">'proxy'</span>: self.proxy,</div><div class="line">            <span class="string">'writesubtitles'</span>: <span class="string">'Yes'</span>,</div><div class="line">            <span class="string">'allsubtitles'</span>: <span class="string">'Yes'</span></div><div class="line">            &#125;</div><div class="line">        <span class="keyword">try</span>:</div><div class="line"><span class="comment">#             start = time.time()</span></div><div class="line">            <span class="keyword">with</span> youtube_dl.YoutubeDL(ydl_opts) <span class="keyword">as</span> ydl:</div><div class="line">                ydl.download([url])</div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            print(<span class="string">"Sorry，your proxy can't use! or URL format error！"</span>)</div><div class="line"><span class="comment">#         end = time.time()</span></div><div class="line"><span class="comment">#         return "use time:&lt;&#123;0&#125;&gt;".format(end - start) </span></div><div class="line">     </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">down_Video</span><span class="params">(self, url)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        下载视频</span></div><div class="line"><span class="string">        """</span></div><div class="line">        ydl_opts = &#123;</div><div class="line">            <span class="string">'proxy'</span>: self.proxy,</div><div class="line">            <span class="string">'writesubtitles'</span>: <span class="string">'Yes'</span>,</div><div class="line">            <span class="string">'allsubtitles'</span>: <span class="string">'Yes'</span></div><div class="line">            &#125;</div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            start = time.time()</div><div class="line">            <span class="keyword">with</span> youtube_dl.YoutubeDL(ydl_opts) <span class="keyword">as</span> ydl:</div><div class="line">                <span class="keyword">return</span> ydl.download([url])</div><div class="line">        <span class="keyword">except</span>:</div><div class="line">            print(<span class="string">"Sorry，your proxy can't use! or URL format error！"</span>)</div><div class="line">        end = time.time()</div><div class="line">        <span class="keyword">return</span> <span class="string">"use time:&lt;&#123;0&#125;&gt;"</span>.format(end - start) </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.combo = QComboBox(self)</div><div class="line">        self.combo.addItems([<span class="string">'Download Music/Audio'</span>, <span class="string">'Download Video'</span>])</div><div class="line"><span class="comment">#         combo.addItem('Download Video')</span></div><div class="line">        self.combo.activated[str].connect(self.Sele_Format)</div><div class="line">        </div><div class="line">        self.Proxy_Label = QLabel(<span class="string">'Proxy:'</span>, self)</div><div class="line">        self.YouTube_URL_Label = QLabel(<span class="string">'URL:'</span>, self)</div><div class="line">        self.Proxy_Line = QLineEdit(self)</div><div class="line">        self.Proxy_Line.setPlaceholderText(<span class="string">"e.g.:socks5://127.0.0.1:1080"</span>)</div><div class="line">        self.Proxy_Line.setToolTip(<span class="string">"socks4/5://ip:port"</span>)</div><div class="line">        self.YouTube_URL_Line = QLineEdit(self)</div><div class="line">        self.YouTube_URL_Line.setPlaceholderText(<span class="string">"e.g.:https://www.youtube.com/watch?v=ZSM3w1v-A_Y"</span>)</div><div class="line">        self.YouTube_URL_Line.setToolTip(<span class="string">"YouTube URL"</span>)</div><div class="line">        </div><div class="line">        <span class="comment"># 设置按钮及其快捷键</span></div><div class="line"><span class="comment">#         MyThread = Thread()</span></div><div class="line"><span class="comment">#         MyThread.newText.connect(self.onUpdateText)</span></div><div class="line"><span class="comment">#         MyThread.start()</span></div><div class="line">        self.Apply_Button = QPushButton(<span class="string">'Apply'</span>, self)</div><div class="line">        self.Apply_Button.setToolTip(<span class="string">"Apply Proxy"</span>)</div><div class="line">        self.Start_Button = QPushButton(<span class="string">'Start Donwload'</span>, self)</div><div class="line">        self.Start_Button.setToolTip(<span class="string">"return"</span>)</div><div class="line"><span class="comment">#         self.Start_Button.clicked.connect(lambda :self.MyThread.start())</span></div><div class="line">        self.Clear_Button = QPushButton(<span class="string">'Clear'</span>, self)</div><div class="line">        self.Clear_Button.setToolTip(<span class="string">"esc"</span>)</div><div class="line">        self.Quit_Button = QPushButton(<span class="string">'Quit'</span>, self)</div><div class="line">        self.Quit_Button.setToolTip(<span class="string">"command+q"</span>)</div><div class="line"><span class="comment">#         self.Quit_Button.clicked.connect(lambda :self.MyThread.terminate())</span></div><div class="line">        self.Start_Button.setShortcut(<span class="string">'return'</span>)</div><div class="line">        self.Clear_Button.setShortcut(<span class="string">'esc'</span>)</div><div class="line">        self.Quit_Button.setShortcut(<span class="string">'command+q'</span>)</div><div class="line">        self.Quit_Button.clicked.connect(QCoreApplication.instance().quit)</div><div class="line"><span class="comment">#         self.result = QTextBrowser()</span></div><div class="line">        self.result = QTextEdit(self, readOnly=<span class="keyword">True</span>)</div><div class="line">        self.result.moveCursor(QTextCursor.Start)</div><div class="line">        self.result.ensureCursorVisible()</div><div class="line">        self.result.setLineWrapColumnOrWidth(<span class="number">500</span>)</div><div class="line">        self.result.setLineWrapMode(QTextEdit.FixedPixelWidth)</div><div class="line">        self.result.setFixedWidth(<span class="number">600</span>)</div><div class="line">        self.result.setFixedHeight(<span class="number">400</span>)</div><div class="line">        self.result.setGeometry(<span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>, <span class="number">200</span>)  <span class="comment"># 非必要</span></div><div class="line">        </div><div class="line">        <span class="comment"># 布局设置</span></div><div class="line">        grip = QGridLayout()</div><div class="line">        grip.setSpacing(<span class="number">7</span>)</div><div class="line">        grip.addWidget(self.Proxy_Label, <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">        grip.addWidget(self.Proxy_Line, <span class="number">2</span>, <span class="number">0</span>)</div><div class="line">        grip.addWidget(self.Apply_Button, <span class="number">2</span>, <span class="number">1</span>)</div><div class="line">        grip.addWidget(self.YouTube_URL_Label, <span class="number">3</span>, <span class="number">0</span>)</div><div class="line">        grip.addWidget(self.YouTube_URL_Line, <span class="number">4</span>, <span class="number">0</span>)</div><div class="line">        grip.addWidget(self.Clear_Button, <span class="number">4</span>, <span class="number">1</span>)</div><div class="line">        grip.addWidget(self.combo, <span class="number">5</span>, <span class="number">0</span>)</div><div class="line">        grip.addWidget(self.Start_Button, <span class="number">5</span>, <span class="number">1</span>)</div><div class="line">        grip.addWidget(self.result, <span class="number">6</span>, <span class="number">0</span>)</div><div class="line">        grip.addWidget(self.Quit_Button, <span class="number">7</span>, <span class="number">1</span>)</div><div class="line">        self.setLayout(grip)</div><div class="line">        self.Quit_Button.move(<span class="number">100</span>, <span class="number">100</span>)  <span class="comment"># 非必要</span></div><div class="line">        </div><div class="line">        self.setGeometry(<span class="number">500</span>, <span class="number">300</span>, <span class="number">600</span>, <span class="number">500</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'Mac Youtube-dl Downloader'</span>)</div><div class="line">        self.setWindowIcon(QIcon(<span class="string">'YouTubedl.ico'</span>))</div><div class="line">        self.Clear_Button.clicked.connect(self.Clear_URL_Result)</div><div class="line">        self.Apply_Button.clicked.connect(self.Apply_Proxy)</div><div class="line">        self.Start_Button.clicked.connect(self.Sele_Format)</div><div class="line">        self.show()</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">onUpdateText</span><span class="params">(self, text)</span>:</span></div><div class="line">        cursor = self.result.textCursor()</div><div class="line">        cursor.movePosition(QtGui.QTextCursor.End)</div><div class="line">        cursor.insertText(text)</div><div class="line"><span class="comment">#         QApplication.processEvents()</span></div><div class="line"><span class="comment">#         time.sleep(1)</span></div><div class="line">        self.result.setTextCursor(cursor)</div><div class="line">        self.result.ensureCursorVisible()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></div><div class="line">        sys.stdout = sys.__stdout__</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Clear_URL_Result</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        清空URL列表以及结果显示处</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.YouTube_URL_Line.setText(<span class="string">""</span>)</div><div class="line">        self.result.setText(<span class="string">""</span>)</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Apply_Proxy</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        应用代理信息</span></div><div class="line"><span class="string">        """</span></div><div class="line"><span class="comment">#         self.MyThread = ThreadWorker()</span></div><div class="line"><span class="comment">#         self.MyThread.start()</span></div><div class="line"><span class="comment">#         sys.stdout = self.MyThread.newText.connect(self.onUpdateText)</span></div><div class="line">        <span class="keyword">return</span> self.add_proxy(self.Proxy_Line.text())</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Sele_Format</span><span class="params">(self, text)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        用于选择音频/视频格式</span></div><div class="line"><span class="string">        """</span></div><div class="line"><span class="comment">#             if self.combo.addItem('Download Music/Audio'):</span></div><div class="line"><span class="comment">#                 self.result.setText(self.down_Music(self.YouTube_URL_Line.text()))</span></div><div class="line"><span class="comment">#             else:</span></div><div class="line"><span class="comment">#                 self.result.setText(self.down_Video(self.YouTube_URL_Line.text()))</span></div><div class="line">        <span class="keyword">if</span> text == <span class="string">'Download Music/Audio'</span>:</div><div class="line">            <span class="keyword">return</span> self.down_Music(self.YouTube_URL_Line.text())</div><div class="line"><span class="comment">#             return self.Working()</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> self.down_Video(self.YouTube_URL_Line.text())</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">()</span>:</span></div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = YouTube_dl_MacGUI()</div><div class="line">    sys.exit(app.exec())</div><div class="line"></div><div class="line">        </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    run()</div></pre></td></tr></table></figure><p>简要的添加了代理以及增加链接即可进行下载，默认下载质量最好的。视频格式为<code>.mp4</code>，音乐为<code>.m4a</code>。</p><blockquote><p>如果失效出错了，大多是因为<code>YouTube-dl</code>的版本问题，基本上更新一下就好。</p></blockquote><p>实际上不仅限于下载YouTube上的资源，其中的<code>YouTube-dl</code>支持，基本上都能下载，比如<code>pronhub</code>…实用，实用。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><p>可播放<code>.m4a</code>格式的开源播放器：<br><a href="https://quodlibet.readthedocs.io/en/latest/downloads.html#macosx" target="_blank" rel="external">Quod Libet</a></p></li><li><p>其他播放器可参考：<br><a href="https://www.zhihu.com/question/20355565" target="_blank" rel="external">Mac系统上的APE、FLAC播放器有哪些？哪个体验最好？</a></p></li><li><p>格式了解：<br><a href="https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E5%88%97%E8%A1%A8" target="_blank" rel="external">文件格式列表</a>、<br><a href="https://www.apowersoft.tw/what-is-m4a-format" target="_blank" rel="external">M4A格式百科</a></p></li><li><p>在线下载YouTube资源：<br><a href="https://ytmp3.cc/" target="_blank" rel="external">YouTube to Mp3</a>、<br><a href="https://2conv.com/downloads/mp3/yd_fm0T7_SGee4/" target="_blank" rel="external">2conv.com</a>、<br><a href="https://www.youtubnow.com/watch/?v=ZSM3w1v-A_Y&amp;f=mp4_360p" target="_blank" rel="external">YouTubNow</a></p></li><li><p>代码中主要的一些参考链接：<br><a href="https://blog.csdn.net/u014770372/article/details/76021988" target="_blank" rel="external">python format 用法详解</a>、<br><a href="https://stackoverflow.com/questions/44432276/print-out-python-console-output-to-qtextedit" target="_blank" rel="external">Print out python console output to Qtextedit</a>、<br><a href="https://cloud.tencent.com/developer/ask/201670" target="_blank" rel="external">刷新输出定向到PyQt中的QTextEdit</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> Python </category>
          
          <category> PyQT5 </category>
          
          <category> 实用工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Python </tag>
            
            <tag> PyQT5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心情</title>
      <link href="/2019/04/10/%E5%BF%83%E6%83%85/"/>
      <url>/2019/04/10/%E5%BF%83%E6%83%85/</url>
      
        <content type="html"><![CDATA[<p>今天天阴沉沉的，先前想说的一些话憋在心里一直没心情写下来，反观倒也不是没心情，人总是矛盾的，对于一个问题，总是在一边认同，又在一边慢慢的否认。越来越感觉自己就是一个被蒙着双眼、随波逐流的人了，而这种感觉无论是从前的我，还是现在的我都是最不情愿接受的结果。</p><a id="more"></a><p>心情处在沮丧和静默的边缘，不光光是内心许久的积压，更多的却是关乎我对于这个真实世界的更进一步的理解与透明。我明显的感觉到，曾经有的一些梦想、幻想开始变得有些动摇，有些甚至于早已灰飞烟灭，在这个丑陋的世界，拥有美好的幻梦是天真的，但是同时也是难得的。我行走在两者之间，有些无法自拔，我也不甘心。</p><p>曾何几时，我是个理想的“共产主义者”，幻想着“人类大家庭”的狂欢与欣喜，那时的我感觉一切都是那么美好，在这个没有多少忧虑的学生时代，我做着无数无比的“奉献大梦”，做一个能为人们奉献自我的人，以为需要的人们创造价值作为我的第一信条，以助人为乐为此生的终生信仰，与此同时，对于未来，我慢慢的变得明朗、乐观了，一切充满着希望，一切都还有希望。如今，我依旧是个理想的“共产主义者”。但是我从未信奉过“共产党”，因为我清楚的知道这是多大的一个自欺欺人的群体啊，在当今的这个世界，“共产主义”永远只能活着梦中，她才是一个真真切切我们永远触不可及的幻梦，就让她活着“乌托邦的世界”吧，从幻梦中给予信奉她的人们以希望，寄托信奉她的人们美好的意愿，这样就足够了。</p><p>我不恨任何有美好初衷的群体，可恨的是那些利用这些善良的人。世界上没有一贯的十全十美，就如同所谓的不完美总是发生在每个人身上以至于被人津津乐道一样。没有上善若水的至高良善之辈，也没有彻彻底底的从恶者，但是从来不会缺少更多的行尸走肉。</p><p>沉默着，无力地一言不发，不说什么幸运，我只是更为深刻地看清了前方的路途与身旁的切身切事，但依然难逃雾里看花的世运。此时此刻的我，依旧与当初爱做梦的我有着美好的初衷，并且乐在其中，不求什么方得终始，只要我还是我，就可以有我想要的一切。至少在我的世界里。</p><p>我不会妥协，也不会肆意认同，我要带着自己的良知，去做我要做的。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我們都是木頭人-李怡</title>
      <link href="/2019/03/27/%E6%88%91%E5%80%91%E9%83%BD%E6%98%AF%E6%9C%A8%E9%A0%AD%E4%BA%BA-%E6%9D%8E%E6%80%A1/"/>
      <url>/2019/03/27/%E6%88%91%E5%80%91%E9%83%BD%E6%98%AF%E6%9C%A8%E9%A0%AD%E4%BA%BA-%E6%9D%8E%E6%80%A1/</url>
      
        <content type="html"><![CDATA[<p>最近看到李怡先生的一首詩《我們都是木頭人》，感觸頗深，在此紀錄，以此激勵自我。</p><a id="more"></a><blockquote><p>我們都是木頭人/不許講話不許笑/還有一個不許動/就這樣我們頭髮慢慢白了/皮膚變黑了，皺紋越來越多了/就這樣我們走進生命的冬日/天黑得越來越快了/就這樣我的好友，我的兄弟/離得越來越遠了/圍坐身旁的都是陌生人/我們低着頭，像接受懲罰的孩子/血落在這裏/長出來的都是木頭人</p><p>我們都是木頭人/這是我們內在生活的真實形象/他們數數人頭，就知道我們還在/看見我們吃飯/就知道木頭人還乖/他們真是這樣想的……</p><p>我們都是木頭人/我是木頭人，我的妻子是木頭人/我的孩子也會長成木頭人/為何要保留這愚蠢的人形/為何要鍛煉身體，翻跟頭，倒立/為何要發育/這就是我理解的生命，和生命的回報/我們都是木頭人</p><p>所以我們今天還生活在這裏/爬吧，乞求吧，發霉吧/你有嬰兒般細嫩的皮膚有何用/你有含苞欲放的紅唇有何用/你有烏溜溜的黑眼睛有何用/你有健壯的胸肌，你有堅挺的雙乳/又有何用/我們都是木頭人/二十歲被埋葬，三十歲已成白骨/四十歲後在世間遊盪的都是乾屍/與吸血鬼</p><p>是呵，你還活着，你還做夢/你還有三天的路才到達目的地/你的雙手還未被捆綁/你還能背叛與撒謊/看看這些怪物吧/除了繁殖，他們還能做些甚麼/看看恐懼發育成形的脊椎/看看被管制而萎縮的大腦/我們都是木頭人，現在選擇吧……</p><p>選擇吧，我們都是木頭人/死亡才能終止這種存在/大喊救命的木頭人/死於貧困的木頭人/被生活累垮的木頭人/讓貪婪吞噬的木頭人/木頭人能唱的永遠是一支悲哀的歌……</p><p>選擇吧！木頭人，讓木頭燃燒/讓這個騙子集團現出原形/燒毀那些教義/燒毀愚蠢的報紙與教科書/燒毀所有謊話和說謊話的人/瞧，我們自己也冒煙了/這是每一個木頭人的節日</p><p>我必須醒着看到這個結尾/我必須繼續工作，我必須……/我必須贏得所有人的幫助/讓木頭變回木頭，讓人成為人</p><p>你不相信這是真的/木頭人你有好心腸/木頭人你已病入膏肓/我們都是木頭人/不許講話不許笑/還有一個不許動/我就是死也要走在人的大路上」</p></blockquote><p>讀盡，心情久久不能平復。應對當今之世的真實寫照，欲言又止矣…</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用mysql命令行记录</title>
      <link href="/2019/03/23/%E5%B8%B8%E7%94%A8mysql%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/03/23/%E5%B8%B8%E7%94%A8mysql%E5%91%BD%E4%BB%A4%E8%A1%8C%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>此文用于记录个人常用的或者是感到疑惑的<em>mysql</em>命令行记录，因为平时用到的<em>mysql</em>实在是少，所以在此做个简要记录以观后效之用。</p><a id="more"></a><h1 id="查看MYSQL默认端口号"><a href="#查看MYSQL默认端口号" class="headerlink" title="查看MYSQL默认端口号"></a>查看MYSQL默认端口号</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SHOW GLOBAL VARIABLES LIKE <span class="string">'port'</span>;</div></pre></td></tr></table></figure><h1 id="查询当前所在的数据库"><a href="#查询当前所在的数据库" class="headerlink" title="查询当前所在的数据库"></a>查询当前所在的数据库</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT DATABASE();</div></pre></td></tr></table></figure><h1 id="查看数据库中的所有用户"><a href="#查看数据库中的所有用户" class="headerlink" title="查看数据库中的所有用户"></a>查看数据库中的所有用户</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SELECT DISTINCT CONCAT(&apos;User: &apos;&apos;&apos;, user, &apos;&apos;&apos;@&apos;&apos;&apos;,host,&apos;&apos;&apos;:&apos;) AS quert FROM mysql.user;</div></pre></td></tr></table></figure><h1 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#user_name：要创建用户的名字。</span></div><div class="line"><span class="comment">#host：表示要这个新创建的用户允许从哪台机登陆，如果只允许从本机登陆，则 填　‘localhost’ ，如果允许从远程登陆，则填 ‘%’。</span></div><div class="line"><span class="comment">#password：新创建用户的登陆数据库密码，如果没密码可以不写。</span></div><div class="line"></div><div class="line">CREATE USER <span class="string">'user_name'</span>@<span class="string">'host'</span> IDENTIFIED BY <span class="string">'password'</span>;</div><div class="line"></div><div class="line"><span class="comment">#无密码</span></div><div class="line">CREATE USER <span class="string">'user_name'</span>@<span class="string">'host'</span>;</div></pre></td></tr></table></figure><h1 id="设置与更改用户密码"><a href="#设置与更改用户密码" class="headerlink" title="设置与更改用户密码"></a>设置与更改用户密码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#规范语法</span></div><div class="line">SET  PASSWORD  FOR  ‘username’@‘host’ = PASSWORD(‘newpassword’)； </div><div class="line"></div><div class="line"><span class="comment">#设置当前用户的密码：SET  PASSWORD = PASSWORD('newpassword')；</span></div><div class="line"></div><div class="line">SET  PASSWORD = PASSWORD(‘<span class="number">123456</span>’)；//实例句</div></pre></td></tr></table></figure><h1 id="撤销用户权限"><a href="#撤销用户权限" class="headerlink" title="撤销用户权限"></a>撤销用户权限</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">REVOKE   privileges   ON  database.tablename  FROM  ‘username’@‘host’；</div><div class="line"></div><div class="line"><span class="comment">#若是有先前的语句命令在前的前提下，下方语句才成立。</span></div><div class="line">GRANT  SELECT ON  *.*  FROM  ‘test’@‘localhost’；</div><div class="line">REVOKE  SELECT ON  *.*  FROM  ‘test’@‘localhost’；</div><div class="line"><span class="comment">#两者前后的命令必须一致。</span></div></pre></td></tr></table></figure><h1 id="授权用户"><a href="#授权用户" class="headerlink" title="授权用户"></a>授权用户</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#privileges：表示要授予什么权力，例如可以有 select ， insert ，delete，update等，如果要授予全部权力，则填 ALL</span></div><div class="line"><span class="comment">#databasename.tablename：表示用户的权限能用在哪个库的哪个表中，如果想要用户的权限很作用于所有的数据库所有的表，则填 *.*，*是一个通配符，表示全部。</span></div><div class="line"><span class="comment">#’username‘@‘host’：表示授权给哪个用户。</span></div><div class="line"></div><div class="line">GRANT privileges ON  databasename.tablename  TO  ‘username’@‘host’；</div><div class="line"></div><div class="line">GRANT  select，insert  ON  zje.zje  TO ‘aaa’@‘%’；//表示给用户aaa授权，让aaa能给zje库中的zje表 实行 insert 和 select。</div><div class="line"></div><div class="line">GRANT  ALL  ON  *.*  TO  ‘aaa’@‘%’；//表示给用户aaa授权，让aaa能给所有库所有表实行所有的权力。</div><div class="line"></div><div class="line"><span class="comment">#用以上命令授权的用户不能给其他用户授权，如果想这个用户能够给其他用户授权，就要在后面加上“WITH GRANT OPTION”。</span></div><div class="line">GRANT  ALL  ON   *.*   TO  ’aaa‘@<span class="string">'%'</span>  WITH GRANT OPTION；</div></pre></td></tr></table></figure><h1 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#DROP  USER ‘user_name’@‘host’ </span></div><div class="line">DROP USER <span class="string">'test'</span>@<span class="string">'localhost'</span>;</div></pre></td></tr></table></figure><h1 id="查看用户的表结构"><a href="#查看用户的表结构" class="headerlink" title="查看用户的表结构"></a>查看用户的表结构</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#DESC user_name.user</span></div><div class="line">DESC mysql.user;</div></pre></td></tr></table></figure><h1 id="查看某个用户的权限"><a href="#查看某个用户的权限" class="headerlink" title="查看某个用户的权限"></a>查看某个用户的权限</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#第一种，user='user_name'</span></div><div class="line">SELECT * FROM mysql.user WHERE user=<span class="string">'Django_votingsystem'</span>;</div><div class="line"></div><div class="line"><span class="comment">#第二种，不怎么好用。'user_name'@'host'。</span></div><div class="line">SHOW GRANTS FOR <span class="string">'Django_votingsystem'</span>@<span class="string">'localhost'</span>;</div></pre></td></tr></table></figure><h1 id="mysql安装、验证等最初命令行"><a href="#mysql安装、验证等最初命令行" class="headerlink" title="mysql安装、验证等最初命令行"></a>mysql安装、验证等最初命令行</h1><blockquote><p>可参考：<a href="https://m.w3cschool.cn/mysql/mysql-install.html" target="_blank" rel="external">https://m.w3cschool.cn/mysql/mysql-install.html</a></p></blockquote><h1 id="参考过的文章"><a href="#参考过的文章" class="headerlink" title="参考过的文章"></a>参考过的文章</h1><ul><li><p><a href="https://blog.csdn.net/u014453898/article/details/55064312" target="_blank" rel="external">MYSQL的创建用户，授权用户，删除用户，查看用户</a></p></li><li><p><a href="https://m.w3cschool.cn/mysql/mysql-install.html" target="_blank" rel="external">MySQL教程</a></p></li><li><p><a href="https://dev.mysql.com/doc/" target="_blank" rel="external">MySQL Documentation</a></p></li></ul><blockquote><p><a href="http://www.searchdoc.cn/rdbms/mysql/dev.mysql.com/doc/refman/5.7/en/preface.com.coder114.cn.html" target="_blank" rel="external">MySQL 5.7参考手册中文</a></p></blockquote><ul><li><a href=""></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复习：数据库</title>
      <link href="/2019/03/23/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2019/03/23/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<p>这是开始为秋招做准备的简单复习，因为之前没怎么好好学习<em>数据库</em>，所以现在学习一番，并且在此做个记录以观后效之用。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python疑惑以及所有使用库问题汇总笔记记录</title>
      <link href="/2019/03/22/Python%E7%96%91%E6%83%91%E4%BB%A5%E5%8F%8A%E6%89%80%E6%9C%89%E4%BD%BF%E7%94%A8%E5%BA%93%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/03/22/Python%E7%96%91%E6%83%91%E4%BB%A5%E5%8F%8A%E6%89%80%E6%9C%89%E4%BD%BF%E7%94%A8%E5%BA%93%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>此文以记录一些常见的、模糊的<em>Python知识点</em>以及在使用其所有的模块库过程中产生的疑惑为主，在此记录以观后效之用。</p><a id="more"></a><h1 id="Python如何运行程序"><a href="#Python如何运行程序" class="headerlink" title="Python如何运行程序"></a>Python如何运行程序</h1><p>大多数程序员仅知道运行Python就是在文本中输入代码，然后将其交与“解释器”去执行运行。但是，透过表面去确切了解一下这个步骤：第一步是编译成所谓的“字节码”，之后再将其转发到所谓的“虚拟机”中。了解这个步骤可以帮助我们宏观上掌握程序的执行。</p><h2 id="字节码编译"><a href="#字节码编译" class="headerlink" title="字节码编译"></a>字节码编译</h2><p>当程序执行时，Python内部（对大多数用户来说是完全隐藏的）会先将源代码（文中的语句）编译成所谓字节码的形式。概括地说，Python通过把每一条源语句分解为单一步骤来将这些源代码翻译成一组字节码指令，这是一个简单的翻译步骤，而且字节码是源代码底层的、与平台无关的表现形式。另外值得一提的是：这些字节码可以提高执行速度，比起文本文件中的原始的源代码语句，它的运行速度要快得多。</p><p>下面来看看其中的奇妙之处：若是Python进程在机器上拥有写入权限，那么它将把程序的字节码保存为一个以<code>.pyc</code>（<code>.pyc</code>即为编译过的<code>.py</code>源代码)为扩展名的文件，程序运行之后，这些文件会在源代码附近的文件处可看到。实际上Python这样保存字节码是作为一种启动速度的优化。下一次运行程序时，若是在上次保存字节码之后没有修改过源代码，Python将会直接加载上次的<code>.pyc</code>文件并跳过编译的这个步骤。相反的，若是源代码有改动，在保存了之后，运行之时字节码也会重新创建，另外，当Python必须重编译时，它会自动检查源文件和字节码文件的时间戳。</p><blockquote><p>值得注意的是：如果Python无法在机器上写入字节码，程序依然是可以工作的：字节码会在内存中生成并在程序结束时简单地丢弃。尽管这样，由于<code>.pyc</code>文件能够加速启动，所以最好保证在大型程序中可以写入。字节码文件同样是分发Python程序的方法之一：如果Python找到的是<code>.pyc</code>文件，它会很乐意去运行这个程序，尽管这里没有原始的<code>.py</code>源代码文件。</p></blockquote><p>另外因为Python字节码不是机器的二进制代码（例如Intel芯片的指令），字节码仅仅相当于Python定义的一种表现形式。另外，字节码相较二进制，后者更为低级，而Python源代码相较于字节码，后者更为低级。</p><h2 id="Python虚拟机（PVM）"><a href="#Python虚拟机（PVM）" class="headerlink" title="Python虚拟机（PVM）"></a>Python虚拟机（PVM）</h2><p>一旦程序编译成字节码或者是从已保存的<code>.pyc</code>文件中载入，之后的字节码会被发送到通常被称为Python虚拟机（Python Virtual Machine,简写为PVM)上来执行。实际上PVM只是Python整体中的一个组件，可理解为是运行脚本的组件，从技术上来说，就是所谓的“Python解释器”的最后一步。简单的Python代码运行可理解为以下的图片中的样子：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-23%20%E4%B8%8A%E5%8D%8810.56.33.png" alt=""></p><blockquote><p>必须要理解的是这些复杂性的运行结构都是有意识地被隐藏起来，字节码的编译时自动完成的，PVM亦只是安装好的Python系统中的一部分，而程序员只是简单的编写、运行即可。关于PVM与Python解释器之间的关系简单的可总结为：<strong>PVM是Python是Python运行时引擎，从技术上讲只是解释器中执行的“最后一步”，而解释器其中还承担着其它的PVM不涉及到的任务，即可理解为PVM的执行功能属于解释器的一个子集。</strong>在此不妨简单的介绍一下Python的解释器：<strong>实际情况来说，Python就是一个名为解释器的软件包，是代码与计算机硬件之间的软件逻辑层，当编写了一段Python代码，Python解释器将读取程序，并按照其中的命令执行，得出结果。</strong>另外可额外说明一下，CPython为当今标准的解释器（这个名字来自它是由可移植的<a href="https://zh.wikipedia.org/wiki/ANSI_C" target="_blank" rel="external"><em>ANSI C/C</em>语言</a>代码编写而成的这个事实）。当然还有其他语言实现的Python解释器，但是由于CPython是这门语言的标准参照实现，所以与其它语言实现的解释器相比，它运行的最快、最完整、最新，而且最健全。</p></blockquote><h2 id="Python的运行速度"><a href="#Python的运行速度" class="headerlink" title="Python的运行速度"></a>Python的运行速度</h2><p>在Python的工作中通常没有<code>build</code>或者是<code>make</code>的步骤：即为代码在写好之后立即运行。加上Python的字节码的特性，PVM循环（而不是CPU芯片）仍然须解释这些字节码，而且字节码指令与CPU指令相比需要做更多的工作，另外与其他的经典的解释器不同，Python中有内部的编译步骤：Python并不需要反复地重分析和重分解每一行语句。另外需要牢记在心的心的是：Python中的运行是发生在实时性之中的，完全不需要先将所有源代码先编译好再丢给解释器去执行（静态语言常常如此)，所有的建立的函数和类的操作以及连接的模块，这些都是在代码运行之时”编译-解释”如此一个步骤进行的。</p><p>这也是为什么Python的运行速度比不上C/C++之类的语言的运行速度的原因（C/C++将源代码编译为二进制机器码，而Python编译为字节码，而前者比后者更为低级，所以运行起来执行速度更快)，Python的运行速度介于传统的编译语言与传统的解释语言之间，并且具有动态的弹性编程体验。</p><blockquote><p>在此简单介绍一下<a href="https://zh.wikipedia.org/wiki/PyPy" target="_blank" rel="external">PyPy</a>：PyPy是原先的<a href="https://zh.wikipedia.org/wiki/Psyco" target="_blank" rel="external">Psyco</a>即时编译器（just-in-time,<a href="https://zh.wikipedia.org/wiki/%E5%8D%B3%E6%99%82%E7%B7%A8%E8%AD%AF" target="_blank" rel="external">JIT</a>）的继任者（即时编译器其实只是PVM的一个扩展，可见上方图的最右边方框所代表的），并将<a href="https://zh.wikipedia.org/wiki/Psyco" target="_blank" rel="external">Psyco</a>纳入一个追求速度的纯Python，也属于CPython标准的另一个实现，更为注重性能。它可将字节码中的部分转换为运行速度更快的二进制机器码（这一切发生在运行时期，而非运行前的编译阶段）。而且即时编译器可通过追踪程序中的对象数据类型，创建针对Python语言动态特性的机器代码，通过这种方式部分地替换字节码，从而达到程序将在运行时越跑越快。此外，一些Python代码在PyPy下运行也会占用更少的内存。值得一提的是：在某些情况下，它利用动态优化的优势可让Python运行得跟C代码一样的快，甚至可以超越。这点对于算法密集和计算密集型的程序尤为明显（CPU密集型）。</p><p>关于什么是CPU密集型、IO密集型可参考：<a href="https://blog.csdn.net/youanyyou/article/details/78990156" target="_blank" rel="external">什么是CPU密集型、IO密集型？</a></p></blockquote><p>另外，由于Python的动态特性以及更为灵活简要等的特性，使得Python相较于C/C++使其达到了属于“高级语言”的行列。</p><h1 id="交互式命令行与文件"><a href="#交互式命令行与文件" class="headerlink" title="交互式命令行与文件"></a>交互式命令行与文件</h1><p>一般在交互式命令行中的代码是实时的，是不会保存的，即运行之后的代码是不会保存的，需要重新输入代码之后才能继续运行；而在文件中是可以永久保存的，另外，我们认为的一般的编写代码的主文件称之为“脚本”（属于于一个顶层程序文件的非正式说法），调用的文件称之为“模块”，<strong>实际上，代码运行的可永久保存的文件通常是称之为模块的，可以直接运行的模块文件是称之为脚本的。</strong></p><p>在交互式命令行中输入的复合式代码运行时需要在结束时的最后一行空出一行（即按下Entry键）以表示复合句结束；而在文件中的空格不是必须的，因为在解释器运行时，空格会被忽略掉一行一行地运行，但是为了代码的美观以及可读性，加上一些空格实际上也是不可少的。</p><h1 id="Python值得一看的函数以及用法"><a href="#Python值得一看的函数以及用法" class="headerlink" title="Python值得一看的函数以及用法"></a>Python值得一看的函数以及用法</h1><h2 id="固定的“一值”列表"><a href="#固定的“一值”列表" class="headerlink" title="固定的“一值”列表"></a>固定的“一值”列表</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">weights = [<span class="number">100</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">256</span>)] <span class="comment">#256组数字为100的列表</span></div></pre></td></tr></table></figure><h2 id="random模块的权重"><a href="#random模块的权重" class="headerlink" title="random模块的权重"></a>random模块的权重</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>weighted_choices = [(<span class="string">'Red'</span>, <span class="number">3</span>), (<span class="string">'Blue'</span>, <span class="number">2</span>), (<span class="string">'Yellow'</span>, <span class="number">1</span>), (<span class="string">'Green'</span>, <span class="number">4</span>)]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>population = [val <span class="keyword">for</span> val, cnt <span class="keyword">in</span> weighted_choices <span class="keyword">for</span> i <span class="keyword">in</span> range(cnt)]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>population</div><div class="line">[<span class="string">'Red'</span>, <span class="string">'Red'</span>, <span class="string">'Red'</span>, <span class="string">'Blue'</span>, <span class="string">'Blue'</span>, <span class="string">'Yellow'</span>, <span class="string">'Green'</span>, <span class="string">'Green'</span>, <span class="string">'Green'</span>, <span class="string">'Green'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>random.choice(population)</div><div class="line"><span class="string">'Green'</span></div></pre></td></tr></table></figure><p>3.6版本新增这种方式中，为了给元素增加权重，按照元素的权重构造了一个新的列表，如上述代码中的population。在population中我们可以看到Red、Blue、Yellow、Green按照权重的方式各自新增元素，这就造成了使用choice()函数，即使是等几率的，出现的结果也会不一样,多的元素当然被选中的机会多.</p><h2 id="itertools-accumulate对权重进行累加"><a href="#itertools-accumulate对权重进行累加" class="headerlink" title="itertools.accumulate对权重进行累加"></a>itertools.accumulate对权重进行累加</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> itertools</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>weights = [<span class="number">5</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">5</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>cumdist = list(itertools.accumulate(weights))</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>cumdist</div><div class="line">[<span class="number">5</span>, <span class="number">10</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>]</div></pre></td></tr></table></figure><p><a href="https://docs.python.org/zh-cn/3/library/itertools.html#itertools.accumulate" target="_blank" rel="external">itertools.accumulate(iterable[, func])</a>即为数字的权重累加，在总数上占几率较少的数字被选中的几率就会小。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cumdist = list(itertools.accumulate(weights)) <span class="comment">#数的累加</span></div><div class="line">x = random.random() * cumdist[<span class="number">-1</span>] <span class="comment">#定义的数字/矿</span></div><div class="line">isgold = ore_list[bisect.bisect(cumdist, x)] <span class="comment">#返回定义的数字在列表中的位置，以二分查找的方式</span></div></pre></td></tr></table></figure><p><code>random.random()</code>与最后一个cumdist相乘，<code>random.random()</code>的范围是浮点数0.0-1.0（不含)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> bisect</div><div class="line"><span class="keyword">import</span> random</div><div class="line"></div><div class="line">random.seed(<span class="number">1</span>)</div><div class="line"></div><div class="line"><span class="keyword">print</span><span class="string">'New  Pos Contents'</span></div><div class="line"><span class="keyword">print</span><span class="string">'---  --- --------'</span></div><div class="line"></div><div class="line">l = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">15</span>):</div><div class="line">    r = random.randint(<span class="number">1</span>, <span class="number">100</span>)</div><div class="line">    position = bisect.bisect(l, r)</div><div class="line">    bisect.insort(l, r)</div><div class="line">    <span class="keyword">print</span><span class="string">'%3d  %3d'</span> % (r, position), l</div><div class="line">    </div><div class="line">&gt;&gt;&gt;</div><div class="line">New  Pos Contents</div><div class="line">---  --- --------</div><div class="line"> <span class="number">14</span>    <span class="number">0</span> [<span class="number">14</span>]</div><div class="line"> <span class="number">85</span>    <span class="number">1</span> [<span class="number">14</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">77</span>    <span class="number">1</span> [<span class="number">14</span>, <span class="number">77</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">26</span>    <span class="number">1</span> [<span class="number">14</span>, <span class="number">26</span>, <span class="number">77</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">50</span>    <span class="number">2</span> [<span class="number">14</span>, <span class="number">26</span>, <span class="number">50</span>, <span class="number">77</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">45</span>    <span class="number">2</span> [<span class="number">14</span>, <span class="number">26</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">77</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">66</span>    <span class="number">4</span> [<span class="number">14</span>, <span class="number">26</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">79</span>    <span class="number">6</span> [<span class="number">14</span>, <span class="number">26</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">10</span>    <span class="number">0</span> [<span class="number">10</span>, <span class="number">14</span>, <span class="number">26</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">85</span>]</div><div class="line">  <span class="number">3</span>    <span class="number">0</span> [<span class="number">3</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">26</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">84</span>    <span class="number">9</span> [<span class="number">3</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">26</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">84</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">44</span>    <span class="number">4</span> [<span class="number">3</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">26</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">84</span>, <span class="number">85</span>]</div><div class="line"> <span class="number">77</span>    <span class="number">9</span> [<span class="number">3</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">26</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">84</span>, <span class="number">85</span>]</div><div class="line">  <span class="number">1</span>    <span class="number">0</span> [<span class="number">1</span>, <span class="number">3</span>, <span class="number">10</span>, <span class="number">14</span>, <span class="number">26</span>, <span class="number">44</span>, <span class="number">45</span>, <span class="number">50</span>, <span class="number">66</span>, <span class="number">77</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">84</span>, <span class="number">85</span>]</div></pre></td></tr></table></figure><ul><li><a href="http://kuanghy.github.io/2016/06/14/python-bisect" target="_blank" rel="external">Python 二分查找与 bisect 模块</a></li></ul><p>类似的函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">random.choices(population, weights=<span class="keyword">None</span>, *, cum_weights=<span class="keyword">None</span>, k=<span class="number">1</span>)</div></pre></td></tr></table></figure><p>3.6版本新增！从population集群中随机抽取K个元素（可重复）。weights是相对权重列表，cum_weights是累计权重，两个参数不能同时存在。</p><h2 id="几种Python执行时间的计算方法"><a href="#几种Python执行时间的计算方法" class="headerlink" title="几种Python执行时间的计算方法"></a>几种Python执行时间的计算方法</h2><blockquote><p>来源：<a href="https://blog.csdn.net/wangshuang1631/article/details/54286551" target="_blank" rel="external">几种Python执行时间的计算方法</a></p></blockquote><p>python脚本使用统计时间的方式是time.clock()，而这种方式统计的是CPU的执行时间，不是程序的执行时间。这样会导致在调度Python脚本执行并监控这个进程，python脚本运行时间远远大于python脚本中自己统计的程序执行时间。</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> datetime</div><div class="line">starttime = datetime.datetime.now()</div><div class="line"><span class="comment">#long running</span></div><div class="line"><span class="comment">#do something other</span></div><div class="line">endtime = datetime.datetime.now()</div><div class="line"><span class="keyword">print</span> (endtime - starttime).seconds</div></pre></td></tr></table></figure><p>datetime.datetime.now()获取的是当前日期，在程序执行结束之后，这个方式获得的时间值为程序执行的时间。</p><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">start = time.time()</div><div class="line"><span class="comment">#long running</span></div><div class="line"><span class="comment">#do something other</span></div><div class="line">end = time.time()</div><div class="line"><span class="keyword">print</span> end-start</div></pre></td></tr></table></figure><p>ime.time()获取自纪元以来的当前时间（以秒为单位）。如果系统时钟提供它们，则可能存在秒的分数。所以这个地方返回的是一个浮点型类型。这里获取的也是程序的执行时间。</p><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">start = time.clock()</div><div class="line"><span class="comment">#long running</span></div><div class="line"><span class="comment">#do something other</span></div><div class="line">end = time.clock()</div><div class="line"><span class="keyword">print</span> end-start</div></pre></td></tr></table></figure><p>time.clock()返回程序开始或第一次被调用clock()以来的CPU时间。 这具有与系统记录一样多的精度。返回的也是一个浮点类型。这里获得的是CPU的执行时间。<strong>程序执行时间=cpu时间 + io时间 + 休眠或者等待时间。</strong></p><h1 id="PyQt5问题"><a href="#PyQt5问题" class="headerlink" title="PyQt5问题"></a>PyQt5问题</h1><h2 id="PyQT5模块解读"><a href="#PyQT5模块解读" class="headerlink" title="PyQT5模块解读"></a>PyQT5模块解读</h2><p><strong>QtCore</strong>模块涵盖了包的核心的非GUI功能，此模块被用于处理程序中涉及到的 time、文件、目录、数据类型、文本流、链接、mime、线程或进程等对象。</p><p><strong>QtGui</strong>模块涵盖多种基本图形功能的类; 包括但不限于：窗口集、事件处理、2D图形、基本的图像和界面和字体文本。</p><p><strong>QtWidgets</strong>模块包含了一整套UI元素组件，用于建立符合系统风格的classic界面，非常方便，可以在安装时选择是否使用此功能。</p><p><strong>QtMultimedia</strong>模块包含了一套类库，该类库被用于处理多媒体事件，通过调用API接口访问摄像头、语音设备、收发消息（radio functionality）等。</p><p><strong>QtBluetooth</strong>模块包含了处理蓝牙活动的类库，它的功能包括：扫描设备、连接、交互等行为。</p><p><strong>QtNetwork</strong>模块包含用于网络编程的类库，这组类程序通过提供便捷的TCP/IP 及 UDP 的 c/s 程式码集合，使得基于Qt的网络编程更容易。</p><p><strong>QtPositioning</strong>模块用于获取位置信息，此模块允许使用多种方式达成定位，包括但不限于：卫星、无线网、文字信息。此应用一般用于网络地图定位系统。</p><p><strong>Enginio</strong>模块用于构建客户端的应用程式库，用于在运行时访问 Qt Cloud 服务器托管的应用程序。</p><p><strong>QtWebSockets</strong>模块包含了一组类程序，用以实现websocket协议。</p><p><strong>QtWebKit</strong>包含了用于实现基于webkit2的网络浏览器的类库。</p><p><strong>QtWebKitWidgets</strong>模块包含用于基于WebKit1的Web浏览器实现的类，用于基于QtWidgets的应用程序.</p><p><strong>QtXml</strong>模块包含了用于处理XML的类库，此模块为SAX和DOM API 的实现提供了方法。</p><p><strong>QtSvg</strong>模块通过一组类，为显示矢量图形文件的内容提供了方法。</p><p><strong>QtSql</strong>模块提供了数据库对象的接口以供使用.</p><p><strong>QtTest</strong>模块包含了可以通过单元测试，以调试PyQt5应用程式的功能。</p><h2 id="值得记录的细节"><a href="#值得记录的细节" class="headerlink" title="值得记录的细节"></a>值得记录的细节</h2><h3 id="sys-argv参数"><a href="#sys-argv参数" class="headerlink" title="sys.argv参数"></a>sys.argv参数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app = QApplication(sys.argv)</div></pre></td></tr></table></figure><p>每个PyQt5应用程序必须创建一个应用程序对象。<code>sys.argv</code>参数是来自命令行的参数列表。Python脚本可以从shell运行。写了这句话就能让我们的程序从命令行启动。</p><h3 id="QWidget"><a href="#QWidget" class="headerlink" title="QWidget()"></a>QWidget()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">w = QWidget()</div></pre></td></tr></table></figure><p>QWidget小部件是PyQt5中所有用户界面对象的基类。我们提供了QWidget的默认构造函数。默认构造函数没有父类。没有父类口小部件称为窗口。</p><h3 id="主循环-main-loop"><a href="#主循环-main-loop" class="headerlink" title="主循环(main loop)"></a>主循环(main loop)</h3><p>GUI应用程序都是事件驱动的。比如键盘事件、鼠标事件等等。还有一些事件来自于系统内部，比如定时事件、其它文件事件等等。在没有任何事件的情况下，应用程序处于睡眠状态。这种事件驱动机制，GUI应用程序都需要一个主循环(main loop)。主循环(main loop)控制应用程序什么时候进入睡眠状态，什么时候被唤醒。所以主循环(main loop)就是干这个的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>事件处理从这一点开始。主循环(main loop)从窗口系统接收事件并将它们分派到应用程序小部件。如果我们调用<code>exit()</code>方法或者主窗口小部件被破坏，那么主循环(main loop)就会结束。</p><p><code>sys.exit()</code>方法确保一个干净的退出。</p><p><code>exec_()</code>方法有一个下划线。这是因为exec是一个Python关键字。 因此，使用exec_（）。</p><h3 id="setGeometry"><a href="#setGeometry" class="headerlink" title="setGeometry()"></a>setGeometry()</h3><p>组合了<code>resize()</code>和<code>move()</code>方法,它在屏幕上定位窗口并设置它的大小；前两个参数是窗口的x和y位置；第三个是宽度；第四个是窗口的高度。</p><p>三个函数均可结合部件以做绝对定位之用。</p><h3 id="qbtn-clicked-connect-QCoreApplication-instance-quit"><a href="#qbtn-clicked-connect-QCoreApplication-instance-quit" class="headerlink" title="qbtn.clicked.connect(QCoreApplication.instance().quit)"></a>qbtn.clicked.connect(QCoreApplication.instance().quit)</h3><p>PyQt5中的事件处理系统采用信号和槽机制构建。 如果我们点击按钮，点击的信号被发出。槽可以是Qt槽函数或任何Python可调用的函数。QCoreApplication包含主事件循环; 它处理和调度所有事件。<code>instance()</code>方法给我们当前的实例。QCoreApplication是通过QApplication创建的。点击的信号连接到终止应用程序的<code>quit()</code>方法。通信在两个对象之间完成：发送方和接收方。发送方是按钮，接收者是应用对象。</p><h3 id="QLineEdit-部件配合使用"><a href="#QLineEdit-部件配合使用" class="headerlink" title="QLineEdit()部件配合使用"></a>QLineEdit()部件配合使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">self.text = QLineEdit(<span class="string">'在这里输入数字'</span>, self)</div><div class="line">self.text.selectAll()</div><div class="line">self.text.setFocus()</div><div class="line">self.text.setGeometry(<span class="number">80</span>, <span class="number">50</span>, <span class="number">150</span> ,<span class="number">30</span>)</div></pre></td></tr></table></figure><p><code>selectAll()</code>方法则是可以理解为将“在这里输入数字”进行全选，方便输入数字，否则还得手动全选删除默认字符；</p><p><code>setFocus()</code>就是让焦点置于文本栏中，方便用户输入，不然还得手动在文本栏中单击一下，很是麻烦；</p><p><code>setGeometry()</code>就是设置小部件的摆放坐标以及大小。</p><h3 id="QMessageBox的主要使用"><a href="#QMessageBox的主要使用" class="headerlink" title="QMessageBox的主要使用"></a>QMessageBox的主要使用</h3><p><code>QMessageBox.about</code>就是弹出一个对话框，告诉你结果是什么样的；</p><p><code>QMessageBox.question</code>问题询问；</p><p><code>QMessageBox.critical</code>图标打叉；</p><p><code>QMessageBox.warning</code>图标警告；</p><p><code>QMessageBox.information</code>消息询问；</p><p><code>QMessageBox</code>对话框包含类型只是图标不同其他无太大差别。</p><h3 id="QLCDNumber、QDial、QSlider"><a href="#QLCDNumber、QDial、QSlider" class="headerlink" title="QLCDNumber、QDial、QSlider"></a>QLCDNumber、QDial、QSlider</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">lcd = QLCDNumber(self)</div><div class="line">dial = QDial(self)</div><div class="line"></div><div class="line">dial.valueChanged.connect(lcd.display) <span class="comment"># 数字牵动的函数</span></div></pre></td></tr></table></figure><p>依次为屏幕上的数字变化、刻盘、滑动条。</p><h3 id="keyPressEvent-键盘响应"><a href="#keyPressEvent-键盘响应" class="headerlink" title="keyPressEvent()键盘响应"></a>keyPressEvent()键盘响应</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">self.lab = QLabel(<span class="string">'方向'</span>,self)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">keyPressEvent</span><span class="params">(self, e)</span>:</span></div><div class="line">        <span class="keyword">if</span> e.key() == Qt.Key_Up:</div><div class="line">            self.lab.setText(<span class="string">'↑'</span>)</div><div class="line">        <span class="keyword">elif</span> e.key() == Qt.Key_Down:</div><div class="line">            self.lab.setText(<span class="string">'↓'</span>)</div><div class="line">        <span class="keyword">elif</span> e.key() == Qt.Key_Left:</div><div class="line">            self.lab.setText(<span class="string">'←'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.lab.setText(<span class="string">'→'</span>)</div></pre></td></tr></table></figure><p>按住上、下、左、右方向键的时候，窗口中依次会出现对应方位。</p><h3 id="self-setMouseTracking-True"><a href="#self-setMouseTracking-True" class="headerlink" title="self.setMouseTracking(True)"></a>self.setMouseTracking(True)</h3><p>默认情况下禁用鼠标跟踪，如果启用鼠标跟踪，即使没有按钮被按下，小部件也会接收鼠标移动事件。当然也可以不写，只需要在执行的过程中按照鼠标左键也行。</p><h3 id="QFormLayout表单布局"><a href="#QFormLayout表单布局" class="headerlink" title="QFormLayout表单布局"></a>QFormLayout表单布局</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">formlayout = QFormLayout()</div><div class="line">nameLabel = QLabel(<span class="string">"姓名"</span>)</div><div class="line">nameLineEdit = QLineEdit(<span class="string">""</span>)</div><div class="line">introductionLabel = QLabel(<span class="string">"简介"</span>)</div><div class="line">introductionLineEdit = QTextEdit(<span class="string">""</span>)</div><div class="line"></div><div class="line">formlayout.addRow(nameLabel,nameLineEdit)</div><div class="line">formlayout.addRow(introductionLabel,introductionLineEdit)</div><div class="line">self.setLayout(formlayout)</div></pre></td></tr></table></figure><p>类似于将其一一对应(“姓名”：一空…)。QFormLayout是一个方便的布局类，其中的控件以两列的形式被布局在表单中。左列包括标签，右列包含输入控件，例如：QLineEdit、QSpinBox、QTextEdit等。</p><h2 id="常用函数使用"><a href="#常用函数使用" class="headerlink" title="常用函数使用"></a>常用函数使用</h2><h3 id="clear-、accept-、ignore-函数"><a href="#clear-、accept-、ignore-函数" class="headerlink" title="clear()、accept()、ignore()函数"></a>clear()、accept()、ignore()函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 示例</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">closeEvent</span><span class="params">(self, event)</span>:</span></div><div class="line">        reply = QMessageBox.question(self, <span class="string">'确认'</span>, <span class="string">'确认退出吗'</span>, QMessageBox.Yes | QMessageBox.No, QMessageBox.No)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> reply == QMessageBox.Yes:</div><div class="line">            event.accept()       </div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            event.ignore()</div></pre></td></tr></table></figure><p><code>clear()</code>函数：内容清除；</p><p><code>accept()</code>函数：接收并终止应用程序的事件；</p><p><code>ignore()</code>函数：跳过并终止应用程序的事件。</p><h3 id="update-、drawLine-函数"><a href="#update-、drawLine-函数" class="headerlink" title="update()、drawLine()函数"></a>update()、drawLine()函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">mouseMoveEvent</span><span class="params">(self, event)</span>:</span></div><div class="line">        distance_from_center = round(((event.y() - <span class="number">250</span>)**<span class="number">2</span> + (event.x() - <span class="number">500</span>)**<span class="number">2</span>)**<span class="number">0.5</span>)</div><div class="line">        self.label.setText(<span class="string">'坐标: ( x: %d ,y: %d )'</span> % (event.x(), event.y()) + <span class="string">" 离中心点距离: "</span> + str(distance_from_center))       </div><div class="line">        self.pos = event.pos()</div><div class="line">        self.update()</div></pre></td></tr></table></figure><p><code>update()</code>函数：更新图形；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">paintEvent</span><span class="params">(self, event)</span>:</span></div><div class="line">        <span class="keyword">if</span> self.pos:</div><div class="line">            q = QPainter(self)</div><div class="line">            q.drawLine(<span class="number">0</span>, <span class="number">0</span>, self.pos.x(), self.pos.y())</div></pre></td></tr></table></figure><p><code>drawLine()</code>方法绘制一条线，需要四个参数，起点的坐标，终点的坐标。可配合鼠标实现。</p><h3 id="sender-、text-函数"><a href="#sender-、text-函数" class="headerlink" title="sender()、text()函数"></a>sender()、text()函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 石头剪刀布游戏</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> (QApplication, QMessageBox, QWidget, QPushButton)</div><div class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.setGeometry(<span class="number">200</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">300</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'学点编程吧'</span>)</div><div class="line"></div><div class="line">        bt1 = QPushButton(<span class="string">'剪刀'</span>,self)</div><div class="line">        bt1.setGeometry(<span class="number">30</span>,<span class="number">180</span>,<span class="number">50</span>,<span class="number">50</span>)</div><div class="line"></div><div class="line">        bt2 = QPushButton(<span class="string">'石头'</span>,self)</div><div class="line">        bt2.setGeometry(<span class="number">100</span>,<span class="number">180</span>,<span class="number">50</span>,<span class="number">50</span>)</div><div class="line"></div><div class="line">        bt3 = QPushButton(<span class="string">'布'</span>,self)</div><div class="line">        bt3.setGeometry(<span class="number">170</span>,<span class="number">180</span>,<span class="number">50</span>,<span class="number">50</span>)</div><div class="line"></div><div class="line">        bt1.clicked.connect(self.buttonclicked)</div><div class="line">        bt2.clicked.connect(self.buttonclicked)</div><div class="line">        bt3.clicked.connect(self.buttonclicked)</div><div class="line"></div><div class="line">        self.show()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">buttonclicked</span><span class="params">(self)</span>:</span></div><div class="line">        computer = randint(<span class="number">1</span>,<span class="number">3</span>)</div><div class="line">        player = <span class="number">0</span></div><div class="line">        sender = self.sender()</div><div class="line">        <span class="keyword">if</span> sender.text() == <span class="string">'剪刀'</span>:</div><div class="line">            player = <span class="number">1</span></div><div class="line">        <span class="keyword">elif</span> sender.text() == <span class="string">'石头'</span>:</div><div class="line">            player = <span class="number">2</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            player = <span class="number">3</span></div><div class="line"></div><div class="line">        <span class="keyword">if</span> player == computer:</div><div class="line">            QMessageBox.about(self, <span class="string">'结果'</span>, <span class="string">'平手'</span>)</div><div class="line">        <span class="keyword">elif</span> player == <span class="number">1</span> <span class="keyword">and</span> computer == <span class="number">2</span>:</div><div class="line">            QMessageBox.about(self, <span class="string">'结果'</span>, <span class="string">'电脑：石头，电脑赢了！'</span>)</div><div class="line">        <span class="keyword">elif</span> player == <span class="number">2</span> <span class="keyword">and</span> computer == <span class="number">3</span>:</div><div class="line">            QMessageBox.about(self, <span class="string">'结果'</span>, <span class="string">'电脑：布，电脑赢了！'</span>)</div><div class="line">        <span class="keyword">elif</span> player == <span class="number">3</span> <span class="keyword">and</span> computer == <span class="number">1</span>:</div><div class="line">            QMessageBox.about(self,<span class="string">'结果'</span>,<span class="string">'电脑：剪刀，电脑赢了！'</span>)</div><div class="line">        <span class="keyword">elif</span> computer == <span class="number">1</span> <span class="keyword">and</span> player == <span class="number">2</span>:</div><div class="line">            QMessageBox.about(self,<span class="string">'结果'</span>,<span class="string">'电脑：剪刀，玩家赢了！'</span>)</div><div class="line">        <span class="keyword">elif</span> computer == <span class="number">2</span> <span class="keyword">and</span> player == <span class="number">3</span>:</div><div class="line">            QMessageBox.about(self,<span class="string">'结果'</span>,<span class="string">'电脑：石头，玩家赢了！'</span>)</div><div class="line">        <span class="keyword">elif</span> computer == <span class="number">3</span> <span class="keyword">and</span> player == <span class="number">1</span>:</div><div class="line">            QMessageBox.about(self,<span class="string">'结果'</span>,<span class="string">'电脑：布，玩家赢了！'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p><code>sender()</code>函数方法即为<code>.clicked.connect()</code>一类的函数相接；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">sender = self.sender()</div><div class="line">        <span class="keyword">if</span> sender.text() == <span class="string">'剪刀'</span>:</div><div class="line">            player = <span class="number">1</span></div><div class="line">        <span class="keyword">elif</span> sender.text() == <span class="string">'石头'</span>:</div><div class="line">            player = <span class="number">2</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            player = <span class="number">3</span></div></pre></td></tr></table></figure><p>在以上代码中，<code>sender()</code>函数可作为实例对象，<code>text()</code>函数主要以文字接收为主。</p><h3 id="自定义信号Signal-函数"><a href="#自定义信号Signal-函数" class="headerlink" title="自定义信号Signal()函数"></a>自定义信号Signal()函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 单击鼠标的时候，就会弹出对话框告知我们单击了鼠标。</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> (QApplication, QWidget, QMessageBox)</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> (pyqtSignal, QObject)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Signal</span><span class="params">(QObject)</span>:</span></div><div class="line">    showmouse = pyqtSignal()</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.setGeometry(<span class="number">200</span>, <span class="number">200</span>, <span class="number">300</span>, <span class="number">300</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'学点编程吧'</span>)</div><div class="line"></div><div class="line">        self.s = Signal()</div><div class="line">        self.s.showmouse.connect(self.about)</div><div class="line"></div><div class="line">        self.show()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">about</span><span class="params">(self)</span>:</span></div><div class="line">        QMessageBox.about(self,<span class="string">'鼠标'</span>,<span class="string">'你点鼠标了吧！'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mousePressEvent</span><span class="params">(self, e)</span>:</span></div><div class="line">        self.s.showmouse.emit()</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>建一个名为showmouse的新信号。该信号在鼠标按压事件期间发出。 该信号连接到QMainWindow的about()的槽。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Signal</span><span class="params">(QObject)</span>:</span></div><div class="line">    showmouse = pyqtSignal()</div></pre></td></tr></table></figure><p>使用pyqtSignal()作为外部Signal类的类属性创建一个信号。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">self.s = Signal()</div><div class="line">self.s.showmouse.connect(self.about)</div></pre></td></tr></table></figure><p>自定义showmouse信号连接到QMainWindow的about()的槽。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">mousePressEvent</span><span class="params">(self, e)</span>:</span></div><div class="line">    self.s.showmouse.emit()</div></pre></td></tr></table></figure><p>当我们用鼠标指针点击窗口时，会发出showmouse信号,调用相应的槽函数。</p><h3 id="addStretch-函数"><a href="#addStretch-函数" class="headerlink" title="addStretch()函数"></a>addStretch()函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">hbox = QHBoxLayout()</div><div class="line">hbox.addStretch(<span class="number">1</span>)</div><div class="line">hbox.addWidget(bt1)</div><div class="line">hbox.addWidget(bt2)</div><div class="line">hbox.addWidget(bt3)</div><div class="line"></div><div class="line">vbox = QVBoxLayout()</div><div class="line">vbox.addStretch(<span class="number">1</span>)</div><div class="line">vbox.addLayout(hbox)</div><div class="line"></div><div class="line">self.setLayout(vbox)</div></pre></td></tr></table></figure><p>HBoxLayout和一个QVBoxLayout主要以做水平垂直布局之用，<code>addStretch(1)</code>，<code>addStretch()</code>函数的作用是在布局器中增加一个伸缩量，里面的参数表示QSpacerItem的个数，默认值为零，会将你放在layout中的空间压缩成默认的大小。例如用addStretch函数实现将QHBoxLayout的布局器的空白空间分配，<code>addStretch()</code>函数可在设定好的布局前提下将整个窗口进行拉伸(可缩小、放大)。<strong>并非每个布局函数均可使用！！</strong></p><h3 id="QGridLayout-、lcd-display-、zip-函数"><a href="#QGridLayout-、lcd-display-、zip-函数" class="headerlink" title="QGridLayout()、lcd.display()、zip()函数"></a>QGridLayout()、lcd.display()、zip()函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 计算机界面核心代码</span></div><div class="line">names = [<span class="string">'Cls'</span>, <span class="string">'Bc'</span>, <span class="string">''</span>, <span class="string">'Close'</span>,</div><div class="line">                 <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'/'</span>,</div><div class="line">                 <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'*'</span>,</div><div class="line">                 <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'-'</span>,</div><div class="line">                 <span class="string">'0'</span>, <span class="string">'.'</span>, <span class="string">'='</span>, <span class="string">'+'</span>]</div><div class="line"></div><div class="line">        positions = [(i,j) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>,<span class="number">9</span>) <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>,<span class="number">8</span>)]</div><div class="line">        <span class="keyword">for</span> position, name <span class="keyword">in</span> zip(positions, names):</div><div class="line">            <span class="keyword">if</span> name == <span class="string">''</span>:</div><div class="line">                <span class="keyword">continue</span></div><div class="line">            button = QPushButton(name)</div><div class="line">            grid.addWidget(button, *position)</div><div class="line">            button.clicked.connect(self.Cli)</div><div class="line"></div><div class="line">        self.show()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Cli</span><span class="params">(self)</span>:</span></div><div class="line">        sender = self.sender().text()</div><div class="line">        ls = [<span class="string">'/'</span>, <span class="string">'*'</span>, <span class="string">'-'</span>, <span class="string">'='</span>, <span class="string">'+'</span>]</div><div class="line">        <span class="keyword">if</span> sender <span class="keyword">in</span> ls:</div><div class="line">            self.lcd.display(<span class="string">'A'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.lcd.display(sender)</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grid = QGridLayout()</div><div class="line">self.setLayout(grid)</div></pre></td></tr></table></figure><p>创建QGridLayout的实例并将其设置为应用程序窗口的布局。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grid.addWidget(self.lcd,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>)</div><div class="line">grid.setSpacing(<span class="number">10</span>)</div></pre></td></tr></table></figure><p>如果我们向窗格添加窗口小部件，我们可以提供窗口小部件的行跨度和列跨度。在我们的例子中，我们使QLCDNumber小部件跨越4行。同时我们创建一个网格布局并在窗口小部件之间设置间距。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">names = [<span class="string">'Cls'</span>, <span class="string">'Bc'</span>, <span class="string">''</span>, <span class="string">'Close'</span>,</div><div class="line">        <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'/'</span>,</div><div class="line">        <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'*'</span>,</div><div class="line">        <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'-'</span>,        </div><div class="line">        <span class="string">'0'</span>, <span class="string">'.'</span>, <span class="string">'='</span>, <span class="string">'+'</span>]</div><div class="line">positions = [(i,j) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>,<span class="number">9</span>) <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">4</span>,<span class="number">8</span>)]</div></pre></td></tr></table></figure><p>我们创建了19个按钮并指定了具体的坐标位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> name == <span class="string">''</span>: </div><div class="line">   <span class="keyword">continue</span></div><div class="line">button = QPushButton(name)</div><div class="line">grid.addWidget(button, *position)</div><div class="line">button.clicked.connect(self.Cli)</div></pre></td></tr></table></figure><p>使用<code>addWidget()</code>方法创建并添加到布局中的按钮。同时当我们按下按钮的时候调用self.Cli()方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">Cli</span><span class="params">(self)</span>:</span></div><div class="line">    sender = self.sender().text()</div><div class="line">    ls = [<span class="string">'/'</span>, <span class="string">'*'</span>, <span class="string">'-'</span>, <span class="string">'='</span>, <span class="string">'+'</span>]</div><div class="line">    <span class="keyword">if</span> sender <span class="keyword">in</span> ls:</div><div class="line">        self.lcd.display(<span class="string">'A'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        self.lcd.display(sender)</div></pre></td></tr></table></figure><p>当我们按下按钮的时候我们会得到按钮上显示的名称，如果是操作符则在LCD上显示“A”，LCD的显示功能有限，否则显示我们按下的信息。</p><p><code>lcd.display()</code>函数结合QLCDNumber较为常见。</p><p>另外解释一下<code>zip()</code>函数：<code>zip()</code>用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象，这样做的好处是节约了不少的内存。可以使用<code>list()</code>转换来输出列表。如果各个迭代器的元素个数不一致，则返回列表长度与最短的对象相同，利用<code>*</code>号操作符，可以将元组解压为列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">zip 语法：</span></div><div class="line"><span class="string">zip([iterable, ...])</span></div><div class="line"><span class="string">参数说明：</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">iterabl -- 一个或多个迭代器;</span></div><div class="line"><span class="string">返回值:</span></div><div class="line"><span class="string">返回一个对象。</span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="comment"># 实例</span></div><div class="line">&gt;&gt;&gt;a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>b = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>c = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>zipped = zip(a,b)     <span class="comment"># 返回一个对象</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>zipped</div><div class="line">&lt;zip object at <span class="number">0x103abc288</span>&gt;</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>list(zipped)  <span class="comment"># list() 转换为列表</span></div><div class="line">[(<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">6</span>)]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>list(zip(a,c))              <span class="comment"># 元素个数与最短的列表一致</span></div><div class="line">[(<span class="number">1</span>, <span class="number">4</span>), (<span class="number">2</span>, <span class="number">5</span>), (<span class="number">3</span>, <span class="number">6</span>)]</div><div class="line"> </div><div class="line"><span class="meta">&gt;&gt;&gt; </span>a1, a2 = zip(*zip(a,b))          <span class="comment"># 与 zip 相反，zip(*) 可理解为解压，返回二维矩阵式</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>list(a1)</div><div class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>list(a2)</div><div class="line">[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</div></pre></td></tr></table></figure><h3 id="statusBar-、showMessage-函数"><a href="#statusBar-、showMessage-函数" class="headerlink" title="statusBar()、showMessage()函数"></a>statusBar()、showMessage()函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">self.statusBar().showMessage(<span class="string">'准备就绪'</span>)</div></pre></td></tr></table></figure><p>要获取状态栏，我们调用QWidget.QMainWindow类的<code>statusBar()</code>方法。该方法的第一个调用创建一个状态栏。后续调用返回状态栏对象。<code>showMessage()</code>在状态栏上显示一条消息。</p><h2 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h2><h3 id="简单的菜单"><a href="#简单的菜单" class="headerlink" title="简单的菜单"></a>简单的菜单</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QMainWindow, QAction, qApp</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QIcon</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QMainWindow)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.InitUI()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">InitUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.statusBar().showMessage(<span class="string">'准备就绪'</span>)</div><div class="line"></div><div class="line">        self.setGeometry(<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">300</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'关注微信公众号：学点编程吧--简单的菜单'</span>)</div><div class="line"></div><div class="line">        exitAct = QAction(QIcon(<span class="string">'exit.png'</span>), <span class="string">'退出(&amp;E)'</span>, self)</div><div class="line">        exitAct.setShortcut(<span class="string">'command+Q'</span>)</div><div class="line">        exitAct.setStatusTip(<span class="string">'退出程序'</span>)</div><div class="line">        exitAct.triggered.connect(qApp.quit)</div><div class="line"></div><div class="line">        menubar = self.menuBar()</div><div class="line">        fileMenu = menubar.addMenu(<span class="string">'文件(&amp;F)'</span>)</div><div class="line">        fileMenu.addAction(exitAct)</div><div class="line"></div><div class="line">        self.show()</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>在上面的例子中，用了一个菜单创建一个菜单。此菜单将包含一个选择时终止应用程序的操作。还创建状态栏。该操作可通过<code>command + Q</code>快捷方式访问。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">exitAct = QAction(QIcon(<span class="string">'exit.png'</span>), <span class="string">'退出(&amp;E)'</span>, self)</div><div class="line">exitAct.setShortcut(<span class="string">'Ctrl+Q'</span>)</div><div class="line">exitAct.setStatusTip(<span class="string">'退出程序'</span>)</div></pre></td></tr></table></figure><p>QAction是使用菜单栏，工具栏或自定义键盘快捷方式执行操作的抽象。在上述三行中，我们创建一个具有特定图标和“退出”标签的动作。此外，为此操作定义了快捷方式。当我们将鼠标指针悬停在菜单项上时，第三行创建状态栏显示在状态栏中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">exitAct.triggered.connect(qApp.quit)</div></pre></td></tr></table></figure><p>当我们选择这个特定的动作时，发出触发信号。信号连接到QApplication小部件的quit()方法。 这终止了应用程序。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">menubar = self.menuBar()</div><div class="line">fileMenu = menubar.addMenu(<span class="string">'文件(&amp;F)'</span>)</div><div class="line">fileMenu.addAction(exitAct)</div></pre></td></tr></table></figure><p><code>menuBar()</code>方法创建一个菜单栏。我们使用<code>addMenu()</code>创建文件菜单，并使用<code>addAction()</code>添加操作。</p><p>上面的代码中我们在退出、文件后面都增加了“&amp;”这个符号，增加这个符号后，当我们按住“Alt+F”的时候就能快速打开文件这个菜单，同理按住“Alt+E”的时候就能退出了。</p><h3 id="子菜单"><a href="#子菜单" class="headerlink" title="子菜单"></a>子菜单</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QMainWindow, QAction, qApp, QMenu</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QIcon</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QMainWindow)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.InitUI()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">InitUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.statusBar().showMessage(<span class="string">'准备就绪'</span>)</div><div class="line"></div><div class="line">        self.setGeometry(<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">300</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'关注微信公众号：学点编程吧--子菜单'</span>)</div><div class="line"></div><div class="line">        exitAct = QAction(QIcon(<span class="string">'exit.png'</span>), <span class="string">'退出(&amp;E)'</span>, self)</div><div class="line">        exitAct.setShortcut(<span class="string">'Ctrl+Q'</span>)</div><div class="line">        exitAct.setStatusTip(<span class="string">'退出程序'</span>)</div><div class="line">        exitAct.triggered.connect(qApp.quit)</div><div class="line"></div><div class="line">        saveMenu = QMenu(<span class="string">'保存方式(&amp;S)'</span>, self)</div><div class="line">        saveAct = QAction(QIcon(<span class="string">'save.png'</span>),<span class="string">'保存...'</span>, self)</div><div class="line">        saveAct.setShortcut(<span class="string">'Ctrl+S'</span>)</div><div class="line">        saveAct.setStatusTip(<span class="string">'保存文件'</span>)</div><div class="line">        saveasAct = QAction(QIcon(<span class="string">'saveas.png'</span>),<span class="string">'另存为...(&amp;O)'</span>, self)</div><div class="line">        saveasAct.setStatusTip(<span class="string">'文件另存为'</span>)</div><div class="line">        saveMenu.addAction(saveAct)</div><div class="line">        saveMenu.addAction(saveasAct)</div><div class="line"></div><div class="line">        newAct = QAction(QIcon(<span class="string">'new.png'</span>),<span class="string">'新建(&amp;N)'</span>,self)</div><div class="line">        newAct.setShortcut(<span class="string">'Ctrl+N'</span>)</div><div class="line"></div><div class="line">        menubar = self.menuBar()</div><div class="line">        fileMenu = menubar.addMenu(<span class="string">'文件(&amp;F)'</span>)</div><div class="line">        fileMenu.addAction(newAct)</div><div class="line">        fileMenu.addMenu(saveMenu)</div><div class="line">        fileMenu.addSeparator() <span class="comment"># 貌似达成子菜单不可少的函数</span></div><div class="line">        fileMenu.addAction(exitAct)</div><div class="line"></div><div class="line">        self.show()</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>在这个例子中，有三个菜单项：其中两个位于文件菜单中（新建、退出），另一个位于文件的保存子菜单中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">saveMenu = QMenu(<span class="string">'保存方式(&amp;S)'</span>, self)</div></pre></td></tr></table></figure><p>使用QMenu创建新菜单。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">saveAct = QAction(QIcon(<span class="string">'save.png'</span>),<span class="string">'保存...'</span>, self)</div><div class="line">saveAct.setShortcut(<span class="string">'Ctrl+S'</span>)</div><div class="line">saveAct.setStatusTip(<span class="string">'保存文件'</span>)</div><div class="line">saveasAct = QAction(QIcon(<span class="string">'saveas.png'</span>),<span class="string">'另存为...(&amp;O)'</span>, self)</div><div class="line">saveasAct.setStatusTip(<span class="string">'文件另存为'</span>)</div><div class="line">saveMenu.addAction(saveAct)</div><div class="line">saveMenu.addAction(saveasAct)</div></pre></td></tr></table></figure><p>两个动作使用addAction()被添加到子菜单中。</p><h3 id="右键菜单-上下文菜单"><a href="#右键菜单-上下文菜单" class="headerlink" title="右键菜单/上下文菜单"></a>右键菜单/上下文菜单</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QMainWindow, QAction, qApp, QMenu</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QIcon</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QMainWindow)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.InitUI()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">InitUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.statusBar().showMessage(<span class="string">'准备就绪'</span>)</div><div class="line"></div><div class="line">        self.setGeometry(<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">300</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'关注微信公众号：学点编程吧--上下文菜单'</span>)</div><div class="line"></div><div class="line">        exitAct = QAction(QIcon(<span class="string">'exit.png'</span>), <span class="string">'退出(&amp;E)'</span>, self)</div><div class="line">        exitAct.setShortcut(<span class="string">'Ctrl+Q'</span>)</div><div class="line">        exitAct.setStatusTip(<span class="string">'退出程序'</span>)</div><div class="line">        exitAct.triggered.connect(qApp.quit)</div><div class="line"></div><div class="line">        saveMenu = QMenu(<span class="string">'保存方式(&amp;S)'</span>, self)</div><div class="line">        saveAct = QAction(QIcon(<span class="string">'save.png'</span>),<span class="string">'保存...'</span>, self)</div><div class="line">        saveAct.setShortcut(<span class="string">'Ctrl+S'</span>)</div><div class="line">        saveAct.setStatusTip(<span class="string">'保存文件'</span>)</div><div class="line">        saveasAct = QAction(QIcon(<span class="string">'saveas.png'</span>),<span class="string">'另存为...(&amp;O)'</span>, self)</div><div class="line">        saveasAct.setStatusTip(<span class="string">'文件另存为'</span>)</div><div class="line">        saveMenu.addAction(saveAct)</div><div class="line">        saveMenu.addAction(saveasAct)</div><div class="line"></div><div class="line">        newAct = QAction(QIcon(<span class="string">'new.png'</span>),<span class="string">'新建(&amp;N)'</span>,self)</div><div class="line">        newAct.setShortcut(<span class="string">'Ctrl+N'</span>)</div><div class="line">        newAct.setStatusTip(<span class="string">'新建文件'</span>)</div><div class="line"></div><div class="line">        menubar = self.menuBar()</div><div class="line">        fileMenu = menubar.addMenu(<span class="string">'文件(&amp;F)'</span>)</div><div class="line">        fileMenu.addAction(newAct)</div><div class="line">        fileMenu.addMenu(saveMenu)</div><div class="line">        fileMenu.addSeparator()</div><div class="line">        fileMenu.addAction(exitAct)</div><div class="line"></div><div class="line">        self.show()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">contextMenuEvent</span><span class="params">(self, event)</span>:</span></div><div class="line"></div><div class="line">       cmenu = QMenu(self)</div><div class="line"></div><div class="line">       newAct = cmenu.addAction(<span class="string">"新建"</span>)</div><div class="line">       opnAct = cmenu.addAction(<span class="string">"保存"</span>)</div><div class="line">       quitAct = cmenu.addAction(<span class="string">"退出"</span>)</div><div class="line">       action = cmenu.exec_(self.mapToGlobal(event.pos()))</div><div class="line">       <span class="keyword">if</span> action == quitAct:</div><div class="line">           qApp.quit()</div><div class="line">       </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>要使用上下文菜单，必须重新实现contextMenuEvent()方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">action = cmenu.exec_(self.mapToGlobal(event.pos()))</div></pre></td></tr></table></figure><p>使用<code>exec_()</code>方法显示上下文菜单。从事件对象获取鼠标指针的坐标。 mapToGlobal()方法将窗口小部件坐标转换为全局屏幕坐标。</p><blockquote><p><code>globalPos()</code>，给出的坐标信息是相对于桌面的，即以桌面左上角为原点。</p><p><code>pos()</code>，是相对于窗口的，以窗口左上角为原点（去除边框）。即pos()给出的是一个相对位置坐标。而globalPos(),给出的是一个绝对坐标。</p></blockquote><p>简单来说可理解为：一个相对于全电脑屏幕，一个仅仅相对于建立的界面。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> action == quitAct:</div><div class="line">    qApp.quit()</div></pre></td></tr></table></figure><p>如果从上下文菜单返回的操作等于退出操作，终止应用程序。</p><h3 id="工具栏"><a href="#工具栏" class="headerlink" title="工具栏"></a>工具栏</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication, QMainWindow, QAction, qApp, QMenu</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QIcon</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QMainWindow)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.InitUI()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">InitUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.statusBar().showMessage(<span class="string">'准备就绪'</span>)</div><div class="line"></div><div class="line">        self.setGeometry(<span class="number">300</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">300</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'关注微信公众号：学点编程吧--上下文菜单'</span>)</div><div class="line"></div><div class="line">        exitAct = QAction(QIcon(<span class="string">'exit.png'</span>), <span class="string">'退出(&amp;E)'</span>, self)</div><div class="line">        exitAct.setShortcut(<span class="string">'Ctrl+Q'</span>)</div><div class="line">        exitAct.setStatusTip(<span class="string">'退出程序'</span>)</div><div class="line">        exitAct.triggered.connect(qApp.quit)</div><div class="line"></div><div class="line">        saveMenu = QMenu(<span class="string">'保存方式(&amp;S)'</span>, self)</div><div class="line">        saveAct = QAction(QIcon(<span class="string">'save.png'</span>),<span class="string">'保存...'</span>, self)</div><div class="line">        saveAct.setShortcut(<span class="string">'Ctrl+S'</span>)</div><div class="line">        saveAct.setStatusTip(<span class="string">'保存文件'</span>)</div><div class="line">        saveasAct = QAction(QIcon(<span class="string">'saveas.png'</span>),<span class="string">'另存为...(&amp;O)'</span>, self)</div><div class="line">        saveasAct.setStatusTip(<span class="string">'文件另存为'</span>)</div><div class="line">        saveMenu.addAction(saveAct)</div><div class="line">        saveMenu.addAction(saveasAct)</div><div class="line"></div><div class="line">        newAct = QAction(QIcon(<span class="string">'new.png'</span>),<span class="string">'新建(&amp;N)'</span>,self)</div><div class="line">        newAct.setShortcut(<span class="string">'Ctrl+N'</span>)</div><div class="line">        newAct.setStatusTip(<span class="string">'新建文件'</span>)</div><div class="line"></div><div class="line">        menubar = self.menuBar()</div><div class="line">        fileMenu = menubar.addMenu(<span class="string">'文件(&amp;F)'</span>)</div><div class="line">        fileMenu.addAction(newAct)</div><div class="line">        fileMenu.addMenu(saveMenu)</div><div class="line">        fileMenu.addSeparator()</div><div class="line">        fileMenu.addAction(exitAct)</div><div class="line"></div><div class="line">        toolbar = self.addToolBar(<span class="string">'工具栏'</span>)</div><div class="line">        toolbar.addAction(newAct)</div><div class="line">        toolbar.addAction(exitAct)</div><div class="line">        self.show()</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>可以把一些常用的命令放在工具栏上，例如新建、打开、保存等等。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">toolbar = self.addToolBar(<span class="string">'工具栏'</span>)</div><div class="line">toolbar.addAction(newAct)</div><div class="line">toolbar.addAction(exitAct)</div></pre></td></tr></table></figure><p>工具栏使用addToolBar()方法创建。可使用addAction()向工具栏添加两个动作对象。</p><h2 id="对话框窗口"><a href="#对话框窗口" class="headerlink" title="对话框窗口"></a>对话框窗口</h2><p>对话框窗口或对话框是大多数现代GUI应用程序中不可或缺的一部分。在计算机应用程序中，一个对话框是一个用于“与应用程序”通话的窗口。对话框用于输入数据，修改数据，更改应用程序设置等。</p><h3 id="标准对话框、QInputDialog的主要方法"><a href="#标准对话框、QInputDialog的主要方法" class="headerlink" title="标准对话框、QInputDialog的主要方法"></a>标准对话框、QInputDialog的主要方法</h3><p>提供了一个简单的便利对话框，可以从用户获取单个值。 输入值可以是列表中的字符串，数字或项目。</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 可以输入浮点型小数，最小值、最大值可以自己设定。</span></div><div class="line">getDouble(QWidget, str, str, value: float = 0, min: float = -2147483647, max: float = 2147483647, decimals: int = 1, flags: Union[Qt.WindowFlags,Qt.WindowType]=Qt.WindowFlags())-&gt;Tuple[float,bool]</div><div class="line"></div><div class="line"><span class="comment"># 可以输入整数，最小值、最大值可以自己设定，步长也可以自己设定。</span></div><div class="line">getInt(QWidget, str, str, value: int = 0, min: int = -2147483647, max: int = 2147483647, step: int = 1, flags: Union[Qt.WindowFlags, Qt.WindowType] = Qt.WindowFlags()) -&gt; Tuple[int, bool]</div><div class="line"></div><div class="line"><span class="comment"># 输入选择项，待选放到列表中，需提前设定</span></div><div class="line">getItem(QWidget, str, str, Iterable[str], current:int=0,editable:bool=True,flags:Union[Qt.WindowFlags,Qt.WindowType]=Qt.WindowFlags(),inputMethodHints:Union[Qt.InputMethodHints,Qt.InputMethodHint] = Qt.ImhNone) -&gt; Tuple[str, bool]</div><div class="line"></div><div class="line"><span class="comment"># 可以输入富文本，在里面增加一些格式信息。如将文字加粗等操作。</span></div><div class="line">getMultiLineText(QWidget, str, str, text: str = '', flags: Union[Qt.WindowFlags, Qt.WindowType] = Qt.WindowFlags(), inputMethodHints: Union[Qt.InputMethodHints, Qt.InputMethodHint] = Qt.ImhNone)-&gt; Tuple[str, bool]</div><div class="line"></div><div class="line"><span class="comment"># 直接获取输入的字符文本数据。</span></div><div class="line">getText(QWidget, str, str, echo: QLineEdit.EchoMode = QLineEdit.Normal,text: str = '', flags: Union[Qt.WindowFlags, Qt.WindowType] = Qt.WindowFlags(),inputMethodHints: Union[Qt.InputMethodHints, Qt.InputMethodHint] = Qt.ImhNone) -&gt; Tuple[str, bool]</div></pre></td></tr></table></figure><p>以上为主要使用的函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> (QApplication, QWidget, QPushButton, QLabel, QInputDialog, QTextBrowser)</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        self.setGeometry(<span class="number">500</span>,<span class="number">500</span>,<span class="number">500</span>,<span class="number">550</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'关注微信公众号：学点编程吧--标准输入对话框'</span>)</div><div class="line"></div><div class="line">        self.lb1 = QLabel(<span class="string">'姓名：'</span>,self)</div><div class="line">        self.lb1.move(<span class="number">20</span>,<span class="number">20</span>)</div><div class="line"></div><div class="line">        self.lb2 = QLabel(<span class="string">'年龄：'</span>,self)</div><div class="line">        self.lb2.move(<span class="number">20</span>,<span class="number">80</span>)</div><div class="line"></div><div class="line">        self.lb3 = QLabel(<span class="string">'性别：'</span>,self)</div><div class="line">        self.lb3.move(<span class="number">20</span>,<span class="number">140</span>)</div><div class="line">        </div><div class="line">        self.lb4 = QLabel(<span class="string">'身高（cm）：'</span>,self)</div><div class="line">        self.lb4.move(<span class="number">20</span>,<span class="number">200</span>)</div><div class="line"></div><div class="line">        self.lb5 = QLabel(<span class="string">'基本信息：'</span>,self)</div><div class="line">        self.lb5.move(<span class="number">20</span>,<span class="number">260</span>)</div><div class="line"></div><div class="line">        self.lb6 = QLabel(<span class="string">'学点编程'</span>,self)</div><div class="line">        self.lb6.move(<span class="number">80</span>,<span class="number">20</span>)</div><div class="line"></div><div class="line">        self.lb7 = QLabel(<span class="string">'18'</span>,self)</div><div class="line">        self.lb7.move(<span class="number">80</span>,<span class="number">80</span>)</div><div class="line"></div><div class="line">        self.lb8 = QLabel(<span class="string">'男'</span>,self)</div><div class="line">        self.lb8.move(<span class="number">80</span>,<span class="number">140</span>)</div><div class="line"></div><div class="line">        self.lb9 = QLabel(<span class="string">'175'</span>,self)</div><div class="line">        self.lb9.move(<span class="number">120</span>,<span class="number">200</span>)</div><div class="line"></div><div class="line">        self.tb = QTextBrowser(self)</div><div class="line">        self.tb.move(<span class="number">20</span>,<span class="number">320</span>)</div><div class="line"> </div><div class="line"> self.bt1 = QPushButton(<span class="string">'修改姓名'</span>,self)</div><div class="line">        self.bt1.move(<span class="number">200</span>,<span class="number">20</span>)</div><div class="line"></div><div class="line">        self.bt2 = QPushButton(<span class="string">'修改年龄'</span>,self)</div><div class="line">        self.bt2.move(<span class="number">200</span>,<span class="number">80</span>)        </div><div class="line"></div><div class="line">        self.bt3 = QPushButton(<span class="string">'修改性别'</span>,self)</div><div class="line">        self.bt3.move(<span class="number">200</span>,<span class="number">140</span>)        </div><div class="line"></div><div class="line">        self.bt4 = QPushButton(<span class="string">'修改身高'</span>,self)</div><div class="line">        self.bt4.move(<span class="number">200</span>,<span class="number">200</span>)        </div><div class="line"></div><div class="line">        self.bt5 = QPushButton(<span class="string">'修改信息'</span>,self)</div><div class="line">        self.bt5.move(<span class="number">200</span>,<span class="number">260</span>)</div><div class="line"></div><div class="line">        self.show()</div><div class="line">        </div><div class="line">        self.bt1.clicked.connect(self.showDialog)</div><div class="line">        self.bt2.clicked.connect(self.showDialog)</div><div class="line">        self.bt3.clicked.connect(self.showDialog)</div><div class="line">        self.bt4.clicked.connect(self.showDialog)</div><div class="line">        self.bt5.clicked.connect(self.showDialog)</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showDialog</span><span class="params">(self)</span>:</span></div><div class="line">        sender = self.sender()</div><div class="line">        sex = [<span class="string">'男'</span>,<span class="string">'女'</span>]</div><div class="line">        <span class="keyword">if</span> sender == self.bt1:</div><div class="line">            text, ok = QInputDialog.getText(self, <span class="string">'修改姓名'</span>, <span class="string">'请输入姓名：'</span>)</div><div class="line">            <span class="keyword">if</span> ok:</div><div class="line">                self.lb6.setText(text) </div><div class="line">        <span class="keyword">elif</span> sender == self.bt2:</div><div class="line">            text, ok = QInputDialog.getInt(self, <span class="string">'修改年龄'</span>, <span class="string">'请输入年龄：'</span>, min = <span class="number">1</span>) </div><div class="line">            <span class="keyword">if</span> ok:</div><div class="line">                self.lb7.setText(str(text))</div><div class="line">        <span class="keyword">elif</span> sender == self.bt3:</div><div class="line">            text, ok = QInputDialog.getItem(self, <span class="string">'修改性别'</span>, <span class="string">'请选择性别：'</span>,sex)            </div><div class="line">            <span class="keyword">if</span> ok:</div><div class="line">                self.lb8.setText(text)        </div><div class="line">        <span class="keyword">elif</span> sender == self.bt4:</div><div class="line">            text, ok = QInputDialog.getDouble(self, <span class="string">'修改身高'</span>, <span class="string">'请输入身高：'</span>, min = <span class="number">1.0</span>)</div><div class="line">            <span class="keyword">if</span> ok:</div><div class="line">                self.lb9.setText(str(text))</div><div class="line">        <span class="keyword">elif</span> sender == self.bt5:</div><div class="line">            text, ok = QInputDialog.getMultiLineText(self, <span class="string">'修改信息'</span>, <span class="string">'请输入个人信息：'</span>)</div><div class="line">            <span class="keyword">if</span> ok:</div><div class="line">                self.tb.setText(text)</div><div class="line">                </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>该示例具有按钮和标签和文本浏览器。通过按钮显示输入对话框以便获取值。输入的文本将显示在窗口的标签和文本浏览器中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">self.bt1.clicked.connect(self.showDialog)</div><div class="line">self.bt2.clicked.connect(self.showDialog)</div><div class="line">self.bt3.clicked.connect(self.showDialog)</div><div class="line">self.bt4.clicked.connect(self.showDialog)</div><div class="line">self.bt5.clicked.connect(self.showDialog)</div></pre></td></tr></table></figure><p>单击按钮连接对应的槽函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> sender == self.bt1:</div><div class="line">    text, ok = QInputDialog.getText(self, <span class="string">'修改姓名'</span>, <span class="string">'请输入姓名：'</span>)</div></pre></td></tr></table></figure><p>若按下按钮1，此时显示输入对话框。第一个字符串是一个对话标题，第二个是对话框中的一个消息。对话框返回输入的文本和布尔值。如果点击Ok按钮，布尔值为true。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ok:</div><div class="line">    self.lb6.setText(text)</div></pre></td></tr></table></figure><p>如果按下ok键，则对应标签的text值是从对话框接收的文本。</p><h3 id="颜色、字体、打开文件对话框：QColorDialog-QFontDialog-QTextEdit-QFileDialog、QTextEdit"><a href="#颜色、字体、打开文件对话框：QColorDialog-QFontDialog-QTextEdit-QFileDialog、QTextEdit" class="headerlink" title="颜色、字体、打开文件对话框：QColorDialog, QFontDialog, QTextEdit, QFileDialog、QTextEdit"></a>颜色、字体、打开文件对话框：QColorDialog, QFontDialog, QTextEdit, QFileDialog、QTextEdit</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QWidget, QApplication, QPushButton, QColorDialog, QFontDialog, QTextEdit, QFileDialog</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line"></div><div class="line">        self.initUI()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        self.setGeometry(<span class="number">300</span>, <span class="number">300</span>, <span class="number">500</span>, <span class="number">300</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'关注微信公众号：学点编程吧--记得好看点'</span>)</div><div class="line"></div><div class="line"></div><div class="line">        self.tx = QTextEdit(self)</div><div class="line">        self.tx.setGeometry(<span class="number">20</span>, <span class="number">20</span>, <span class="number">300</span>, <span class="number">270</span>)</div><div class="line"></div><div class="line">        self.bt1 = QPushButton(<span class="string">'打开文件'</span>,self)</div><div class="line">        self.bt1.move(<span class="number">350</span>,<span class="number">20</span>)</div><div class="line">        self.bt2 = QPushButton(<span class="string">'选择字体'</span>,self)</div><div class="line">        self.bt2.move(<span class="number">350</span>,<span class="number">70</span>)</div><div class="line">        self.bt3 = QPushButton(<span class="string">'选择颜色'</span>,self)</div><div class="line">        self.bt3.move(<span class="number">350</span>,<span class="number">120</span>)</div><div class="line"></div><div class="line">        self.bt1.clicked.connect(self.openfile)</div><div class="line">        self.bt2.clicked.connect(self.choicefont)</div><div class="line">        self.bt3.clicked.connect(self.choicecolor)</div><div class="line"></div><div class="line">        self.show()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">openfile</span><span class="params">(self)</span>:</span></div><div class="line">        fname = QFileDialog.getOpenFileName(self, <span class="string">'打开文件'</span>,<span class="string">'./'</span>)</div><div class="line">        <span class="keyword">if</span> fname[<span class="number">0</span>]:</div><div class="line">            <span class="keyword">with</span> open(fname[<span class="number">0</span>], <span class="string">'r'</span>,encoding=<span class="string">'gb18030'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> f:</div><div class="line">                self.tx.setText(f.read()) </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">choicefont</span><span class="params">(self)</span>:</span></div><div class="line">        font, ok = QFontDialog.getFont() </div><div class="line">        <span class="keyword">if</span> ok:</div><div class="line">            self.tx.setCurrentFont(font)</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">choicecolor</span><span class="params">(self)</span>:</span></div><div class="line">        col = QColorDialog.getColor()</div><div class="line">        <span class="keyword">if</span> col.isValid():</div><div class="line">            self.tx.setTextColor(col)</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>通过上述代码了解到主要是涉及QColorDialog,QFontDialog,QTextEdit, QFileDialog这四个类，其中QColorDialog, QFontDialog, QFileDialog分别负责颜色选择对话框、字体选择对话框、打开文件对话框，QTextEdit则是将刚才提到的类的结果用于呈现。QTextEdit能够呈现富文本，也能够呈现普通输出文本。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">self.bt1.clicked.connect(self.openfile)</div><div class="line">self.bt2.clicked.connect(self.choicefont)</div><div class="line">self.bt3.clicked.connect(self.choicecolor)</div></pre></td></tr></table></figure><p>当单击不同的按钮的时候，会调用对应的槽函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fname = QFileDialog.getOpenFileName(self, <span class="string">'打开文件'</span>,<span class="string">'./'</span>)</div></pre></td></tr></table></figure><p>我们弹出QFileDialog对话框。<code>getOpenFileName()</code>方法中的第一个字符串是标题。第二个字符串指定对话框工作目录。默认情况下，文件过滤器设置为所有文件<code>（*）</code>，即不限制打开文件的类型。该函数返回值类型是元组。如果增加文件过滤，可以改成如下语句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fname = QFileDialog.getOpenFileName(self, <span class="string">'打开文件'</span>,<span class="string">'./'</span>,(<span class="string">"Images (*.png *.xpm *.jpg)"</span>))</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> fname[<span class="number">0</span>]:</div><div class="line">    <span class="keyword">with</span> open(fname[<span class="number">0</span>], <span class="string">'r'</span>,encoding=<span class="string">'gb18030'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> f:</div><div class="line">        self.tx.setText(f.read())</div></pre></td></tr></table></figure><p>读取所选择的文件名，并将文本编辑小部件的内容设置为文件读取的内容。这里提一下使用with语句来自动调用<code>close()</code>方法，避免由于文件读写时产生<code>IOError</code>，导致<code>close()</code>不会调用，需要<code>try ... finally</code>来实现的不便。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">font, ok = QFontDialog.getFont()</div></pre></td></tr></table></figure><p>这里弹出字体对话框。<code>getFont()</code>方法返回字体名称以及用户点击按钮的状态。如果用户点击Ok，则等于True;否则是假的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> ok:</div><div class="line">    self.tx.setCurrentFont(font)</div></pre></td></tr></table></figure><p>如果用户点击ok键，那么在文本编辑小部件中选择的内容会使用我们选择的字体。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">col = QColorDialog.getColor()</div><div class="line"><span class="keyword">if</span> col.isValid():</div><div class="line">    self.tx.setTextColor(col)</div></pre></td></tr></table></figure><p>这段代码的意思和刚才描述的大致相同，弹出颜色选择的对话框。检查颜色是否有效。如果点击“取消”按钮，则不会返回有效的颜色。如果颜色有效，那么在文本编辑小部件中选择的内容会使用选择的颜色。</p><h3 id="QFileDialog打印文案对象QtPrintSupport类-QPageSetupDialog、QPrintDialog、QPrinter"><a href="#QFileDialog打印文案对象QtPrintSupport类-QPageSetupDialog、QPrintDialog、QPrinter" class="headerlink" title="QFileDialog打印文案对象QtPrintSupport类:QPageSetupDialog、QPrintDialog、QPrinter"></a>QFileDialog打印文案对象QtPrintSupport类:QPageSetupDialog、QPrintDialog、QPrinter</h3><p>本知识点主要以一个打印机的例子作为开端学习,用以说明如何打开多文件、保存文件以及打印文件。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QWidget, QApplication, QPushButton, QTextEdit, QFileDialog, QDialog</div><div class="line"><span class="keyword">from</span> PyQt5.QtPrintSupport <span class="keyword">import</span> QPageSetupDialog, QPrintDialog, QPrinter</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.printer = QPrinter()</div><div class="line">        self.initUI()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        self.setGeometry(<span class="number">300</span>, <span class="number">300</span>, <span class="number">500</span>, <span class="number">400</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'关注微信公众号：学点编程吧--保存、打印文件'</span>)</div><div class="line"></div><div class="line"></div><div class="line">        self.tx = QTextEdit(self)</div><div class="line">        self.tx.setGeometry(<span class="number">20</span>, <span class="number">20</span>, <span class="number">300</span>, <span class="number">270</span>)</div><div class="line">        self.bt1 = QPushButton(<span class="string">'打开文件'</span>,self)</div><div class="line">        self.bt1.move(<span class="number">350</span>,<span class="number">20</span>)</div><div class="line">        self.bt2 = QPushButton(<span class="string">'打开多个文件'</span>,self)</div><div class="line">        self.bt2.move(<span class="number">350</span>,<span class="number">70</span>)</div><div class="line">        self.bt5 = QPushButton(<span class="string">'保存文件'</span>,self)</div><div class="line">        self.bt5.move(<span class="number">350</span>,<span class="number">220</span>)</div><div class="line">        self.bt6 = QPushButton(<span class="string">'页面设置'</span>,self)</div><div class="line">        self.bt6.move(<span class="number">350</span>,<span class="number">270</span>)</div><div class="line">        self.bt7 = QPushButton(<span class="string">'打印文档'</span>,self)</div><div class="line">        self.bt7.move(<span class="number">350</span>,<span class="number">320</span>)</div><div class="line"></div><div class="line">        self.bt1.clicked.connect(self.openfile)</div><div class="line">        self.bt2.clicked.connect(self.openfiles)</div><div class="line">        self.bt5.clicked.connect(self.savefile)</div><div class="line">        self.bt6.clicked.connect(self.pagesettings)</div><div class="line">        self.bt7.clicked.connect(self.printdialog)</div><div class="line"></div><div class="line">        self.show()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">openfile</span><span class="params">(self)</span>:</span></div><div class="line">        fname = QFileDialog.getOpenFileName(self, <span class="string">'学点编程吧:打开文件'</span>,<span class="string">'./'</span>)</div><div class="line">            <span class="keyword">if</span> fname[<span class="number">0</span>]:</div><div class="line">                <span class="keyword">with</span> open(fname[<span class="number">0</span>], <span class="string">'r'</span>,encoding=<span class="string">'gb18030'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> f:</div><div class="line">                    self.tx.setText(f.read())</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">openfiles</span><span class="params">(self)</span>:</span></div><div class="line">        fnames = QFileDialog.getOpenFileNames(self, <span class="string">'学点编程吧:打开多个文件'</span>,<span class="string">'./'</span>)</div><div class="line">            <span class="keyword">if</span> fnames[<span class="number">0</span>]: </div><div class="line">                <span class="keyword">for</span> fname <span class="keyword">in</span> fnames[<span class="number">0</span>]:</div><div class="line">                    <span class="keyword">with</span> open(fname, <span class="string">'r'</span>,encoding=<span class="string">'gb18030'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> f:</div><div class="line">                        self.tx.append(f.read())</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">savefile</span><span class="params">(self)</span>:</span></div><div class="line">        fileName = QFileDialog.getSaveFileName(self, <span class="string">'学点编程吧:保存文件'</span>,<span class="string">'./'</span>,<span class="string">"Text files (*.txt)"</span>)</div><div class="line">            <span class="keyword">if</span> fileName[<span class="number">0</span>]:</div><div class="line">                <span class="keyword">with</span> open(fileName[<span class="number">0</span>], <span class="string">'w'</span>,encoding=<span class="string">'gb18030'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> f:</div><div class="line">                    f.write(self.tx.toPlainText())</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pagesettings</span><span class="params">(self)</span>:</span></div><div class="line">        printsetdialog = QPageSetupDialog(self.printer,self)</div><div class="line">        printsetdialog.exec_()</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printdialog</span><span class="params">(self)</span>:</span></div><div class="line">        printdialog = QPrintDialog(self.printer,self)</div><div class="line">        <span class="keyword">if</span> QDialog.Accepted == printdialog.exec_():</div><div class="line">            self.tx.print(self.printer)</div><div class="line">        </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtPrintSupport <span class="keyword">import</span> QPageSetupDialog, QPrintDialog, QPrinter</div></pre></td></tr></table></figure><p>从类的字面意思可以了解到<code>QPageSetupDialog</code>涉及页面设置的，<code>QPrintDialog</code>涉及打印，而<code>QPrinter</code>类是PyQt的打印主要使用，即打印类。大量和打印相关的函数均会涉及到该类。根据Qt的官方文档的介绍，<code>QPrinter</code>类与其他绘图类（如<code>QWidget</code>和<code>QPixmap</code>）原理几乎完全相同。提供了一组附加功能来管理设备的特定功能，例如方向和分辨率等。可理解为就是高度抽象的虚拟打印机，通过与这台打印交互达到控制本地实际打印机的功能。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.printer = QPrinter()</div><div class="line">        self.initUI()</div></pre></td></tr></table></figure><p>因为下面代码中<code>QPageSetupDialog</code>、<code>QPrintDialog</code>涉及到<code>QPrinter()</code>对象，所以将其在类初始化的时候生成，便于函数的调用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">openfiles</span><span class="params">(self)</span>:</span></div><div class="line">    fnames = QFileDialog.getOpenFileNames(self, <span class="string">'学点编程吧:打开多个文件'</span>,<span class="string">'./'</span>)</div><div class="line">    <span class="keyword">if</span> fnames[<span class="number">0</span>]:</div><div class="line">        <span class="keyword">for</span> fname <span class="keyword">in</span> fnames[<span class="number">0</span>]:</div><div class="line">            <span class="keyword">with</span> open(fname, <span class="string">'r'</span>,encoding=<span class="string">'gb18030'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> f:</div><div class="line">                self.tx.append(f.read())</div></pre></td></tr></table></figure><p><code>QFileDialog.getOpenFileNames</code>将返回用户选择的一个或多个现有文件，注意这里返回值是元组。元组的第0个元素则是列表，例如fnames其实是这样的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">([<span class="string">'C:/Users/yangff/Desktop/PyQt5/10/美文.txt'</span>, <span class="string">'C:/Users/yangff/Desktop/PyQt5/10/十九大(new).txt'</span>, <span class="string">'C:/Users/yangff/Desktop/PyQt5/10/十九大.txt'</span>], <span class="string">''</span>)</div></pre></td></tr></table></figure><p>所以才需要通过对fnames[0]进行遍历，分别读取每个文件的内容，然后在<code>QTextEdit</code>显示出来。需要注意的是：使用了<code>QTextEdit</code>的<code>append</code>方法，让每次显示的内容均会存留在QTextEdit上。<strong>这个选择元组中列表数据是与之前对爬取的数据(.json)进行数据清洗类似的操作，而在使用<code>append</code>方法表示依次将所取得的文件全部打印在窗口。</strong>这个函数的第二个参数是对话框的标题，第三个参数是设置打开文件的目录。当然还可以增加第四个，也就是增加一个过滤器，以便仅显示与过滤器匹配的文件。 例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">fnames = QFileDialog.getOpenFileNames(self, <span class="string">'学点编程吧:打开多个文件'</span>,<span class="string">'./'</span>,<span class="string">"Text files (*.txt)"</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">savefile</span><span class="params">(self)</span>:</span></div><div class="line">    fileName = QFileDialog.getSaveFileName(self, <span class="string">'学点编程吧:保存文件'</span>,<span class="string">'./'</span>,<span class="string">"Text files (*.txt)"</span>)</div><div class="line">    <span class="keyword">if</span> fileName[<span class="number">0</span>]:</div><div class="line">        <span class="keyword">with</span> open(fileName[<span class="number">0</span>], <span class="string">'w'</span>,encoding=<span class="string">'gb18030'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(self.tx.toPlainText())</div></pre></td></tr></table></figure><p><code>getSaveFileName()</code>具体的用法与<code>getOpenFileNames()</code>类似，只是用来保存文件的。最后我们使用<code>write</code>函数将<code>QTextEdit</code>的内容保存在文件中。获取的<code>QTextEdit</code>的内容可以使用这个函数<code>toPlainText()</code>(转为纯文本保存)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">pagesettings</span><span class="params">(self)</span>:</span></div><div class="line">    printsetdialog = QPageSetupDialog(self.printer,self)</div><div class="line">    printsetdialog.exec_()</div></pre></td></tr></table></figure><p><code>QPageSetupDialog</code>类为打印机上的页面相关选项提供了一个配置对话框。这个就必须使用到<code>QPrinter</code>对象了。<strong>另外说明一下的是exec_()函数，这个函数即为执行脚本文件(如.py)用的，在这里是起到启用QPrinter的代码的意思。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">printsetdialog.exec_()</div></pre></td></tr></table></figure><p>这句话就相当于执行确认的页面设置信息。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">printdialog</span><span class="params">(self)</span>:</span></div><div class="line">        printdialog = QPrintDialog(self.printer,self) </div><div class="line">        <span class="keyword">if</span> QDialog.Accepted == printdialog.exec_():</div><div class="line">            self.tx.print(self.printer)</div></pre></td></tr></table></figure><p>这个函数的意思就是调用<code>QPrintDialog</code>准备进行打印了。<code>QPrintDialog</code>类提供了一个用于指定打印机配置的对话框。对话框允许用户更改文档相关设置，如纸张尺寸和方向，打印类型（颜色或灰度),页面范围和打印份数。还提供控制以使用户可以从可用的打印机中进行选择，包括任何配置的网络打印机。通常，<code>QPrintDialog</code>对象使用<code>QPrinter</code>对象构造，并使用<code>exec()</code>函数执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> QDialog.Accepted == printdialog.exec_():</div><div class="line">    self.tx.print(self.printer)</div></pre></td></tr></table></figure><p>在选择好打印机等等后，点击打印（即对话框被用户接受，则<code>QPrinter</code>对象被正确配置为打印），则会调用<code>QTextEdit</code>中的<code>print</code>方法进行相关的打印(内容输出即打印)。</p><h3 id="QFileDialog消息对话框QMessageBox类，QPixmap类：setIconPixmap-、QMessageBox-Warning、QMessageBox-Information、QMessageBox-Question、QMessageBox-Critical"><a href="#QFileDialog消息对话框QMessageBox类，QPixmap类：setIconPixmap-、QMessageBox-Warning、QMessageBox-Information、QMessageBox-Question、QMessageBox-Critical" class="headerlink" title="QFileDialog消息对话框QMessageBox类，QPixmap类：setIconPixmap()、QMessageBox.Warning、QMessageBox.Information、QMessageBox.Question、QMessageBox.Critical"></a>QFileDialog消息对话框QMessageBox类，QPixmap类：setIconPixmap()、QMessageBox.Warning、QMessageBox.Information、QMessageBox.Question、QMessageBox.Critical</h3><p>消息对话框主要涉及QMessageBox类。QMessageBox类提供了一个模态对话框，用于通知用户或询问用户问题并接收答案。消息框显示主要文本以提醒用户情况，信息性文本以进一步解释警报或询问用户一个问题，以及可选的详细文本，以便在用户请求时提供更多数据。消息框还可以显示用于接受用户响应的图标和标准按钮。提供了两个使用<code>QMessageBox</code>的API，基于属性的API和静态函数。调用静态函数是更简单的方法，但是比使用基于属性的API更不灵活，结果信息较少。两种方法在程序中都使用了。一般而言，消息对话框分为五种，分别是提示信息、询问、警告、错误、关于，其中关于又分为两种，一种是一般性关于、另一种是关于Qt的介绍，可以明显看见不同。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QWidget, QApplication, QPushButton, QMessageBox, QLabel, QCheckBox</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPixmap</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        self.setGeometry(<span class="number">300</span>, <span class="number">300</span>, <span class="number">330</span>, <span class="number">300</span>)</div><div class="line">        self.setWindowTitle(<span class="string">'关注微信公众号：学点编程吧--消息对话框'</span>)</div><div class="line"></div><div class="line">        self.la = QLabel(<span class="string">'这里将会显示我们选择的按钮信息'</span>,self)</div><div class="line">        self.la.move(<span class="number">20</span>,<span class="number">20</span>)</div><div class="line">        self.bt1 = QPushButton(<span class="string">'提示'</span>,self)</div><div class="line">        self.bt1.move(<span class="number">20</span>,<span class="number">70</span>)</div><div class="line">        self.bt2 = QPushButton(<span class="string">'询问'</span>,self)</div><div class="line">        self.bt2.move(<span class="number">120</span>,<span class="number">70</span>)</div><div class="line">        self.bt3 = QPushButton(<span class="string">'警告'</span>,self)</div><div class="line">        self.bt3.move(<span class="number">220</span>,<span class="number">70</span>)</div><div class="line">        self.bt4 = QPushButton(<span class="string">'错误'</span>,self)</div><div class="line">        self.bt4.move(<span class="number">20</span>,<span class="number">140</span>)</div><div class="line">        self.bt5 = QPushButton(<span class="string">'关于'</span>,self)</div><div class="line">        self.bt5.move(<span class="number">120</span>,<span class="number">140</span>)</div><div class="line">        self.bt6 = QPushButton(<span class="string">'关于Qt'</span>,self)</div><div class="line">        self.bt6.move(<span class="number">220</span>,<span class="number">140</span>)</div><div class="line"></div><div class="line">        self.bt1.clicked.connect(self.info)</div><div class="line">        self.bt2.clicked.connect(self.question)</div><div class="line">        self.bt3.clicked.connect(self.warning)</div><div class="line">        self.bt4.clicked.connect(self.critical)</div><div class="line">        self.bt5.clicked.connect(self.about)</div><div class="line">        self.bt6.clicked.connect(self.aboutqt)</div><div class="line"></div><div class="line">        self.show()</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self)</span>:</span></div><div class="line">        reply = QMessageBox.information(self,<span class="string">'提示'</span>,<span class="string">'这是一个消息提示对话框!'</span>, QMessageBox.Ok | QMessageBox.Close, QMessageBox.Close)</div><div class="line">        <span class="keyword">if</span> reply == QMessageBox.Ok:</div><div class="line">            self.la.setText(<span class="string">'你选择了Ok！'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.la.setText(<span class="string">'你选择了Close！'</span>)</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">question</span><span class="params">(self)</span>:</span></div><div class="line">        reply = QMessageBox.question(self,<span class="string">'询问'</span>,<span class="string">'这是一个询问消息对话框，默认是No'</span>, QMessageBox.Yes | QMessageBox.No | QMessageBox.Cancel, QMessageBox.No)</div><div class="line">        <span class="keyword">if</span> reply == QMessageBox.Yes:</div><div class="line">            self.la.setText(<span class="string">'你选择了Yes！'</span>)</div><div class="line">        <span class="keyword">elif</span> reply == QMessageBox.No:</div><div class="line">            self.la.setText(<span class="string">'你选择了No！'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.la.setText(<span class="string">'你选择了Cancel！'</span>)</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">warning</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="comment"># reply = QMessageBox.warning(self,'警告','这是一个警告消息对话框', QMessageBox.Save | QMessageBox.Discard | QMessageBox.Cancel, QMessageBox.Save)</span></div><div class="line">        cb = QCheckBox(<span class="string">'所有文档都按此操作'</span>)</div><div class="line">        msgBox = QMessageBox()</div><div class="line">        msgBox.setWindowTitle(<span class="string">'警告'</span>)</div><div class="line">        msgBox.setIcon(QMessageBox.Warning)</div><div class="line">        msgBox.setText(<span class="string">'这是一个警告消息对话框'</span>)</div><div class="line">        msgBox.setInformativeText(<span class="string">'出现更改愿意保存吗?'</span>)</div><div class="line">        Save = msgBox.addButton(<span class="string">'保存'</span>, QMessageBox.AcceptRole)</div><div class="line">        NoSave = msgBox.addButton(<span class="string">'取消'</span>, QMessageBox.RejectRole)</div><div class="line">        Cancel = msgBox.addButton(<span class="string">'不保存'</span>, QMessageBox.DestructiveRole)</div><div class="line">        msgBox.setDefaultButton(Save)</div><div class="line">        msgBox.setCheckBox(cb)</div><div class="line">        cb.stateChanged.connect(self.check)</div><div class="line">        reply = msgBox.exec()</div><div class="line">        <span class="keyword">if</span> reply == QMessageBox.AcceptRole:</div><div class="line">            self.la.setText(<span class="string">'你选择了保存！'</span>)</div><div class="line">        <span class="keyword">elif</span> reply == QMessageBox.RejectRole:</div><div class="line">            self.la.setText(<span class="string">'你选择了取消！'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.la.setText(<span class="string">'你选择了不保存！'</span>)</div><div class="line">        </div><div class="line">     <span class="function"><span class="keyword">def</span> <span class="title">critical</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="comment"># reply = QMessageBox.critical(self,'错误','这是一个错误消息对话框', QMessageBox.Retry | QMessageBox.Abort | QMessageBox.Ignore , QMessageBox.Retry)</span></div><div class="line">        msgBox = QMessageBox()</div><div class="line">        msgBox.setWindowTitle(<span class="string">'错误'</span>)</div><div class="line">        msgBox.setIcon(QMessageBox.Critical)</div><div class="line">        msgBox.setText(<span class="string">"这是一个错误消息对话框"</span>)</div><div class="line">        msgBox.setStandardButtons(QMessageBox.Retry | QMessageBox.Abort | QMessageBox.Ignore)</div><div class="line">        msgBox.setDefaultButton(QMessageBox.Retry)</div><div class="line">        msgBox.setDetailedText(<span class="string">'这是详细的信息：学点编程吧，我爱你！'</span>)</div><div class="line">        reply = msgBox.exec() </div><div class="line"></div><div class="line">        <span class="keyword">if</span> reply == QMessageBox.Retry:</div><div class="line">            self.la.setText(<span class="string">'你选择了Retry！'</span>)</div><div class="line">        <span class="keyword">elif</span> reply == QMessageBox.Abort:</div><div class="line">          self.la.setText(<span class="string">'你选择了Abort！'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.la.setText(<span class="string">'你选择了Ignore！'</span>)</div><div class="line">        </div><div class="line">     <span class="function"><span class="keyword">def</span> <span class="title">about</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="comment">#QMessageBox.about(self,'关于','这是一个关于消息对话框!')</span></div><div class="line">        msgBox = QMessageBox(QMessageBox.NoIcon, <span class="string">'关于'</span>,<span class="string">'不要意淫了，早点洗洗睡吧!'</span>)</div><div class="line">        msgBox.setIconPixmap(QPixmap(<span class="string">"beauty.png"</span>))</div><div class="line">        msgBox.exec()</div><div class="line">     </div><div class="line">     <span class="function"><span class="keyword">def</span> <span class="title">aboutqt</span><span class="params">(self)</span>:</span></div><div class="line">        QMessageBox.aboutQt(self,<span class="string">'关于Qt'</span>)</div><div class="line">     </div><div class="line">     <span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span> self.sender().isChecked():</div><div class="line">            self.la.setText(<span class="string">'你打勾了哦'</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.la.setText(<span class="string">'怎么又不打了啊'</span>)</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><p>从几个槽函数来开始介绍五种消息对话框，至于界面定义、信号与槽函数调用属于以前的知识点，这里不再重复。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">info</span><span class="params">(self)</span>:</span></div><div class="line">    reply = QMessageBox.information(self,<span class="string">'提示'</span>,<span class="string">'这是一个消息提示对话框!'</span>,QMessageBox.Ok | QMessageBox.Close, QMessageBox.Close)</div><div class="line">    <span class="keyword">if</span> reply == QMessageBox.Ok:</div><div class="line">        self.la.setText(<span class="string">'你选择了Ok！'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        self.la.setText(<span class="string">'你选择了Close！'</span>)</div></pre></td></tr></table></figure><p>这里描述了一个信息提示的对话框。它的函数调用格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">QMessageBox.information(QWidget, str, str, buttons: Union[QMessageBox.StandardButtons, QMessageBox.StandardButton] = QMessageBox.Ok, defaultButton: QMessageBox.StandardButton = MessageBox.NoButton)</div></pre></td></tr></table></figure><p>打开包含指定父窗口小部件并给定了标题和文本的信息消息对话框。这句话分别对应了第一、二、三个参数。第四个参数则是我们要在消息对话框上想要显示的按钮。第五个参数defaultButton指定按Enter键时使用的按钮。如果defaultButton是QMessageBox.NoButton，QMessageBox会自动选择合适的默认值(即为默认的按钮选项)。</p><p>当然还有更多的按钮参数可以供我们选择，可查看<a href="https://www.riverbankcomputing.com/static/Docs/PyQt5/" target="_blank" rel="external">官网</a>。这个函数中显示的按钮分别是Ok、Close，默认按钮是Close(即为默认的按钮焦点选项)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> reply == QMessageBox.Ok:</div><div class="line">    self.la.setText(<span class="string">'你选择了Ok！'</span>)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    self.la.setText(<span class="string">'你选择了Close！'</span>)</div></pre></td></tr></table></figure><p>标签上的信息会根据我们选择的按钮信息相应的变化，判断是选择了OK还是Close。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">question</span><span class="params">(self)</span>:</span></div><div class="line">    reply = QMessageBox.question(self,<span class="string">'询问'</span>,<span class="string">'这是一个询问消息对话框，默认是No'</span>, QMessageBox.Yes | QMessageBox.No | QMessageBox.Cancel, QMessageBox.No)</div><div class="line">    <span class="keyword">if</span> reply == QMessageBox.Yes:</div><div class="line">        self.la.setText(<span class="string">'你选择了Yes！'</span>)</div><div class="line">    <span class="keyword">elif</span> reply == QMessageBox.No:</div><div class="line">        self.la.setText(<span class="string">'你选择了No！'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        self.la.setText(<span class="string">'你选择了Cancel！'</span>)</div></pre></td></tr></table></figure><p>这个函数与上一个函数的内容差不多，唯一不同的地方是，产生的消息对话框带了一个“？”。</p><p>两种产生消息对话框的方式，一是调用静态函数的方式(即为直接调用现成的函数如<code>QMessageBox.warning</code>之类的函数)，二则是基于属性的调用(即为自定义静态函数，并且槽函数均为自定义编写)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">warning</span><span class="params">(self)</span>:</span></div><div class="line">    <span class="comment"># reply = QMessageBox.warning(self,'警告','这是一个警告消息对话框', QMessageBox.Save | QMessageBox.Discard | QMessageBox.Cancel, QMessageBox.Save)</span></div><div class="line">    cb = QCheckBox(<span class="string">'所有文档都按此操作'</span>)</div><div class="line">    msgBox = QMessageBox()</div><div class="line">    msgBox.setWindowTitle(<span class="string">'警告'</span>)</div><div class="line">    msgBox.setIcon(QMessageBox.Warning)</div><div class="line">    msgBox.setText(<span class="string">'这是一个警告消息对话框'</span>)</div><div class="line">    msgBox.setInformativeText(<span class="string">'出现更改愿意保存吗?'</span>)</div><div class="line">    Save = msgBox.addButton(<span class="string">'保存'</span>, QMessageBox.AcceptRole)</div><div class="line">    NoSave = msgBox.addButton(<span class="string">'取消'</span>, QMessageBox.RejectRole)</div><div class="line">    Cancel = msgBox.addButton(<span class="string">'不保存'</span>, QMessageBox.DestructiveRole)</div><div class="line">    msgBox.setDefaultButton(Save)</div><div class="line">    msgBox.setCheckBox(cb)</div><div class="line">    cb.stateChanged.connect(self.check)</div><div class="line">    reply = msgBox.exec()</div><div class="line">    <span class="keyword">if</span> reply == QMessageBox.AcceptRole:</div><div class="line">        self.la.setText(<span class="string">'你选择了保存！'</span>)</div><div class="line">    <span class="keyword">elif</span> reply == QMessageBox.RejectRole:</div><div class="line">        self.la.setText(<span class="string">'你选择了取消！'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        self.la.setText(<span class="string">'你选择了不保存！'</span>)</div></pre></td></tr></table></figure><p>这个函数分别使用了基于属性和静态函数的方式产生消息对话框，当然实际使用时需要注释一种。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cb = QCheckBox(<span class="string">'所有文档都按此操作'</span>)</div></pre></td></tr></table></figure><p>因为要在对话框中增加一个复选框(打勾的框框)，所以新建了一个复选框对象，复选框的内容就是“所有文档都按此操作”。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">msgBox.setWindowTitle(<span class="string">'警告'</span>)</div><div class="line">msgBox.setIcon(QMessageBox.Warning)</div><div class="line">msgBox.setText(<span class="string">'这是一个警告消息对话框'</span>)</div><div class="line">msgBox.setInformativeText(<span class="string">'出现更改愿意保存吗?'</span>)</div></pre></td></tr></table></figure><p>这四个语句分别有如下表示：</p><ul><li><p>设置消息对话框的标题：警告。</p></li><li><p>设置消息对话框的图标：<code>QMessageBox.Warning</code>，也就是警告图标，当然也可以选择<code>QMessageBox.Information</code>、<code>QMessageBox.Question</code>、<code>QMessageBox.Critical</code>(静态函数)。</p></li><li><p>设置消息对话框的要显示的消息框文本，如果文本格式设置（QMessageBox.textFormat），文本将被解释为纯文本或富文本。 默认设置为Qt.AutoText，即消息框将尝试自动检测文本的格式。</p></li><li><p>设置消息对话框更完整描述的信息性文本，可以使用Infromative文本来扩展text()以向用户提供更多信息。 在Mac上，此文本以text()下方的小系统字体显示。 在其他平台上，它只是附加到现有文本。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Save = msgBox.addButton(<span class="string">'保存'</span>, QMessageBox.AcceptRole)</div><div class="line">NoSave = msgBox.addButton(<span class="string">'取消'</span>, QMessageBox.RejectRole)</div><div class="line">Cancel = msgBox.addButton(<span class="string">'不保存'</span>, QMessageBox.DestructiveRole)</div><div class="line">msgBox.setDefaultButton(Save)</div></pre></td></tr></table></figure><p>这里实际上是新建了三个按钮，当然是中文的，每个对应着一种事件的角色，是接受、拒绝还是放弃。最后设置了默认的按钮是保存。即焦点是在这个按钮上。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">msgBox.setCheckBox(cb)</div><div class="line">cb.stateChanged.connect(self.check)</div></pre></td></tr></table></figure><p>需要在消息对话框上设置之前建立的那个复选框。当选择这个复选框的时候产生了<code>stateChanged</code>信号，对应的将连接<code>check()</code>这个槽函数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reply = msgBox.exec()</div></pre></td></tr></table></figure><p>这行这个语句让消息对话框能够显示出来，并将选中的按钮返回给reply这个变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> reply == QMessageBox.AcceptRole:</div><div class="line">    self.la.setText(<span class="string">'你选择了保存！'</span>)</div><div class="line"><span class="keyword">elif</span> reply == QMessageBox.RejectRole:</div><div class="line">    self.la.setText(<span class="string">'你选择了取消！'</span>)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    self.la.setText(<span class="string">'你选择了不保存！'</span>)</div></pre></td></tr></table></figure><p>当选择不同的按钮时候，则在标签上有不同的显示。</p><ul><li><p>AcceptRole表示点击按钮可以接受对话框；</p></li><li><p>RejectRole表示单击该按钮将导致对话框被拒绝；</p></li><li><p>DestructiveRole表示单击该按钮将导致破坏性更改（例如“丢弃更改”）并关闭对话框。</p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(self)</span>:</span></div><div class="line">    <span class="keyword">if</span> self.sender().isChecked():</div><div class="line">        self.la.setText(<span class="string">'你打勾了哦'</span>) </div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        self.la.setText(<span class="string">'怎么又不打了啊'</span>)</div><div class="line">```        </div><div class="line"></div><div class="line">`self.sender()`就是传递信号过来的对象，这里就是复选框；`isChecked()`返回的是一个布尔值，也就是判断是否被选中，选中了就显示打勾，否则就是不打勾。</div><div class="line"></div><div class="line">```python</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">critical</span><span class="params">(self)</span>:</span></div><div class="line">    <span class="comment"># reply = QMessageBox.critical(self,'错误','这是一个错误消息对话框', QMessageBox.Retry | QMessageBox.Abort | QMessageBox.Ignore , QMessageBox.Retry)</span></div><div class="line">    msgBox = QMessageBox()</div><div class="line">    msgBox.setWindowTitle(<span class="string">'错误'</span>)</div><div class="line">    msgBox.setIcon(QMessageBox.Critical)</div><div class="line">    msgBox.setText(<span class="string">"这是一个错误消息对话框"</span>)</div><div class="line">    msgBox.setStandardButtons(QMessageBox.Retry | QMessageBox.Abort | QMessageBox.Ignore)</div><div class="line">    msgBox.setDefaultButton(QMessageBox.Retry)</div><div class="line">    msgBox.setDetailedText(<span class="string">'这是详细的信息：学点编程吧，我爱你！'</span>)</div><div class="line">    reply = msgBox.exec() </div><div class="line"></div><div class="line">    <span class="keyword">if</span> reply == QMessageBox.Retry:</div><div class="line">        self.la.setText(<span class="string">'你选择了Retry！'</span>) </div><div class="line">    <span class="keyword">elif</span> reply == QMessageBox.Abort:</div><div class="line">        self.la.setText(<span class="string">'你选择了Abort！'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        self.la.setText(<span class="string">'你选择了Ignore！'</span>)</div></pre></td></tr></table></figure><p>这个函数大部分的使用和上面的差不多。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msgBox.setStandardButtons(QMessageBox.Retry | QMessageBox.Abort | QMessageBox.Ignore)</div></pre></td></tr></table></figure><p>表明消息对话框中使用哪些标准按钮。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msgBox.setDetailedText(<span class="string">'这是详细的信息：学点编程吧，我爱你！'</span>)</div></pre></td></tr></table></figure><p>该属性保存要在详细信息区域中显示的文本。文本将被解释为纯文本。默认情况下，此属性包含一个空字符串。只有设置了这个属性，<code>ShowDetails</code>这个按钮才会出来，点击此按钮会呈现设定好的文本内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">about</span><span class="params">(self)</span>:</span></div><div class="line">    <span class="comment">#QMessageBox.about(self,'关于','这是一个关于消息对话框!')</span></div><div class="line">    msgBox = QMessageBox(QMessageBox.NoIcon, <span class="string">'关于'</span>,<span class="string">'不要意淫了，早点洗洗睡吧!'</span>)</div><div class="line">    msgBox.setIconPixmap(QPixmap(<span class="string">"beauty.png"</span>))</div><div class="line">    msgBox.exec()</div></pre></td></tr></table></figure><p>这里用了两种方式建立关于消息对话框，重点说明第二种，即基于属性的。建立了<code>QMessageBox</code>对象，一开始的时候就将标题还有要显示的内容带入了，同时还表明这是一个没有图标的消息对话框。然后对图标进行了设计，使用<code>setIconPixmap()</code>函数，注意参数必须是<code>QPixmap</code>类型的(用于呈现图片管用)。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QPixmap</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">aboutqt</span><span class="params">(self)</span>:</span></div><div class="line">    QMessageBox.aboutQt(self,<span class="string">'关于Qt'</span>)</div></pre></td></tr></table></figure><p>这里将调用关于Qt的对话框。</p><h2 id="组合框使用QComboBox"><a href="#组合框使用QComboBox" class="headerlink" title="组合框使用QComboBox"></a>组合框使用QComboBox</h2><p>由于时间问题直接贴上学习的地址以观后效之用：<a href="https://zhuanlan.zhihu.com/p/36691866" target="_blank" rel="external">PyQt5系列教程（45）：QComboBox的使用</a></p><p>其中的新颖用法以及常用的函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">combox.addItem(QIcon(<span class="string">"./res/latin_b.png"</span>),<span class="string">'这个选项有图标哦'</span>)</div></pre></td></tr></table></figure><p><code>combox.addItem</code>与<code>QIcon</code>的结合使用，下方会显示出来带图标的文字。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">self.label3.setText(combox.currentText())</div></pre></td></tr></table></figure><p>将label3的文本设置为当前选项的值。<code>currentText()</code>属性保存当前文本。如果下拉框是可编辑的，则当前文本是下拉框中显示的值。否则，如果下拉框为空或未设置当前项目，则为当前项目的值或空字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">combox.activated[str].connect(self.zhuangB)</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">zhuangB</span><span class="params">(self, text)</span>:</span></div><div class="line">    self.label3.setText(text)</div><div class="line">    <span class="keyword">if</span> text == <span class="string">"我要开始装B了"</span>:</div><div class="line">        msgBox = QMessageBox(QMessageBox.NoIcon, <span class="string">'装B'</span>,<span class="string">"让你装B"</span>)</div><div class="line">        msgBox.setIconPixmap(QPixmap(<span class="string">"./res/zhuangB.png"</span>))</div><div class="line">        msgBox.setWindowIcon(QIcon(<span class="string">"./res/latin_b.png"</span>))</div><div class="line">        msgBox.exec()</div><div class="line">```        </div><div class="line">我们选择下拉框下面的项目时发出`activated信号`，这个信号会把选中的值（字符串）传递给槽函数zhuangB()。`activated()`信号在用户选择下拉框中的项目时发送。请注意，即使选择没有改变，也会发送此信号。除了可以传字符串以外，还可以传项目的索引。如：</div><div class="line"></div><div class="line">```python</div><div class="line">combox.activated[int].connect(self.zhuangB)</div></pre></td></tr></table></figure><h2 id="密码输入框：QEvent、-QRegExp、-QKeyEvent、QKeySequence、-QRegExpValidator"><a href="#密码输入框：QEvent、-QRegExp、-QKeyEvent、QKeySequence、-QRegExpValidator" class="headerlink" title="密码输入框：QEvent、 QRegExp、 QKeyEvent、QKeySequence、 QRegExpValidator"></a>密码输入框：QEvent、 QRegExp、 QKeyEvent、QKeySequence、 QRegExpValidator</h2><p>实现了三种密码输入框的方式来进行说明：</p><ul><li>输入的密码不可见；</li><li>输入的密码可见，但是鼠标点击其他控件后，密码不可见；</li><li>输入的密码不可见，同时为了更加的安全，屏蔽了鼠标右键、禁用复制、粘贴快捷键、鼠标在密码框中不可移动，不可全选。就类似在输入QQ密码的时候一样。</li></ul><ul><li>内容来源参考：<a href="https://zhuanlan.zhihu.com/p/30152208" target="_blank" rel="external">PyQt5系列教程（12）：构建我们自己的密码输入框</a></li></ul><h2 id="文本输入栏QLineEdit"><a href="#文本输入栏QLineEdit" class="headerlink" title="文本输入栏QLineEdit"></a>文本输入栏QLineEdit</h2><p><code>QLineEdit</code>小部件是一个单行文本编辑器。行编辑允许用户使用一组有用的编辑功能输入和编辑纯文本行，包括撤消和重做，剪切和粘贴以及拖放。通过更改行编辑的<code>echoMode()</code>，还可以将其用作“只写”字段，以输入密码等输入。文本的长度可以限制为<code>maxLength()</code>。文本可以使用<code>validator()</code>或<code>inputMask()</code>或两者来任意约束。在同一行编辑中在验证器和输入掩码之间切换时，最好清除验证器或输入掩码以防止未定义的行为。相关的类是<code>QTextEdit</code>，它允许多行，富文本编辑。可以使用<code>setText()</code>或<code>insert()</code>来更改文本。文本用<code>text()</code>检索；显示的文本（可参阅EchoMode）使用<code>displayText()</code>检索。可以使用<code>setSelection()</code>或<code>selectAll()</code>选择文本，并且可以使用<code>cut()</code>、<code>copy()</code> 和<code>paste()</code>。文本可以与<code>setAlignment()</code>对齐。</p><ul><li><p>内容可参考：<a href="https://zhuanlan.zhihu.com/p/34008281" target="_blank" rel="external">PyQt5系列教程（27）：QLineEdit 1</a></p></li><li><p>内容可参考：<a href="https://zhuanlan.zhihu.com/p/34075334" target="_blank" rel="external">PyQt5系列教程（28）：QLineEdit 2</a></p></li><li><p>内容可参考：<a href="https://zhuanlan.zhihu.com/p/34139521" target="_blank" rel="external">PyQt5系列教程（29）：QLineEdit 3</a></p></li><li><p>内容可参考：<a href="https://zhuanlan.zhihu.com/p/34165301" target="_blank" rel="external">PyQt5系列教程（30）：QLineEdit 4</a></p></li></ul><h2 id="纯文本输入框QPlainTextEdit"><a href="#纯文本输入框QPlainTextEdit" class="headerlink" title="纯文本输入框QPlainTextEdit"></a>纯文本输入框QPlainTextEdit</h2><ul><li><p>内容可参考：<a href="https://zhuanlan.zhihu.com/p/34323103" target="_blank" rel="external">PyQt5系列教程（31）： QPlainTextEdit</a></p></li><li><p>内容可参考：<a href="https://zhuanlan.zhihu.com/p/34354683" target="_blank" rel="external">PyQt5系列教程（32）： QPlainTextEdit</a></p></li><li><p>内容可参考：<a href="https://zhuanlan.zhihu.com/p/34388102" target="_blank" rel="external">PyQt5系列教程（33）： QPlainTextEdit</a></p></li></ul><h2 id="WYSIWYG-所见即所得-查看器-编辑器QTextEdit"><a href="#WYSIWYG-所见即所得-查看器-编辑器QTextEdit" class="headerlink" title="WYSIWYG(所见即所得)查看器/编辑器QTextEdit"></a>WYSIWYG(所见即所得)查看器/编辑器QTextEdit</h2><p><code>QTextEdit</code>类提供了一个用于编辑和显示纯文本和富文本的小部件。<code>QTextEdit</code>是一款先进的<a href="https://zh.wikipedia.org/wiki/%E6%89%80%E8%A6%8B%E5%8D%B3%E6%89%80%E5%BE%97" target="_blank" rel="external">WYSIWYG查看器/编辑器</a>，支持使用<a href="https://zh.wikipedia.org/wiki/HTML" target="_blank" rel="external">HTML</a>样式标签的丰富文本格式。它经过优化处理大型文档并对用户输入做出快速响应。<code>QTextEdit</code>适用于段落和字符。段落是一个格式化的字符串，它被字符包装以适应窗口小部件的宽度。默认情况下，当阅读纯文本时，一个换行符表示一个段落。文档由零个或多个段落组成。该段中的文字按照该段的对齐方式进行调整。段落以硬换行符分隔。段落中的每个字符都有其自己的属性，例如字体和颜色。<code>QTextEdit</code>可以显示图像，列表和表格。如果文本太大而无法在文本编辑的视口中查看，则会出现滚动条。文本编辑可以加载纯文本和富文本文件。富文本使用<code>HTML 4</code>标记的子集进行描述，在文本小部件中使用HTML标记。小部件自动检测HTML标记并相应地显示丰富的文本。 例如，使用字符串<code>”&lt;b&gt;Hello &lt;/ b&gt; &lt;i&gt;xdbcb8！&lt;/ i&gt;”</code>设置标签的文本属性将导致标签显示如下所示的文本：Helloxdbcb8！<br>如果只需要显示一小段富文本，请使用QLabel。Qt中丰富的文本支持旨在为应用程序添加合理的在线帮助功能提供快速，便携和高效的方式，并为富文本编辑器提供基础。如果发现HTML支持不足以满足需求，可以考虑使用<code>Qt WebKit</code>，它提供了一个全功能的Web浏览器小部件。<code>QTextEdit</code>上鼠标光标的形状默认为<code>Qt.IBeamCursor</code>。它可以通过<code>viewport()</code>的游标属性进行更改。<code>QTextEdit</code>可以显示一个大的HTML子集，包括表格和图像。使用<code>setHtml()</code>设置或替换文本，删除任何现有文本并将其替换为在<code>setHtml()</code>调用中传递的文本。如果使用传统HTML调用<code>setHtml()</code>，然后调用<code>toHtml()</code>，则返回的文本可能具有不同的标记，但呈现相同。整个文本可以用<code>clear()</code>删除。可以使用<code>QTextCursor</code>类或使用函数<code>insertHtml()</code>，<code>insertPlainText()</code>，<code>append()</code>或<code>paste()</code>来插入文本本身。 <code>QTextCursor</code>还能够将表格或列表等复杂对象插入到文档中，并处理创建选择和对选定文本应用更改。<code>setLineWrapMode()</code>函数用于指定想要的换行类型，或者如果不想要换行，则使用<code>NoWrap</code>。调用<code>setLineWrapMode()</code>以设置固定像素宽度<code>FixedPixelWidth</code>或字符列（例如80列）<code>FixedColumnWidth</code>，并使用<code>setLineWrapColumnOrWidth()</code>指定像素或列。如果使用<code>WrapgetWidth WidgetWidth</code>的自动换行，则可以使用<code>setWordWrapMode()</code>指定是否在空白处或任何地方断开。<code>find()</code>函数可用于查找和选择文本中的给定字符串。如果想限制<code>QTextEdit</code>中段落的总数，例如在日志查看器中它通常很有用，那么可以使用<code>QTextDocument</code>的<code>maximumBlockCount</code>属性。</p><ul><li>内容可参考：<a href="https://zhuanlan.zhihu.com/p/34549578" target="_blank" rel="external">PyQt5系列教程（34）：QTextEdit的使用</a></li></ul><h2 id="QTimer类、多线程QThread类、进度条QProgressBar类、QThreadPool、QRunnable"><a href="#QTimer类、多线程QThread类、进度条QProgressBar类、QThreadPool、QRunnable" class="headerlink" title="QTimer类、多线程QThread类、进度条QProgressBar类、QThreadPool、QRunnable"></a>QTimer类、多线程QThread类、进度条QProgressBar类、QThreadPool、QRunnable</h2><p><code>QTimer</code>类提供重复和单次定时器。<code>QTimer</code>类为定时器提供高级编程接口。要使用它，先创建一个<code>QTimer</code>，将其<code>timeout()</code>信号连接到相应的插槽，然后调用<code>start()</code>。从那时起，它将以恒定的间隔发出<code>timeout()</code>信号。</p><ul><li><p>QTimer类更多的内容可参考：<a href="https://zhuanlan.zhihu.com/p/32053936" target="_blank" rel="external">PyQt5系列教程（20）：液晶显示屏</a>、相关官方文档、教程系列中的续文</p></li><li><p><a href="https://doc.qt.io/qt-5/qtimer.html" target="_blank" rel="external">Qt Documentation ：QTimer Class</a></p></li><li><p><a href="https://blog.csdn.net/jia666666/article/details/81672344" target="_blank" rel="external">PyQt5高级界面控件之QTimer（十一）</a></p></li></ul><p>QTimer的替代品和QThread类、进度条QProgressBar的相关知识的更多内容可参考：</p><ul><li><p><a href="https://doc.qt.io/qt-5/qprogressbar.html" target="_blank" rel="external">Qt Documentation ：QProgressBar Class</a></p></li><li><p>内容可参考：<a href="https://zhuanlan.zhihu.com/p/30283367" target="_blank" rel="external">PyQt5系列教程（13）：进度对话框</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/39178265" target="_blank" rel="external">PyQt5系列教程（54）：开局5农民，从荒岛到建立帝国1！</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/39356881" target="_blank" rel="external">PyQt5系列教程（55）：开局5农民，从荒岛到建立帝国2！</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/39441702" target="_blank" rel="external">PyQt5系列教程（56）：开局5农民，从荒岛到建立帝国3！</a></p></li></ul><p><code>QRunnable</code>是所有<code>runnable</code>对象的基类，而<code>QThreadPool</code>类用于管理<code>QThreads</code>集合。<code>QRunnable</code>类是一个接口，用于表示一个任务或要执行的代码，需要重新实现<code>run()</code>函数。<code>QThreadPool</code>管理和循环使用单独的<code>QThread</code>对象，以帮助程序减少创建线程的成本。每个Qt应用程序都有一个全局<code>QThreadPool</code>对象，可以通过调用<code>globalInstance()</code>访问。</p><ul><li><p><a href="https://blog.csdn.net/liang19890820/article/details/52624735" target="_blank" rel="external">Qt 之 QThreadPool 和 QRunnable</a></p></li><li><p><a href="https://doc.qt.io/Qt-5/qrunnable.html" target="_blank" rel="external">Qt Documentation ：QRunnable Class</a></p></li><li><p><a href="https://doc.qt.io/qtforpython/PySide2/QtCore/QRunnable.html" target="_blank" rel="external">QRunnable</a></p></li><li><p><a href="https://www.cnblogs.com/findumars/p/5176160.html" target="_blank" rel="external">Qt新建线程的方法（有QRunnable，QThreadPool，moveToThread和QtConcurrent的例子</a></p></li></ul><p>Qt有两种多线程的方法，其中一种是继承<code>QThread</code>的<code>run</code>函数，另外一种是把一个继承于<code>QObject</code>的类转移到一个<code>Thread</code>里。Qt4.8之前都是使用继承<code>QThread</code>的<code>run</code>这种方法，但是Qt4.8之后，Qt官方建议使用第二种方法。两种方法区别不大，用起来都比较方便，但继承<code>QObject</code>的方法更加灵活。这里要记录的是如何正确的创建一个线程，特别是如何正确的退出一个线程。</p><ul><li><p><a href="https://blog.csdn.net/czyt1988/article/details/64441443" target="_blank" rel="external">Qt使用多线程的一些心得——1.继承QThread的多线程使用方法</a></p></li><li><p><a href="https://doc.qt.io/qt-5/qthread.html" target="_blank" rel="external">Qt Documentation ：QThread Class</a></p></li><li><p><a href="https://blog.csdn.net/qq_34710142/article/details/80936986" target="_blank" rel="external">PyQt5进阶（二）——多线程：QThread &amp; 事件处理</a></p></li><li><p><a href="https://www.cnblogs.com/hhh5460/p/5175322.html" target="_blank" rel="external">PyQt5 笔记（04）：主窗口卡死问题</a></p></li></ul><h2 id="QSettings"><a href="#QSettings" class="headerlink" title="QSettings"></a>QSettings</h2><p>QSettings 类提供平台无关的持久化应用程序设置。</p><p>用户通常期待应用程序在不同会话中保留其设置（窗口大小和位置、设置项等等）。这些信息在 Windows 上经常存储在注册表中，在 Mac OS X 和 iOS 上则保存在 plist 文件中。在 Unix 系统上，由于缺少标准，许多应用程序（包括 KDE 程序）使用 INI 文本文件（来存储设置）。</p><p>QSettings 是围绕这些技术提供的一个抽象层，让你使用一种可移植的方式来存储和恢复应用程序设置。它同时支持自定义存储格式。</p><blockquote><p>来源(<strong>好文</strong>)：<a href="https://blog.mynook.info/post/use-qsettings-in-pyqt5/" target="_blank" rel="external">PyQt5 使用 QSettings</a></p></blockquote><ul><li><p><a href="https://doc.qt.io/qt-5/qsettings.html#details" target="_blank" rel="external">Qt Documentation ：QSettings Class</a></p></li><li><h2 id="QT-Creator的简要使用"><a href="#QT-Creator的简要使用" class="headerlink" title="QT Creator的简要使用"></a>QT Creator的简要使用</h2></li><li><p>可参考：<a href="https://zhuanlan.zhihu.com/p/28130949" target="_blank" rel="external">PyQt5系列教程（3）：小小小程序</a></p></li><li><p>可参考：<a href="https://zhuanlan.zhihu.com/p/28559136" target="_blank" rel="external">PyQt5系列教程（6）：布局</a></p></li><li><p>可参考：<a href="https://zhuanlan.zhihu.com/p/28774180" target="_blank" rel="external">PyQt5系列教程（7）：界面搭建</a></p></li><li><p>可参考：<a href="https://zhuanlan.zhihu.com/p/29795495" target="_blank" rel="external">PyQt5系列教程（11）：今天的消息挺全哦！</a></p></li></ul><h2 id="事件、信号槽简要解释"><a href="#事件、信号槽简要解释" class="headerlink" title="事件、信号槽简要解释"></a>事件、信号槽简要解释</h2><p>GUI应用程序是事件驱动的。事件主要由应用程序的用户生成。但它们也可以通过其他手段产生，例如：网络连接，窗口管理器或定时器。当我们调用应用程序的<code>exec_()</code>方法时，应用程序进入主循环。主循环获取事件并将其发送到对象。</p><p>在事件模型中，有三个参与者：</p><ul><li>事件来源</li><li>事件对象</li><li>事件目标</li></ul><p>事件源是其状态更改的对象。它会生成事件。事件对象（event）将状态更改封装在事件源中。事件目标是要通知的对象。事件源对象将处理事件的任务委托给事件目标。</p><p>PyQt5具有独特的信号和插槽机制来处理事件。信号和槽用于对象之间的通信。发生特定事件时发出信号。槽可以是任何Python可调用的函数。当发射连接的信号时会调用一个槽，槽是对信号作出反应的方法。</p><h2 id="Python调用自定义槽函数的疑惑"><a href="#Python调用自定义槽函数的疑惑" class="headerlink" title="Python调用自定义槽函数的疑惑"></a>Python调用自定义槽函数的疑惑</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span><span class="params">()</span>:</span></div><div class="line"><span class="string">''''''</span></div><div class="line"><span class="string">''''''</span></div><div class="line">self.Start_Button.clicked.connect(self.Sele_Format)</div><div class="line">        self.show()</div><div class="line">        </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Clear_URL_Result</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        清空URL列表以及结果显示处</span></div><div class="line"><span class="string">        """</span></div><div class="line">        self.YouTube_URL_Line.setText(<span class="string">""</span>)</div><div class="line">        self.result.setText(<span class="string">""</span>)</div></pre></td></tr></table></figure><p>规范调用槽函数：即在面向对象之内的<code>self</code>其实只是Python面向对象的基础知识…</p><h1 id="参考来源"><a href="#参考来源" class="headerlink" title="参考来源"></a>参考来源</h1><ul><li>以上知识参考来源：《Python学习手册》Mark Lutz著</li></ul><blockquote><p>基本上的Python疑惑知识点均来自此书籍，一本很好的参考学习书籍，赞～</p></blockquote><ul><li><a href="https://www.zhihu.com/people/xdbcb8/activities" target="_blank" rel="external">知乎博主：学点编程吧</a></li></ul><blockquote><p>基本上上面关于PyQT5的知识点均来自于此，感谢作者的付出，学习了很多～直接放上作者的代码未经修改是为了方便以后参考之用。</p></blockquote><ul><li><p><a href="http://www.runoob.com/python3/python3-func-zip.html" target="_blank" rel="external">Python3 zip()函数</a></p></li><li><p><a href="https://maicss.gitbooks.io/pyqt5/content/%E5%B8%83%E5%B1%80%E7%AE%A1%E7%90%86.html" target="_blank" rel="external">PyQT5中文教程</a></p></li><li><p><a href="https://build-system.fman.io/pyqt5-tutorial" target="_blank" rel="external">pyqt5-tutorial</a></p></li><li><p><a href="https://www.riverbankcomputing.com/static/Docs/PyQt5/" target="_blank" rel="external">PyQt5 Reference Guide</a></p></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复习：编译器原理</title>
      <link href="/2019/03/20/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E7%BC%96%E8%AF%91%E5%99%A8%E5%8E%9F%E7%90%86/"/>
      <url>/2019/03/20/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E7%BC%96%E8%AF%91%E5%99%A8%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>这是开始为秋招做准备的简单复习，因为之前没怎么好好学习<em>编译器原理</em>，所以现在学习一番，并且在此做个记录以观后效之用。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 编译器原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 编译器原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复习：计算机网络</title>
      <link href="/2019/03/20/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
      <url>/2019/03/20/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<p>这是开始为秋招做准备的简单复习，因为之前没怎么好好学习<em>计算机网络</em>，所以现在学习一番，并且在此做个记录以观后效之用。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复习：操作系统</title>
      <link href="/2019/03/20/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
      <url>/2019/03/20/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>这是开始为秋招做准备的简单复习，因为之前没怎么好好学习<em>操作系统</em>，所以现在学习一番，并且在此做个记录以观后效之用。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复习：数据结构与算法</title>
      <link href="/2019/03/20/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
      <url>/2019/03/20/%E5%A4%8D%E4%B9%A0%EF%BC%9A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>这是开始为秋招做准备的简单复习，因为之前没怎么好好学习<em>数据结构与算法</em>，所以现在学习一番，并且在此做个记录以观后效之用。</p><a id="more"></a><blockquote><p>好的公开课推荐：<a href="http://www.52nlp.cn/coursera%E4%B8%8A%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%AE%97%E6%B3%95%E8%AF%BE%E7%A8%8B-%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE-%E6%B1%87%E6%80%BB%E6%8E%A8%E8%8D%90" target="_blank" rel="external">Coursera上数据结构 &amp; 算法课程（公开课）汇总推荐</a></p></blockquote><p>关于一些基础的数据结构知识还是有点印象的，大致回顾一遍就开始刷题了…</p><p>回顾可参考：</p><ul><li><p><a href="http://blog.jobbole.com/110835/" target="_blank" rel="external">技术面试宝典： 很全面的算法和数据结构知识（含代码实现）</a></p></li><li><p><a href="https://hit-alibaba.github.io/interview/basic/algo/" target="_blank" rel="external">数据结构与算法</a></p></li></ul><blockquote><p>另外许多的书籍也是回顾基础知识不错的选择。另外一些视频也行。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研乱象</title>
      <link href="/2019/03/13/%E8%80%83%E7%A0%94%E4%B9%B1%E8%B1%A1/"/>
      <url>/2019/03/13/%E8%80%83%E7%A0%94%E4%B9%B1%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<p>当今的研究生早已满大街都是了，“学历”早就开始了其贬值的进程，是这个社会真的需要更多精进的人才了吗？还只是趋势附炎？还是说这是一场本身由学生自己晾成的大剧？无论怎么说，学历迎来贬值是不可避免的趋势。</p><a id="more"></a><p>不知怎么搞的，文章的开头总是越来越像水文的感觉了，我自己都有点看不过去了…回到正题上，身边的同学们说着要考研啊考研，一些个所谓的培训机构忙着每天找人发传单啊，马不停蹄，我们这一届刚刚开学，每天去上课就看到一大堆的传单比我们先到不知多久了，他们不仅想要培训我们这一届的想要考研的同学们，连大一、大二的都在忙着拉拢…好一个群魔乱舞的考研百家争鸣的现场，真是让我大开眼界了。</p><p>当今的大学生大多在本科期间无所事事，没有学到应有的能力与本领，就想着要通过考研来缓解自我的将要进入社会工作压力，这一点早已随着浮躁的中国社会越发不可收拾了，学生们亦变得越来越急功近利，附炎趋势，早已忘记了自己以后对于社会会带来多少的贡献与付出，心里有一个“钱”字，这种早已在中国社会凸显出来的现象如今正在越发向校园里前进，人们试图给这个现象起个褒义词–”现实”…</p><p>当纯洁的搞学术的地方也变成了培训机构，那么应不应该算是一个国家一个民族的悲哀？先不论中国的应试教育培养了多少的考试机器，培养出来的大多数学生不仅是行动上的矮子，还像个鼠目寸光、发育未全的孩子，在道德品行都是一片空白，附炎趋势，就像是个没有自我思考能力的行尸走肉一般，听众说纷纭，随波逐流。这就是大多数中国”知识分子“的现象，只不过是个旧时代跨越过来改头换面的趋势罢。放眼望去，人为财死，鸟为食亡，除了拿命换钱换取苟且偷生，估计也没什么追求了吧。这是我从生活中看到的，那么真实，那么令人感到悲哀。时代确实变了，本质却没变。</p><p>这个社会像是个大的灯光舞台，多少鱼龙混杂的小丑们争个头破血流也要出场表现一番，能搏得台下的观众一笑是他们最大的欣慰，仅此而已。</p><p>我清楚的意识到，我没有做到平心而论，我更像是世途难堪，在此爆发挤压已久的不快，难以会变得迁怒于他人，难免会变得以偏概全，亦难免会变得人情世故起来。</p><p>现在仔细看看，我写的这些东西真是结构模糊的一篇乱七八糟文…我或许又有一些自以为是了…真的是有些羞愧难当啊…</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设立标准</title>
      <link href="/2019/03/13/%E8%AE%BE%E7%AB%8B%E6%A0%87%E5%87%86/"/>
      <url>/2019/03/13/%E8%AE%BE%E7%AB%8B%E6%A0%87%E5%87%86/</url>
      
        <content type="html"><![CDATA[<p>曾经我这个不愿接受、不怎么赞同任何“标准”的人，现在居然也想着要为这个世界，为这人世间的人们设立各种“标准”了…</p><a id="more"></a><p>怎么了？心里总是乱糟糟的，人浮于事，曾经在心中默念无数遍，自以为已经是铁石心肠，刀枪不入了，现在仔细想想，真的是一种自我的讽刺。我变成了那个我曾经看不上眼的“那群人”。愚昧、无礼、庸俗…我的心在司空见惯了之后居然会向着他们蠢蠢欲动了，我慢慢的变得越来越像他们，我变得越来越不像自己了，变得愤世嫉俗，变得俗不可耐，变得冷漠无情、无礼…</p><p>物以类聚，人以群分。大多数不过都是人们自己的选择，他们的每一个选择组成了他们今天的自己。这在曾经我的心里再清楚不过，而我居然感知不到却在慢慢的发生的这些变化，我把自己当成了高人一等的圣人了，我把自己当成了远离世俗的隐君子了…但是我忘了，我的的确确永远也离不开“世俗”在我周围的围绕。</p><p>我也确实变成了曾经向往的那个人，不近人情，冷酷冷漠，无礼无教…我是“无法无天”了，曾经在我心中斩钉截铁的所谓的原则呢？被我这个俗人抛弃得一干二净了。整日浑浑沉沉，不思进取，沉默寡言倒也罢了，窃以为已经看破了红尘…是啊，这像我，又好像不像我。</p><p>如今的我是个懒于敷衍，不甘附俗的我，我对于如何变成今天的这般样子再为清楚不过了，但，我又怎能忘记那份过去的初衷呢…对于无辜的人们不以世俗的眼光去看待，不以待世俗之人之举去对待，这应当是我要遵循的原则啊。对于这个国家，这个民族的绝大多数人，我何必要有一种恨铁不成钢的心态呢，这与我的选择本是格格不入的两回事罢，我不喜欢所谓的一般见识，而现在的我对谁都是一般见识了…这是一个需要耐心等待的循规渐进的过程啊，我又如何像要求我自己一样的去要求整个的历史进程呢，可笑的是我啊，庸人自扰了。</p><p>所有的不甘心，所有的抱怨就在此打个结吧，我还是要做我想做的和该做的事，不为这些世俗之事所困扰，不能让这急功近利、浮躁激进的迷雾遮住了双眼，我，这个国家，这个民族，还有很长的一段路要继续走下去。</p><p>我要做我想做的、能做的、该做的事，更加的，不能变得像我所看不上眼的“世俗”如出一辙的样子。我真的是懒于敷衍吧，但又为何变得迁怒他人，迁怒整个国家，整个民族呢？愤世嫉俗，无辜迁怒，这不应当是我的常态。有时，我明显的感觉自己慢慢的变得像个那些我眼中的“俗人”了，喜欢以偏概全了，这或许就是我时常迁怒于无辜之人的缘由了吧。</p><p>终于能明白为何老一辈的人们为何难以改变其固蒂深根的想法的缘由了，当初以自我认同的学识结论，在世间自以为得到确切的认证，但人也慢慢的不可避免沦为人情世故的一员，自身的思维从而也变得难以撼动，这是一个人的本性吧，在俗世中自以为是，真是有一番趣味性。怎么的，我却也不像变为了人情世故中的一员，但是我这求己求习惯了的自尊心却是容易让我变得薄面起来，变得不像是自己了…一个人，总是容易以在狭小界限得出的结论去批判整个大局，所谓的以偏概全形容我再适当不过。不时的自省是应当的，变得麻木不仁可也难免被潜移默化的。我又何尝不也是一个以利益为先的人呢，曾经的我不屑于此，但有些东西确实如此，需要我理性的去判断做出准确的决策，以至于步骤不显得乱七八糟，没有条理性。</p><p>抛开庸人自扰，我不过是不喜欢自己变得麻木不仁罢了！</p><p>独立寰宇，静心立世，尽我所能，此生不愿做个趋势附炎的俗人。有好些话还想继续的说下去，但又欲言而止…</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>After Effects CC 2017/2018教程笔记记录</title>
      <link href="/2019/03/12/After-Effects-CC-2017-2018%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/03/12/After-Effects-CC-2017-2018%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>如题，这是一文关于<em>After Effects CC 2017/2018</em>的软件使用的教程笔记，最近一直想学习一下这些曾经想学的东西，学习的东西在此做一些记录以观后效之用。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> After Effects CC 2017/2018 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> After Effects CC 2017/2018 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adobe Premiere(Pro)2018教程笔记记录</title>
      <link href="/2019/03/12/Adobe-Premiere-Pro-2018%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/03/12/Adobe-Premiere-Pro-2018%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>如题，这是一文关于<em>Adobe Premiere2018</em>或者是<em>Adobe Premiere Pro2018</em>的软件使用的教程笔记，最近一直想学习一下这些曾经想学的东西，学习的东西在此做一些记录以观后效之用。</p><a id="more"></a><h1 id="学习资源"><a href="#学习资源" class="headerlink" title="学习资源"></a>学习资源</h1><p>看的是在<em>YouTube</em>上的<em>Mr. Yuan</em>发布的教程：<a href="https://www.youtube.com/watch?v=5FyFOG5lBog&amp;list=PLdQlQR22jq3VfIxMoBiOd5VwK6CNCUe0Q&amp;index=1" target="_blank" rel="external">《Adobe Premiere2018视频剪辑速成教程》</a></p><blockquote><p>目前的需求不是很多。但是在有限时间学习一下还是很不错的。</p></blockquote><h2 id="简单的介绍"><a href="#简单的介绍" class="headerlink" title="简单的介绍"></a>简单的介绍</h2><p>在左侧“双击”可选择(可多选素材)素材。</p><blockquote><p><a href="https://www.youtube.com/watch?v=5FyFOG5lBog&amp;list=PLdQlQR22jq3VfIxMoBiOd5VwK6CNCUe0Q&amp;index=1" target="_blank" rel="external">《Adobe Premiere2018视频剪辑速成教程》第01课：新建一个项目和素材导入</a></p></blockquote><h2 id="视频素材剪辑"><a href="#视频素材剪辑" class="headerlink" title="视频素材剪辑"></a>视频素材剪辑</h2><p>….</p><p>这个学习先放放，感觉平时用<em>iMovie</em>就足够了。</p>]]></content>
      
      
      <categories>
          
          <category> Adobe Premiere(Pro)2018 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Adobe Premiere(Pro)2018 </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python3爬虫：爬取千张龙珠高清壁纸制成PDF浏览</title>
      <link href="/2019/03/11/Python3%E7%88%AC%E8%99%AB%EF%BC%9A%E7%88%AC%E5%8F%96%E5%8D%83%E5%BC%A0%E9%BE%99%E7%8F%A0%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E5%88%B6%E6%88%90PDF%E6%B5%8F%E8%A7%88/"/>
      <url>/2019/03/11/Python3%E7%88%AC%E8%99%AB%EF%BC%9A%E7%88%AC%E5%8F%96%E5%8D%83%E5%BC%A0%E9%BE%99%E7%8F%A0%E9%AB%98%E6%B8%85%E5%A3%81%E7%BA%B8%E5%88%B6%E6%88%90PDF%E6%B5%8F%E8%A7%88/</url>
      
        <content type="html"><![CDATA[<p>今早上本来想看看<em>Django</em>的一些知识，做个小的实战玩玩的，结果有了下载一些龙珠高清壁纸的想法，这些壁纸真的太赞了～加上最近忍不住买了《龙珠超画集》，马上就开始了这个爬虫的进程。这个网站真的超赞啊～很多好的作品在这里分享。</p><blockquote><p>爬取网站：<a href="https://wall.alphacoders.com/?lang=Chinese" target="_blank" rel="external">Wallpaper Abyss - 高清壁纸, 桌面背景</a></p></blockquote><p><strong>本爬虫程序适合这个网站的所有的壁纸爬取～</strong></p><a id="more"></a><h1 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h1><p>这个网站不是很难爬，基本上和爬静态网站一样的，难度不大。</p><p>在主页上搜索关键词<em>“龙珠”</em>之后，进入了壁纸页面，显示是两千多张的总数量，但是不能在主页面上直接爬，因为主页上的图片的尺寸都太小了，需要一个个的点开再到里边把正常大小的尺寸的图的真实地址爬出来，之后直接下载下来就OK了。</p><p>我用的是<em>Chrome</em>浏览器。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-11-2019%2017-55-04.gif" alt=""></p><blockquote><p>这是利用<em>Chrome</em>的探嗅器取得的在主页上的图片地址，尺寸太小了，不适合爬取收藏，另外它的父节点就是它的内嵌链接，即为点进去可以下载每个正常大小尺寸的图的页面。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-11-2019%2017-55-30.gif" alt=""></p><blockquote><p>这就是进去之后的内嵌的页面了，在主页面上的都有一个内嵌链接，点进去可提供下载正常尺寸的图片。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-11-2019%2017-55-54.gif" alt=""></p><blockquote><p>从上面的操作分析来看，这个网站的翻页，就是一个参数来实现的：<code>page=num</code>。这在写程序时可起到翻页爬取的作用，我们的目标是全部爬下来收藏～～</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-11-2019%2017-56-16.gif" alt=""></p><blockquote><p>分享一个<em>Chrome</em>浏览器选择<em>CSS选择器</em>自动爬取的小技巧～如上，自行玩耍一般了解去吧，非常实用，省时省力。</p></blockquote><p>这样就差不多分析完了，本身也没什么难度…</p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p>以下为实现的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</div><div class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">inlinkes</span><span class="params">(word, pages)</span>:</span></div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    页数页面换爬取,获得内嵌的链接，以便调用于直接爬取高清大图之用</span></div><div class="line"><span class="string">    '''</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pages):</div><div class="line">        <span class="comment"># 输入要求爬取的关键词，语言默认为Chinese</span></div><div class="line">        headers = &#123;</div><div class="line">            <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36'</span>,</div><div class="line">            <span class="string">'Connection'</span>:<span class="string">'keep-alive'</span>,</div><div class="line">            <span class="string">'Cookie'</span>:<span class="string">'wa_session=tmqupoqa9n72jj0cc39d3ervmmcf52ln68ro2lm44jhnii2acha6pburcqc5kt5nenla1qpitut92k6if6n3k73d66flmejvpehabj1; __cfduid=d9e4a7feea6a68864d2aa652e2e3bb4441552271424; _ga=GA1.2.222625191.1552271425; _gid=GA1.2.1439755337.1552271425'</span>,</div><div class="line">            <span class="string">'Host'</span>:<span class="string">'wall.alphacoders.com'</span>,</div><div class="line">            <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</div><div class="line">            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</div><div class="line">            <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</div><div class="line">            <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">            <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>&#125;</div><div class="line">        r = requests.get(<span class="string">'https://wall.alphacoders.com/search.php?search='</span> + quote(word) + <span class="string">'&amp;lang=Chinese&amp;page='</span> + str(i), headers=headers, stream=<span class="keyword">True</span>)</div><div class="line">        </div><div class="line">        <span class="comment"># 用pyquery库爬链接方式多样化，选择余地多更为方便，先获取内嵌链接，后将高清大图爬取下载下来，不然直接在页面上爬取尺寸太小</span></div><div class="line">        doc = pq(r.text)</div><div class="line">        inlikes = doc.find(<span class="string">'div.thumb-container &gt; div.boxgrid &gt; a'</span>)  <span class="comment"># 爬取每一页的内嵌参数链接</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> inlikes.items():</div><div class="line">            <span class="keyword">yield</span> <span class="string">'https://wall.alphacoders.com/'</span> + i.attr(<span class="string">'href'</span>)  <span class="comment"># 此处用到的关键词yield像流水一样有序执行每一个内嵌链接</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">num = <span class="number">0</span> <span class="comment">#作为图片取名和标号之用～</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> inlinkes(<span class="string">'龙珠'</span>, <span class="number">92</span>):</div><div class="line">        headers = &#123;</div><div class="line">        <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36'</span>,</div><div class="line">        <span class="string">'Connection'</span>:<span class="string">'keep-alive'</span>,</div><div class="line">        <span class="string">'Cookie'</span>:<span class="string">'wa_session=tmqupoqa9n72jj0cc39d3ervmmcf52ln68ro2lm44jhnii2acha6pburcqc5kt5nenla1qpitut92k6if6n3k73d66flmejvpehabj1; __cfduid=d9e4a7feea6a68864d2aa652e2e3bb4441552271424; _ga=GA1.2.222625191.1552271425; _gid=GA1.2.1439755337.1552271425'</span>,</div><div class="line">        <span class="string">'Host'</span>:<span class="string">'wall.alphacoders.com'</span>,</div><div class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</div><div class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</div><div class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</div><div class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>&#125;</div><div class="line">        </div><div class="line">        <span class="comment"># 制成完整的内嵌链接，接下来进入每个内嵌链接直接爬取高清图下载即可</span></div><div class="line">        r = requests.get(i, headers=headers, stream=<span class="keyword">True</span>) </div><div class="line">        doc = pq(r.text)</div><div class="line">        down_link = doc.find(<span class="string">'#page_container &gt; div.center.img-container-desktop &gt; a'</span>).attr(<span class="string">'href'</span>)</div><div class="line">        down_links = requests.get(down_link) <span class="comment">#将获取的图片地址再次解析才能转换为二进制写入文件</span></div><div class="line">        <span class="keyword">with</span> open(<span class="string">'/Users/junjieliu/Pictures/龙珠高清壁纸/'</span> + str(num) + <span class="string">'.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(down_links.content)</div><div class="line"></div><div class="line">        time.sleep(<span class="number">5</span>)</div><div class="line">        num += <span class="number">1</span></div></pre></td></tr></table></figure><p>加上那么多的代理参数是为了防止<code>HTTP Error 403: Forbidden</code>的错误，但是最后还是出现了这样的错误出现，我使用函数<code>urlretrieve</code>依旧也有这样的问题出现，直到我发现了这篇文章：<a href="https://stackoverflow.com/questions/34957748/http-error-403-forbidden-with-urlretrieve" target="_blank" rel="external">HTTP Error 403: Forbidden with urlretrieve</a>，才解决了这样的错误，我选择过<code>with open...</code>的写法，但是<code>url.content</code>总是提示错误，原来是要在获得真实地址的情况下，再将真实地址的内容获取一遍(<code>requests.get()</code>),最后<code>url.content</code>终于也能行得通了～在这花费的时间最多…</p><blockquote><p><strong>需要注意一下的是cookies的事，这里是我的浏览器上的，可自行添加自己的浏览器上的cookies。</strong></p></blockquote><p>另外不懂我写的、我说的那就需要学习了：</p><ul><li><a href="http://www.w3school.com.cn/cssref/css_selectors.ASP" target="_blank" rel="external">CSS 选择器参考手册</a></li><li><a href="https://blog.csdn.net/fengzhizi76506/article/details/59229846" target="_blank" rel="external">python3的urlretrieve使用方法</a></li><li><a href="http://www.runoob.com/http/http-status-codes.html" target="_blank" rel="external">HTTP状态码</a></li><li><a href="http://funhacks.net/explore-python/File-Directory/binary_file_io.html" target="_blank" rel="external">读写二进制文件</a></li><li>Python3网络爬虫开发实战-崔庆才：<code>链接: https://pan.baidu.com/s/182yc8A9EFBFvHFRA3FpeVg 提取码: khs4</code></li></ul><blockquote><p>一本好书，不解释。</p></blockquote><p><strong>上方的程序可将<em>“龙珠”</em>的关键词改为其他的(如火影忍者等)，均可直接运行进行下载。</strong></p><h2 id="运行效果展示"><a href="#运行效果展示" class="headerlink" title="运行效果展示"></a>运行效果展示</h2><p>速度设置了5秒钟一张的速度，基本两千多张还是需要一两个钟的….可以用<em>多线程、多进程</em>改写一下估计会有一些提高，自行了解吧。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-11-2019%2017-57-01.gif" alt=""></p><blockquote><p>速度还是有点慢的…</p></blockquote><h1 id="推荐使用Dash结合写代码"><a href="#推荐使用Dash结合写代码" class="headerlink" title="推荐使用Dash结合写代码"></a>推荐使用Dash结合写代码</h1><p>这个小东西非常多使用，不仅包含有各种许多编程语言的<em>API</em>可查，而且还可以直接作为搜索引擎使用，当然好处还是很多的～开发者必备！</p><blockquote><p>Mac破解下载地址：<a href="https://xclient.info/s/dash.html" target="_blank" rel="external">https://xclient.info/s/dash.html</a></p></blockquote><p>展示效果：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-11-2019%2017-56-44.gif" alt=""></p><blockquote><p>不错～</p></blockquote><h1 id="Mac上利用自带的预览自制DPF画册文件"><a href="#Mac上利用自带的预览自制DPF画册文件" class="headerlink" title="Mac上利用自带的预览自制DPF画册文件"></a>Mac上利用自带的预览自制DPF画册文件</h1><blockquote><p>可自行移步参考<em>Google，百度搜索引擎</em>。</p></blockquote><h1 id="更新：多进程与异步加速爬取"><a href="#更新：多进程与异步加速爬取" class="headerlink" title="更新：多进程与异步加速爬取"></a>更新：多进程与异步加速爬取</h1><p>妈蛋受不了了，爬两千多张图片慢的像一条狗…更新了<em>多进程</em>和<em>异步</em>加速的代码。</p><blockquote><p>为什么不用<em>“多线程”</em>？因为在<em>Python</em>中多线程就是个垃圾！自行了解去吧。可参考：<a href="https://izsk.me/2017/02/11/python并发编程二三事(二" target="_blank" rel="external">python并发编程二三事(二)</a>/)、<a href="http://www.dabeaz.com/python/UnderstandingGIL.pdf" target="_blank" rel="external">Understanding the Python GIL</a>、<a href="https://www.jianshu.com/p/02b7a279c588" target="_blank" rel="external">Python进程、线程、回调与协程 总结笔记 适合新手明确基本概念</a></p></blockquote><h2 id="多进程代码"><a href="#多进程代码" class="headerlink" title="多进程代码"></a>多进程代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</div><div class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"><span class="keyword">import</span> multiprocessing <span class="keyword">as</span> mp</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">inlinkes</span><span class="params">(word, pages)</span>:</span></div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    页数页面换爬取,获得内嵌的链接，以便调用于直接爬取高清大图之用</span></div><div class="line"><span class="string">    '''</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pages):</div><div class="line">        <span class="comment"># 输入要求爬取的关键词，语言默认为Chinese</span></div><div class="line">        headers = &#123;</div><div class="line">            <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36'</span>,</div><div class="line">            <span class="string">'Connection'</span>:<span class="string">'keep-alive'</span>,</div><div class="line">            <span class="string">'Cookie'</span>:<span class="string">'wa_session=tmqupoqa9n72jj0cc39d3ervmmcf52ln68ro2lm44jhnii2acha6pburcqc5kt5nenla1qpitut92k6if6n3k73d66flmejvpehabj1; __cfduid=d9e4a7feea6a68864d2aa652e2e3bb4441552271424; _ga=GA1.2.222625191.1552271425; _gid=GA1.2.1439755337.1552271425'</span>,</div><div class="line">            <span class="string">'Host'</span>:<span class="string">'wall.alphacoders.com'</span>,</div><div class="line">            <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</div><div class="line">            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</div><div class="line">            <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</div><div class="line">            <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">            <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>&#125;</div><div class="line">        r = requests.get(<span class="string">'https://wall.alphacoders.com/search.php?search='</span> + quote(word) + <span class="string">'&amp;lang=Chinese&amp;page='</span> + str(i), headers=headers, stream=<span class="keyword">True</span>)</div><div class="line">        </div><div class="line">        <span class="comment"># 用pyquery库爬链接方式多样化，选择余地多更为方便，先获取内嵌链接，后将高清大图爬取下载下来，不然直接在页面上爬取尺寸太小</span></div><div class="line">        doc = pq(r.text)</div><div class="line">        inlikes = doc.find(<span class="string">'div.thumb-container &gt; div.boxgrid &gt; a'</span>)  <span class="comment"># 爬取每一页的内嵌参数链接</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> inlikes.items():</div><div class="line">            <span class="keyword">yield</span> <span class="string">'https://wall.alphacoders.com/'</span> + i.attr(<span class="string">'href'</span>)  <span class="comment"># 此处用到的关键词yield像流水一样有序执行每一个内嵌链接</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">down_pic</span><span class="params">()</span>:</span></div><div class="line">    num = <span class="number">2888</span> <span class="comment">#测试用的</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> inlinkes(<span class="string">'龙珠'</span>, <span class="number">92</span>):</div><div class="line">        headers = &#123;</div><div class="line">        <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.119 Safari/537.36'</span>,</div><div class="line">        <span class="string">'Connection'</span>:<span class="string">'keep-alive'</span>,</div><div class="line">        <span class="string">'Cookie'</span>:<span class="string">'wa_session=tmqupoqa9n72jj0cc39d3ervmmcf52ln68ro2lm44jhnii2acha6pburcqc5kt5nenla1qpitut92k6if6n3k73d66flmejvpehabj1; __cfduid=d9e4a7feea6a68864d2aa652e2e3bb4441552271424; _ga=GA1.2.222625191.1552271425; _gid=GA1.2.1439755337.1552271425'</span>,</div><div class="line">        <span class="string">'Host'</span>:<span class="string">'wall.alphacoders.com'</span>,</div><div class="line">        <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</div><div class="line">        <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,</div><div class="line">        <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</div><div class="line">        <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</div><div class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>&#125;</div><div class="line">        </div><div class="line">        <span class="comment"># 制成完整的内嵌链接，接下来进入每个内嵌链接直接爬取高清图下载即可</span></div><div class="line">        r = requests.get(i, headers=headers, stream=<span class="keyword">True</span>) </div><div class="line">        doc = pq(r.text)</div><div class="line">        down_link = doc.find(<span class="string">'#page_container &gt; div.center.img-container-desktop &gt; a'</span>).attr(<span class="string">'href'</span>)</div><div class="line">        down_links = requests.get(down_link)  <span class="comment"># 将获取的图片地址再次解析才能转换为二进制写入文件</span></div><div class="line">        <span class="keyword">with</span> open(<span class="string">'/Users/junjieliu/Pictures/龙珠高清壁纸/'</span> + str(num) + <span class="string">'.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(down_links.content)</div><div class="line">        time.sleep(<span class="number">5</span>)</div><div class="line">        num += <span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">#第一种可选编程：</span></div><div class="line"><span class="string">CPU_counts = mp.cpu_count()  # 获得CPU核数</span></div><div class="line"><span class="string">    pool = mp.Pool(CPU_counts)  # CPU核数</span></div><div class="line"><span class="string">    """</span></div><div class="line">pool = mp.Pool() <span class="comment">#CPU核数，默认的是你机器根据情况自动分配的核心数</span></div><div class="line">pool.map(down_pic(), inlinkes(<span class="string">'龙珠'</span>, <span class="number">92</span>))</div><div class="line">pool.close()<span class="comment">#关闭pool，使其不在接受新的任务。</span></div><div class="line">pool.join()<span class="comment">#进程有序进行到有序结束</span></div></pre></td></tr></table></figure><p><strong>关于这个多进程可以理解为：在<em>main函数</em>中有多个进程池一同来经营运行，可以说他是时刻已经准备好的状态了，程序基本上只是<code>inlinkes函数</code>在如往常一贯运行而已，所以时间起码会缩小一倍。</strong></p><p>目视感觉差不多的效果…可能是我设置了<code>time.sleep(5)</code>的关系，但是不这样会给人家服务器增加压力…哎，有失必有得啊，多进程的感觉是有快了一点的(具体来说还是有点明显的！)…跟本地网络情况还是有挂钩的，毕竟下载图片还是要看网速的。</p><blockquote><p>运行程序期间会出现<code>SSL</code>的错误提示，这个不用理会，重新运行即可，遇到问题重新运行即可。</p></blockquote><p>关于多进程教程可参考：</p><ul><li><p><strong>官网API</strong>：<a href="https://docs.python.org/2/library/multiprocessing.html" target="_blank" rel="external">https://docs.python.org/2/library/multiprocessing.html</a></p></li><li><p><a href="https://morvanzhou.github.io/tutorials/data-manipulation/scraping/4-01-distributed-scraping/" target="_blank" rel="external">加速爬虫: 多进程分布式</a></p></li><li><p><a href="https://thief.one/2016/11/23/Python-multiprocessing/" target="_blank" rel="external">Multiprocessing系列】Multiprocessing基础</a></p></li><li><p><a href="https://tracholar.github.io/wiki/python/python-multiprocessing-tutorial.html" target="_blank" rel="external">Python 多线程和多进程编程总结</a></p></li></ul><blockquote><p>好文！</p></blockquote><ul><li><p><a href="https://cuiqingcai.com/3325.html" target="_blank" rel="external">Python爬虫进阶五之多线程的用法</a></p></li><li><p><a href="https://cuiqingcai.com/3335.html" target="_blank" rel="external">Python爬虫进阶六之多进程的用法</a></p></li></ul><blockquote><p>以上函数不懂的地方一般看完这个就懂了。</p></blockquote><ul><li><a href="https://blog.csdn.net/python_wsc/article/details/80109986" target="_blank" rel="external">python multiprocessing 多进程（官方文档翻译）</a></li></ul><h2 id="异步加速"><a href="#异步加速" class="headerlink" title="异步加速"></a>异步加速</h2><p>异步加速，久仰大名了，今天来试试看威力如何～</p><blockquote><p>其中需要用到的库请自行下载。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</div><div class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"><span class="keyword">import</span> multiprocessing <span class="keyword">as</span> mp</div><div class="line"><span class="keyword">import</span> aiohttp</div><div class="line"><span class="keyword">import</span> asyncio</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">inlinkes1</span><span class="params">(word, pages)</span>:</span></div><div class="line">    </div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">85</span>, pages):</div><div class="line">        session = aiohttp.ClientSession()</div><div class="line">        response = <span class="keyword">await</span> session.get(<span class="string">'https://wall.alphacoders.com/search.php?search='</span> + quote(word) + <span class="string">'&amp;lang=Chinese&amp;page='</span> + str(i))</div><div class="line">        html = <span class="keyword">await</span> response.text()</div><div class="line">        doc = pq(html)</div><div class="line">        inlikes = doc.find(<span class="string">'div.thumb-container &gt; div.boxgrid &gt; a'</span>)  <span class="comment"># 爬取每一页的内嵌参数链接</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> inlikes.items():</div><div class="line">            <span class="keyword">yield</span> <span class="string">'https://wall.alphacoders.com/'</span> + i.attr(<span class="string">'href'</span>)  <span class="comment"># 此处用到的关键词yield像流水一样有序执行每一个内嵌链接</span></div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">down_pic</span><span class="params">()</span>:</span></div><div class="line">    num = <span class="number">2900</span></div><div class="line">    <span class="comment">#在以下的迭代器中加上关键词async,由迭代器变成生成器</span></div><div class="line">    <span class="keyword">async</span> <span class="keyword">for</span> i <span class="keyword">in</span> inlinkes1(<span class="string">'龙珠'</span>, <span class="number">92</span>):</div><div class="line">    session = aiohttp.ClientSession()</div><div class="line">        response = <span class="keyword">await</span> session.get(i)</div><div class="line">        html = <span class="keyword">await</span> response.text()</div><div class="line">        doc = pq(html)</div><div class="line">        down_link = doc.find(<span class="string">'#page_container &gt; div.center.img-container-desktop &gt; a'</span>).attr(<span class="string">'href'</span>)</div><div class="line">        down_links = requests.get(down_link)  <span class="comment"># 将获取的图片地址再次解析才能转换为二进制写入文件</span></div><div class="line">        <span class="keyword">with</span> open(<span class="string">'/Users/junjieliu/Pictures/龙珠高清壁纸/'</span> + str(num) + <span class="string">'.jpg'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(down_links.content)</div><div class="line">        time.sleep(<span class="number">5</span>)</div><div class="line">        num += <span class="number">1</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">coroutine = down_pic()</div><div class="line">    task = asyncio.ensure_future(coroutine)</div><div class="line">    loop = asyncio.get_event_loop()</div><div class="line">    loop.run_until_complete(task)</div></pre></td></tr></table></figure><p>其中的寓意就是将耗时的应用用<code>await</code>关键词对等上，在实现整个异步程序时，可先将耗时不部分的应用挂起来进而去处理另一个耗时的<code>await</code>，流程以上述表示：一直挂起，一直跳着直到最后一个“一并运行”。这样就达成了异步处理的效果，最终时间会达到减少。</p><p>可参考：</p><ul><li><p><a href="http://python.jobbole.com/88291/" target="_blank" rel="external">深入理解 Python 异步编程(上)</a></p></li><li><p><a href="https://morvanzhou.github.io/tutorials/data-manipulation/scraping/4-02-asyncio/" target="_blank" rel="external">加速爬虫: 异步加载 Asyncio</a></p></li><li><p><a href="https://aiohttp.readthedocs.io/en/stable/index.html" target="_blank" rel="external">AIOHTTP文档</a></p></li><li><p><a href="https://cuiqingcai.com/6160.html" target="_blank" rel="external">Python中异步协程的使用方法介绍</a></p><blockquote><p>好文，程序中不懂的地方可参考此篇文章。此文后面的参考链接值得一看！</p></blockquote></li><li><p><a href="https://docs.python.org/zh-cn/3/library/asyncio-task.html" target="_blank" rel="external">Python3.7.3官方中文文档：协程与任务</a></p></li></ul><h2 id="异步结合多进程"><a href="#异步结合多进程" class="headerlink" title="异步结合多进程"></a>异步结合多进程</h2><p>这个库出自于<em>Facebook</em>：<a href="https://github.com/jreese/aiomultiprocess" target="_blank" rel="external">aiomultiprocess</a>。</p><p>各位自行解决吧，我想快点结束这个系列了，我想去研究一点新的东西去了…</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 爬虫 </category>
          
          <category> 龙珠 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在iPhone、Mac上结合SS登陆Telegram</title>
      <link href="/2019/03/10/%E5%85%B3%E4%BA%8E%E5%9C%A8iPhone%E3%80%81Mac%E4%B8%8A%E7%BB%93%E5%90%88SS%E7%99%BB%E9%99%86Telegram/"/>
      <url>/2019/03/10/%E5%85%B3%E4%BA%8E%E5%9C%A8iPhone%E3%80%81Mac%E4%B8%8A%E7%BB%93%E5%90%88SS%E7%99%BB%E9%99%86Telegram/</url>
      
        <content type="html"><![CDATA[<p>这段时间一直在想用<em>Python</em>爬虫关于<em>Socks5代理</em>的问题，爬<em>维基百科</em>，<em>Facebook</em>啊之类的…跑题了，前段时间接触的<em>Telegram</em>，感觉很不错，就在<em>iPhone</em>和<em>Mac</em>上研究了一下怎么登陆的问题，在此记录一下以观后效之用。</p><blockquote><p><a href="https://zh.wikipedia.org/wiki/Telegram" target="_blank" rel="external">Telegram维基百科介绍</a></p></blockquote><a id="more"></a><h1 id="iPhone上使用Telegram"><a href="#iPhone上使用Telegram" class="headerlink" title="iPhone上使用Telegram"></a>iPhone上使用Telegram</h1><h2 id="SS账号"><a href="#SS账号" class="headerlink" title="SS账号"></a>SS账号</h2><p>首先得有个SS账号，可以自己解决了～不懂的可参考：<a href="http://liujunworld.com/2018/09/28/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%EF%BC%8C%E8%87%AA%E5%BB%BAVPS-SS%E5%BA%94%E7%94%A8/" target="_blank" rel="external">科学上网，自建VPS-SS应用</a></p><h2 id="下载Shadowrocket"><a href="#下载Shadowrocket" class="headerlink" title="下载Shadowrocket"></a>下载Shadowrocket</h2><p>接下来就是使用那个代理软件问题了，据我个人研究在<em>iPhone</em>上靠谱的真没几个，在我试用过的几个代理软件的情况下，只有<em>Shadowrocket</em>这个最稳，而且在登陆<em>Telegram</em>时无需在添加什么代理信息了，打开即可直接登录了。</p><p>需要美区的账号来下载了，可获取账号的网页地址：<a href="https://github.com/shadowrocketHelp/help/wiki/%E5%9B%BD%E5%A4%96-appstore-id-%E8%B4%A6%E5%8F%B7%E5%88%86%E4%BA%AB" target="_blank" rel="external">shadowrocketHelp/help国外 appstore id 账号分享</a></p><blockquote><p>另外关于怎么登陆使用就不在此多废言了。感谢这个一直开源分享着的作者。</p></blockquote><p><strong>不要再去废时间去下载什么破解版的<em>Shadowrocket</em>了，大多不靠谱还麻烦。</strong></p><p>在这里主要参考了：<a href="https://pdf-lib.org/Home/Details/7633" target="_blank" rel="external">iPhone 如何使用Telegram</a>。感谢分享作者的经验分享～</p><h2 id="Mac上使用Telegram"><a href="#Mac上使用Telegram" class="headerlink" title="Mac上使用Telegram"></a>Mac上使用Telegram</h2><p>在获得了一个可用的<em>SS</em>账号之后，需要添加代理信息<em>Socks5</em>代理：<code>账号：127.0.0.1</code>、<code>端口：1080</code>，非一定选项，看个人设置的情况来填写即可，我上面写的是默认情况下的数字账号和端口号。</p><p>这样一般就能直接上<em>Telegram</em>遨游了～</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> iPhone </category>
          
          <category> Telegram </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>束缚</title>
      <link href="/2019/03/07/%E6%9D%9F%E7%BC%9A/"/>
      <url>/2019/03/07/%E6%9D%9F%E7%BC%9A/</url>
      
        <content type="html"><![CDATA[<p>是什么束缚着、束缚了这个世界？是什么束缚了在这里的人民？是什么束缚 了抚育我，我所热爱的这片土地上的子民？是什么束缚了我…</p><a id="more"></a><p>是时势造出来的英雄们吗…</p><p>是振振有词的千百年来的文化沉淀吗…</p><p>是那所谓的智人吧。又或许是所谓的庸人自扰吧。</p><p>…</p><p>在我的思想之中没什么能束缚我，让你去吧，守身于世界的规则，一群庸人梭织的世界…</p><p>哎呀哎呀，有时真想与世隔绝，避开这世间的纷纷扰扰，真真假假。有没有个稀世人间，世外桃源？让我就这么的与大地母亲相伴终老吧。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo localsearch配置无法运行解决方案</title>
      <link href="/2019/03/06/Hexo-localsearch%E9%85%8D%E7%BD%AE%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2019/03/06/Hexo-localsearch%E9%85%8D%E7%BD%AE%E6%97%A0%E6%B3%95%E8%BF%90%E8%A1%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>最近发现在<em>Hexo</em>主页上的<em>localsearch</em>不好使了，点击这个“搜索”按钮之后一直的在转圈圈，后来一下午一直在排查这个问题，现在终于解决了，在此记录一下以观后效之用。</p><a id="more"></a><h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>今天还是昨天点击“搜索”按钮发现一直没有回应：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-06%20%E4%B8%8B%E5%8D%882.28.31.png" alt=""></p><blockquote><p>想着之前就是有点延迟的，想等等来着，发现越发不可收拾了…一定出问题了。</p></blockquote><p>我使用命令<code>hexo s --debug</code>结合打开<code>http://localhost:4000/</code>在排查问题，发现一些文件总是加载不出来：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-06%20%E4%B8%8B%E5%8D%882.37.45.png" alt=""></p><blockquote><p>事实证明在打得开的情况下是有这些文件加载出来的。</p></blockquote><p>我想着改原生代码吧，发现也没什么进展，我选择了卸载掉，重新安装一次。</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm uninstall hexo-generator-search --save</div><div class="line">npm uninstall hexo-generator-searchdb --save</div></pre></td></tr></table></figure><p>之后再次重新安装：<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-search --save</div><div class="line">npm install hexo-generator-searchdb --save</div></pre></td></tr></table></figure></p><blockquote><p>发现重新安装之后<code>hexo s --debug</code>的情况下还是不行的。</p></blockquote><p>之后我找到了<a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="external">原作者的<em>GitHub</em></a>，发现两者有点矛盾。最后干脆卸载两者其中一个试试看：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm uninstall hexo-generator-searchdb --save</div></pre></td></tr></table></figure><blockquote><p>事实证明，我卸载了这个之后但是另外一个不会受到影响(即<code>hexo-generator-search</code>)，后来点击“搜索”按钮又可以实现站内搜索了～～</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-03-06%20%E4%B8%8B%E5%8D%883.46.21.png" alt=""></p><p>如果你们这样做不行可以试试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm uninstall hexo-generator-search --save</div></pre></td></tr></table></figure><blockquote><p>这个验证过,行不通。</p></blockquote><h2 id="另外说明"><a href="#另外说明" class="headerlink" title="另外说明"></a>另外说明</h2><p>在做好上面的工作之后命令的使用还是相当重要的，这个也让我苦恼不已…</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span>排查时可使用</div><div class="line">hexo s --debug</div><div class="line"></div><div class="line"><span class="meta">#</span>初始化，基本上用不到</div><div class="line">hexo init</div><div class="line"></div><div class="line"><span class="meta">#</span>保存设置</div><div class="line">hexo config</div><div class="line"></div><div class="line"><span class="meta">#</span>生成，上传，在对于配置有变动时最好打上全称命令，亲身经历</div><div class="line">hexo generate</div><div class="line">hexo deploy</div><div class="line"><span class="meta">#</span>两者联合使用</div><div class="line">hexo g -d</div><div class="line"></div><div class="line"><span class="meta">#</span> 其他的：</div><div class="line">Commands:</div><div class="line">  clean     Remove generated files and cache.</div><div class="line">  config    Get or set configurations.</div><div class="line">  deploy    Deploy your website.</div><div class="line">  generate  Generate static files.</div><div class="line">  help      Get help on a command.</div><div class="line">  init      Create a new Hexo folder.</div><div class="line">  list      List the information of the site</div><div class="line">  migrate   Migrate your site from other system to Hexo.</div><div class="line">  new       Create a new post.</div><div class="line">  publish   Moves a draft post from _drafts to _posts folder.</div><div class="line">  render    Render files with renderer plugins.</div><div class="line">  server    Start the server.</div><div class="line">  version   Display version information.</div><div class="line"></div><div class="line">Global Options:</div><div class="line">  --config  Specify config file instead of using _config.yml</div><div class="line">  --cwd     Specify the CWD</div><div class="line">  --debug   Display all verbose messages in the terminal</div><div class="line">  --draft   Display draft posts</div><div class="line">  --safe    Disable all plugins and scripts</div><div class="line">  --silent  Hide output on console</div></pre></td></tr></table></figure><blockquote><p>就这样吧～</p></blockquote><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>如果对于一些比如<code>_config.yml</code>文件的设置有疑惑可参考：</p><ul><li><p><a href="https://www.jianshu.com/p/519b45730824" target="_blank" rel="external">Hexo开启站内搜索功能</a></p></li><li><p><a href="http://www.manongjc.com/article/62958.html" target="_blank" rel="external">Hexo Next 主题中添加本地搜索功能</a></p></li><li><p><a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="external">theme-next/hexo-generator-searchdb</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 问题记录笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Photoshop cc 2018教程笔记记录</title>
      <link href="/2019/03/05/Photoshop-cc-2018%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/03/05/Photoshop-cc-2018%E6%95%99%E7%A8%8B%E7%AC%94%E8%AE%B0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>最近一直想学习<em>PS</em>这个之前就一直很感兴趣的技能，想着借此实现自己的想法，和作为另一个重要的技能也是不错的。由于是<em>Photoshop cc 2018</em>，所以在此分享一些学习资源和下载资源，另外对于一些值得记住的内容做一些笔记以观后效之用。</p><a id="more"></a><h1 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h1><p><em>Adobe</em>家族软件全套破解下载(网友分享～)：</p><blockquote><p> <strong>链接: <a href="https://pan.baidu.com/s/1RDfGzhLVCFoWxg5D7D2Jjg" target="_blank" rel="external">https://pan.baidu.com/s/1RDfGzhLVCFoWxg5D7D2Jjg</a> 提取码: p57f</strong></p></blockquote><p>关于破解之前记得看好：<strong>下载好软件之后，断网，然后打开破解的插件进行破解，破解之后就能使用了。</strong></p><p>另外关于下载百度网盘文件的一些实用方法(全平台均有)：<a href="https://www.runningcheese.com/baiduyun" target="_blank" rel="external">3个方法解决百度网盘限速 （2019-02-20 更新）</a></p><h1 id="学习资源分享"><a href="#学习资源分享" class="headerlink" title="学习资源分享"></a>学习资源分享</h1><p>关于我是跟着在<em>YouTube</em>上的几个大神学习～所以就在此分享这些资源吧。</p><ul><li><p><a href="https://www.youtube.com/watch?v=7AbUkwpwZ9E&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I" target="_blank" rel="external">Mr. Yuan：Photoshop cc 2018最新教程 01（认识Photoshop）</a></p></li><li><p><a href=""></a></p></li></ul><h1 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h1><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><blockquote><p><strong>Mac中的“command”键等于win中的“Ctrl”键，“option”键为“Alt”键。</strong></p></blockquote><ul><li><p>切换前景色和背景色：<strong>X</strong></p></li><li><p>返回前选色：<strong>D</strong></p></li><li><p><strong>shift</strong>键加<strong>option</strong>键盘(Win为<strong>Alt键</strong>)在结合选区时有更为方便的的效果</p></li><li><p>移到“缩放工具”，“command”(win为”Ctrl”)+单击选择“图层蒙版缩略图”可选剪切下来的图画，此时“option”+“Del”可去除所选择的图层(自动填充前景色)，“Ctrl”+“Del”(自动填充背景色)</p></li><li><p>在画笔的情况下“[”,”]“为放大放小的情况</p></li><li><p>“画笔”的“清除”(去除不影响背景颜色的自建颜色，做影子修改时很有用)与“透明度”(深浅度的调整)</p></li></ul><h2 id="基本认识及操作"><a href="#基本认识及操作" class="headerlink" title="基本认识及操作"></a>基本认识及操作</h2><ul><li><p>通过首选项以及上方的属性栏来进行调整图片的原始排列等；</p></li><li><p>工具之间是相互交叉配合使用的；</p></li><li><p>一个工具里有多个选项选择交叉可使用；</p></li><li><p>羽化即虚化；</p></li><li><p>在两个图层一个在上一个在下，可以产生叠加结合的效果(在自我设计时最为重要，比如投影之类的)，PS准确来说就是图层之间的叠加结合而已，新建图层作为要叠加的成分(一般指新建的蒙版图层)；</p></li><li><p>画笔结合“柔边”，背景色为白色(按实际情况选择)，让黑色的阴影变白(此时背景色应当是白色的情况下)；</p></li><li><p>多种抠图方法可结合着配合使用以达到最快最好的效率效果；</p></li><li><p>“选择并遮住”之中的“反选”即可选择另外一面未选择一方作为主操刀；</p></li><li><p>在使用“套索工具”时，在不小心套索的多余了，可停下，使用快捷键按住“option”与“shift”减少区域和增加区域；</p></li><li><p>画笔颜色取前景色；</p></li><li><p>在简单的处理之间也应当放大来进行精细化；</p></li><li><p>在对将要进行处理的图片进行“解锁”作为第一步，作为一种好的开头习惯；</p></li><li></li></ul><h2 id="抠图"><a href="#抠图" class="headerlink" title="抠图"></a>抠图</h2><p>通过选区选框圈出大概的位置，可利用上方属性的“变换选区”，结合放大来进行完善选框的完整性：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-05-2019%2016-46-57.gif" alt=""></p><h2 id="填充取景"><a href="#填充取景" class="headerlink" title="填充取景"></a>填充取景</h2><p>通过选区(可通过“取消选择”来取消选区)，进行“填充”，补色，“模糊”来进行进一步的简要特效。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-05-2019%2020-51-45.gif" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-05-2019%2020-51-10.gif" alt=""></p><p>“自由变换”进行拖拉选区尺寸的大小。</p><h2 id="图层变换"><a href="#图层变换" class="headerlink" title="图层变换"></a>图层变换</h2><p>可将右侧的图层上下来结合实际情况进行摆布，可选择“叠加”，“透明度”等等使得更为符合实际情况。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-05-2019%2021-06-00.gif" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-05-2019%2021-06-30.gif" alt=""></p><h2 id="多面抠图"><a href="#多面抠图" class="headerlink" title="多面抠图"></a>多面抠图</h2><blockquote><p><strong>以下步骤必须一步完成！！！不可中途更改！</strong></p></blockquote><p>多面抠图，利用“套索工具”，其中的多方面可选择工具，可先将图片放大以便抠图更为准确。</p><p>在套索完之后选择“选择并遮住…”才可进一步切剪多余的部分（可结合放大图像，按住“option”/“Alt”配合套索工具即可）。</p><p>之后在右下角图层下面选择“建立新的图层或调整图层”，“纯色”，将此脱在剪好的图层下边。（<strong>换成白底效果！！</strong>）</p><blockquote><p><a href="https://www.youtube.com/watch?v=Zo8P4JYeIFg&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I&amp;index=8" target="_blank" rel="external">多边形抠图</a></p></blockquote><h2 id="快速选择工具抠图"><a href="#快速选择工具抠图" class="headerlink" title="快速选择工具抠图"></a>快速选择工具抠图</h2><p>“快速选择工具”与“魔棒”在一按钮处…可增可减。</p><p>另外操作可与上面的多面抠图的操作一致，如放大来进行抠图，加上快捷键等等。</p><p>其中包括侧面部分可选择按钮的功能等使用。</p><h3 id="产生投影影子效果"><a href="#产生投影影子效果" class="headerlink" title="产生投影影子效果"></a>产生投影影子效果</h3><p>生成一个同样体积大小的灰色图层(在新建的图层上)，贴在图下方，然后进行叠加结合的效果，再进一步的处理一下即可。</p><blockquote><p><a href="https://www.youtube.com/watch?v=kxW420eVuOY&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I&amp;index=9" target="_blank" rel="external">快速选择工具抠图</a></p></blockquote><h2 id="魔术棒抠图方法"><a href="#魔术棒抠图方法" class="headerlink" title="魔术棒抠图方法"></a>魔术棒抠图方法</h2><p>魔棒的加选与其他工具的结合使用。</p><blockquote><p><a href="https://www.youtube.com/watch?v=UNZ0_F_h7B0&amp;index=10&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I" target="_blank" rel="external">魔术棒抠图方法</a></p></blockquote><h2 id="案例学习"><a href="#案例学习" class="headerlink" title="案例学习"></a>案例学习</h2><p>“选择”，“色彩范围”，然后利用其中的工具进行一系列的调色，进行选择抠像，之后可进行一系列的如上的操作，可利用“画笔”选择颜色进行背景的涂色，然后可利用“边缘画笔”对于难对付的背景涂色(即躲在前景之后的背景色)。</p><blockquote><p><a href="https://www.youtube.com/watch?v=MH4KcRvlguU&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I&amp;index=11" target="_blank" rel="external">色彩范围抠图牛奶杯案例</a></p></blockquote><p>在以下的案例之中，有通过抠图结合新建图层，加上相应的文字用以说明某个产品或者是某个东西的参数等。新建一个图层(单位应当为“像素”，将人物拖进此个新建的心图层中)，加以某些个文字，文字期间可加以某些个工具的修饰，在背景点击“指示图层可见性”蒙蔽其他图层的可见性，可用“渐变工具”来构建新的颜色交叉的背景图色，“矩形工具”为文字添加背景。可用“涂笔”去除某些碍眼的多余的线条背景等。</p><blockquote><p><a href="https://www.youtube.com/watch?v=Tm3e_360OJQ&amp;index=12&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I" target="_blank" rel="external">多边形抠图电脑广告案例</a></p></blockquote><h2 id="裁剪工具的使用"><a href="#裁剪工具的使用" class="headerlink" title="裁剪工具的使用"></a>裁剪工具的使用</h2><p>裁剪工具的使用与平时使用的情况是差不多的一个情况，它的“裁剪工具”上方亦有不同的小工具可使用，如自定义裁剪尺寸，拉直旋转，自定义裁剪的网格等。</p><blockquote><p><a href="https://www.youtube.com/watch?v=8by69AJCeyE&amp;index=14&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I" target="_blank" rel="external">裁剪工具的使用</a></p></blockquote><h2 id="修改图形大小"><a href="#修改图形大小" class="headerlink" title="修改图形大小"></a>修改图形大小</h2><p>与图像像素的大小以及尺寸有关的教程。</p><p>输入一个文件画像，“图像大小”可起到一个图片像素压缩的效用，即根据图像尺寸大小可改变其图片质量问题，“画布大小”可起到裁剪的作用，其中可选择裁剪的中心点等。当在想要生成的图片时可结合使用两者工具来进行图片的整体修改和局部的裁剪。</p><p>另外可新建一个预期的空白图层，后将想要的更改的图像拖进新建的图层之中亦可完成改进图像像素的问题。</p><blockquote><p><a href="https://www.youtube.com/watch?v=40b9F234AgY&amp;index=15&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I" target="_blank" rel="external">修改图形大小</a></p></blockquote><h2 id="使用变换命令"><a href="#使用变换命令" class="headerlink" title="使用变换命令"></a>使用变换命令</h2><p>新的抠图技能：可选“选框工具”之后选出图像中的某个东西，后“图层”，“新建”，“通过拷贝的图层”即可得出一个新的可利用的图层了(即得出的与“套索工具”的图层可利用的效果一致)。</p><p>“编辑”中的“变换”可对于图片做更多的处理，其中的选项多样化。</p><p>有对于包装盒、图片贴墙、将某个图进行其他变换(如先画一个选区，在区域之内进行适当的变换等)的几个小的实战。</p><blockquote><p><a href="https://www.youtube.com/watch?v=waENC2Z_yAY&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I&amp;index=16" target="_blank" rel="external">使用变换命令</a></p></blockquote><h2 id="内容识别比例缩放与自由变换"><a href="#内容识别比例缩放与自由变换" class="headerlink" title="内容识别比例缩放与自由变换"></a>内容识别比例缩放与自由变换</h2><p>”内容识别比例缩放“是以内容的比例进行自动缩放的一个选项，点击上方最后的“小人图标”，表示在此缩放功能之下图中人物的皮肤会收到一定的保护。</p><h3 id="实用"><a href="#实用" class="headerlink" title="实用"></a>实用</h3><p>“填充”其中的内容识别，再选取一个区域之后，可用于去水印等(将前景变换为背景，内容识别指的是以背景的识别提取)。</p><p>下一节介绍的，精修时可用“修补工具”来画区域来进行滑动填充缺失的邻块。</p><blockquote><p><a href="https://www.youtube.com/watch?v=7gXNLkv2AsY&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I&amp;index=17" target="_blank" rel="external">内容识别比例缩放与自由变换</a></p></blockquote><h2 id="操控变形"><a href="#操控变形" class="headerlink" title="操控变形"></a>操控变形</h2><p>先将要进行处理的图“解锁”(有时不解锁许多功能用不了)，选择“操控变形”，“显示网格”定取“中心点”(即中心点是变形时的“钉子”用于旋转变形，有时亦可作为钉子的定位作用)，想变换图中的物体的动作时，可先将此物体抠出来，再将原图中的此物体使用上一节所述的选择手段抹去，将两者重叠在一起，即能单独操控物体的动作了。(撤消快捷键可见变换动作)</p><blockquote><p><a href="https://www.youtube.com/watch?v=8xlbE2bLhOE&amp;index=18&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I" target="_blank" rel="external">操控变形</a></p></blockquote><h2 id="案例学习-1"><a href="#案例学习-1" class="headerlink" title="案例学习"></a>案例学习</h2><p>在一个图标logo要帖在一个物体上时，可先将两者同时打开，利用图册框上方“设置图层的混合模式”，选择两者较为合一的颜色对比，如不满意，可在基础上选择“图像”“调整”“色阶”去调整颜色，之后利用学到的变换将两者打磨。</p><blockquote><p><a href="https://www.youtube.com/watch?v=pIFd0ffuxyI&amp;index=19&amp;list=PLdQlQR22jq3VLBuAxsHIhOEWvEWihAz4I" target="_blank" rel="external">通过变形为雨伞贴图</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Photoshop </category>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Photoshop </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python分词结合Pyqt5：简单文章查重小工具</title>
      <link href="/2019/03/03/python%E5%88%86%E8%AF%8D%E7%BB%93%E5%90%88Pyqt5%EF%BC%9A%E7%AE%80%E5%8D%95%E6%96%87%E7%AB%A0%E6%9F%A5%E9%87%8D%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
      <url>/2019/03/03/python%E5%88%86%E8%AF%8D%E7%BB%93%E5%90%88Pyqt5%EF%BC%9A%E7%AE%80%E5%8D%95%E6%96%87%E7%AB%A0%E6%9F%A5%E9%87%8D%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>前段时间在一微信公众号上看到一篇不错的以关键词频率为基础的“文章查重率”的技术文章，我在这里将其套上了<em>PyQt5</em>的<em>UI</em>界面，将其制作成了一个小的工具。其核心代码还是以关键词频率为准的，所以查重率真的是<strong>不靠谱的</strong>…本人只是心血来潮了，想做个玩具玩玩～</p><a id="more"></a><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><h2 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h2><p>因为是在其基础上改造的，所以可直接查看原链接即可：<a href="https://mp.weixin.qq.com/s?__biz=MzU5MjEwMTE2OQ==&amp;mid=2247484948&amp;idx=1&amp;sn=9d079dcfeb51840aadce6fca6eeb0ee1&amp;chksm=fe25ac4ac952255c5751a6a2ddf574fe7f527f0aeee18fc68a2b1bc9a14208e5942a95f78d7a&amp;mpshare=1&amp;scene=23&amp;srcid=0302nzaTeyViT0wOpdHRVmLV" target="_blank" rel="external">我用Python分析了翟天临的论文，学术还是要认真做啊</a></p><h2 id="Ui代码"><a href="#Ui代码" class="headerlink" title="Ui代码"></a>Ui代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">Created on Mar 3, 2019</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">@author: junjieliu</span></div><div class="line"><span class="string">@note: python checking tool</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> *</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Checking_tool</span><span class="params">(QWidget)</span>:</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        </div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">        UI布局设计、管理，以及信号槽的连襟</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        <span class="comment">#第一选取文件按钮</span></div><div class="line">        lbl_1 = QLabel(<span class="string">'请选择输入文件：'</span>)</div><div class="line">        btn_chooseFile_1 = QPushButton(<span class="string">"选取文件"</span>, self)</div><div class="line">        <span class="comment">#第二选取文件按钮</span></div><div class="line">        lbl_2 = QLabel(<span class="string">'请选择对比文件：'</span>)</div><div class="line">        btn_chooseFile_2 = QPushButton(<span class="string">"选取文件"</span>, self)</div><div class="line">        <span class="comment">#输出按钮</span></div><div class="line">        lbl_3 = QLabel(<span class="string">'重复率：'</span>)</div><div class="line">        export_nmb = QLineEdit()</div><div class="line">        <span class="comment">#推出按钮</span></div><div class="line">        qbtn = QPushButton(<span class="string">'Quit'</span>, self)</div><div class="line">        qbtn.clicked.connect(QCoreApplication.instance().quit)</div><div class="line">        </div><div class="line">        <span class="comment">#布局管理</span></div><div class="line">        grid = QGridLayout()</div><div class="line">        grid.setSpacing(<span class="number">6</span>)</div><div class="line">        grid.addWidget(lbl_1, <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(btn_chooseFile_1, <span class="number">1</span>, <span class="number">1</span>)</div><div class="line">        grid.addWidget(lbl_2, <span class="number">2</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(btn_chooseFile_2, <span class="number">2</span>, <span class="number">1</span>)</div><div class="line">        grid.addWidget(lbl_3, <span class="number">3</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(export_nmb, <span class="number">3</span>, <span class="number">1</span>)</div><div class="line">        grid.addWidget(qbtn, <span class="number">4</span>, <span class="number">1</span>)</div><div class="line">        self.setLayout(grid)</div><div class="line">        self.setGeometry(<span class="number">500</span>, <span class="number">300</span>, <span class="number">500</span>, <span class="number">300</span>)</div><div class="line">        </div><div class="line">        self.setWindowTitle(<span class="string">'简易查重小工具'</span>)</div><div class="line">        self.cwd = os.getcwd()  <span class="comment"># 获取当前程序文件位置</span></div><div class="line">        </div><div class="line">        </div><div class="line">        </div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">file_content</span><span class="params">()</span>:</span></div><div class="line">            <span class="string">'''</span></div><div class="line"><span class="string">            文章关键词词频输出</span></div><div class="line"><span class="string">            '''</span></div><div class="line">            fileName_choose, filetype = QFileDialog.getOpenFileName(self, <span class="string">"选取文件"</span>, self.cwd)  <span class="comment"># 起始路径 </span></div><div class="line">            </div><div class="line">            file_open = open(str(fileName_choose))</div><div class="line">            file_content = file_open.read()</div><div class="line">            print(file_content) </div><div class="line"></div><div class="line">        btn_chooseFile_1.clicked.connect(file_content)</div><div class="line">        self.show()</div><div class="line"></div><div class="line">        </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Checking_tool()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><h3 id="Ui效果展示"><a href="#Ui效果展示" class="headerlink" title="Ui效果展示"></a>Ui效果展示</h3><p>如下图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Mar-05-2019%2019-53-55.gif" alt=""></p><h2 id="结合代码（非完整代码）"><a href="#结合代码（非完整代码）" class="headerlink" title="结合代码（非完整代码）"></a>结合代码（非完整代码）</h2><p><strong>这个代码不是完整代码！！！这是目前写到的地方！</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">Created on Mar 3, 2019</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">@author: junjieliu</span></div><div class="line"><span class="string">@note: python checking tool</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> *</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> *</div><div class="line"><span class="keyword">import</span> pkuseg</div><div class="line"><span class="keyword">from</span> sklearn.feature_extraction.text <span class="keyword">import</span> TfidfVectorizer</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> numpy.linalg.linalg <span class="keyword">import</span> norm  </div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Checking_tool</span><span class="params">(QWidget)</span>:</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        </div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">readFile</span><span class="params">(self, file_path)</span>:</span></div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">        文件读取，输出文件内容</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        content = []</div><div class="line">        <span class="keyword">with</span> open(file_path, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</div><div class="line">            content = f.read()</div><div class="line">        </div><div class="line">        <span class="keyword">return</span> content</div><div class="line">            </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">keywords_TF</span><span class="params">(self, file_content)</span>:</span></div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">        利用北大的中文分词表以及中文停用词表来进行一系列的分词动作，实现输出</span></div><div class="line"><span class="string">        主要关键词的频率,忽略掉停用词的频率出现</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        seg = pkuseg.pkuseg() <span class="comment">#加载模型</span></div><div class="line">        text = seg.cut(file_content)</div><div class="line">        </div><div class="line">        <span class="comment">#停用词运用</span></div><div class="line">        stopwords = []</div><div class="line">        <span class="keyword">with</span> open(<span class="string">'Users/junjieliu/Documents/stopwords-master/中文停用词表.txt'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</div><div class="line">            stopwords = f.read()</div><div class="line">        </div><div class="line">        <span class="comment">#去除在文章中的停用词</span></div><div class="line">        new_text = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> text:</div><div class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> stopwords:</div><div class="line">                new_text.append(i)</div><div class="line">        <span class="keyword">return</span> new_text</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">calculateSimilarity</span><span class="params">(self, file_1, file_2)</span>:</span></div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">add_space</span><span class="params">(s)</span>:</span></div><div class="line">            <span class="keyword">return</span> <span class="string">' '</span>.join(keywords_TF(s))  </div><div class="line">  </div><div class="line">        <span class="comment"># 将字中间加入空格</span></div><div class="line">        s1, s2 = add_space(file_1), add_space(file_2)</div><div class="line">        <span class="comment"># 转化为TF矩阵</span></div><div class="line">        cv = TfidfVectorizer(tokenizer=<span class="keyword">lambda</span> s: s.split())</div><div class="line"> </div><div class="line">        corpus = [s1, s2]</div><div class="line"> </div><div class="line">        vectors = cv.fit_transform(corpus).toarray()</div><div class="line">        <span class="comment"># 计算TF系数</span></div><div class="line">        <span class="keyword">return</span> np.dot(vectors[<span class="number">0</span>], vectors[<span class="number">1</span>]) / (norm(vectors[<span class="number">0</span>]))</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">        UI布局设计、管理，以及信号槽的连襟</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        <span class="comment">#第一选取文件按钮</span></div><div class="line">        lbl_1 = QLabel(<span class="string">'请选择输入文件：'</span>)</div><div class="line">        btn_chooseFile_1 = QPushButton(<span class="string">"选取文件"</span>, self)</div><div class="line">        <span class="comment">#第二选取文件按钮</span></div><div class="line">        lbl_2 = QLabel(<span class="string">'请选择对比文件：'</span>)</div><div class="line">        btn_chooseFile_2 = QPushButton(<span class="string">"选取文件"</span>, self)</div><div class="line">        <span class="comment">#输出按钮</span></div><div class="line">        lbl_3 = QLabel(<span class="string">'重复率：'</span>)</div><div class="line">        export_nmb = QLineEdit()</div><div class="line">        <span class="comment">#推出按钮</span></div><div class="line">        qbtn = QPushButton(<span class="string">'Quit'</span>, self)</div><div class="line">        qbtn.clicked.connect(QCoreApplication.instance().quit)</div><div class="line">        </div><div class="line">        <span class="comment">#布局管理</span></div><div class="line">        grid = QGridLayout()</div><div class="line">        grid.setSpacing(<span class="number">6</span>)</div><div class="line">        grid.addWidget(lbl_1, <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(btn_chooseFile_1, <span class="number">1</span>, <span class="number">1</span>)</div><div class="line">        grid.addWidget(lbl_2, <span class="number">2</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(btn_chooseFile_2, <span class="number">2</span>, <span class="number">1</span>)</div><div class="line">        grid.addWidget(lbl_3, <span class="number">3</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(export_nmb, <span class="number">3</span>, <span class="number">1</span>)</div><div class="line">        grid.addWidget(qbtn, <span class="number">4</span>, <span class="number">1</span>)</div><div class="line">        self.setLayout(grid)</div><div class="line">        self.setGeometry(<span class="number">500</span>, <span class="number">300</span>, <span class="number">500</span>, <span class="number">300</span>)</div><div class="line">        </div><div class="line">        self.setWindowTitle(<span class="string">'简易查重小工具'</span>)</div><div class="line">        self.cwd = os.getcwd()  <span class="comment"># 获取当前程序文件位置</span></div><div class="line">        </div><div class="line">        </div><div class="line">        </div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">TF</span><span class="params">()</span>:</span></div><div class="line">            <span class="string">'''</span></div><div class="line"><span class="string">            文章关键词词频输出</span></div><div class="line"><span class="string">            '''</span></div><div class="line">            fileName_choose, filetype = QFileDialog.getOpenFileName(self, <span class="string">"选取文件"</span>, self.cwd)  <span class="comment"># 起始路径 </span></div><div class="line">            </div><div class="line">            file_open = open(str(fileName_choose))</div><div class="line">            file_content = file_open.read()</div><div class="line">            print(file_content) </div><div class="line"></div><div class="line">        btn_chooseFile_1.clicked.connect(TF)</div><div class="line">        self.show()</div><div class="line"></div><div class="line">        </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Checking_tool()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><blockquote><p>有时间有精力来再补上这个坑…</p></blockquote><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>以下是参考过的文章，代码其中一些不懂的可作为参考学习。</p><ul><li><p><a href="https://blog.csdn.net/humanking7/article/details/80546728" target="_blank" rel="external">[PyQt5]文件对话框QFileDialog的使用</a></p></li><li><p><a href="http://www.runoob.com/python/python-files-io.html" target="_blank" rel="external">Python 文件I/O</a></p></li><li><p><a href="https://maicss.gitbooks.io/pyqt5/content/布局管理.html" target="_blank" rel="external">PyQt5 中文教程</a></p></li><li><p><a href="https://www.ruanyifeng.com/blog/2013/03/tf-idf.html" target="_blank" rel="external">TF-IDF与余弦相似性的应用（一）：自动提取关键词</a></p></li><li><p><a href="https://github.com/hahaahaha111/stopwords" target="_blank" rel="external">中文常用停用词表</a></p></li><li><p><a href="https://blog.csdn.net/laobai1015/article/details/80451371" target="_blank" rel="external">Python中的TfidfVectorizer参数解析</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 小工具 </category>
          
          <category> PyQt5 </category>
          
          <category> python </category>
          
          <category> 分词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> PyQt5 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在这片给我一切的土地上开始我的梦...</title>
      <link href="/2019/02/24/%E5%9C%A8%E8%BF%99%E7%89%87%E7%BB%99%E6%88%91%E4%B8%80%E5%88%87%E7%9A%84%E5%9C%9F%E5%9C%B0%E4%B8%8A%E5%BC%80%E5%A7%8B%E6%88%91%E7%9A%84%E6%A2%A6/"/>
      <url>/2019/02/24/%E5%9C%A8%E8%BF%99%E7%89%87%E7%BB%99%E6%88%91%E4%B8%80%E5%88%87%E7%9A%84%E5%9C%9F%E5%9C%B0%E4%B8%8A%E5%BC%80%E5%A7%8B%E6%88%91%E7%9A%84%E6%A2%A6/</url>
      
        <content type="html"><![CDATA[<p>就在这片给我一切的土地上开始我的梦吧！我怎么舍得离开？我亦舍不得，这里的所有，我的亲情，我的幻想…</p><a id="more"></a><p>尽管所有明白的人想要逃离，尽管在这片土地上依旧一片荒芜，但偏偏的我的根就在这里，我从这里出生，收获的所有感情，所有回忆，所有幻想，我真的舍不得、放不下…</p><p>曾经想着游走异国他乡，我无所畏惧。而如今我慢慢的开始有了我所发自内心的真正的牵挂，有了真正离不开的纽带。我变了，变得焕然一新了？怎么突然的在短短的一段时间变得如此不像从前的那个自己了，可能是我慢慢的懂得了珍惜吧…</p><p>人浮于事，为了生计，为了心中的梦想，离不开这人情世故，离不开自心本就瞧不起的平庸低俗。浮躁的心牵动引导着自我慢慢的变得不像、再也不是自己。这鱼龙混杂的世界让人眼花缭乱，它所有的迷魂记使得多少行尸走肉度过再为平凡不过的刹那人生，这样的人太可悲…</p><p>我怎么了？我呕心自问。我不过是变了，不再是从前那个真的无所畏惧的我了。我怎么在心中开始有了枷锁，自找的枷锁？无论如何，我该做的事，我想做的事就要继续去做。</p><p>此时此刻我还不够冷静，我的内心波澜不断，怎么了，滚滚红尘迷蒙住我的双眼，我的理性有时就这样的容易不翼而飞…</p><p>….</p><p>这份儿女情长应当铭记在我心，此刻仔细想来确实庸人自扰了吧…我不够冷静，不够冷静，这又算是一篇杂记了吧，就这样吧。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视频模版制作记录</title>
      <link href="/2019/02/23/%E8%A7%86%E9%A2%91%E6%A8%A1%E7%89%88%E5%88%B6%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/02/23/%E8%A7%86%E9%A2%91%E6%A8%A1%E7%89%88%E5%88%B6%E4%BD%9C%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>之前一直有一些困扰我的几个问题，其中就包括了关于一些视频模版怎么做成的问题，更为准确的说是那些劲爆的片头或者片尾镜头是怎么做成的问题，现在终于有了一些解决的方案，在此记录一下，以观后效之用。</p><a id="more"></a><p>其实一个关于<em>PS</em>的使用也困扰过一些，但是了解了一下之后兴趣亦随之消退…还是研究视频模版制作好玩一些。</p><p>片尾片头的制作无非就是借用了其他的工具制作成功之后导出为视频格式，之后再进行进一步的加工即可(当然有些简单的直接结合字幕和照片或者是视频片段来进行下一步的操作也是可以的)。</p><p>在此简要记录一下一些制作的几种方式。</p><h2 id="结合PPT类软件输出片段"><a href="#结合PPT类软件输出片段" class="headerlink" title="结合PPT类软件输出片段"></a>结合PPT类软件输出片段</h2><p>在此一说明者恐怕早已自明了。就是结合<em>PPT</em>啊(在此我要推荐那个<em>Mac</em>自带的<em>Keynote</em>)，可以做成许多自想要的图片效果，有甚者甚至可以以此添加一些特效之类的以此丰富视频的展示效果～</p><blockquote><p>当然我以上所说的两款不是最佳的，还有许多的另类的软件做出来的效果远远胜于传统的PPT展示效果，比如国产的<em>AxeSlide</em>等，会让人感到眼前一亮～</p></blockquote><h2 id="结合海报制作软件输出精美片段"><a href="#结合海报制作软件输出精美片段" class="headerlink" title="结合海报制作软件输出精美片段"></a>结合海报制作软件输出精美片段</h2><p>这一类与上所述的类似，即与字幕的结合就可以输出一段又一段的精美视频片段～</p><h2 id="网上的模版套用"><a href="#网上的模版套用" class="headerlink" title="网上的模版套用"></a>网上的模版套用</h2><p>一些网上分享的免费模版套用，可以利用好搜索引擎自行搜索一下类似的网站～</p><p>综上所述，我个人还是比较喜欢<em>DIY</em>的～</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(Python)PyQT5编写51单片机的取模机和上位机</title>
      <link href="/2019/02/22/Python-PyQT5%E7%BC%96%E5%86%998x8x8%E5%85%89%E7%AB%8B%E6%96%B9%E7%9A%84%E5%8F%96%E6%A8%A1%E6%9C%BA%E5%92%8C%E4%B8%8A%E4%BD%8D%E6%9C%BA/"/>
      <url>/2019/02/22/Python-PyQT5%E7%BC%96%E5%86%998x8x8%E5%85%89%E7%AB%8B%E6%96%B9%E7%9A%84%E5%8F%96%E6%A8%A1%E6%9C%BA%E5%92%8C%E4%B8%8A%E4%BD%8D%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>上学期的一个课程设计要求做一个<em>8x8x8光立方</em>的上位机，一时不知怎么写，上学期太懒了，好久没写程序的缘故，关于<em>PyQT5</em>的运用也是之前用过一点皮毛，所以也忘的差不多了，所以在网上参考一些前辈写的，在此记录一下，以观后效之用。</p><a id="more"></a><blockquote><p><strong>首先得声明一下：这是我从网上的前辈拿来的程序，并非我个人所写。</strong></p></blockquote><h1 id="取模器"><a href="#取模器" class="headerlink" title="取模器"></a>取模器</h1><ul><li><strong>pattern.py：</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pattern</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, page=<span class="number">8</span>, row=<span class="number">8</span>, column=<span class="number">8</span>)</span>:</span></div><div class="line">        self.page = page</div><div class="line">        self.row = row</div><div class="line">        self.column = column</div><div class="line">        self.init_data()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">init_data</span><span class="params">(self)</span>:</span></div><div class="line">        self.data = []</div><div class="line">        self.page_flag = []</div><div class="line">        self.row_flag = []</div><div class="line">        self.column_flag = []</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, self.page):</div><div class="line">            page_data = []</div><div class="line">            self.page_flag.append(<span class="number">0</span>)</div><div class="line">            a_row_flag = []</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, self.row):</div><div class="line">                a_row_flag.append(<span class="number">0</span>)</div><div class="line">                a_column_flag = []</div><div class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, self.column):</div><div class="line">                    a_column_flag.append(<span class="number">0</span>)</div><div class="line">                    page_data.append(<span class="number">0</span>)</div><div class="line">            self.column_flag.append(a_column_flag)</div><div class="line">            self.row_flag.append(a_row_flag)</div><div class="line">            self.data.append(page_data)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> self.format(format=<span class="string">'hex'</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__repr__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">return</span> <span class="string">'&lt;Pattern Object %dx%dx%d&gt;'</span> % (self.page, self.row, self.column)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set</span><span class="params">(self, page, row, column, value)</span>:</span></div><div class="line">        self.data[page][row * <span class="number">8</span> + column] = value</div><div class="line">        <span class="keyword">for</span> bit <span class="keyword">in</span> self.data[page]:</div><div class="line">            self.page_flag[page] = bit</div><div class="line">            <span class="keyword">if</span> bit == <span class="number">0</span>:</div><div class="line">                <span class="keyword">break</span></div><div class="line">        start = self.column * row</div><div class="line">        end = start + self.column</div><div class="line">        <span class="keyword">for</span> bit <span class="keyword">in</span> self.data[page][start:end]:</div><div class="line">            self.row_flag[page][row] = bit</div><div class="line">            <span class="keyword">if</span> bit == <span class="number">0</span>:</div><div class="line">                <span class="keyword">break</span></div><div class="line"></div><div class="line">        start = column</div><div class="line">        step = self.column</div><div class="line">        end = start + step * self.row</div><div class="line">        <span class="keyword">for</span> bit <span class="keyword">in</span> self.data[page][start:end:step]:</div><div class="line">            self.column_flag[page][column] = bit</div><div class="line">            <span class="keyword">if</span> bit == <span class="number">0</span>:</div><div class="line">                <span class="keyword">break</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_row</span><span class="params">(self, page, row, value)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, self.column):</div><div class="line">            self.set(page, row, i, value)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_column</span><span class="params">(self, page, column, value)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.row):</div><div class="line">            self.set(page, i, column, value)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_page</span><span class="params">(self, page, value)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.row * self.column):</div><div class="line">            self.data[page][i] = value</div><div class="line">        self.page_flag[page] = value</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.row):</div><div class="line">            self.row_flag[page][i] = value</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.column):</div><div class="line">            self.column_flag[page][i] = value</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_all</span><span class="params">(self, value)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, self.page):</div><div class="line">            self.set_page(i, value)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">zip</span><span class="params">(self)</span>:</span></div><div class="line">        zipped_data = []</div><div class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> range(self.row):</div><div class="line">            <span class="keyword">for</span> page <span class="keyword">in</span> range(self.page):</div><div class="line">                column_sum = <span class="number">0</span></div><div class="line">                <span class="keyword">for</span> column <span class="keyword">in</span> range(self.column):</div><div class="line">                    bit = self.data[page][row * self.column + column]</div><div class="line">                    <span class="keyword">if</span> bit:</div><div class="line">                        column_sum += <span class="number">2</span>**column</div><div class="line">                zipped_data.append(column_sum)</div><div class="line">        <span class="keyword">return</span> zipped_data</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">unzip</span><span class="params">(self, zipped_data)</span>:</span></div><div class="line">        unzipped_data = []</div><div class="line">        zipped_data_t = []</div><div class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> range(self.page):</div><div class="line">            p_data_t = []</div><div class="line">            <span class="keyword">for</span> pt <span class="keyword">in</span> zipped_data:</div><div class="line">                p_data_t.append(pt[p])</div><div class="line">            zipped_data_t.append(p_data_t)</div><div class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> zipped_data_t:</div><div class="line">            page = []</div><div class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> p:</div><div class="line">                c = list(bin(r)[<span class="number">2</span>:].zfill(<span class="number">8</span>))</div><div class="line">                cint = []</div><div class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> c[::<span class="number">-1</span>]:</div><div class="line">                    cint.append(int(i))</div><div class="line">                page.extend(cint)</div><div class="line">            unzipped_data.append(page)</div><div class="line">        <span class="keyword">return</span> unzipped_data</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">format</span><span class="params">(self, format=<span class="string">'hex'</span>, sep=<span class="string">', '</span>, beautify=True)</span>:</span></div><div class="line">        data = self.zip()</div><div class="line">        data_str = []</div><div class="line">        <span class="keyword">if</span> format == <span class="string">'dec'</span>:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> data:</div><div class="line">                data_str.append(str(i))</div><div class="line">        <span class="keyword">elif</span> format == <span class="string">'hex'</span>:</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> data:</div><div class="line">                data_str.append(<span class="string">'0x%.2X'</span> % i)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">raise</span> ValueError(<span class="string">"No such format '%s'"</span> % format)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> beautify:</div><div class="line">            data_beauty = []</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, self.row):</div><div class="line">                start = self.page * i</div><div class="line">                end = start + <span class="number">8</span></div><div class="line">                a_row = sep.join(data_str[start:end])</div><div class="line">                data_beauty.append(a_row)</div><div class="line">            data_beauty_str = <span class="string">',\n'</span>.join(data_beauty)</div><div class="line">            <span class="keyword">return</span> data_beauty_str</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> sep.join(data_str)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">restore</span><span class="params">(self, text)</span>:</span></div><div class="line">        text = text.split(<span class="string">',\n'</span>)</div><div class="line">        self.page = len(text)</div><div class="line">        zipped_data = []</div><div class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> text:</div><div class="line">            rows = p.split(<span class="string">', '</span>)</div><div class="line">            self.row = len(rows)</div><div class="line">            rows = [int(i, <span class="number">0</span>) <span class="keyword">for</span> i <span class="keyword">in</span> rows]</div><div class="line">            zipped_data.append(rows)</div><div class="line">        unzipped_data = self.unzip(zipped_data)</div><div class="line">        self.init_data()</div><div class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> range(self.page):</div><div class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> range(self.row):</div><div class="line">                <span class="keyword">for</span> column <span class="keyword">in</span> range(self.column):</div><div class="line">                    index = self.column * row + column</div><div class="line">                    new_bit = unzipped_data[page][index]</div><div class="line">                    <span class="keyword">if</span> new_bit:</div><div class="line">                        self.set(page, row, column, <span class="number">1</span>)</div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        self.set(page, row, column, <span class="number">0</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    p = Pattern(<span class="number">8</span>, <span class="number">8</span>, <span class="number">8</span>)</div><div class="line">    <span class="comment"># print(p.page_flag)</span></div><div class="line">    <span class="comment"># print(p.row_flag)</span></div><div class="line">    <span class="comment"># print(p.column_flag)</span></div><div class="line">    <span class="comment"># for i in range(8):</span></div><div class="line">    <span class="comment">#     p.set_column(0, i, 1)</span></div><div class="line">    <span class="comment">#     p.set(0, i, 0, 0)</span></div><div class="line">    <span class="comment"># print(p.format('dec'))</span></div><div class="line">    <span class="comment"># print(p.page_flag)</span></div><div class="line">    <span class="comment"># print(p.row_flag)</span></div><div class="line">    <span class="comment"># print(p.column_flag)</span></div><div class="line">    hex_text = <span class="string">"""0xFF, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,</span></div><div class="line"><span class="string">0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,</span></div><div class="line"><span class="string">0xFF, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,</span></div><div class="line"><span class="string">0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,</span></div><div class="line"><span class="string">0xFF, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,</span></div><div class="line"><span class="string">0xFF, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,</span></div><div class="line"><span class="string">0xFF, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,</span></div><div class="line"><span class="string">0xFF, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00"""</span></div><div class="line">    <span class="comment"># p.restore(dec_text)</span></div><div class="line">    p.restore(hex_text)</div><div class="line">    print(p.data)</div><div class="line">    print(p.page_flag)</div><div class="line">    print(p.row_flag)</div><div class="line">    print(p.column_flag)</div></pre></td></tr></table></figure><ul><li><strong>patternflow.py：</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> (</div><div class="line">    QMainWindow, QDesktopWidget, QApplication, QWidget,</div><div class="line">    QVBoxLayout, QHBoxLayout, QGridLayout,</div><div class="line">    QPushButton, QComboBox, QTextEdit, QCheckBox</div><div class="line">)</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QCoreApplication, Qt</div><div class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QGuiApplication</div><div class="line"><span class="keyword">from</span> pattern <span class="keyword">import</span> Pattern</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PatternFlow</span><span class="params">(QWidget)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, page=<span class="number">8</span>, row=<span class="number">8</span>, column=<span class="number">8</span>)</span>:</span></div><div class="line">        super().__init__()</div><div class="line">        self.page = page</div><div class="line">        self.row = row</div><div class="line">        self.column = column</div><div class="line"></div><div class="line">        self.pt = Pattern()</div><div class="line">        self.format = <span class="string">'dec'</span></div><div class="line"></div><div class="line">        self.cb = QGuiApplication.clipboard()</div><div class="line"></div><div class="line">        matrixs = self.matrixs(<span class="number">8</span>)</div><div class="line"></div><div class="line">        console = self.console()</div><div class="line"></div><div class="line">        main_layout = QVBoxLayout()</div><div class="line">        main_layout.addLayout(matrixs)</div><div class="line">        main_layout.addStretch(<span class="number">1</span>)</div><div class="line">        main_layout.addLayout(console)</div><div class="line"></div><div class="line">        self.setLayout(main_layout)</div><div class="line">        self.center_windows()</div><div class="line">        self.setWindowTitle(<span class="string">'PatternFlow'</span>)</div><div class="line">        self.resize(<span class="number">800</span>, <span class="number">400</span>)</div><div class="line">        self.show()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">console</span><span class="params">(self)</span>:</span></div><div class="line">        format_cbo = QComboBox()</div><div class="line">        format_cbo.addItem(<span class="string">'Dec'</span>)</div><div class="line">        format_cbo.addItem(<span class="string">'Hex'</span>)</div><div class="line">        format_cbo.activated[str].connect(self.set_format)</div><div class="line"></div><div class="line">        self.code_text = QTextEdit()</div><div class="line">        copy_btn = QPushButton(<span class="string">'Copy'</span>)</div><div class="line">        copy_btn.setToolTip(<span class="string">'Copy the pattern code to the clipboard'</span>)</div><div class="line">        copy_btn.clicked.connect(self.copy_to_clipboard)</div><div class="line"></div><div class="line">        reset_btn = QPushButton(<span class="string">'Reset'</span>)</div><div class="line">        reset_btn.setToolTip(<span class="string">'Reset all bit to 0'</span>)</div><div class="line">        reset_btn.clicked.connect(self.reset)</div><div class="line">        setall_btn = QPushButton(<span class="string">'Set All'</span>)</div><div class="line">        setall_btn.setToolTip(<span class="string">'Set all bit to 1'</span>)</div><div class="line">        setall_btn.clicked.connect(self.setall)</div><div class="line"></div><div class="line">        restore_btn = QPushButton(<span class="string">'Restore'</span>)</div><div class="line">        restore_btn.clicked.connect(self.restore)</div><div class="line">        restore_btn.setToolTip(<span class="string">'Restore pattern from code'</span>)</div><div class="line"></div><div class="line">        quit_btn = QPushButton(<span class="string">'Quit'</span>)</div><div class="line">        quit_btn.clicked.connect(QCoreApplication.instance().quit)</div><div class="line"></div><div class="line">        console = QGridLayout()</div><div class="line">        console.addWidget(self.code_text, <span class="number">0</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">4</span>)</div><div class="line">        console.setColumnStretch(<span class="number">0</span>, <span class="number">1</span>)</div><div class="line">        console.addWidget(format_cbo, <span class="number">0</span>, <span class="number">6</span>)</div><div class="line">        console.addWidget(copy_btn, <span class="number">1</span>, <span class="number">6</span>)</div><div class="line">        console.addWidget(reset_btn, <span class="number">3</span>, <span class="number">6</span>)</div><div class="line">        console.addWidget(setall_btn, <span class="number">2</span>, <span class="number">6</span>)</div><div class="line">        console.addWidget(restore_btn, <span class="number">4</span>, <span class="number">6</span>)</div><div class="line">        console.addWidget(quit_btn, <span class="number">5</span>, <span class="number">6</span>)</div><div class="line">        <span class="keyword">return</span> console</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reset</span><span class="params">(self)</span>:</span></div><div class="line">        self.pt.init_data()</div><div class="line">        self.mapto_btn()</div><div class="line">        self.code_text.clear()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setall</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.page):</div><div class="line">            self.pt.set_page(i, <span class="number">1</span>)</div><div class="line">        self.mapto_btn()</div><div class="line">        self.gen_result()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">copy_to_clipboard</span><span class="params">(self)</span>:</span></div><div class="line">        text = self.code_text.toPlainText()</div><div class="line">        self.cb.setText(text)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">matrixs</span><span class="params">(self, page)</span>:</span></div><div class="line">        self.bit_btns = []</div><div class="line">        matrixs = QGridLayout()</div><div class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">            matrix = QGridLayout()</div><div class="line">            matrix.setSpacing(<span class="number">2</span>)</div><div class="line">            set_page = QPushButton()</div><div class="line">            set_page.setFixedSize(<span class="number">16</span>, <span class="number">16</span>)</div><div class="line">            set_page.setToolTip(<span class="string">'set_page(%d'</span> % page)</div><div class="line">            set_page.setStyleSheet(</div><div class="line">                <span class="string">'QPushButton &#123;background-color: #fff; border: 1px solid #ccc; border-radius: 4px&#125;'</span></div><div class="line">                <span class="string">'QPushButton:open &#123;background-color: #666; border: 1px solid #ccc&#125;'</span></div><div class="line">            )</div><div class="line">            set_page.clicked.connect(self.set_page)</div><div class="line">            matrix.addWidget(set_page, <span class="number">0</span>, <span class="number">0</span>)</div><div class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">                set_row = QPushButton()</div><div class="line">                set_row.setFixedSize(<span class="number">16</span>, <span class="number">16</span>)</div><div class="line">                set_row.setToolTip(<span class="string">'set_row(%d, %d)'</span> % (page, row))</div><div class="line">                set_row.setStyleSheet(</div><div class="line">                    <span class="string">'QPushButton &#123;background-color: #fff; border: 1px solid #ccc; border-radius: 4px&#125;'</span></div><div class="line">                    <span class="string">'QPushButton:open &#123;background-color: #aaa&#125;'</span></div><div class="line">                )</div><div class="line">                set_row.clicked.connect(self.set_row)</div><div class="line">                matrix.addWidget(set_row, row + <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">            <span class="keyword">for</span> column <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">                set_column = QPushButton()</div><div class="line">                set_column.setFixedSize(<span class="number">16</span>, <span class="number">16</span>)</div><div class="line">                set_column.setToolTip(<span class="string">'set_column(%d, %d)'</span> % (page, column))</div><div class="line">                set_column.setStyleSheet(</div><div class="line">                    <span class="string">'QPushButton &#123;background-color: #fff; border: 1px solid #ccc; border-radius: 4px&#125;'</span></div><div class="line">                    <span class="string">'QPushButton:open &#123;background-color: #aaa&#125;'</span></div><div class="line">                )</div><div class="line">                set_column.clicked.connect(self.set_column)</div><div class="line">                matrix.addWidget(set_column, <span class="number">0</span>, column + <span class="number">1</span>)</div><div class="line">            btn_page = []</div><div class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">                <span class="keyword">for</span> column <span class="keyword">in</span> range(<span class="number">8</span>):</div><div class="line">                    name = <span class="string">'set_bit(%d, %d, %d)'</span> % (page, row, column)</div><div class="line">                    bit_btn = QPushButton()</div><div class="line">                    bit_btn.setToolTip(name)</div><div class="line">                    bit_btn.setFixedSize(<span class="number">16</span>, <span class="number">16</span>)</div><div class="line">                    bit_btn.setCheckable(<span class="keyword">True</span>)</div><div class="line">                    bit_btn.setStyleSheet(</div><div class="line">                        <span class="string">'QPushButton &#123;background: #ddd; border: none; margin: 0px; padding: 0px&#125;'</span></div><div class="line">                        <span class="string">'QPushButton:checked &#123;background-color: #2c9e4b; border: none&#125;'</span></div><div class="line">                    )</div><div class="line">                    bit_btn.clicked[bool].connect(self.set_bit)</div><div class="line">                    btn_page.append(bit_btn)</div><div class="line">                    matrix.addWidget(bit_btn, row + <span class="number">1</span>, column + <span class="number">1</span>)</div><div class="line">            self.bit_btns.append(btn_page)</div><div class="line">            matrixs.addLayout(matrix, page / <span class="number">4</span>, page % <span class="number">4</span>)</div><div class="line">        <span class="keyword">return</span> matrixs</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mapto_code</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> range(self.page):</div><div class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> range(self.row):</div><div class="line">                <span class="keyword">for</span> column <span class="keyword">in</span> range(self.column):</div><div class="line">                    bit_btn = self.bit_btns[page][self.column * row + column]</div><div class="line">                    <span class="keyword">if</span> bit_btn.isChecked():</div><div class="line">                        self.pt.set(page, row, column, <span class="number">1</span>)</div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        self.pt.set(page, row, column, <span class="number">0</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mapto_btn</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> range(self.page):</div><div class="line">            <span class="keyword">for</span> row <span class="keyword">in</span> range(self.row):</div><div class="line">                <span class="keyword">for</span> column <span class="keyword">in</span> range(self.column):</div><div class="line">                    bit_btn = self.bit_btns[page][self.column * row + column]</div><div class="line">                    bit = self.pt.data[page][self.column * row + column]</div><div class="line">                    <span class="keyword">if</span> bit == <span class="number">1</span>:</div><div class="line">                        bit_btn.setChecked(<span class="keyword">True</span>)</div><div class="line">                    <span class="keyword">else</span>:</div><div class="line">                        bit_btn.setChecked(<span class="keyword">False</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">restore</span><span class="params">(self)</span>:</span></div><div class="line">        text = self.code_text.toPlainText()</div><div class="line">        <span class="keyword">if</span> text:</div><div class="line">            <span class="keyword">try</span>:</div><div class="line">                self.pt.restore(text)</div><div class="line">                self.mapto_btn()</div><div class="line">            <span class="keyword">except</span> (ValueError, IndexError):</div><div class="line">                <span class="keyword">pass</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_format</span><span class="params">(self, text)</span>:</span></div><div class="line">        self.format = text.lower()</div><div class="line">        self.gen_result()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_result</span><span class="params">(self)</span>:</span></div><div class="line">        self.code_text.setText(self.pt.format(self.format))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_page</span><span class="params">(self, state)</span>:</span></div><div class="line">        sender = self.sender()</div><div class="line">        page = sender.toolTip().strip(<span class="string">'set_page('</span>).strip(<span class="string">')'</span>)</div><div class="line">        page = int(page)</div><div class="line">        <span class="keyword">if</span> self.pt.page_flag[page] == <span class="number">0</span>:</div><div class="line">            self.pt.set_page(page, <span class="number">1</span>)</div><div class="line">            <span class="keyword">for</span> bit_btn <span class="keyword">in</span> self.bit_btns[page]:</div><div class="line">                bit_btn.setChecked(<span class="keyword">True</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.pt.set_page(page, <span class="number">0</span>)</div><div class="line">            <span class="keyword">for</span> bit_btn <span class="keyword">in</span> self.bit_btns[page]:</div><div class="line">                bit_btn.setChecked(<span class="keyword">False</span>)</div><div class="line">        self.gen_result()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_row</span><span class="params">(self, state)</span>:</span></div><div class="line">        sender = self.sender()</div><div class="line">        text = sender.toolTip().strip(<span class="string">'set_row('</span>).strip(<span class="string">')'</span>).split(<span class="string">', '</span>)</div><div class="line">        page = int(text[<span class="number">0</span>])</div><div class="line">        row = int(text[<span class="number">1</span>])</div><div class="line">        start = self.column * row</div><div class="line">        end = start + self.column</div><div class="line">        <span class="keyword">if</span> self.pt.row_flag[page][row]:</div><div class="line">            self.pt.set_row(page, row, <span class="number">0</span>)</div><div class="line">            <span class="keyword">for</span> bit_btn <span class="keyword">in</span> self.bit_btns[page][start:end]:</div><div class="line">                bit_btn.setChecked(<span class="keyword">False</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.pt.set_row(page, row, <span class="number">1</span>)</div><div class="line">            <span class="keyword">for</span> bit_btn <span class="keyword">in</span> self.bit_btns[page][start:end]:</div><div class="line">                bit_btn.setChecked(<span class="keyword">True</span>)</div><div class="line">        self.gen_result()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_column</span><span class="params">(self, state)</span>:</span></div><div class="line">        sender = self.sender()</div><div class="line">        text = sender.toolTip().strip(<span class="string">'set_column('</span>).strip(<span class="string">')'</span>).split(<span class="string">', '</span>)</div><div class="line">        page = int(text[<span class="number">0</span>])</div><div class="line">        column = int(text[<span class="number">1</span>])</div><div class="line">        start = column</div><div class="line">        step = self.column</div><div class="line">        end = start + step * self.row</div><div class="line">        <span class="keyword">if</span> self.pt.column_flag[page][column]:</div><div class="line">            self.pt.set_column(page, column, <span class="number">0</span>)</div><div class="line">            <span class="keyword">for</span> bit_btn <span class="keyword">in</span> self.bit_btns[page][start:end:step]:</div><div class="line">                bit_btn.setChecked(<span class="keyword">False</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.pt.set_column(page, column, <span class="number">1</span>)</div><div class="line">            <span class="keyword">for</span> bit_btn <span class="keyword">in</span> self.bit_btns[page][start:end:step]:</div><div class="line">                bit_btn.setChecked(<span class="keyword">True</span>)</div><div class="line">        self.gen_result()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_bit</span><span class="params">(self, pressed)</span>:</span></div><div class="line">        sender = self.sender()</div><div class="line">        text = sender.toolTip().strip(<span class="string">'set_bit('</span>).strip(<span class="string">')'</span>).split(<span class="string">', '</span>)</div><div class="line">        page = int(text[<span class="number">0</span>])</div><div class="line">        row = int(text[<span class="number">1</span>])</div><div class="line">        column = int(text[<span class="number">2</span>])</div><div class="line">        <span class="keyword">if</span> pressed:</div><div class="line">            self.pt.set(page, row, column, <span class="number">1</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.pt.set(page, row, column, <span class="number">0</span>)</div><div class="line">        self.gen_result()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">center_windows</span><span class="params">(self)</span>:</span></div><div class="line">        qr = self.frameGeometry()</div><div class="line">        cp = QDesktopWidget().availableGeometry().center()</div><div class="line">        qr.moveCenter(cp)</div><div class="line">        self.move(qr.topLeft())</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    pf = PatternFlow()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><blockquote><p>取模器的代码来源一个网上的前辈分享的<a href="https://github.com/xinhangliu/cube8" target="_blank" rel="external">Github</a>。</p></blockquote><h1 id="上位机"><a href="#上位机" class="headerlink" title="上位机"></a>上位机</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> serial</div><div class="line"><span class="keyword">import</span> threading</div><div class="line"><span class="keyword">import</span> binascii </div><div class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtCore, QtGui, QtWidgets</div><div class="line"><span class="keyword">import</span> serial.tools.list_ports</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ui_MainWindow</span><span class="params">(object)</span>:</span></div><div class="line">    ser = serial.Serial()</div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">setupUi</span><span class="params">(self, MainWindow)</span>:</span></div><div class="line">        MainWindow.setObjectName(<span class="string">"MainWindow"</span>)</div><div class="line">        MainWindow.resize(<span class="number">579</span>, <span class="number">369</span>)</div><div class="line">        self.centralwidget = QtWidgets.QWidget(MainWindow)</div><div class="line">        self.centralwidget.setObjectName(<span class="string">"centralwidget"</span>)</div><div class="line">        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)</div><div class="line">        self.groupBox.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">10</span>, <span class="number">141</span>, <span class="number">311</span>))</div><div class="line">        self.groupBox.setObjectName(<span class="string">"groupBox"</span>)</div><div class="line">        self.label = QtWidgets.QLabel(self.groupBox)</div><div class="line">        self.label.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">20</span>, <span class="number">31</span>, <span class="number">16</span>))</div><div class="line">        self.label.setObjectName(<span class="string">"label"</span>)</div><div class="line">        self.label_2 = QtWidgets.QLabel(self.groupBox)</div><div class="line">        self.label_2.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">50</span>, <span class="number">41</span>, <span class="number">16</span>))</div><div class="line">        self.label_2.setObjectName(<span class="string">"label_2"</span>)</div><div class="line">        self.label_3 = QtWidgets.QLabel(self.groupBox)</div><div class="line">        self.label_3.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">110</span>, <span class="number">41</span>, <span class="number">16</span>))</div><div class="line">        self.label_3.setObjectName(<span class="string">"label_3"</span>)</div><div class="line">        self.label_4 = QtWidgets.QLabel(self.groupBox)</div><div class="line">        self.label_4.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">80</span>, <span class="number">41</span>, <span class="number">16</span>))</div><div class="line">        self.label_4.setObjectName(<span class="string">"label_4"</span>)</div><div class="line">        self.label_5 = QtWidgets.QLabel(self.groupBox)</div><div class="line">        self.label_5.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">140</span>, <span class="number">41</span>, <span class="number">16</span>))</div><div class="line">        self.label_5.setObjectName(<span class="string">"label_5"</span>)</div><div class="line">        self.comboBox_4 = QtWidgets.QComboBox(self.groupBox)</div><div class="line">        self.comboBox_4.setGeometry(QtCore.QRect(<span class="number">60</span>, <span class="number">20</span>, <span class="number">71</span>, <span class="number">22</span>))</div><div class="line">        self.comboBox_4.setObjectName(<span class="string">"comboBox_4"</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_4.addItem(<span class="string">""</span>)</div><div class="line">        self.lineEdit_3 = QtWidgets.QLineEdit(self.groupBox)</div><div class="line">        self.lineEdit_3.setGeometry(QtCore.QRect(<span class="number">60</span>, <span class="number">50</span>, <span class="number">71</span>, <span class="number">20</span>))</div><div class="line">        self.lineEdit_3.setObjectName(<span class="string">"lineEdit_3"</span>)</div><div class="line">        self.comboBox = QtWidgets.QComboBox(self.groupBox)</div><div class="line">        self.comboBox.setGeometry(QtCore.QRect(<span class="number">60</span>, <span class="number">80</span>, <span class="number">71</span>, <span class="number">22</span>))</div><div class="line">        self.comboBox.setObjectName(<span class="string">"comboBox"</span>)</div><div class="line">        self.comboBox.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_2 = QtWidgets.QComboBox(self.groupBox)</div><div class="line">        self.comboBox_2.setGeometry(QtCore.QRect(<span class="number">60</span>, <span class="number">110</span>, <span class="number">71</span>, <span class="number">22</span>))</div><div class="line">        self.comboBox_2.setObjectName(<span class="string">"comboBox_2"</span>)</div><div class="line">        self.comboBox_2.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_2.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_2.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_2.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_2.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_3 = QtWidgets.QComboBox(self.groupBox)</div><div class="line">        self.comboBox_3.setGeometry(QtCore.QRect(<span class="number">60</span>, <span class="number">140</span>, <span class="number">71</span>, <span class="number">22</span>))</div><div class="line">        self.comboBox_3.setObjectName(<span class="string">"comboBox_3"</span>)</div><div class="line">        self.comboBox_3.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_3.addItem(<span class="string">""</span>)</div><div class="line">        self.comboBox_3.addItem(<span class="string">""</span>)</div><div class="line">        self.pushButton = QtWidgets.QPushButton(self.groupBox)</div><div class="line">        self.pushButton.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">240</span>, <span class="number">51</span>, <span class="number">23</span>))</div><div class="line">        self.pushButton.setObjectName(<span class="string">"pushButton"</span>)</div><div class="line">        self.pushButton_2 = QtWidgets.QPushButton(self.groupBox)</div><div class="line">        self.pushButton_2.setGeometry(QtCore.QRect(<span class="number">80</span>, <span class="number">240</span>, <span class="number">51</span>, <span class="number">23</span>))</div><div class="line">        self.pushButton_2.setObjectName(<span class="string">"pushButton_2"</span>)</div><div class="line">        self.pushButton_3 = QtWidgets.QPushButton(self.groupBox)</div><div class="line">        self.pushButton_3.setGeometry(QtCore.QRect(<span class="number">40</span>, <span class="number">200</span>, <span class="number">61</span>, <span class="number">23</span>))</div><div class="line">        self.pushButton_3.setObjectName(<span class="string">"pushButton_3"</span>)</div><div class="line">        self.label_11 = QtWidgets.QLabel(self.groupBox)</div><div class="line">        self.label_11.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">170</span>, <span class="number">41</span>, <span class="number">16</span>))</div><div class="line">        self.label_11.setObjectName(<span class="string">"label_11"</span>)</div><div class="line">        self.label_12 = QtWidgets.QLabel(self.groupBox)</div><div class="line">        self.label_12.setGeometry(QtCore.QRect(<span class="number">70</span>, <span class="number">170</span>, <span class="number">54</span>, <span class="number">16</span>))</div><div class="line">        font = QtGui.QFont()</div><div class="line">        font.setFamily(<span class="string">"Aharoni"</span>)</div><div class="line">        font.setBold(<span class="keyword">True</span>)</div><div class="line">        font.setWeight(<span class="number">75</span>)</div><div class="line">        self.label_12.setFont(font)</div><div class="line">        self.label_12.setObjectName(<span class="string">"label_12"</span>)</div><div class="line">        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)</div><div class="line">        self.groupBox_2.setGeometry(QtCore.QRect(<span class="number">160</span>, <span class="number">10</span>, <span class="number">411</span>, <span class="number">181</span>))</div><div class="line">        self.groupBox_2.setObjectName(<span class="string">"groupBox_2"</span>)</div><div class="line">        self.textBrowser = QtWidgets.QTextBrowser(self.groupBox_2)</div><div class="line">        self.textBrowser.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">20</span>, <span class="number">391</span>, <span class="number">151</span>))</div><div class="line">        self.textBrowser.setObjectName(<span class="string">"textBrowser"</span>)</div><div class="line">        self.groupBox_3 = QtWidgets.QGroupBox(self.centralwidget)</div><div class="line">        self.groupBox_3.setGeometry(QtCore.QRect(<span class="number">160</span>, <span class="number">200</span>, <span class="number">261</span>, <span class="number">121</span>))</div><div class="line">        self.groupBox_3.setObjectName(<span class="string">"groupBox_3"</span>)</div><div class="line">        self.textEdit = QtWidgets.QTextEdit(self.groupBox_3)</div><div class="line">        self.textEdit.setGeometry(QtCore.QRect(<span class="number">10</span>, <span class="number">20</span>, <span class="number">241</span>, <span class="number">91</span>))</div><div class="line">        self.textEdit.setObjectName(<span class="string">"textEdit"</span>)</div><div class="line">        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)</div><div class="line">        self.checkBox.setGeometry(QtCore.QRect(<span class="number">430</span>, <span class="number">210</span>, <span class="number">61</span>, <span class="number">16</span>))</div><div class="line">        self.checkBox.setObjectName(<span class="string">"checkBox"</span>)</div><div class="line">        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)</div><div class="line">        self.checkBox_2.setGeometry(QtCore.QRect(<span class="number">500</span>, <span class="number">210</span>, <span class="number">61</span>, <span class="number">20</span>))</div><div class="line">        self.checkBox_2.setObjectName(<span class="string">"checkBox_2"</span>)</div><div class="line">        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)</div><div class="line">        self.pushButton_4.setGeometry(QtCore.QRect(<span class="number">430</span>, <span class="number">240</span>, <span class="number">61</span>, <span class="number">23</span>))</div><div class="line">        self.pushButton_4.setObjectName(<span class="string">"pushButton_4"</span>)</div><div class="line">        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)</div><div class="line">        self.pushButton_5.setGeometry(QtCore.QRect(<span class="number">430</span>, <span class="number">280</span>, <span class="number">61</span>, <span class="number">23</span>))</div><div class="line">        self.pushButton_5.setObjectName(<span class="string">"pushButton_5"</span>)</div><div class="line">        MainWindow.setCentralWidget(self.centralwidget)</div><div class="line">        self.menubar = QtWidgets.QMenuBar(MainWindow)</div><div class="line">        self.menubar.setGeometry(QtCore.QRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">579</span>, <span class="number">23</span>))</div><div class="line">        self.menubar.setObjectName(<span class="string">"menubar"</span>)</div><div class="line">        MainWindow.setMenuBar(self.menubar)</div><div class="line">        self.statusbar = QtWidgets.QStatusBar(MainWindow)</div><div class="line">        self.statusbar.setObjectName(<span class="string">"statusbar"</span>)</div><div class="line">        MainWindow.setStatusBar(self.statusbar)</div><div class="line"></div><div class="line">        MainWindow.setFixedSize(MainWindow.width(), MainWindow.height());  </div><div class="line">        self.retranslateUi(MainWindow)</div><div class="line">        QtCore.QMetaObject.connectSlotsByName(MainWindow)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retranslateUi</span><span class="params">(self, MainWindow)</span>:</span></div><div class="line">        _translate = QtCore.QCoreApplication.translate</div><div class="line">        MainWindow.setWindowTitle(_translate(<span class="string">"MainWindow"</span>, <span class="string">"Serial_gui"</span>))</div><div class="line">        self.groupBox.setTitle(_translate(<span class="string">"MainWindow"</span>, <span class="string">"串口设置"</span>))</div><div class="line">        self.label.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"串 口"</span>))</div><div class="line">        self.label_2.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"波特率"</span>))</div><div class="line">        self.label_3.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"校验位"</span>))</div><div class="line">        self.label_4.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"数据位"</span>))</div><div class="line">        self.label_5.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"停止位"</span>))</div><div class="line">        self.lineEdit_3.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"9600"</span>))</div><div class="line">        self.comboBox.setItemText(<span class="number">0</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"8"</span>))</div><div class="line">        self.comboBox.setItemText(<span class="number">1</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"7"</span>))</div><div class="line">        self.comboBox.setItemText(<span class="number">2</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"6"</span>))</div><div class="line">        self.comboBox.setItemText(<span class="number">3</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"5"</span>))</div><div class="line">        self.comboBox_2.setItemText(<span class="number">0</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"N"</span>))</div><div class="line">        self.comboBox_2.setItemText(<span class="number">1</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"E"</span>))</div><div class="line">        self.comboBox_2.setItemText(<span class="number">2</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"O"</span>))</div><div class="line">        self.comboBox_2.setItemText(<span class="number">3</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"M"</span>))</div><div class="line">        self.comboBox_2.setItemText(<span class="number">4</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"S"</span>))</div><div class="line">        self.comboBox_3.setItemText(<span class="number">0</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"1"</span>))</div><div class="line">        self.comboBox_3.setItemText(<span class="number">1</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"1.5"</span>))</div><div class="line">        self.comboBox_3.setItemText(<span class="number">2</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"2"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">0</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM1"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">1</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM2"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">2</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM3"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">3</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM4"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">4</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM5"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">5</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM6"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">6</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM7"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">7</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM8"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">8</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM9"</span>))</div><div class="line">        self.comboBox_4.setItemText(<span class="number">9</span>, _translate(<span class="string">"MainWindow"</span>, <span class="string">"COM10"</span>))</div><div class="line">        self.pushButton.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"打开"</span>))</div><div class="line">        self.pushButton.clicked.connect(self.port_open)</div><div class="line"></div><div class="line">        self.pushButton_2.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"关闭"</span>))</div><div class="line">        self.pushButton_2.clicked.connect(self.port_close)</div><div class="line"></div><div class="line">        self.pushButton_3.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"检测串口"</span>))</div><div class="line">        self.pushButton_3.clicked.connect(self.port_cheak)</div><div class="line"></div><div class="line">        self.label_11.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"状 态："</span>))</div><div class="line">        self.label_12.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"串口状态"</span>))</div><div class="line">        self.groupBox_2.setTitle(_translate(<span class="string">"MainWindow"</span>, <span class="string">"接收区"</span>))</div><div class="line">        self.groupBox_3.setTitle(_translate(<span class="string">"MainWindow"</span>, <span class="string">"发送区"</span>))</div><div class="line">        self.checkBox.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"Hex显示"</span>))</div><div class="line">        self.checkBox_2.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"Hex发送"</span>))</div><div class="line">        self.pushButton_4.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"清除"</span>))</div><div class="line">        self.pushButton_4.clicked.connect(self.clean_data)</div><div class="line"></div><div class="line">        self.pushButton_5.setText(_translate(<span class="string">"MainWindow"</span>, <span class="string">"发送"</span>))</div><div class="line">        self.pushButton_5.clicked.connect(self.send_data)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">port_open</span><span class="params">(self)</span>:</span></div><div class="line"></div><div class="line">        self.ser.port = self.comboBox_4.currentText()</div><div class="line">        self.ser.baudrate = int(self.lineEdit_3.text())</div><div class="line">        self.ser.bytesize = int(self.comboBox.currentText()) </div><div class="line">        self.ser.stopbits = int(self.comboBox_3.currentText())</div><div class="line">        self.ser.parity = self.comboBox_2.currentText()</div><div class="line">        self.ser.open()</div><div class="line">        <span class="keyword">if</span>(self.ser.isOpen()):</div><div class="line">            self.pushButton.setEnabled(<span class="keyword">False</span>)</div><div class="line">            self.label_12.setText(<span class="string">"打开成功"</span>)</div><div class="line">            self.t1 = threading.Thread(target=self.receive_data)</div><div class="line">            self.t1.setDaemon(<span class="keyword">True</span>)</div><div class="line">            self.t1.start()</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.label_12.setText(<span class="string">"打开失败"</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">port_close</span><span class="params">(self)</span>:</span></div><div class="line">        self.ser.close()</div><div class="line">        <span class="keyword">if</span>(self.ser.isOpen()):</div><div class="line">            self.label_12.setText(<span class="string">"关闭失败"</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.pushButton.setEnabled(<span class="keyword">True</span>)</div><div class="line">            self.label_12.setText(<span class="string">"关闭成功"</span>)</div><div class="line"></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">send_data</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="keyword">if</span>(self.ser.isOpen()):</div><div class="line">            <span class="keyword">if</span>(self.checkBox_2.isChecked()):</div><div class="line">                self.ser.write(binascii.a2b_hex(self.textEdit.toPlainText()))</div><div class="line">            <span class="keyword">else</span>:</div><div class="line">                self.ser.write(self.textEdit.toPlainText().encode(<span class="string">'utf-8'</span>))</div><div class="line">            self.label_12.setText(<span class="string">"发送成功"</span>)</div><div class="line">    <span class="comment">#       self.ser.flushOutput()</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.label_12.setText(<span class="string">"发送失败"</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">receive_data</span><span class="params">(self)</span>:</span></div><div class="line">        print(<span class="string">"The receive_data threading is start"</span>)</div><div class="line">        res_data = <span class="string">''</span> </div><div class="line">        num = <span class="number">0</span></div><div class="line">        <span class="keyword">while</span> (self.ser.isOpen()):</div><div class="line">            size = self.ser.inWaiting()</div><div class="line">            <span class="keyword">if</span> size:</div><div class="line">                res_data = self.ser.read_all()</div><div class="line">                <span class="keyword">if</span>(self.checkBox.isChecked()):</div><div class="line">                    self.textBrowser.append(binascii.b2a_hex(res_data).decode())</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    self.textBrowser.append(res_data.decode())</div><div class="line">                self.textBrowser.moveCursor(QtGui.QTextCursor.End)</div><div class="line">                self.ser.flushInput()               </div><div class="line">                num +=<span class="number">1</span></div><div class="line">                self.label_12.setText(<span class="string">"接收："</span>+str(num))</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">clean_data</span><span class="params">(self)</span>:</span></div><div class="line">        self.textBrowser.setText(<span class="string">""</span>)</div><div class="line">        self.label_12.setText(<span class="string">"接收清空"</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">port_cheak</span><span class="params">(self)</span>:</span></div><div class="line">        Com_List=[] </div><div class="line">        port_list = list(serial.tools.list_ports.comports())</div><div class="line">        self.comboBox_4.clear()</div><div class="line">        <span class="keyword">for</span> port <span class="keyword">in</span> port_list:</div><div class="line">            Com_List.append(port[<span class="number">0</span>])</div><div class="line">            self.comboBox_4.addItem(port[<span class="number">0</span>])</div><div class="line">        <span class="keyword">if</span>(len(Com_List) == <span class="number">0</span>):</div><div class="line">            self.label_12.setText(<span class="string">"没串口"</span>)</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    app = QtWidgets.QApplication(sys.argv)</div><div class="line">    MainWindow = QtWidgets.QMainWindow()</div><div class="line">    ui = Ui_MainWindow()</div><div class="line">    ui.setupUi(MainWindow) </div><div class="line"></div><div class="line"></div><div class="line">    MainWindow.show()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><blockquote><p>这是从一个<em>CSDN</em>前辈写的拿来用的，一些日子我也忘记了从哪里来的了…但是灯只能亮前三排…总之非常感谢前辈的分享～</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> PyQT5 </category>
          
          <category> 51单片机 </category>
          
          <category> 8x8x8光立方 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>润物细无声</title>
      <link href="/2019/01/28/%E6%B6%A6%E7%89%A9%E7%BB%86%E6%97%A0%E5%A3%B0/"/>
      <url>/2019/01/28/%E6%B6%A6%E7%89%A9%E7%BB%86%E6%97%A0%E5%A3%B0/</url>
      
        <content type="html"><![CDATA[<p>这些天我自从回来了这边之后，趁着一些闲工夫看了一些自认为比较优秀的电视剧，其中感触极大的是《父母爱情》。这部剧真的是一部高质量的、优秀的电视剧，在看的过程中太过于饥渴难耐，满怀兴奋的熬夜看完了，看完之后更是犹意未尽，总是一味的再而再三的重复回味那些喜欢的片段，如今在写下的此时此刻也是不时的浮现那些片段，真的太喜欢这部剧了。</p><a id="more"></a><p>通过《父母爱情》这部剧的“洗礼”之后，重新认识了很多的东西，之前的我入戏太深，久久不能摆脱戏里的故事与我喜欢的主人公的影子，他们确实的让我不能开怀去接受这部剧已尽的现实…父母年代的平凡爱情、平淡生活的细无声、悲喜交加的小波澜…我太爱了，太爱这部剧了～</p><p>…</p><p>太久未曾在此更新我的感悟了，这与我变懒了不无关系。但是我从来没有像在上学期之前的一段时间里那么自在欢快了，之前的我为了毕业之后加紧自己的步伐，逼着自己做该做的工作与事情，其实仔细想想收获了许多，但是未曾像现在那么快乐、自在。我承认，刚刚过去的那个学期我变得有些松懈了，没有之前对于自己那么的严格要求了，我是有点松懈过度了，我确实也浪费了不少的时间。学时醒悟过来方恨时少啊，但是确实是我自找的。</p><p>我的规划在我的松懈之下变得不堪一击，零零散散的，现在我自己都有一些惊慌失措。我急须改变了。</p><p>…</p><p>现在的我会学着更多的去看待现有的一切了，我开始慢慢的更多的去阅读这个社会，阅读身边的生活及其中的人与事。我好久没有过感悟了，我变得安逸了，变得拖延了，变得好像没有梦想了…但是，我确实也对于一些事情较之从前看得开了，这些看得开的所有无意中好像变成我安逸度日的理由了。我明显的感觉到我一只脚陷入了生活的泥潭。</p><p>看街上小店小摊，路过的人山人海，生活真的像是一部人间剧，只不过少了一些精准紧致的配乐显得那么动人心弦，生活像是一部无声的人间剧。每个人自己的人生都是不一样的剧本。无论所谓的平凡与所谓的不平凡、所谓的伟大都好似显得微不足道，无声无息，生生不息，这就是生活的真谛。润物细无声，就是所有的平凡，也是所有的不平凡。</p><p>人生多数的“艰”与“难”在于那“良心”。它是一个人安生偷生的最好依据，无论生活有多难有多么不合意。亦正所谓人间正道是沧桑呐，也不无道理。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
          <category> 感悟 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 父母爱情 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>所谓中国的精英？</title>
      <link href="/2018/11/28/%E6%89%80%E8%B0%93%E4%B8%AD%E5%9B%BD%E7%9A%84%E7%B2%BE%E8%8B%B1%EF%BC%9F/"/>
      <url>/2018/11/28/%E6%89%80%E8%B0%93%E4%B8%AD%E5%9B%BD%E7%9A%84%E7%B2%BE%E8%8B%B1%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>我今日在一个技术群里看到了一些所谓“高学历”层次的人讨论各种社会问题并且津津乐道着。在这里我看到了一部分人的各种“娱乐精神”，活像是一个娱乐至死的时代的缩影，还有对于那些盲目迷信的一群人，在他们身上我看不到一个人的存在，像是一群只会迎合的瘪嘴小丑。</p><a id="more"></a><p>这是所谓的支撑着中国未来脊梁的精英们吗？我有些想讽刺性的嘲笑和想有意的去嘲弄一番，但是我忍住了，我和他们有不一样的想法，所以我控制住了自己，这样的人我见的太多了，我没有勇气去跟那些人去讨论一下自己内心的想法，因为我始终相信着明者自明，不明白的人或者是曾经明白过的而现在早已改变了自己的人是不会理解我想要说的意思的。人总是这样的，包括我自己有时也是这样的，大多数时候对于大多数人们来说这是难以察觉的，有的人可能一辈子也不会察觉到。其实到现在想了想，好像也没有什么好说的，人们因为经历的不同都会有自己的想法，但是，对于那些没有自我灵魂的人，我却是有些想要多此一举的。这是所谓的中国式精英吗？</p><p>如今的大多数人们会有一种拥有更高学历的人就是人上人的感觉，这就是一些无法看清问题本质的典型人群。这样的盲目迷信的人群在这个地方应有尽有。这是所谓的中国式精英吗？他们把社会上的恶习当做自己成长的经验，把社会上的各种悲剧当做津津乐道的剧本，进而的再把这些东西当做人生的真理去传授给予涉世未深的学弟学妹们，要求他们吸收并且像自己一样去乐意接受。最后走到了人生的一个段点，他们以为自己获得了升华，并且成为了真正的成熟的”大人“了。我感觉可笑的同时也感觉到可悲。为钱而读书，为钱舍命去奔波，为钱出卖自己的灵魂，这些对于如今的我是有些接受不了的。</p><p>人浮于事(世)。社会真的是最好的大学吗？还是一个吞没人性，违背人理道德的垃圾池？这是一个浮躁的大时代。而我现在在的地方还有那一群人被称为“中国精英”！我为自己和这个国家而不甘心，我没有能力去改变这个浮躁的现实，而这个国家却是在这一群所谓的精英手里，他们享受着这个国家最好的待遇与资源，但是本身却是一样的糜烂。</p><p>于我而言，中国所谓的“精英”不应该是这样的。至少的，他们应该有着自己的灵魂。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种英语词性(基础语法)的学习以及入门学习日语的记录</title>
      <link href="/2018/11/24/%E5%90%84%E7%A7%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%80%A7(%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95)%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AF%AD%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/11/24/%E5%90%84%E7%A7%8D%E8%8B%B1%E8%AF%AD%E8%AF%8D%E6%80%A7(%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95)%E7%9A%84%E5%AD%A6%E4%B9%A0%E4%BB%A5%E5%8F%8A%E5%85%A5%E9%97%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AF%AD%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>最近在一股劲的学习日语和英语，打算明年搞定日语N1考试以及托福去日本留学，读日本国立大学的研究生。</p><p>在此记录了我学习到的一些资源以及感想，因为目前是刚刚学习到不久，所以会根据需求不定时更新。</p><a id="more"></a><h1 id="英语词性的认识与学习"><a href="#英语词性的认识与学习" class="headerlink" title="英语词性的认识与学习"></a>英语词性的认识与学习</h1><p>因为在初一时没有好好的学习各种词性的意识，所以导致我一直以来的在这方面的欠缺，我这会打算好好学习一些基础知识了，我在YouTube上找到了一些特别适合我的资源，首先是英语的语法入门教学视频，里面有特别好的入门教学，通俗易懂：</p><iframe width="560" height="315" src="https://www.youtube.com/embed/EmNNRMXf1oc" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>这是一个系列教学，学完之后会学到很多以前没有认真学的基础知识，也就是词性的认识以及一些英语的基础入门学习。</p></blockquote><p><strong>一定要好好的学习各种词性是什么，该怎么用(老老实实认真做笔记)，因为在我学习日语的时候也会用到这个词性的理解，进而才能进阶学习。很重要！非常重要！因为如果理解了各种词性是什么，那么在学习日语(不仅仅是日语，包括各种语言)时就会学习的很快。</strong></p><p>另外学习英语语法本身就是很重要的，应当找几本经典的书籍看看研究一下。</p><h1 id="日语入门学习"><a href="#日语入门学习" class="headerlink" title="日语入门学习"></a>日语入门学习</h1><p>这个我是打算直接在明年考试N1的，所以我买了一些N1的备考书籍(<code>新完全掌握N1系列</code>)以及所谓的<code>蓝/红宝书</code>系列作为备考书籍选项，另外我也买了近几年来的N1真题考试试卷。为了激活那个<strong>中日标准日本语</strong>电子书我也买了全套的相关的书籍(为了激活码…)。<strong>以上这些都可以到淘宝买到。</strong></p><p>另外推荐在YouTube上的新东方日语教学，这个系列特别的通俗易懂，好好学就没什么问题：</p><ul><li>链接：<a href="https://www.youtube.com/watch?v=6OYluEuz1tU&amp;list=PL1vjT6bepDu03GYEcuy0z2_Bou-9bAbGb&amp;index=13" target="_blank" rel="external">新东方日语</a></li></ul><blockquote><p>这个系列也是非常的不错的，这个老师也是很专业滴，好好学，好好的入门没问题。</p></blockquote><p>另外还有一些推荐的YouTube日语入门教学视频：</p><ul><li><p><a href="https://www.youtube.com/watch?v=5voKwhASN7k&amp;index=8&amp;list=PLuNucubP18snvU3Zz8FXF-kACs5EPK4XU" target="_blank" rel="external">從零開始學日文系列～</a></p></li><li><p><a href="https://www.youtube.com/watch?v=MWDdsZ3Vemc&amp;list=PLycXmlzOfI4I-lFd1wH8EHEXFXpd56aro" target="_blank" rel="external">N1日语语法蓝宝书</a></p></li></ul><blockquote><p>也是非常不错的～</p></blockquote><h2 id="一些小的建议"><a href="#一些小的建议" class="headerlink" title="一些小的建议"></a>一些小的建议</h2><ol><li><p>关于五十音图可以先简要的过一遍就好，到时不懂再查，慢慢的就能都记住了，这样效率还是不错的。</p></li><li><p>下载一些APP配合学习，比如那个<code>中日标准日本语</code>的APP就不错。</p></li></ol><p>…</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 英语 </tag>
            
            <tag> 日语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>考研or工作，抉择与想法</title>
      <link href="/2018/11/19/%E8%80%83%E7%A0%94or%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%8A%89%E6%8B%A9%E4%B8%8E%E6%83%B3%E6%B3%95/"/>
      <url>/2018/11/19/%E8%80%83%E7%A0%94or%E5%B7%A5%E4%BD%9C%EF%BC%8C%E6%8A%89%E6%8B%A9%E4%B8%8E%E6%83%B3%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>不知不觉，大三上学期也过一大半了，我这几天一直在<code>考研</code>or<code>工作</code>之间进行一场自我的挣扎。</p><a id="more"></a><p>有时想的太多真的会成为人们进步的碍脚石。我为何要选择考研？必须得问自己的真心，必须得深入了解自己更加倾向于哪一方面！如果不了解自己需要什么，什么都不会，不如直接去考研待在学校寻找自我吧，还可以顺便学点知识应付未来的生计什么的。我是个自我了解很深的人，我选择工作，因为我更加倾向于喜欢毕业之后去工作。</p><p>如果我考研为了什么？我想过去日本留学，冷静下来想了一下发现自己只是想去体验日本的生活环境，另外成本太高，而且我也不愿去为了这个单独的目标去花更多的时间了，所以我放弃留学的打算。光光是成本不说，我想过去考研国内的大学，我冷静下来想了想，不过是自己的一些能力因素达不到理想中的那个样子罢了，而我现在还有时间！！学历真的重要吗？我通过参考了很多前辈的话，我冷静下来想了想，发现还是自身的能力不足的问题，焦虑的大多数时候只是能力不足的表现罢了，这时候就需要读书看书学习了。</p><p>再者，我其实不是喜欢考研的，只不过是想要个学历学位证书以及多一些的项目经验罢了，我的这个目的经过我的考虑之后，我有点接受不了，因为我为了这种东西而去花费一年时间去准备的话，或许不适合我的性格与选择。</p><p>学习是终身的，不是一时的。</p><p>一些事情理性考虑好之后，干，就完了！！</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL语句疑惑记录</title>
      <link href="/2018/11/15/MySQL%E8%AF%AD%E5%8F%A5%E7%96%91%E6%83%91%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/11/15/MySQL%E8%AF%AD%E5%8F%A5%E7%96%91%E6%83%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>主要是记录一些比较有疑惑的语句，方便以后的查找以及回忆。</p><a id="more"></a><h1 id="LIMIT子句"><a href="#LIMIT子句" class="headerlink" title="LIMIT子句"></a>LIMIT子句</h1><blockquote><p> <strong>主要参考：<a href="https://www.yiibai.com/mysql/limit.html" target="_blank" rel="external">https://www.yiibai.com/mysql/limit.html</a></strong></p></blockquote><p>LIMIT子句语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT </div><div class="line">    column1,column2,...</div><div class="line">FROM</div><div class="line">    table</div><div class="line">LIMIT offset , count;</div></pre></td></tr></table></figure><p>SQL我们来查看LIMIT子句参数：</p><p><code>offset</code>参数:指定要返回的第一行的偏移量。第一行的偏移量为0，而不是1。</p><p><code>count</code>:指定要返回的最大行数。</p><p>使用带有一个参数的LIMIT子句时，此参数将用于确定从结果集的开头返回的最大行数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT </div><div class="line">    column1,column2,...</div><div class="line">FROM</div><div class="line">    table</div><div class="line">LIMIT count;</div></pre></td></tr></table></figure><p>SQL上面的查询等同：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">SELECT </div><div class="line">    column1,column2,...</div><div class="line">FROM</div><div class="line">    table</div><div class="line">LIMIT 0 , count;</div></pre></td></tr></table></figure><h2 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT productCode, productName, buyprice</div><div class="line">FROM products</div><div class="line">ORDER BY buyprice DESC;</div><div class="line"></div><div class="line">+-------------+--------------------------------------+----------+</div><div class="line">| productCode | productName                          | buyprice |</div><div class="line">+-------------+--------------------------------------+----------+</div><div class="line">| S10_4962    | 1962 LanciaA Delta 16V               | 103.42   |</div><div class="line">| S18_2238    | 1998 Chrysler Plymouth Prowler       | 101.51   |</div><div class="line">| S10_1949    | 1952 Alpine Renault 1300             | 98.58    |</div><div class="line">| S24_3856    | 1956 Porsche 356A Coupe              | 98.3     |</div><div class="line">| S12_1108    | 2001 Ferrari Enzo                    | 95.59    |</div><div class="line">| S12_1099    | 1968 Ford Mustang                    | 95.34    |</div><div class="line">... ....</div><div class="line">+-------------+--------------------------------------+----------+</div><div class="line">110 rows in set</div></pre></td></tr></table></figure><p>默认语句为输出最前面的几行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT customernumber, customername, creditlimit</div><div class="line">FROM customers</div><div class="line">ORDER BY creditlimit DESC</div><div class="line">LIMIT 5;</div><div class="line"></div><div class="line">相当于：</div><div class="line">mysql&gt; SELECT customernumber, customername, creditlimit</div><div class="line">FROM customers</div><div class="line">ORDER BY creditlimit DESC</div><div class="line">LIMIT 0, 5; #从第一个偏移量的指定开始向下输出指定行数的所有内容。</div><div class="line"></div><div class="line"></div><div class="line">+----------------+------------------------------+-------------+</div><div class="line">| customernumber | customername                 | creditlimit |</div><div class="line">+----------------+------------------------------+-------------+</div><div class="line">|            141 | Euro+ Shopping Channel       | 227600      |</div><div class="line">|            124 | Mini Gifts Distributors Ltd. | 210500      |</div><div class="line">|            298 | Vida Sport, Ltd              | 141300      |</div><div class="line">|            151 | Muscle Machine Inc           | 138500      |</div><div class="line">|            187 | AV Stores, Co.               | 136800      |</div><div class="line">+----------------+------------------------------+-------------+</div><div class="line">5 rows in set</div></pre></td></tr></table></figure><p>简要深入理解偏移量的作用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT productCode, productName, buyprice FROM  products</div><div class="line">ORDER BY buyprice DESC</div><div class="line">LIMIT 1, 1; #偏移量从0开始，所以要指定从1开始，然后取一行记录，以行数为1的指定仅输出一行对应的内容。</div><div class="line"></div><div class="line">+-------------+--------------------------------+----------+</div><div class="line">| productCode | productName                    | buyprice |</div><div class="line">+-------------+--------------------------------+----------+</div><div class="line">| S18_2238    | 1998 Chrysler Plymouth Prowler | 101.51   |</div><div class="line">+-------------+--------------------------------+----------+</div><div class="line">1 row in set</div><div class="line"></div><div class="line"></div><div class="line">#如下几个深入理解</div><div class="line">mysql&gt; SELECT productCode, productName, buyprice FROM  products</div><div class="line">ORDER BY buyprice DESC</div><div class="line">LIMIT 0, 1; #这时指定第一行(偏移量默认为第一行取0)</div><div class="line"></div><div class="line">+-------------+--------------------------------+----------+</div><div class="line">| productCode | productName                    | buyprice |</div><div class="line">+-------------+--------------------------------+----------+</div><div class="line">| S10_4962    | 1962 LanciaA Delta 16V | 103.42   |</div><div class="line">+-------------+--------------------------------+----------+</div><div class="line">1 row in set</div><div class="line"></div><div class="line"></div><div class="line">mysql&gt; SELECT productCode, productName, buyprice FROM  products</div><div class="line">ORDER BY buyprice DESC</div><div class="line">LIMIT 0, 2; #从已指定第一行偏移量开始输出以此为基础的指定行数的以下所有内容</div><div class="line"></div><div class="line">+-------------+--------------------------------------+----------+</div><div class="line">| productCode | productName                          | buyprice |</div><div class="line">+-------------+--------------------------------------+----------+</div><div class="line">| S10_4962    | 1962 LanciaA Delta 16V               | 103.42   |</div><div class="line">| S18_2238    | 1998 Chrysler Plymouth Prowler       | 101.51   |</div><div class="line">+----------------+------------------------------+-------------+</div><div class="line">2 rows in set</div></pre></td></tr></table></figure><blockquote><p>总结：<code>offset</code>就是相当于一个定位，<code>count</code>就是要返回指定的最大行数。</p></blockquote><h1 id="ORDER-BY-ASC-DESC"><a href="#ORDER-BY-ASC-DESC" class="headerlink" title="ORDER BY ASC/DESC"></a>ORDER BY ASC/DESC</h1><p><code>ASC</code>:[A~Z], [1~N]…</p><p><code>DESC</code>:[Z~A}, [N~1]…</p><blockquote><p>A，B，…Z。Z相当于最大的。</p></blockquote><h1 id="经度-Longitude-纬度-Latitude"><a href="#经度-Longitude-纬度-Latitude" class="headerlink" title="经度(Longitude) 纬度(Latitude)"></a>经度(Longitude) 纬度(Latitude)</h1><p><code>经度(Longitude)</code>：<code>东经</code>，<code>西经</code>。</p><blockquote><p>东经正数，西经为负数。越大越靠东。</p></blockquote><p><code>纬度(Latitude)</code>：<code>南纬</code>，<code>北纬</code>。</p><blockquote><p>北纬为正数，南纬为负数。越大越靠北。</p></blockquote><p>方便记忆：东经，东北正。</p><p><strong>参考：<a href="https://baike.baidu.com/item/%E7%BB%8F%E7%BA%AC%E5%BA%A6" target="_blank" rel="external">https://baike.baidu.com/item/%E7%BB%8F%E7%BA%AC%E5%BA%A6</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习资源与实践学习</title>
      <link href="/2018/11/13/MySQL%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E4%B8%8E%E5%AE%9E%E8%B7%B5%E5%AD%A6%E4%B9%A0/"/>
      <url>/2018/11/13/MySQL%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90%E4%B8%8E%E5%AE%9E%E8%B7%B5%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>最近心血来潮想写几个SQL玩玩，在此会分享学习的书籍资源以及YouTube教程使用语法的实践项目，以及会进行一系列的简单实践。这里通过在YouTube上的一个大佬的视频来进行在线的实践即可。</p><iframe width="560" height="315" src="https://www.youtube.com/embed/xYMhPZ_L3fI" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>就是这个视频。</p></blockquote><p>可主要参考书籍<a href="https://pan.baidu.com/s/15hIkCroy2w7RvBdVH8LRmA" target="_blank" rel="external">疯狂Java讲义(李刚)</a>来进行学习，当然还有参考其他的经典书籍以备用学习，这类书籍很多，就不在此一一说明了。</p><blockquote><p>《疯狂Java讲义》书籍的配套资源地址：<a href="https://github.com/DoingLee" target="_blank" rel="external">https://github.com/DoingLee</a></p></blockquote><a id="more"></a><h1 id="MySQL学习"><a href="#MySQL学习" class="headerlink" title="MySQL学习"></a>MySQL学习</h1><p>这一部分由于一些基础性的基本知识在上面和下面的书籍中已经是多如牛毛了，我就不重复说明了，需要的自行下载去了解吧。可结合书中直接开始语法的学习！实际上几个实用性强的语句就那么几个。</p><h2 id="书籍资源分享"><a href="#书籍资源分享" class="headerlink" title="书籍资源分享"></a>书籍资源分享</h2><ul><li><p><a href="https://pan.baidu.com/s/1rZwbEXEV_GlGsN7UVZ5Z6Q" target="_blank" rel="external">MySQL必知必会.pdf</a></p></li><li><p><a href="https://pan.baidu.com/s/1pA9V9weH33j7ZiV6fFNU1Q" target="_blank" rel="external">SQL语法查询(W3school).pdf</a></p></li><li><p><a href="https://pan.baidu.com/s/1cglHK9k4VY1SSJsg_C2mWA" target="_blank" rel="external">MySQL完全教程.pdf</a></p></li><li><p><a href="https://pan.baidu.com/s/14W7WJBoVnybd_r8pXQ6J4Q" target="_blank" rel="external">MySQL经典教程.pdf</a></p></li><li><p><a href="http://www.manongjc.com/article/1436.html" target="_blank" rel="external">码农教程</a></p></li></ul><blockquote><p>就这么多吧，都是网上的人们分享出来的。</p></blockquote><h2 id="网页在线学习"><a href="#网页在线学习" class="headerlink" title="网页在线学习"></a>网页在线学习</h2><ul><li><a href="https://sqlbolt.com" target="_blank" rel="external">sqlbolt</a></li></ul><blockquote><p>强烈推荐！还可在线实践(结合上面的视频一起来即可)。</p></blockquote><ul><li><p><a href="http://www.runoob.com/mysql/mysql-tutorial.html" target="_blank" rel="external">MySQL教程(菜鸟教程)</a></p></li><li><p><a href="https://m.w3cschool.cn/mysql/" target="_blank" rel="external">MySQL教程(w3cschool)</a></p></li><li><p><a href="https://www.yiibai.com/mysql/" target="_blank" rel="external">MySQL教程(易百教程)</a></p></li></ul><blockquote><p>相较于上面的书籍，在线教程更加的通俗易懂，可先通过这些入门简单认识一下以及学习语法，不懂的更深的部分可查看书籍即可。</p></blockquote><h2 id="YouTube上的资源"><a href="#YouTube上的资源" class="headerlink" title="YouTube上的资源"></a>YouTube上的资源</h2><ul><li><a href="https://www.youtube.com/results?search_query=mysql" target="_blank" rel="external">https://www.youtube.com/results?search_query=mysql</a></li></ul><blockquote><p>就这么简单～</p></blockquote><h1 id="实践学习"><a href="#实践学习" class="headerlink" title="实践学习"></a>实践学习</h1><p>强烈建议先根据视频学习！根据上面的YouTube教程结合<a href="https://sqlbolt.com" target="_blank" rel="external">sqlbolt</a>网站一步步来即可～若是英文看不懂，可结合上面的书籍资源以及在线资源查询即可。实践才是掌握一门语言的最快方法！</p><blockquote><p>有时根据网速快慢加载的数据库可能有点慢，等待一下即可。</p></blockquote><h3 id="实践网站："><a href="#实践网站：" class="headerlink" title="实践网站："></a>实践网站：</h3><ul><li><p><a href="https://sqlbolt.com/" target="_blank" rel="external">SQLbolt</a></p></li><li><p><a href="https://www.tutorialspoint.com/" target="_blank" rel="external">tutorialspoint</a></p></li><li><p><a href="https://www.w3schools.com/sql/sql_exercises.asp" target="_blank" rel="external">W3Schools</a></p></li><li><p><a href="https://www.codecademy.com/" target="_blank" rel="external">codecademy</a></p></li><li><p><a href="https://www.udemy.com/courses/search/?ref=home&amp;src=ukw&amp;q=mysql" target="_blank" rel="external">udemy</a></p></li></ul><h1 id="进阶好文章"><a href="#进阶好文章" class="headerlink" title="进阶好文章"></a>进阶好文章</h1><ul><li><p><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html" target="_blank" rel="external">MySQL索引背后的数据结构及算法原理</a></p></li><li><p><a href="https://cloud.tencent.com/developer/article/1004475" target="_blank" rel="external">MySQL 开发实践 8 问</a></p></li><li><p><a href="https://juejin.im/post/5b4f710be51d45195c073912" target="_blank" rel="external">从I/O到索引的那些事</a></p></li><li><p><a href="https://juejin.im/post/5b8ba5dbe51d4538d63b9345" target="_blank" rel="external">从理论到实践，Mysql查询优化剖析</a></p></li></ul><blockquote><p>再者就是看书了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习计算机组成、计算机系统资源分享</title>
      <link href="/2018/11/13/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E3%80%81%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/"/>
      <url>/2018/11/13/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E3%80%81%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E8%B5%84%E6%BA%90%E5%88%86%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<p>一直想写一些关于计算机的基础知识的，但是我又看到许多的优秀书籍以及优秀文章，我从其中也学习到了非常的东西，也解开了我的许多疑惑，在此感谢那些人们的付出～</p><p>回到正题，自己一直想写，但是由于时间问题以及质量不能保证…所以我打算将一些优秀的资源拿出来分享好了，也解决了自己的那块心头肉。</p><p>以下资源是我从网上收集到的，仅用于学习使用。</p><a id="more"></a><h1 id="云盘资源分享"><a href="#云盘资源分享" class="headerlink" title="云盘资源分享"></a>云盘资源分享</h1><ul><li><a href="https://pan.baidu.com/s/1Z9BcwV3fKGqwVXlLfU8B_g" target="_blank" rel="external">深入理解计算机系统（原书第三版）.pdf</a></li></ul><blockquote><p>一本非常好的书！！</p></blockquote><ul><li><p><a href="https://pan.baidu.com/s/1JIC9vxu1CnKgqBnfgrfEAw" target="_blank" rel="external">计算机组成.pdf</a></p></li><li><p><a href="https://pan.baidu.com/s/1LI2Cc9dFgAgBro_Tn7uKUA" target="_blank" rel="external">计算机操作系统（第3版）_汤小丹.pdf</a></p></li><li><p><a href="https://pan.baidu.com/s/1li3YCywQlfEMtRCkRdS1tQ" target="_blank" rel="external">计算机是怎么跑起来的.pdf</a></p></li></ul><blockquote><p>一本科普书吧，很简单，但是够用了。</p></blockquote><ul><li><p><a href="https://pan.baidu.com/s/1uDVuroObwbvuqlZWokE3dg" target="_blank" rel="external">计算机组成.pdf</a></p></li><li><p><a href="https://pan.baidu.com/s/1ix393Of_pPVnvAQZEdZumw" target="_blank" rel="external">Linux设备驱动程序(中文版第三版).pdf</a></p></li><li><p><a href="https://pan.baidu.com/s/1N6Y7faTYkmU7gyaXUv9YqA" target="_blank" rel="external">Linux内核完全注释.pdf</a></p></li><li><p><a href="https://pan.baidu.com/s/1jvuMLTCtrmytamVYtR2G7A" target="_blank" rel="external">深入Linux内核架构.pdf</a></p></li></ul><blockquote><p>以上都是网上收集的电子书，我个人平时喜欢看书，基本上都是电子书，有收集很多技术类的电子书，都是根据需求来收集的。</p></blockquote><h1 id="最近看到的相关的优秀文章"><a href="#最近看到的相关的优秀文章" class="headerlink" title="最近看到的相关的优秀文章"></a>最近看到的相关的优秀文章</h1><ul><li><p><a href="https://juejin.im/post/5b3c34e3e51d45190e34c680" target="_blank" rel="external">印象系列-理解进程的存在</a></p></li><li><p><a href="https://juejin.im/post/59eaf70ff265da432b49f6bc" target="_blank" rel="external">印象系列-磁盘和内存的基本认识</a></p></li><li><p><a href="https://juejin.im/post/59be20e6f265da06633d1648" target="_blank" rel="external">印象系列-linux内核启动过程</a></p></li><li><p><a href="https://juejin.im/post/5b4f710be51d45195c073912" target="_blank" rel="external">从I/O到索引的那些事</a></p></li></ul><blockquote><p>以上都是一个作者写的，最近在学习<code>MySQL</code>时无意中看到的，很好的文章。</p></blockquote><p>还是要多看书学习才行。</p>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
            <tag> 计算机基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客图片外链从七牛云移至腾讯云</title>
      <link href="/2018/11/11/Hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE%E4%BB%8E%E4%B8%83%E7%89%9B%E4%BA%91%E7%A7%BB%E8%87%B3%E8%85%BE%E8%AE%AF%E4%BA%91/"/>
      <url>/2018/11/11/Hexo%E5%8D%9A%E5%AE%A2%E5%9B%BE%E7%89%87%E5%A4%96%E9%93%BE%E4%BB%8E%E4%B8%83%E7%89%9B%E4%BA%91%E7%A7%BB%E8%87%B3%E8%85%BE%E8%AE%AF%E4%BA%91/</url>
      
        <content type="html"><![CDATA[<p>最近发现博客中的一些文章图片无法正常显示了，查看了一些文章之后，发现原来是测试域名失效了…我的图片存放了这么多…全都不能用了，妈蛋啊！</p><p>我研究了一下关于它的这个恢复的方法，需要实名不说了，还要我的网站备案，不可能的绝对不可能的，我要走了，再见了，七牛云！！</p><p>我要搬去腾讯云了。以下是我的记录。</p><a id="more"></a><h1 id="将七牛云的图片下载至本地"><a href="#将七牛云的图片下载至本地" class="headerlink" title="将七牛云的图片下载至本地"></a>将七牛云的图片下载至本地</h1><h2 id="过程操作"><a href="#过程操作" class="headerlink" title="过程操作"></a>过程操作</h2><p>具体需要用到<a href="https://developer.qiniu.com/kodo/tools/1302/qshell" target="_blank" rel="external">七牛云命令行工具(qshell)</a>，将曾经上传上去的图片批量下载到本地然后使用腾讯云再次慢慢整理即可…</p><ul><li>可参考官方介绍：<a href="http://songfeifeids.qiniuts.com/spjc/avthumb/batchdelete.mov.mp4" target="_blank" rel="external">使用 qshell 进行批量删除</a></li></ul><blockquote><p>由于我在七牛云上的图片有一部分可以显示，一部分无法显示，但是这个量真的太大了，我不打算一个一个替换了，之后的图片我就直接用腾讯云来充当图床好了…唉…心累。</p></blockquote><h1 id="关于在腾讯云的图床操作"><a href="#关于在腾讯云的图床操作" class="headerlink" title="关于在腾讯云的图床操作"></a>关于在腾讯云的图床操作</h1><p>可参考：</p><ul><li><a href="https://blog.csdn.net/a201577F0546/article/details/80146350" target="_blank" rel="external">使用腾讯云对象存储作为图床</a></li></ul><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>我通过一个兄弟买了一个已备案的域名，在<a href="https://developer.qiniu.com/fusion/kb/1322/how-to-configure-cname-domain-name" target="_blank" rel="external">这里</a>跟着设置了一下，就OK了，接下来我需要将以前的在文件中域名更改为现在的就行了，图片就能正常显示出来了。为了更有效率的处理可以自己写个脚本或者是利用好一些编译软件替换掉域名即可：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-11-12%20%E4%B8%8B%E5%8D%886.57.30.png" alt=""></p><blockquote><p>我用的<em>Macdown</em>编译软件，平时用这个来写博客的。</p></blockquote><p>另外可以用公用的图床(以下为推荐的参考链接)：</p><ul><li><p><a href="https://sspai.com/post/40499" target="_blank" rel="external">https://sspai.com/post/40499</a></p></li><li><p><a href="https://blog.nfz.moe/archives/collection-of-image-hosting.html" target="_blank" rel="external">https://blog.nfz.moe/archives/collection-of-image-hosting.html</a></p></li></ul><blockquote><p>不过为了稳定，我是真的不想从来一遍了…文件太多了。所以我买了个备案的域名。</p></blockquote><h1 id="更新-1"><a href="#更新-1" class="headerlink" title="更新"></a>更新</h1><p>最近买的不久的备案域名被收回了…于是我决心从七牛云搬出来。以下是我的一些心得。</p><p><strong>需要先将七牛云的上的所有的文件下载下来，之后再将文件上传腾讯云上，之后更改一些外链链接即可万事大吉了！</strong></p><blockquote><p>具体步骤可参考：<a href="http://robotkang.cc/2018/11/pic/" target="_blank" rel="external">将图床从七牛云迁移到腾讯COS</a></p></blockquote><p>另外要补充的一些：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-01-02%20%E4%B8%8B%E5%8D%883.11.27.png" alt=""></p><blockquote><p>这是我摸索出来的正确的符合当下情况的<code>batch_download.conf</code>文件描述，空白表示全部下载的意识。</p></blockquote><p>另外这个基本的下载与使用的官方指导：<a href="https://developer.qiniu.com/kodo/tools/1302/qshell" target="_blank" rel="external">Mac上的七牛云命令行工具(qshell)使用</a></p><blockquote><p>但是单单看这个视频是不行的，还是出现了一些错误，比如：命令行根本运行不了！<strong>所以还需要参考下面的官方的API进行操作！！！！</strong></p></blockquote><ul><li><p><a href="https://github.com/qiniu/qshell" target="_blank" rel="external">qshell-Github</a></p></li><li><p><a href="https://developer.qiniu.com/kodo/tools/1302/qshell" target="_blank" rel="external">官方文档命令行工具(qshell)</a></p></li></ul><p>另外关于批量更改文字内容（尝试未成功…）可参考：</p><ul><li><a href="https://blog.csdn.net/lzyzuixin/article/details/7638979" target="_blank" rel="external">linux sed命令 批量替换文件内容的方法</a></li></ul><h2 id="注意-amp-提示"><a href="#注意-amp-提示" class="headerlink" title="注意&amp;提示"></a>注意&amp;提示</h2><p>使用的命令行如果出现错误一定看官方的文档进行修改重新来过！！以官方文档为准！！！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程笔记 </tag>
            
            <tag> 七牛云 </tag>
            
            <tag> 腾讯云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（Mac）Julia的下载及结合notebook使用</title>
      <link href="/2018/11/09/%EF%BC%88Mac%EF%BC%89Julia%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%8F%8A%E7%BB%93%E5%90%88notebook%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/11/09/%EF%BC%88Mac%EF%BC%89Julia%E7%9A%84%E4%B8%8B%E8%BD%BD%E5%8F%8A%E7%BB%93%E5%90%88notebook%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>关于Julia这个语言，这是一个鲜为人知的语言，听说在处理数值分析方面还不错，最近也总是无意间看到，所以想试试看看，就在此顺便记录一下安装的过程以及如何在notebook中运行的过程。</p><a id="more"></a><h1 id="安装Julia"><a href="#安装Julia" class="headerlink" title="安装Julia"></a>安装Julia</h1><ul><li>在这里下载：<a href="https://julialang.org/downloads/" target="_blank" rel="external">https://julialang.org/downloads/</a></li></ul><p>或者是在<code>Mac</code>上可用<code>homebrew</code>命令行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew cask install julia</div></pre></td></tr></table></figure><blockquote><p>可参考：<a href="https://julialang.org/downloads/platform.html#macos" target="_blank" rel="external">https://julialang.org/downloads/platform.html#macos</a></p></blockquote><p>我使用直接下载安装的方式。</p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">vi ~/.bash_profile <span class="comment">#打开配置文件</span></div><div class="line"></div><div class="line"><span class="comment">#输入对应目录</span></div><div class="line"><span class="comment">#Julia</span></div><div class="line"><span class="built_in">export</span> PATH=<span class="string">"/Applications/Julia-1.0.app/Contents/Resources/julia/bin:<span class="variable">$&#123;PATH&#125;</span>"</span></div><div class="line"></div><div class="line"><span class="built_in">source</span> ~/.bash_profile <span class="comment">#快速生效</span></div></pre></td></tr></table></figure><p>这样之后在终端直接输入<code>Julia</code>即可使用Julia了。</p><h1 id="notebook中运行"><a href="#notebook中运行" class="headerlink" title="notebook中运行"></a>notebook中运行</h1><p>下载相关的内核就OK了。</p><p>打开Julia终端进程：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">using Pkg</div><div class="line">Pkg.add(<span class="string">"IJulia"</span>)</div></pre></td></tr></table></figure><blockquote><p>重启notebook，发现可以了。</p></blockquote><p>可参考：</p><ul><li><p><a href="https://github.com/JuliaLang/IJulia.jl" target="_blank" rel="external">https://github.com/JuliaLang/IJulia.jl</a></p></li><li><p><a href="https://www.youtube.com/watch?v=uRIQXJXRtqg" target="_blank" rel="external">https://www.youtube.com/watch?v=uRIQXJXRtqg</a></p></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>附上几个学习链接：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/41802723" target="_blank" rel="external">一个简单的Julia教程（一）</a></li></ul><blockquote><p>这篇文章有介绍用其他运行<code>Julia</code>的方案。</p></blockquote><ul><li><p><a href="http://discourse.juliacn.com" target="_blank" rel="external">Julia中文discourse</a></p></li><li><p><a href="https://www.zhihu.com/question/284356534" target="_blank" rel="external">Julia 解决了 C++/Python/Matlab 的哪些痛点？</a></p></li><li><p><a href="https://www.zhihu.com/question/20072632" target="_blank" rel="external">怎么看待新出的 Julia 语言？它的前景怎么样？</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> Julia </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jupyter Notebook </tag>
            
            <tag> Julia </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python结合OCR以及Opencv提取并且实时翻译图片内容</title>
      <link href="/2018/11/08/Python%E7%BB%93%E5%90%88OCR%E4%BB%A5%E5%8F%8AOpencv%E6%8F%90%E5%8F%96%E5%B9%B6%E4%B8%94%E5%AE%9E%E6%97%B6%E7%BF%BB%E8%AF%91%E5%9B%BE%E7%89%87%E5%86%85%E5%AE%B9/"/>
      <url>/2018/11/08/Python%E7%BB%93%E5%90%88OCR%E4%BB%A5%E5%8F%8AOpencv%E6%8F%90%E5%8F%96%E5%B9%B6%E4%B8%94%E5%AE%9E%E6%97%B6%E7%BF%BB%E8%AF%91%E5%9B%BE%E7%89%87%E5%86%85%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<p>本文讲述基于python的一些模块进行<code>图片内容的提取</code>、<code>图片内容的翻译</code>。本文主要进行记录一些在实践中的构想以及遇到的问题，并且记录上一些实现的代码，因为技术含量实在是不怎么高的，不过若是自己玩玩，参加那种水比赛也许能获得个不错的名次，或者是应付个学生报告什么的…</p><p>由于时间关系，本文多数只是起到一个构想记录的效用。</p><a id="more"></a><h1 id="基于OCR的图片内容提取"><a href="#基于OCR的图片内容提取" class="headerlink" title="基于OCR的图片内容提取"></a>基于OCR的图片内容提取</h1><p>在python使用到的模块是<code>pytesseract</code>，关于简要的下载介绍什么的可见：<a href="https://zhuanlan.zhihu.com/p/31530755" target="_blank" rel="external">Python–文字识别–Tesseract</a>。</p><p>运行代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pytesseract</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"></div><div class="line">image = cv2.imread(<span class="string">'/Users/junjieliu/Desktop/1.png'</span>)</div><div class="line">text = pytesseract.image_to_string(image)</div><div class="line">print(text)</div></pre></td></tr></table></figure><p>在此记录一下在使用过程中的出现的问题：</p><h2 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Error: [Errno 2] No such file or directory using pytesser</div></pre></td></tr></table></figure><blockquote><p>之后我参考了：<a href="https://stackoverflow.com/questions/35609773/oserror-errno-2-no-such-file-or-directory-using-pytesser" target="_blank" rel="external">https://stackoverflow.com/questions/35609773/oserror-errno-2-no-such-file-or-directory-using-pytesser</a></p></blockquote><p>我使用了其中的前面的几个答案的方案，结果出现了下面的错误…</p><h2 id="问题二："><a href="#问题二：" class="headerlink" title="问题二："></a>问题二：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PermissionError: [Errno 13] Permission denied</div></pre></td></tr></table></figure><blockquote><p>之后我参考了：<a href="https://github.com/madmaze/pytesseract/issues/62" target="_blank" rel="external">https://github.com/madmaze/pytesseract/issues/62</a></p></blockquote><p>但是依旧得不到解决。</p><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>使用命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">which</span> tesseract</div></pre></td></tr></table></figure><p>找到了它的位置（没想到Mac自带的一个？）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/<span class="built_in">local</span>/bin/tesseract</div></pre></td></tr></table></figure><p>然后虽然在替换了地址之后可以正常运行代码了(即<code>tesseract_cmd = “/usr/local/bin/tesseract”</code>)，就会变得很麻烦，因为自带的根本难以进行扩展。</p><p>将下载好的加入环境变量替换掉原装的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi ~/.bash_profile</div></pre></td></tr></table></figure><p>写入：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#tesseract</span></div><div class="line">export PATH=<span class="string">"/usr/local/Cellar/tesseract/4.0.0/bin:$PATH"</span></div></pre></td></tr></table></figure><p>立即生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> ~/.bash_profile</div></pre></td></tr></table></figure><p>之后再使用命令行<code>which tesseract</code>,就会发现变了位置，更改<code>tesseract_cmd = “/usr/local/Cellar/tesseract/4.0.0/bin/tesseract”</code>，之后程序就能成功运行并且可以得到以后的更多的扩展使用了，比如语言包的选择。</p><h1 id="在线提取图片文字小工具"><a href="#在线提取图片文字小工具" class="headerlink" title="在线提取图片文字小工具"></a>在线提取图片文字小工具</h1><p>提取这一块的具体过程就不多说了，简单记录一下结合其他技术可以实现的想法：</p><blockquote><p>可结合<code>Pyqt5</code>的GUI界面化开发，输入图片的目录地址，下方即出现提取的内容。</p><p>在以上的基础上结合爬虫实现翻译。</p></blockquote><p><strong>可参考我以前写的文章：<a href="https://liujunworld.com/2018/05/07/python3爬虫与GUI-基于有道词典的词典小工具/" target="_blank" rel="external">python3爬虫与GUI-基于有道词典的词典小工具</a></strong></p><p>这样一来这个小工具就能出来了。这里就这样吧，因为时间关系加上实现的过程不是很难，所以就不多说了。</p><ul><li>关于提取的精确度可移步参考更强大的工具：<a href="https://github.com/JinpengLI/deep_ocr" target="_blank" rel="external">deep_ocr</a></li></ul><h1 id="结合OpenCV实时翻译"><a href="#结合OpenCV实时翻译" class="headerlink" title="结合OpenCV实时翻译"></a>结合OpenCV实时翻译</h1><p>这里主要是我在参考了：<a href="https://zhuanlan.zhihu.com/p/40025902" target="_blank" rel="external">用OpenCV和Python识别二维码和条形码</a>这篇文章之后结合本身的需求出现的启发。</p><p>这是我经过修改之后的代码（添加并且修改了几行代码）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> imutils.video <span class="keyword">import</span> VideoStream</div><div class="line"><span class="keyword">from</span> pyzbar <span class="keyword">import</span> pyzbar</div><div class="line"><span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> imutils</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"></div><div class="line">cap = cv2.VideoCapture(<span class="number">0</span>)</div><div class="line">vs = VideoStream(src=<span class="number">0</span>).start()</div><div class="line">time.sleep(<span class="number">2.0</span>)</div><div class="line"></div><div class="line"><span class="comment"># open the output CSV file for writing and initialize the set of</span></div><div class="line"><span class="comment"># barcodes found thus far</span></div><div class="line">csv = open(<span class="string">"barcodes.csv"</span>, <span class="string">"w"</span>)</div><div class="line">found = set()</div><div class="line"></div><div class="line"><span class="comment"># loop over the frames from the video stream</span></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="comment"># grab the frame from the threaded video stream and resize it to</span></div><div class="line">    <span class="comment"># have a maximum width of 400 pixels</span></div><div class="line">    frame = vs.read()</div><div class="line">    frame = imutils.resize(frame, width=<span class="number">400</span>)</div><div class="line"></div><div class="line">    <span class="comment"># find the barcodes in the frame and decode each of the barcodes</span></div><div class="line">    barcodes = pyzbar.decode(frame)</div><div class="line"></div><div class="line">    <span class="comment"># loop over the detected barcodes</span></div><div class="line">    <span class="keyword">for</span> barcode <span class="keyword">in</span> barcodes:</div><div class="line">        <span class="comment"># extract the bounding box location of the barcode and draw</span></div><div class="line">        <span class="comment"># the bounding box surrounding the barcode on the image</span></div><div class="line">        (x, y, w, h) = barcode.rect</div><div class="line">        cv2.rectangle(frame, (x, y), (x + w, y + h), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</div><div class="line"></div><div class="line">        <span class="comment"># the barcode data is a bytes object so if we want to draw it</span></div><div class="line">        <span class="comment"># on our output image we need to convert it to a string first</span></div><div class="line">        barcodeData = barcode.data.decode(<span class="string">"utf-8"</span>)</div><div class="line">        barcodeType = barcode.type</div><div class="line"></div><div class="line">        <span class="comment"># draw the barcode data and barcode type on the image</span></div><div class="line">        text = <span class="string">"&#123;&#125; (&#123;&#125;)"</span>.format(barcodeData, barcodeType)</div><div class="line">        cv2.putText(frame, text, (x, y - <span class="number">10</span>),</div><div class="line">            cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</div><div class="line"></div><div class="line">        <span class="comment"># if the barcode text is currently not in our CSV file, write</span></div><div class="line">        <span class="comment"># the timestamp + barcode qto disk and update the set</span></div><div class="line">        <span class="keyword">if</span> barcodeData <span class="keyword">not</span> <span class="keyword">in</span> found:</div><div class="line">            csv.write(<span class="string">"&#123;&#125;,&#123;&#125;\n"</span>.format(datetime.datetime.now(),</div><div class="line">                barcodeData))</div><div class="line">            csv.flush()</div><div class="line">            found.add(barcodeData)</div><div class="line"></div><div class="line">    <span class="comment"># show the output frame</span></div><div class="line">    cv2.imshow(<span class="string">"Barcode Scanner"</span>, frame)</div><div class="line">    key = cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span></div><div class="line"> </div><div class="line">    <span class="comment"># if the `q` key was pressed, break from the loop</span></div><div class="line">    <span class="keyword">if</span> key == ord(<span class="string">"q"</span>):</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="comment"># close the output CSV file do a bit of cleanup</span></div><div class="line">print(<span class="string">"[INFO] cleaning up..."</span>)</div><div class="line">cap.release()  <span class="comment"># 释放摄像头</span></div><div class="line">csv.close()</div><div class="line">cv2.destroyAllWindows()</div><div class="line">vs.stop()</div></pre></td></tr></table></figure><blockquote><p>性能得到了一点的优化，少写了点代码。效果没变化。</p></blockquote><p>关于实现实时翻译的效果，这里可结合上面的有道爬虫与OpenCV来完成。基本上进行一些修改就行了，实现的过程不算太难。多参考官方文档以及他人的做法即能实现。</p><p>大概的代码样本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># coding:utf-8</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> imutils.video <span class="keyword">import</span> VideoStream</div><div class="line"><span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> imutils</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> cv2</div><div class="line"><span class="keyword">import</span> hashlib</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> random</div><div class="line"></div><div class="line">cap = cv2.VideoCapture(<span class="number">0</span>)</div><div class="line"><span class="comment"># initialize the video stream and allow the camera sensor to warm up</span></div><div class="line">print(<span class="string">"starting video stream..."</span>)</div><div class="line"><span class="comment"># vs = VideoStream(src=0).start()</span></div><div class="line">vs = VideoStream(src=<span class="number">0</span>).start()</div><div class="line">time.sleep(<span class="number">2.0</span>)</div><div class="line"></div><div class="line">csv = open(<span class="string">"barcodes.csv"</span>, <span class="string">"w"</span>)</div><div class="line">found = set()</div><div class="line"></div><div class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">    <span class="comment"># grab the frame from the threaded video stream and resize it to</span></div><div class="line">    <span class="comment"># have a maximum width of 400 pixels</span></div><div class="line">    frame = vs.read()</div><div class="line">    frame = imutils.resize(frame, width=<span class="number">400</span>)</div><div class="line"></div><div class="line">    word = frame</div><div class="line">    <span class="keyword">for</span> words <span class="keyword">in</span> word:</div><div class="line">        r = str(int(time.time() * <span class="number">1000</span> + random.randint(<span class="number">1</span>, <span class="number">10</span>)))  <span class="comment"># 模仿JS代码的仿写</span></div><div class="line">        S = <span class="string">'fanyideskweb'</span></div><div class="line">        n = words</div><div class="line">        D = <span class="string">"ebSeFb%=XZ%T[KZ)c(sy!"</span>  <span class="comment"># 在完整的JS代码中可找到    </span></div><div class="line">        o = hashlib.md5((S + n + str(r) + D).encode(<span class="string">'utf-8'</span>)).hexdigest()</div><div class="line">        </div><div class="line">        data = &#123;</div><div class="line">            <span class="string">'i'</span>: words,</div><div class="line">            <span class="string">'from'</span>: <span class="string">'AUTO'</span>,</div><div class="line">            <span class="string">'to'</span>: <span class="string">'AUTO'</span>,</div><div class="line">            <span class="string">'smartresult'</span>: <span class="string">'dict'</span>,</div><div class="line">            <span class="string">'client'</span>: S,</div><div class="line">            <span class="string">'salt'</span>: r,</div><div class="line">            <span class="string">'sign'</span>: o,</div><div class="line">            <span class="string">'doctype'</span>: <span class="string">'json'</span>,</div><div class="line">            <span class="string">'version'</span>: <span class="string">'2.1'</span>,</div><div class="line">            <span class="string">'keyfrom'</span>: <span class="string">'fanyi.web'</span>,</div><div class="line">            <span class="string">'action'</span>: <span class="string">'FY_BY_REALTIME'</span>,</div><div class="line">            <span class="string">'typoResult'</span>: <span class="string">'false'</span></div><div class="line">        &#125;</div><div class="line">        url = <span class="string">'http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule'</span></div><div class="line">        </div><div class="line">        <span class="comment"># 在代理中需要加入cookies信息，否则会出现代码错误信息的返回</span></div><div class="line">        header = &#123;</div><div class="line">            <span class="string">'Cookie'</span>: <span class="string">'OUTFOX_SEARCH_USER_ID=432464843@10.168.8.76; _ntes_nnid=25aff2b1480f17471ca1585f6f2f4293,1512024136653; OUTFOX_SEARCH_USER_ID_NCOO=132154936.07902834; JSESSIONID=aaa3TFIg-JJJN4xEog6mw; ___rl__test__cookies=1525691300664'</span>,</div><div class="line">            <span class="string">'Referer'</span>: <span class="string">'http://fanyi.youdao.com/'</span>,</div><div class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36'</span></div><div class="line">        &#125;</div><div class="line">        response = requests.post(url=url, headers=header, data=data)</div><div class="line">        response.encoding = <span class="string">'utf-8'</span></div><div class="line">        </div><div class="line">        translateResult = json.loads(response.text)[<span class="string">"translateResult"</span>][<span class="number">0</span>][<span class="number">0</span>][<span class="string">'tgt'</span>]</div><div class="line">        <span class="comment">#(x, y, w, h) = words.rect</span></div><div class="line">        cv2.rectangle(frame, (<span class="number">10</span>, <span class="number">10</span>), (<span class="number">20</span>, <span class="number">20</span>), (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</div><div class="line">        </div><div class="line">               cv2.putText(frame, translateResult, (<span class="number">10</span>, <span class="number">10</span> - <span class="number">10</span>),</div><div class="line">        cv2.FONT_HERSHEY_SIMPLEX, <span class="number">0.5</span>, (<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>)</div><div class="line">        </div><div class="line">        <span class="comment"># if the  text is currently not in our CSV file, write</span></div><div class="line">        <span class="comment"># the timestamp + text qto disk and update the set</span></div><div class="line">        <span class="keyword">if</span> translateResult <span class="keyword">not</span> <span class="keyword">in</span> found:</div><div class="line">            csv.write(<span class="string">"&#123;&#125;,&#123;&#125;\n"</span>.format(datetime.datetime.now(),</div><div class="line">                translateResult))</div><div class="line">            csv.flush()</div><div class="line">            found.add(translateResult)</div><div class="line"></div><div class="line">    <span class="comment"># show the output frame</span></div><div class="line">    cv2.imshow(<span class="string">"Translate Discern"</span>, frame)</div><div class="line">    key = cv2.waitKey(<span class="number">1</span>) &amp; <span class="number">0xFF</span></div><div class="line"> </div><div class="line">    <span class="comment"># if the `q` key was pressed, break from the loop</span></div><div class="line">    <span class="keyword">if</span> key == ord(<span class="string">"q"</span>):</div><div class="line">        <span class="keyword">break</span></div><div class="line"></div><div class="line"><span class="comment"># close the output CSV file do a bit of cleanup</span></div><div class="line">print(<span class="string">"cleaning up..."</span>)</div><div class="line">cap.release()  <span class="comment"># 释放摄像头</span></div><div class="line">csv.close()</div><div class="line">cv2.destroyAllWindows()</div><div class="line">vs.stop()</div></pre></td></tr></table></figure><p>可参考：</p><ul><li><p><a href="https://www.jiqizhixin.com/articles/2017-09-21-3" target="_blank" rel="external">深度学习 + OpenCV，Python实现实时视频目标检测</a></p></li><li><p><a href="https://yongyuan.name/pcvwithpython/chapter10.html#sec-10-2-1" target="_blank" rel="external">OpenCV Python接口</a></p></li><li><p><a href="https://www.pyimagesearch.com/2015/04/06/zero-parameter-automatic-canny-edge-detection-with-python-and-opencv/" target="_blank" rel="external">Zero-parameter, automatic Canny edge detection with Python and OpenCV</a></p></li><li><p><a href="https://juejin.im/entry/5b5e694ee51d4535c75631e7" target="_blank" rel="external">Opencv获取身份证号码区域</a></p></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>记录一下在下载tesseract之后的提示，有一天可能会用到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">icu4c is keg-only, which means it was not symlinked into /usr/local,</div><div class="line">because macOS provides libicucore.dylib (but nothing else).</div><div class="line"></div><div class="line">If you need to have icu4c first in your PATH run:</div><div class="line">  echo &apos;export PATH=&quot;/usr/local/opt/icu4c/bin:$PATH&quot;&apos; &gt;&gt; ~/.bash_profile</div><div class="line">  echo &apos;export PATH=&quot;/usr/local/opt/icu4c/sbin:$PATH&quot;&apos; &gt;&gt; ~/.bash_profile</div><div class="line"></div><div class="line">For compilers to find icu4c you may need to set:</div><div class="line">  export LDFLAGS=&quot;-L/usr/local/opt/icu4c/lib&quot;</div><div class="line">  export CPPFLAGS=&quot;-I/usr/local/opt/icu4c/include&quot;</div><div class="line"></div><div class="line">For pkg-config to find icu4c you may need to set:</div><div class="line">  export PKG_CONFIG_PATH=&quot;/usr/local/opt/icu4c/lib/pkgconfig&quot;</div></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> OpenCV </category>
          
          <category> OCR </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> OpenCV </tag>
            
            <tag> OCR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kaggle比赛：数字识别的多种算法实现</title>
      <link href="/2018/11/07/Kaggle%E6%AF%94%E8%B5%9B%EF%BC%9A%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB%E7%9A%84%E5%A4%9A%E7%A7%8D%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
      <url>/2018/11/07/Kaggle%E6%AF%94%E8%B5%9B%EF%BC%9A%E6%95%B0%E5%AD%97%E8%AF%86%E5%88%AB%E7%9A%84%E5%A4%9A%E7%A7%8D%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<p>关于<code>Kaggle</code>大赛就不多说了，我打算进一步了解一下入门级的比赛之后再另作参加项目/比赛的打算，在此之前需要更多的实践才行。</p><p>以下是我学习的地址(在一个<code>GitHub</code>大神分享的相关的资源)：</p><blockquote><p><a href="https://github.com/apachecn/kaggle" target="_blank" rel="external">https://github.com/apachecn/kaggle</a><br>里面有多种可以实现的算法的代码以及思想，我在此进行进一步的整理，进行一个简单的代码记录，以及会进行一点修改以符合我自身的情况。</p></blockquote><ul><li>需要的数据下载地址：<a href="https://www.kaggle.com/c/digit-recognizer/data" target="_blank" rel="external">https://www.kaggle.com/c/digit-recognizer/data</a></li></ul><a id="more"></a><h1 id="KNN实现"><a href="#KNN实现" class="headerlink" title="KNN实现"></a>KNN实现</h1><blockquote><p>首先应当理解这个数字识别数据集里数值表达的意思：<strong>每个标签即代表一个数字，而一个数字的每一个像素值是不一样的(在训练数据集中可看到)，KNN的作用就是在以测试集中的数值与训练集中的数值做距离计算，最终以“K”值的多少得出像素值相近的数字标签(即为最终的数字选项)。</strong></p></blockquote><h2 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"><span class="comment"># coding: utf-8</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">Created on 2017-10-26</span></div><div class="line"><span class="string">Update  on 2018-05-16</span></div><div class="line"><span class="string">Author: 片刻/ccyf00</span></div><div class="line"><span class="string">Github: https://github.com/apachecn/kaggle</span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> os.path</div><div class="line"><span class="keyword">import</span> csv</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA</div><div class="line"><span class="keyword">from</span> sklearn.neighbors <span class="keyword">import</span> KNeighborsClassifier</div><div class="line"></div><div class="line">data_dir = <span class="string">'/opt/data/kaggle/getting-started/digit-recognizer/'</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 加载数据</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">opencsv</span><span class="params">()</span>:</span></div><div class="line">    <span class="comment"># 使用 pandas 打开</span></div><div class="line">    data = pd.read_csv(os.path.join(data_dir, <span class="string">'input/train.csv'</span>))</div><div class="line">    data1 = pd.read_csv(os.path.join(data_dir, <span class="string">'input/test.csv'</span>))</div><div class="line"></div><div class="line">    train_data = data.values[<span class="number">0</span>:, <span class="number">1</span>:]  <span class="comment"># 读入全部训练数据,  [行，列]</span></div><div class="line">    train_label = data.values[<span class="number">0</span>:, <span class="number">0</span>]  <span class="comment"># 读取列表的第一列</span></div><div class="line">    test_data = data1.values[<span class="number">0</span>:, <span class="number">0</span>:]  <span class="comment"># 测试全部测试个数据</span></div><div class="line">    <span class="keyword">return</span> train_data, train_label, test_data</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveResult</span><span class="params">(result, csvName)</span>:</span></div><div class="line">    <span class="keyword">with</span> open(csvName, <span class="string">'w'</span>) <span class="keyword">as</span> myFile:  <span class="comment"># 创建记录输出结果的文件（w 和 wb 使用的时候有问题）</span></div><div class="line">        <span class="comment"># python3里面对 str和bytes类型做了严格的区分，不像python2里面某些函数里可以混用。所以用python3来写wirterow时，打开文件不要用wb模式，只需要使用w模式，然后带上newline=''</span></div><div class="line">        myWriter = csv.writer(myFile)</div><div class="line">        myWriter.writerow([<span class="string">"ImageId"</span>, <span class="string">"Label"</span>])</div><div class="line">        index = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> result:</div><div class="line">            index += <span class="number">1</span></div><div class="line">            myWriter.writerow([index, int(r)])</div><div class="line">    print(<span class="string">'Saved successfully...'</span>)  <span class="comment"># 保存预测结果</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">knnClassify</span><span class="params">(trainData, trainLabel)</span>:</span></div><div class="line">    knnClf = KNeighborsClassifier()  <span class="comment"># default:k = 5,defined by yourself:KNeighborsClassifier(n_neighbors=10)</span></div><div class="line">    knnClf.fit(trainData, np.ravel(trainLabel))  <span class="comment"># ravel Return a contiguous flattened array.</span></div><div class="line">    <span class="keyword">return</span> knnClf</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># 数据预处理-降维 PCA主成成分分析</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dRPCA</span><span class="params">(x_train, x_test, COMPONENT_NUM)</span>:</span></div><div class="line">    print(<span class="string">'dimensionality reduction...'</span>)</div><div class="line">    trainData = np.array(x_train)</div><div class="line">    testData = np.array(x_test)</div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    使用说明：https://www.cnblogs.com/pinard/p/6243025.html</span></div><div class="line"><span class="string">    n_components&gt;=1</span></div><div class="line"><span class="string">      n_components=NUM   设置占特征数量比</span></div><div class="line"><span class="string">    0 &lt; n_components &lt; 1</span></div><div class="line"><span class="string">      n_components=0.99  设置阈值总方差占比</span></div><div class="line"><span class="string">    '''</span></div><div class="line">    pca = PCA(n_components=COMPONENT_NUM, whiten=<span class="keyword">False</span>)</div><div class="line">    pca.fit(trainData)  <span class="comment"># Fit the model with X</span></div><div class="line">    pcaTrainData = pca.transform(trainData)  <span class="comment"># Fit the model with X and 在X上完成降维.</span></div><div class="line">    pcaTestData = pca.transform(testData)  <span class="comment"># Fit the model with X and 在X上完成降维.</span></div><div class="line"></div><div class="line">    <span class="comment"># pca 方差大小、方差占比、特征数量</span></div><div class="line">    print(pca.explained_variance_, <span class="string">'\n'</span>, pca.explained_variance_ratio_, <span class="string">'\n'</span>,</div><div class="line">          pca.n_components_)</div><div class="line">    print(sum(pca.explained_variance_ratio_))</div><div class="line">    <span class="keyword">return</span> pcaTrainData, pcaTestData</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">dRecognition_knn</span><span class="params">()</span>:</span></div><div class="line">    start_time = time.time()</div><div class="line"></div><div class="line">    <span class="comment"># 加载数据</span></div><div class="line">    trainData, trainLabel, testData = opencsv()</div><div class="line">    <span class="comment"># print("trainData==&gt;", type(trainData), shape(trainData))</span></div><div class="line">    <span class="comment"># print("trainLabel==&gt;", type(trainLabel), shape(trainLabel))</span></div><div class="line">    <span class="comment"># print("testData==&gt;", type(testData), shape(testData))</span></div><div class="line">    print(<span class="string">"load data finish"</span>)</div><div class="line">    stop_time_l = time.time()</div><div class="line">    print(<span class="string">'load data time used:%f'</span> % (stop_time_l - start_time))</div><div class="line"></div><div class="line">    <span class="comment"># 降维处理</span></div><div class="line">    trainData, testData = dRPCA(trainData, testData, <span class="number">0.8</span>)</div><div class="line"></div><div class="line">    <span class="comment"># 模型训练</span></div><div class="line">    knnClf = knnClassify(trainData, trainLabel)</div><div class="line"></div><div class="line">    <span class="comment"># 结果预测</span></div><div class="line">    testLabel = knnClf.predict(testData)</div><div class="line"></div><div class="line">    <span class="comment"># 结果的输出</span></div><div class="line">    saveResult(testLabel, os.path.join(data_dir, <span class="string">'output/Result_sklearn_knn.csv'</span>))</div><div class="line">    print(<span class="string">"finish!"</span>)</div><div class="line">    stop_time_r = time.time()</div><div class="line">    print(<span class="string">'classify time used:%f'</span> % (stop_time_r - start_time))</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    dRecognition_knn()</div></pre></td></tr></table></figure><blockquote><p>代码来源：<a href="https://github.com/apachecn/kaggle/blob/master/src/python/getting-started/digit-recognizer/knn-python3.6.py" target="_blank" rel="external">https://github.com/apachecn/kaggle/blob/master/src/python/getting-started/digit-recognizer/knn-python3.6.py</a></p></blockquote><h1 id="SVM"><a href="#SVM" class="headerlink" title="SVM"></a>SVM</h1><p>因为时间有限，并且是以学习为主，与我自己写的代码也大同小异，所以我也就不再重复贴上代码了。直接贴上Github的代码链接。</p><blockquote><p><a href="https://github.com/apachecn/kaggle/blob/master/src/python/getting-started/digit-recognizer/svm-python3.6.py" target="_blank" rel="external">https://github.com/apachecn/kaggle/blob/master/src/python/getting-started/digit-recognizer/svm-python3.6.py</a></p></blockquote><h1 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h1><blockquote><p><a href="https://github.com/apachecn/kaggle/blob/master/src/python/getting-started/digit-recognizer/rf-python3.6.py" target="_blank" rel="external">https://github.com/apachecn/kaggle/blob/master/src/python/getting-started/digit-recognizer/rf-python3.6.py</a></p></blockquote><h1 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h1><blockquote><p><a href="https://github.com/apachecn/kaggle/blob/master/src/python/getting-started/digit-recognizer/nn-python3.6.py" target="_blank" rel="external">https://github.com/apachecn/kaggle/blob/master/src/python/getting-started/digit-recognizer/nn-python3.6.py</a></p></blockquote><h1 id="cnn算法"><a href="#cnn算法" class="headerlink" title="cnn算法"></a>cnn算法</h1><blockquote><p><a href="https://github.com/apachecn/kaggle/blob/master/competitions/getting-started/digit-recognizer/cnn算法描述.md" target="_blank" rel="external">https://github.com/apachecn/kaggle/blob/master/competitions/getting-started/digit-recognizer/cnn算法描述.md</a></p></blockquote><h2 id="各种主流机器学习算法的区别与选择"><a href="#各种主流机器学习算法的区别与选择" class="headerlink" title="各种主流机器学习算法的区别与选择"></a>各种主流机器学习算法的区别与选择</h2><ul><li><p>可查看周志华《机器学习》一书得出各种算法的区别。</p></li><li><p>可参考：<a href="https://mp.weixin.qq.com/s?__biz=MzI5MjQ2MzM0Ng==&amp;mid=2247484169&amp;idx=2&amp;sn=3ccbae0c763e8ead96b0960fdef278fc&amp;chksm=ec01b494db763d829080bfa680a517021bfd30c8e1f2f49c759fd81ced0b4a869bab1f0b1766&amp;mpshare=1&amp;scene=23&amp;srcid=02285ivRtPCZmFHSOWxYn5d5" target="_blank" rel="external">机器学习算法优缺点 &amp; 如何选择</a></p></li><li><p>学习主流机器学习算法的GitHub资源参考：<a href=""></a></p></li><li><p>……</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Kaggle </category>
          
          <category> Python </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> Kaggle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python机器学习系列：均值平移(Mean Shift)算法的实现及应用</title>
      <link href="/2018/10/30/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9A%E5%9D%87%E5%80%BC%E5%B9%B3%E7%A7%BB(Mean%20Shift)%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
      <url>/2018/10/30/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9A%E5%9D%87%E5%80%BC%E5%B9%B3%E7%A7%BB(Mean%20Shift)%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/3ERPpzrDkVg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><blockquote><p>这里是对应的课程地址：<a href="https://pythonprogramming.net/hierarchical-clustering-mean-shift-machine-learning-tutorial/?completed=/k-means-from-scratch-2-machine-learning-tutorial/" target="_blank" rel="external">https://pythonprogramming.net/hierarchical-clustering-mean-shift-machine-learning-tutorial/?completed=/k-means-from-scratch-2-machine-learning-tutorial/</a></p></blockquote><p>关于这个算法更像是<code>无监督学习</code>，它相较于<code>K-Means</code>算法不用指定<code>K</code>的个数，可以自动的通过求解一个向量，使得圆心一直往数据集密度最大的方向移动。说的再简单一点，就是每次迭代的时候，都是找到圆里面点的平均位置作为新的圆心位置。</p><blockquote><p>可参考：<a href="https://blog.csdn.net/hjimce/article/details/45718593" target="_blank" rel="external">机器学习（十）Mean Shift 聚类算法</a>、<br><a href="https://zh.wikipedia.org/wiki/%E7%88%AC%E5%B1%B1%E7%AE%97%E6%B3%95" target="_blank" rel="external">爬山算法</a></p></blockquote><p>在原作者的原代码上进行一些符合当今实际情况的修改。</p><a id="more"></a><h1 id="均值平移-Mean-Shift-的实现"><a href="#均值平移-Mean-Shift-的实现" class="headerlink" title="均值平移(Mean Shift)的实现"></a>均值平移(Mean Shift)的实现</h1><p>首先通过代码来理解看看他是个什么情况：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> MeanShift</div><div class="line"><span class="keyword">from</span> sklearn.datasets.samples_generator <span class="keyword">import</span> make_blobs</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">from</span> mpl_toolkits.mplot3d <span class="keyword">import</span> Axes3D</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">centers = [[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>], [<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>], [<span class="number">3</span>,<span class="number">10</span>,<span class="number">10</span>]]</div><div class="line"></div><div class="line"><span class="comment">#样本以及聚类型</span></div><div class="line">X, label = make_blobs(n_samples=<span class="number">100</span>, centers=centers, cluster_std=<span class="number">1.5</span>) <span class="comment">#样本数量，中心点，方差设置</span></div><div class="line"></div><div class="line">ms = MeanShift()</div><div class="line">ms.fit(X)</div><div class="line">labels = ms.labels_</div><div class="line">cluster_centers = ms.cluster_centers_</div><div class="line">n_clusters = len(np.unique(labels))</div><div class="line">print(labels,cluster_centers)</div><div class="line"></div><div class="line">colors = [<span class="string">'r'</span>,<span class="string">'g'</span>,<span class="string">'k'</span>]</div><div class="line">fig = plt.figure()</div><div class="line">ax = fig.add_subplot(<span class="number">111</span>, projection = <span class="string">'3d'</span>)</div><div class="line"></div><div class="line"><span class="comment">#画出所有的样本点</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(X)):</div><div class="line">    ax.scatter(X[i][<span class="number">0</span>], X[i][<span class="number">1</span>], X[i][<span class="number">2</span>], c=colors[labels[i]], marker=<span class="string">'o'</span>)</div><div class="line"></div><div class="line"><span class="comment">#画出中心点</span></div><div class="line">ax.scatter(cluster_centers[:,<span class="number">0</span>], cluster_centers[:,<span class="number">1</span>], cluster_centers[:,<span class="number">2</span>],marker=<span class="string">'x'</span>, color=<span class="string">'k'</span>, s=<span class="number">150</span>, linewidths=<span class="number">5</span>, zorder=<span class="number">1</span>) <span class="comment">#zorder参数的数值越小表示越早画上去，在图表在叠加状态下时有一定的调整作用，比如不让画出来的交叉图分不清等问题</span></div><div class="line"><span class="comment"># ax.scatter(cluster_centers[0], cluster_centers[1], cluster_centers[2],marker='x', color='k', s=150, linewidths=5, zorder=10)还是跟上面的有区别的，自行检查。</span></div><div class="line">print(cluster_centers[:,<span class="number">0</span>])</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure><p>结果展示：</p><ul><li>直接移步这里看吧：<a href="https://pythonprogramming.net/hierarchical-clustering-mean-shift-machine-learning-tutorial/" target="_blank" rel="external">https://pythonprogramming.net/hierarchical-clustering-mean-shift-machine-learning-tutorial/</a></li></ul><blockquote><p>对我来说，作者的关于<code>均值平移(Mean Shift)算法</code>的教程文章实在是看不下去了…</p></blockquote><h2 id="关于原作者的均值平移-Mean-Shift-算法的实现"><a href="#关于原作者的均值平移-Mean-Shift-算法的实现" class="headerlink" title="关于原作者的均值平移(Mean Shift)算法的实现"></a>关于原作者的均值平移(Mean Shift)算法的实现</h2><ul><li>直接移步这里吧：<a href="https://pythonprogramming.net/weighted-bandwidth-mean-shift-machine-learning-tutorial/" target="_blank" rel="external">https://pythonprogramming.net/weighted-bandwidth-mean-shift-machine-learning-tutorial/</a></li></ul><blockquote><p>原作者的代码不怎么合意，并且不能怎么真正的展现出来实现的意义，我不怎么认同，所以只贴上链接在此。</p></blockquote><h2 id="关于均值平移-Mean-Shift-算法的项目应用"><a href="#关于均值平移-Mean-Shift-算法的项目应用" class="headerlink" title="关于均值平移(Mean Shift)算法的项目应用"></a>关于均值平移(Mean Shift)算法的项目应用</h2><p>在原作者中是关于上次中的<code>titanic</code>数据集。</p><blockquote><p>数据地址：<a href="https://pythonprogramming.net/static/downloads/machine-learning-data/titanic.xls" target="_blank" rel="external">https://pythonprogramming.net/static/downloads/machine-learning-data/titanic.xls</a></p></blockquote><ul><li>这里是实现的地址：<a href="https://pythonprogramming.net/mean-shift-titanic-dataset-machine-learning-tutorial/" target="_blank" rel="external">https://pythonprogramming.net/mean-shift-titanic-dataset-machine-learning-tutorial/</a></li></ul><p>对我来说，这个算法应用到这个数据集上是有一点牵强的，没必要的…因为选择这样的数据集来进行试验品实在有点晦涩难懂不合适。</p><h2 id="铺助理解链接"><a href="#铺助理解链接" class="headerlink" title="铺助理解链接"></a>铺助理解链接</h2><ul><li><p><a href="https://docs.scipy.org/doc/numpy-1.15.1/reference/generated/numpy.array_equal.html" target="_blank" rel="external">numpy.array_equal</a></p></li><li><p><a href="https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html" target="_blank" rel="external">mplot3d tutorial</a></p></li><li><p><a href="https://blog.csdn.net/ichuzhen/article/details/51768934" target="_blank" rel="external">sklearn 中 make_blobs模块使用</a></p></li><li><p><a href="https://blog.csdn.net/hjimce/article/details/45718593" target="_blank" rel="external">机器学习（十）Mean Shift 聚类算法</a></p></li><li><p><a href="https://www.zhihu.com/question/56091756/answer/191164507" target="_blank" rel="external">matplotlib.pyplot.plot()函数中参数zorder</a></p></li></ul><p>就这样吧，其实我也很期待写下<code>神经网络</code>的记录教程～</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python机器学习系列：K-均值算法(K-Means)的实现及应用</title>
      <link href="/2018/10/26/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9AK-%E5%9D%87%E5%80%BC%E7%AE%97%E6%B3%95(K-Means)%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
      <url>/2018/10/26/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9AK-%E5%9D%87%E5%80%BC%E7%AE%97%E6%B3%95(K-Means)%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/ZueoXMgCd1c" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><ul><li>对应的课程地址：<a href="https://pythonprogramming.net/machine-learning-clustering-introduction-machine-learning-tutorial/?completed=/support-vector-machine-parameters-machine-learning-tutorial/" target="_blank" rel="external">https://pythonprogramming.net/machine-learning-clustering-introduction-machine-learning-tutorial/?completed=/support-vector-machine-parameters-machine-learning-tutorial/</a></li></ul><p>K-均值算法(K-Means)属于无监督学习、聚类算法。即将无标签的数据集进行分类，并且无训练过程(监督学习的数据集才存在训练一说)等，又可理解为<code>自动分类器</code>。</p><p>本文对于原作者的代码进行了一点修改以符合当今情况。</p><a id="more"></a><h1 id="K-均值算法-K-Means-的实现"><a href="#K-均值算法-K-Means-的实现" class="headerlink" title="K-均值算法(K-Means)的实现"></a>K-均值算法(K-Means)的实现</h1><p>这个算法不算是很难理解，实际上很容易理解，在此就不多废话了。</p><p>简单说说等下代码实现的思想原理以及相关的需要注意的一些东西。关于这个实现的过程中，会想从前一样，使用自制的数据集样本，在其中会选择两个作为最初的中心点(亦可通过洗牌后进行选择)，然后将剩下的数据集与这两个中心点进行计算，通过得出的距离大小使得离得哪个中心点近就归属于那个中心点的分类处(非0即1的分类)，接着会从这些已经各就各位的点中得出平均点。我们会设置一个最大迭代次数以及一个固定公差数(迭代次数在此不够严谨，仅仅起到学习认知的作用)，关于这个公差数是起到一个监督的作用，若是在未得出平均点之前的数据点与中心点之间的公差数值大于固定公差数阈值，就说明优化失败了，之后这次的优化就忽略，直接进行下一次的优化过程(得出最佳平均点就是一次又一次优化的过程，最终目标就是得出最佳的平均点，最具代表性的点)。最终我们会通过数据可视化来进行图表结果的展示。</p><p>以下是实现代码。</p><h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line"> 自制训练数据集</div><div class="line">X = np.array([[<span class="number">1</span>,<span class="number">2</span>],</div><div class="line">             [<span class="number">1.5</span>,<span class="number">1.8</span>],</div><div class="line">             [<span class="number">5</span>,<span class="number">8</span>],</div><div class="line">             [<span class="number">8</span>,<span class="number">8</span>],</div><div class="line">             [<span class="number">1</span>,<span class="number">0.6</span>],</div><div class="line">             [<span class="number">9</span>,<span class="number">11</span>],</div><div class="line">             [<span class="number">1</span>,<span class="number">3</span>],</div><div class="line">             [<span class="number">8</span>,<span class="number">9</span>],</div><div class="line">             [<span class="number">0</span>,<span class="number">3</span>],</div><div class="line">             [<span class="number">5</span>,<span class="number">4</span>],</div><div class="line">             [<span class="number">6</span>,<span class="number">4</span>]])</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">K_Means</span><span class="params">()</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, k=<span class="number">2</span>, tol=<span class="number">0.001</span>, max_iter=<span class="number">300</span>)</span>:</span></div><div class="line">        self.k = k</div><div class="line">        self.tol = tol</div><div class="line">        self.max_iter = max_iter <span class="comment">#最大迭代次数</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, data)</span>:</span></div><div class="line">        </div><div class="line">        self.centroids = &#123;&#125; <span class="comment">#质点圆心</span></div><div class="line">        </div><div class="line">        <span class="comment">#取两个作为中心点</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.k):</div><div class="line">            self.centroids[i] = data[i]</div><div class="line">            </div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.max_iter):</div><div class="line">            self.classifications = &#123;&#125;</div><div class="line">            </div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(self.k):</div><div class="line">                self.classifications[i] = []</div><div class="line">            </div><div class="line">            <span class="keyword">for</span> featureset <span class="keyword">in</span> data:</div><div class="line">                <span class="comment">#计算点与点之间的距离,分配数据集进入各自合适的阵营</span></div><div class="line">                distances = [np.linalg.norm(featureset-self.centroids[centroid]) <span class="keyword">for</span> centroid <span class="keyword">in</span> self.centroids]</div><div class="line">                classification = distances.index(min(distances)) <span class="comment">#取最小的距离索引位置点</span></div><div class="line">                self.classifications[classification].append(featureset)</div><div class="line">        </div><div class="line">            prev_centroids = dict(self.centroids) <span class="comment">#保留现在的原数据，之后计算公差要用到</span></div><div class="line">            </div><div class="line">            <span class="keyword">for</span> classification <span class="keyword">in</span> self.classifications:</div><div class="line">                <span class="comment">#得出平均点</span></div><div class="line">                self.centroids[classification] = np.average(self.classifications[classification], axis=<span class="number">0</span>)</div><div class="line">            </div><div class="line">            optimized = <span class="keyword">True</span></div><div class="line">            </div><div class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> self.centroids:</div><div class="line">                original_centroid = prev_centroids[c]</div><div class="line">                current_centroid = self.centroids[c]</div><div class="line">                <span class="keyword">if</span> np.sum((current_centroid - original_centroid)/original_centroid*<span class="number">100.0</span>) &gt; self.tol:</div><div class="line">                    print(np.sum((current_centroid - original_centroid)/original_centroid*<span class="number">100</span>))</div><div class="line">                    optimized = <span class="keyword">False</span></div><div class="line">                </div><div class="line">            <span class="keyword">if</span> optimized:</div><div class="line">                <span class="keyword">break</span></div><div class="line">                </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="comment">#代入数据集与圆心点进行距离计算，并且进行分类0/1</span></div><div class="line">        distances = [np.linalg.norm(data-self.centroids[centroid]) <span class="keyword">for</span> centroid <span class="keyword">in</span> self.centroids]</div><div class="line">        classification = distances.index(min(distances)) </div><div class="line">        <span class="keyword">return</span> classification</div></pre></td></tr></table></figure><p>下面是训练过程以及图表展示相关的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">colors = [<span class="string">'g'</span>, <span class="string">'r'</span>, <span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'k'</span>] </div><div class="line"></div><div class="line">clf = K_Means()</div><div class="line">clf.fit(X)</div><div class="line"></div><div class="line"><span class="comment"># 可视化中心原点</span></div><div class="line"><span class="keyword">for</span> centroid <span class="keyword">in</span> clf.centroids:</div><div class="line">    plt.scatter(clf.centroids[centroid][<span class="number">0</span>], clf.centroids[centroid][<span class="number">1</span>], marker=<span class="string">'o'</span>, color=<span class="string">'k'</span>, s=<span class="number">150</span>, linewidths=<span class="number">5</span>)</div><div class="line"></div><div class="line"><span class="comment">#可视化已分类好的各就各位的点</span></div><div class="line"><span class="keyword">for</span> classification <span class="keyword">in</span> clf.classifications:</div><div class="line">    color = colors[classification]</div><div class="line">    <span class="keyword">for</span> featrueset <span class="keyword">in</span> clf.classifications[classification]:</div><div class="line">        plt.scatter(featrueset[<span class="number">0</span>], featrueset[<span class="number">1</span>], marker=<span class="string">'x'</span>, color=color, s=<span class="number">150</span>, linewidths=<span class="number">5</span>)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line"><span class="comment"># 自制训练数据集</span></div><div class="line">X = np.array([[<span class="number">1</span>,<span class="number">2</span>],</div><div class="line">             [<span class="number">1.5</span>,<span class="number">1.8</span>],</div><div class="line">             [<span class="number">5</span>,<span class="number">8</span>],</div><div class="line">             [<span class="number">8</span>,<span class="number">8</span>],</div><div class="line">             [<span class="number">1</span>,<span class="number">0.6</span>],</div><div class="line">             [<span class="number">9</span>,<span class="number">11</span>],</div><div class="line">             [<span class="number">1</span>,<span class="number">3</span>],</div><div class="line">             [<span class="number">8</span>,<span class="number">9</span>],</div><div class="line">             [<span class="number">0</span>,<span class="number">3</span>],</div><div class="line">             [<span class="number">5</span>,<span class="number">4</span>],</div><div class="line">             [<span class="number">6</span>,<span class="number">4</span>]])</div><div class="line"></div><div class="line">colors = [<span class="string">'g'</span>, <span class="string">'r'</span>, <span class="string">'c'</span>, <span class="string">'b'</span>, <span class="string">'k'</span>] </div><div class="line">print(colors)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">K_Means</span><span class="params">()</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, k=<span class="number">2</span>, tol=<span class="number">0.001</span>, max_iter=<span class="number">300</span>)</span>:</span></div><div class="line">        self.k = k</div><div class="line">        self.tol = tol</div><div class="line">        self.max_iter = max_iter <span class="comment">#最大迭代次数</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, data)</span>:</span></div><div class="line">        </div><div class="line">        self.centroids = &#123;&#125; <span class="comment">#质点圆心</span></div><div class="line">        </div><div class="line">        <span class="comment">#取两个作为中心点</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.k):</div><div class="line">            self.centroids[i] = data[i]</div><div class="line">            </div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.max_iter):</div><div class="line">            self.classifications = &#123;&#125;</div><div class="line">            </div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(self.k):</div><div class="line">                self.classifications[i] = []</div><div class="line">            </div><div class="line">            <span class="keyword">for</span> featureset <span class="keyword">in</span> data:</div><div class="line">                <span class="comment">#计算点与点之间的距离,分配数据集进入各自合适的阵营</span></div><div class="line">                distances = [np.linalg.norm(featureset-self.centroids[centroid]) <span class="keyword">for</span> centroid <span class="keyword">in</span> self.centroids]</div><div class="line">                classification = distances.index(min(distances)) <span class="comment">#取最小的距离索引位置点</span></div><div class="line">                self.classifications[classification].append(featureset)</div><div class="line">        </div><div class="line">            prev_centroids = dict(self.centroids) <span class="comment">#保留现在的原数据，之后计算公差要用到</span></div><div class="line">            </div><div class="line">            <span class="keyword">for</span> classification <span class="keyword">in</span> self.classifications:</div><div class="line">                <span class="comment">#得出平均点</span></div><div class="line">                self.centroids[classification] = np.average(self.classifications[classification], axis=<span class="number">0</span>)</div><div class="line">            </div><div class="line">            optimized = <span class="keyword">True</span></div><div class="line">            </div><div class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> self.centroids:</div><div class="line">                original_centroid = prev_centroids[c]</div><div class="line">                current_centroid = self.centroids[c]</div><div class="line">                <span class="keyword">if</span> np.sum((current_centroid - original_centroid)/original_centroid*<span class="number">100.0</span>) &gt; self.tol:</div><div class="line">                    print(np.sum((current_centroid - original_centroid)/original_centroid*<span class="number">100</span>))</div><div class="line">                    optimized = <span class="keyword">False</span></div><div class="line">                </div><div class="line">            <span class="keyword">if</span> optimized:</div><div class="line">                <span class="keyword">break</span></div><div class="line">                </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="comment">#代入数据集与圆心点进行距离计算，并且进行分类0/1</span></div><div class="line">        distances = [np.linalg.norm(data-self.centroids[centroid]) <span class="keyword">for</span> centroid <span class="keyword">in</span> self.centroids]</div><div class="line">        classification = distances.index(min(distances)) </div><div class="line">        <span class="keyword">return</span> classification</div><div class="line">            </div><div class="line"></div><div class="line">clf = K_Means()</div><div class="line">clf.fit(X)</div><div class="line"></div><div class="line"><span class="comment"># 可视化中心原点</span></div><div class="line"><span class="keyword">for</span> centroid <span class="keyword">in</span> clf.centroids:</div><div class="line">    plt.scatter(clf.centroids[centroid][<span class="number">0</span>], clf.centroids[centroid][<span class="number">1</span>], marker=<span class="string">'o'</span>, color=<span class="string">'k'</span>, s=<span class="number">150</span>, linewidths=<span class="number">5</span>)</div><div class="line"></div><div class="line"><span class="comment">#可视化已分类好的各就各位的点</span></div><div class="line"><span class="keyword">for</span> classification <span class="keyword">in</span> clf.classifications:</div><div class="line">    color = colors[classification]</div><div class="line">    <span class="keyword">for</span> featrueset <span class="keyword">in</span> clf.classifications[classification]:</div><div class="line">        plt.scatter(featrueset[<span class="number">0</span>], featrueset[<span class="number">1</span>], marker=<span class="string">'x'</span>, color=color, s=<span class="number">150</span>, linewidths=<span class="number">5</span>)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure><p>铺助理解链接：</p><ul><li><p><a href="https://cloud.tencent.com/developer/ask/42899" target="_blank" rel="external">np.mean()和Python NumPy中的np.average()有什么区别？</a></p></li><li><p><a href="https://blog.csdn.net/JohinieLi/article/details/78350999" target="_blank" rel="external">关于numpy mean函数的axis参数</a></p></li><li><p><a href="https://matplotlib.org/2.1.1/api/_as_gen/matplotlib.pyplot.plot.html" target="_blank" rel="external">matplotlib.pyplot.plot</a></p></li><li><p><a href="https://www.cnblogs.com/zsr0401/p/6405677.html" target="_blank" rel="external">Python-Matplotlib 9 颜色和样式</a></p></li></ul><h2 id="展示结果"><a href="#展示结果" class="headerlink" title="展示结果"></a>展示结果</h2><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-30%20%E4%B8%8B%E5%8D%889.32.06.png" alt=""></p><blockquote><p>这样在这里就完成了实现的过程。这个算法真的不怎么难，至少相较于上次的<code>SVM</code>来说。</p></blockquote><h1 id="项目应用"><a href="#项目应用" class="headerlink" title="项目应用"></a>项目应用</h1><h2 id="sklearn的K-Means模型训练"><a href="#sklearn的K-Means模型训练" class="headerlink" title="sklearn的K-Means模型训练"></a>sklearn的K-Means模型训练</h2><p>这次用到的数据是再熟悉不过的<code>titanic</code>数据集，就是预测生死的那个<code>kaggle</code>入门级比赛的那个，哈哈。</p><blockquote><p>数据地址：<a href="https://pythonprogramming.net/static/downloads/machine-learning-data/titanic.xls" target="_blank" rel="external">https://pythonprogramming.net/static/downloads/machine-learning-data/titanic.xls</a></p></blockquote><p>在利用这个数据时，先将数据集进行简单的数据预处理，以及将非数值数据进行简单的数值转换(即将非数值型数值转换为数值型数据)，之后代入现成的<code>sklearn</code>对应的K-Means模型进行训练，最后得出预测准确性。</p><p>下面是代码实现部分：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</div><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">df = pd.read_excel(<span class="string">'titanic.xls'</span>)</div><div class="line"></div><div class="line"><span class="comment">#简单的数据预处理</span></div><div class="line">df.drop([<span class="string">'body'</span>,<span class="string">'name'</span>], <span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line">df.fillna(<span class="number">0</span>, inplace=<span class="keyword">True</span>)</div><div class="line"></div><div class="line"><span class="comment">#处理非数值数据</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_non_numerical_data</span><span class="params">(df)</span>:</span></div><div class="line">    columns = df.columns.values</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> columns: <span class="comment">#取出各个列名作为遍历的基调</span></div><div class="line">        text_digit_vals = &#123;&#125;</div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">convert_to_int</span><span class="params">(val)</span>:</span></div><div class="line">            <span class="keyword">return</span> text_digit_vals[val]</div><div class="line">        </div><div class="line">        <span class="keyword">if</span> df[column].dtype != np.int64 <span class="keyword">and</span> df[column].dtype != np.float64:</div><div class="line">            column_contents = df[column].values.tolist() <span class="comment">#转换为列表类型以便下方处理</span></div><div class="line">            unique_elements = set(column_contents) <span class="comment">#去掉重复值</span></div><div class="line">            x = <span class="number">0</span></div><div class="line">            <span class="keyword">for</span> unique <span class="keyword">in</span> unique_elements:</div><div class="line">                <span class="keyword">if</span> unique <span class="keyword">not</span> <span class="keyword">in</span> text_digit_vals:</div><div class="line">                    text_digit_vals[unique] = x <span class="comment">#即在此将非数值的数据改为了数值型数据集</span></div><div class="line">                    x+=<span class="number">1</span></div><div class="line">                    </div><div class="line">            df[column] = list(map(convert_to_int, df[column])) <span class="comment">#将列名替代掉上面的unique非数值列名</span></div><div class="line">            </div><div class="line">    <span class="keyword">return</span> df</div><div class="line"></div><div class="line">df = handle_non_numerical_data(df)</div><div class="line"></div><div class="line">df.drop([<span class="string">'sex'</span>,<span class="string">'boat'</span>], <span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line">X = np.array(df.drop([<span class="string">'survived'</span>], <span class="number">1</span>).astype(float))</div><div class="line">X = preprocessing.scale(X) <span class="comment">#进行缩放，标准化</span></div><div class="line">y = np.array(df[<span class="string">'survived'</span>])</div><div class="line"></div><div class="line">clf = KMeans(n_clusters=<span class="number">2</span>) <span class="comment">#得出0/1</span></div><div class="line">clf.fit(X)</div><div class="line"></div><div class="line">correct = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(X)):</div><div class="line">    predict_me = np.array(X[i].astype(float))</div><div class="line">    predict_me = predict_me.reshape(<span class="number">-1</span>, len(predict_me)) <span class="comment">#得出每排的数据集</span></div><div class="line">    prediction = clf.predict(predict_me)</div><div class="line">    <span class="keyword">if</span> prediction[<span class="number">0</span>] == y[i]: </div><div class="line">        correct += <span class="number">1</span></div><div class="line">        </div><div class="line">print(correct/len(X))</div></pre></td></tr></table></figure><p>铺助理解链接：</p><ul><li><p><a href="http://sklearn.apachecn.org/cn/stable/index.html" target="_blank" rel="external">sklearn中文主页</a></p></li><li><p><a href="http://www.runoob.com/python/python-func-map.html" target="_blank" rel="external">Python map() 函数</a></p></li><li><p><a href="https://blog.csdn.net/Dream_angel_Z/article/details/49406573" target="_blank" rel="external">Scikit-learn Preprocessing 预处理</a></p></li><li><p><a href="https://blog.csdn.net/nuaadot/article/details/78304642" target="_blank" rel="external">python进行数据处理——pandas的drop函数</a></p></li></ul><p>下面是得出的结果：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-30%20%E4%B8%8B%E5%8D%8810.04.28.png" alt=""></p><blockquote><p>由于数据简单的预处理了一下，所以准确性在0.3～0.7之间。</p></blockquote><h2 id="sklearn的K-Means模型自制数据集训练"><a href="#sklearn的K-Means模型自制数据集训练" class="headerlink" title="sklearn的K-Means模型自制数据集训练"></a>sklearn的K-Means模型自制数据集训练</h2><p>这是用自制的数据集进行的模型训练，最后将结果进行图表展示，可以更好的理解这个在<code>sklearn</code>模块中的现成<code>K-Means</code>模型的运作情况。</p><p>以下是相关的代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> KMeans</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">X = np.array([[<span class="number">1</span>,<span class="number">2</span>],</div><div class="line">             [<span class="number">1.5</span>,<span class="number">1.8</span>],</div><div class="line">             [<span class="number">5</span>,<span class="number">8</span>],</div><div class="line">             [<span class="number">8</span>,<span class="number">8</span>],</div><div class="line">             [<span class="number">1</span>,<span class="number">0.6</span>],</div><div class="line">             [<span class="number">9</span>,<span class="number">11</span>]])</div><div class="line"></div><div class="line">clf = KMeans(n_clusters=<span class="number">2</span>) <span class="comment">#聚点设置，必须小于数据集的长度</span></div><div class="line">clf.fit(X)</div><div class="line"></div><div class="line">centroids = clf.cluster_centers_ <span class="comment">#聚类中心坐标</span></div><div class="line">labels = clf.labels_ <span class="comment">#标签</span></div><div class="line"></div><div class="line">colors = [<span class="string">'g.'</span>,<span class="string">'r.'</span>,<span class="string">'c.'</span>,<span class="string">'b.'</span>] <span class="comment">#点加颜色配合</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(X)):</div><div class="line">    plt.plot(X[i][<span class="number">0</span>], X[i][<span class="number">1</span>], colors[labels[i]], markersize = <span class="number">25</span>)</div><div class="line"></div><div class="line">plt.scatter(centroids[:,<span class="number">0</span>], centroids[:,<span class="number">1</span>], marker=<span class="string">'x'</span>, s=<span class="number">150</span>, linewidths=<span class="number">5</span>) </div><div class="line">plt.show()</div></pre></td></tr></table></figure><p>结果图表展示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-30%20%E4%B8%8B%E5%8D%889.51.36.png" alt=""></p><blockquote><p>还是不错的，有助于理解学习。</p></blockquote><h2 id="用手动实现的K-Means算法训练数据集"><a href="#用手动实现的K-Means算法训练数据集" class="headerlink" title="用手动实现的K-Means算法训练数据集"></a>用手动实现的K-Means算法训练数据集</h2><p>在此将要使用上面实现的K-Means算法来训练上面的<code>titanic</code>数据集，将会输出预测准确性。</p><p>下面是实现的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">K_Means</span><span class="params">()</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, k=<span class="number">2</span>, tol=<span class="number">0.001</span>, max_iter=<span class="number">300</span>)</span>:</span></div><div class="line">        self.k = k</div><div class="line">        self.tol = tol</div><div class="line">        self.max_iter = max_iter <span class="comment">#最大迭代次数</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, data)</span>:</span></div><div class="line">        </div><div class="line">        self.centroids = &#123;&#125; <span class="comment">#质点圆心</span></div><div class="line">        </div><div class="line">        <span class="comment">#取两个作为中心点</span></div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.k):</div><div class="line">            self.centroids[i] = data[i]</div><div class="line">            </div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.max_iter):</div><div class="line">            self.classifications = &#123;&#125;</div><div class="line">            </div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(self.k):</div><div class="line">                self.classifications[i] = []</div><div class="line">            </div><div class="line">            <span class="keyword">for</span> featureset <span class="keyword">in</span> data:</div><div class="line">                <span class="comment">#计算点与点之间的距离,分配数据集进入各自合适的阵营</span></div><div class="line">                distances = [np.linalg.norm(featureset-self.centroids[centroid]) <span class="keyword">for</span> centroid <span class="keyword">in</span> self.centroids]</div><div class="line">                classification = distances.index(min(distances)) <span class="comment">#取最小的距离索引位置点</span></div><div class="line">                self.classifications[classification].append(featureset)</div><div class="line">        </div><div class="line">            prev_centroids = dict(self.centroids) <span class="comment">#保留现在的原数据，之后计算公差要用到</span></div><div class="line">            </div><div class="line">            <span class="keyword">for</span> classification <span class="keyword">in</span> self.classifications:</div><div class="line">                <span class="comment">#得出平均点</span></div><div class="line">                self.centroids[classification] = np.average(self.classifications[classification], axis=<span class="number">0</span>)</div><div class="line">            </div><div class="line">            optimized = <span class="keyword">True</span></div><div class="line">            </div><div class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> self.centroids:</div><div class="line">                original_centroid = prev_centroids[c]</div><div class="line">                current_centroid = self.centroids[c]</div><div class="line">                <span class="keyword">if</span> np.sum((current_centroid - original_centroid)/original_centroid*<span class="number">100.0</span>) &gt; self.tol:</div><div class="line">                    print(np.sum((current_centroid - original_centroid)/original_centroid*<span class="number">100</span>))</div><div class="line">                    optimized = <span class="keyword">False</span></div><div class="line">                </div><div class="line">            <span class="keyword">if</span> optimized:</div><div class="line">                <span class="keyword">break</span></div><div class="line">                </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, data)</span>:</span></div><div class="line">        <span class="comment">#代入数据集与圆心点进行距离计算，并且进行分类0/1</span></div><div class="line">        distances = [np.linalg.norm(data-self.centroids[centroid]) <span class="keyword">for</span> centroid <span class="keyword">in</span> self.centroids]</div><div class="line">        classification = distances.index(min(distances)) </div><div class="line">        <span class="keyword">return</span> classification</div><div class="line"></div><div class="line">df = pd.read_excel(<span class="string">'titanic.xls'</span>)</div><div class="line"></div><div class="line"><span class="comment">#简单的数据预处理</span></div><div class="line">df.drop([<span class="string">'body'</span>,<span class="string">'name'</span>], <span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line">df.fillna(<span class="number">0</span>, inplace=<span class="keyword">True</span>)</div><div class="line"></div><div class="line"><span class="comment">#处理非数值数据</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_non_numerical_data</span><span class="params">(df)</span>:</span></div><div class="line">    columns = df.columns.values</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> columns: <span class="comment">#取出各个列名作为遍历的基调</span></div><div class="line">        text_digit_vals = &#123;&#125;</div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">convert_to_int</span><span class="params">(val)</span>:</span></div><div class="line">            <span class="keyword">return</span> text_digit_vals[val]</div><div class="line">        </div><div class="line">        <span class="keyword">if</span> df[column].dtype != np.int64 <span class="keyword">and</span> df[column].dtype != np.float64:</div><div class="line">            column_contents = df[column].values.tolist() <span class="comment">#转换为列表类型以便下方处理</span></div><div class="line">            unique_elements = set(column_contents) <span class="comment">#去掉重复值</span></div><div class="line">            x = <span class="number">0</span></div><div class="line">            <span class="keyword">for</span> unique <span class="keyword">in</span> unique_elements:</div><div class="line">                <span class="keyword">if</span> unique <span class="keyword">not</span> <span class="keyword">in</span> text_digit_vals:</div><div class="line">                    text_digit_vals[unique] = x <span class="comment">#即在此将非数值的数据改为了数值型数据集</span></div><div class="line">                    x+=<span class="number">1</span></div><div class="line">                    </div><div class="line">            df[column] = list(map(convert_to_int, df[column])) <span class="comment">#将列名替代掉上面的unique非数值列名</span></div><div class="line">            </div><div class="line">    <span class="keyword">return</span> df</div><div class="line"></div><div class="line">df = handle_non_numerical_data(df)</div><div class="line"></div><div class="line">df.drop([<span class="string">'sex'</span>,<span class="string">'boat'</span>], <span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line">X = np.array(df.drop([<span class="string">'survived'</span>], <span class="number">1</span>).astype(float))</div><div class="line">X = preprocessing.scale(X) <span class="comment">#进行缩放，标准化</span></div><div class="line">y = np.array(df[<span class="string">'survived'</span>])</div><div class="line"></div><div class="line">clf = K_Means()</div><div class="line">clf.fit(X)</div><div class="line"></div><div class="line">correct = <span class="number">0</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(X)):</div><div class="line">    predic_me = np.array(X[i].astype(float))</div><div class="line">    predic_me = predic_me.reshape(<span class="number">-1</span>, len(predic_me))</div><div class="line">    prediction = clf.predict(predic_me)</div><div class="line">    <span class="keyword">if</span> prediction == y[i]:</div><div class="line">        correct += <span class="number">1</span></div><div class="line"></div><div class="line">print(correct/len(X))</div></pre></td></tr></table></figure><p>只是上面代码的连接罢了，代码本身也不难理解。</p><p>下面是输出的预测准确性：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-30%20%E4%B8%8B%E5%8D%889.31.38.png" alt=""></p><blockquote><p>额…效果不咋地…</p></blockquote><p>这样一来这篇文章可以接近尾声了…不懂的地方可以去对应的课程去看看，还有的是，多看书，利用好搜索引擎。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在Mac下的python文字转语音库pyttsx3</title>
      <link href="/2018/10/23/%E5%85%B3%E4%BA%8E%E5%9C%A8Mac%E4%B8%8B%E7%9A%84python%E6%96%87%E5%AD%97%E8%BD%AC%E8%AF%AD%E9%9F%B3%E5%BA%93pyttsx3/"/>
      <url>/2018/10/23/%E5%85%B3%E4%BA%8E%E5%9C%A8Mac%E4%B8%8B%E7%9A%84python%E6%96%87%E5%AD%97%E8%BD%AC%E8%AF%AD%E9%9F%B3%E5%BA%93pyttsx3/</url>
      
        <content type="html"><![CDATA[<p>最近写python机器学习教程有点累了..就玩一些其他的东西，就包括了这个文字转语音的python3库<em>pyttsx3</em>。</p><p>其中也遇到了一些问题，在此记录一下。</p><a id="more"></a><h1 id="关于下载运行的问题"><a href="#关于下载运行的问题" class="headerlink" title="关于下载运行的问题"></a>关于下载运行的问题</h1><p>在使用命令行<code>pip install pyttsx3</code>下载之后，我在终端写下了如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pyttsx3</div><div class="line">engine = pyttsx3.init()</div></pre></td></tr></table></figure><p>结果出现了<code>No module named &#39;Foundation&#39;</code>的错误问题。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>下载模块<code>pyobjc</code>.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install pyobjc</div></pre></td></tr></table></figure><p>估计是跟调用系统一些模块有关，毕竟这个库是跟macOS关系还是挺深的…自行了解，没想到这个库可以调用Objective-C的库来进行macOS上的应用程序开发…</p><p>以下是WiKi的解释：</p><blockquote><p>PyObjC是Python和Objective-C编程语言之间的双向桥梁，允许程序员使用Python扩展现有的Objective-C库，例如Apple的Cocoa框架。 PyObjC用于在纯Python中开发macOS应用程序。 对GNUstep的支持也很有限，GNUstep是Cocoa的开源，跨平台实现。</p></blockquote><p>下载完成这个库之后，再运行上面的代码就没有出错了。</p><ul><li>参考链接：<a href="https://blog.csdn.net/noway5456/article/details/78905275" target="_blank" rel="external">https://blog.csdn.net/noway5456/article/details/78905275</a></li></ul><h1 id="关于pyttsx3读中文字的问题"><a href="#关于pyttsx3读中文字的问题" class="headerlink" title="关于pyttsx3读中文字的问题"></a>关于pyttsx3读中文字的问题</h1><p>这个问题其实是跟系统的语音设置相关的，看下图吧。</p><p>我在系统默认的语音类型(在图中两者之间切换)：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-23%20%E4%B8%8B%E5%8D%889.24.59.png" alt=""></p><p>然后又用代码查看<em>pyttsx3</em>的对应默认声音：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-23%20%E4%B8%8B%E5%8D%889.24.30.png" alt=""></p><p>发现了其实pyttsx3的语音是根据本地语音相关的，这又一步说明为何要安装<code>pyobjc</code>这个铺助模块的意义。</p><p>在读取英文或中文时，设置一下本地的默认语音即可。</p><h1 id="关于pyttsx3的使用"><a href="#关于pyttsx3的使用" class="headerlink" title="关于pyttsx3的使用"></a>关于pyttsx3的使用</h1><ul><li><a href="https://blog.csdn.net/weixin_30724853/article/details/102341464?utm_medium=distribute.pc_relevant.none-task-blog-baidujs-1" target="_blank" rel="external">python 利用pyttsx3文字转语音(转)</a></li></ul><p>很详细了，值得一看。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Python </tag>
            
            <tag> Pyttsx3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python机器学习系列：支持向量机(SVM)的应用以及实现</title>
      <link href="/2018/10/23/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9A%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA-SVM-%E7%9A%84%E5%BA%94%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%AE%9E%E7%8E%B0/"/>
      <url>/2018/10/23/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9A%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA-SVM-%E7%9A%84%E5%BA%94%E7%94%A8%E4%BB%A5%E5%8F%8A%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/HHUqhVzctQE" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p>我记录下的这些东西，如果是有哪些不懂得地方，我强烈建议参考我在<a href="http://liujunworld.com/2018/09/16/%E5%88%9D%E5%AD%A6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/" target="_blank" rel="external">这里的书籍</a>。另外还有<a href="https://github.com/apachecn/AiLearning" target="_blank" rel="external">《机器学习实战》</a>，<a href="https://github.com/exacity/deeplearningbook-chinese" target="_blank" rel="external">《深度学习》</a>这本花书等，利用好搜索引擎也是一大好利器。</p><p>关于这篇文章，我还是和以前记录相关的机器学习知识之类篇章一样的风格。</p><p>不懂可进入<a href="https://pythonprogramming.net/support-vector-machine-intro-machine-learning-tutorial/?completed=/final-thoughts-knn-machine-learning-tutorial/" target="_blank" rel="external">这里的对应的教程</a>，看不懂可借助翻译插件/软件(实际上借助这些看起来轻松多了，看英文头疼的厉害，如果是对于初学者)。</p><a id="more"></a><h1 id="SVM的实现"><a href="#SVM的实现" class="headerlink" title="SVM的实现"></a>SVM的实现</h1><p>SVM算法是有一点难理解的，但是坚持看一些文章和上面说的那些书籍之后就会发现其实也就那么回事。</p><p>关于SVM的实现(仅作通俗说明，以二维为例)：由于这个算法是根据支持向量得出两个函数，而我们取的是这两条线性函数的距离的中间值，从而得到了决策边界函数，这样任务也就完成了。但是由于参数的不同，取这个决策边界是可以有多个甚至是无穷个的，那么取得最优的参数是可以利用梯度下降算法的(符合凸二次规划)。得到了最优的参数就可以得出决策边界的函数了。</p><blockquote><p>涉及到不少的数学知识…我想我大概是说对了吧，哈哈…</p></blockquote><p>为了实现这个算法，必须要提前了解这算法相关的知识，不然真的是寸步难行啊。</p><p>下面是铺助理解链接，不懂还要翻书看吴恩达老师的教程：</p><ul><li><p><a href="https://zh.wikipedia.org/wiki/二次规划" target="_blank" rel="external">二次规划</a></p></li><li><p><a href="http://www.sohu.com/a/206572358_160850" target="_blank" rel="external">干货 | 从超平面到SVM（一）</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/26514613" target="_blank" rel="external">浅谈最优化问题的KKT条件</a></p></li></ul><p>以下就是完整的实现代码了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Support_Vector_Machine</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, visualization=True)</span>:</span></div><div class="line">        self.visualization = visualization</div><div class="line">        self.colors = &#123;<span class="number">1</span>:<span class="string">'r'</span>, <span class="number">-1</span>:<span class="string">'b'</span>&#125;</div><div class="line">        <span class="keyword">if</span> self.visualization:</div><div class="line">            self.fig = plt.figure()</div><div class="line">            self.ax = self.fig.add_subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, data)</span>:</span></div><div class="line">        self.data = data</div><div class="line">        opt_dict = &#123;&#125;</div><div class="line">        </div><div class="line">        transforms = [[<span class="number">1</span>,<span class="number">1</span>],</div><div class="line">                      [<span class="number">-1</span>,<span class="number">1</span>],</div><div class="line">                      [<span class="number">-1</span>,<span class="number">-1</span>],</div><div class="line">                      [<span class="number">1</span>,<span class="number">-1</span>]]</div><div class="line">        </div><div class="line">        all_data = []</div><div class="line">        <span class="keyword">for</span> yi <span class="keyword">in</span> self.data:</div><div class="line">            <span class="keyword">for</span> featureset <span class="keyword">in</span> self.data[yi]:</div><div class="line">                <span class="keyword">for</span> feature <span class="keyword">in</span> featureset:</div><div class="line">                    all_data.append(feature)</div><div class="line">        </div><div class="line">        self.max_feature_value = max(all_data)</div><div class="line">        self.min_feature_value = min(all_data)</div><div class="line">        all_data = <span class="keyword">None</span></div><div class="line">        </div><div class="line">        <span class="comment">#指定梯度下降的步子大小</span></div><div class="line">        step_sizes = [self.max_feature_value * <span class="number">0.1</span>,</div><div class="line">                      self.max_feature_value * <span class="number">0.01</span>,</div><div class="line">                      self.max_feature_value * <span class="number">0.001</span>,]</div><div class="line">        </div><div class="line">        <span class="comment">#b的假设大小，最为重要的是参数w，而不是参数b </span></div><div class="line">        b_range_multiple = <span class="number">2</span></div><div class="line">        b_multiple =<span class="number">5</span></div><div class="line">        latest_optimum = self.max_feature_value*<span class="number">10</span> <span class="comment">#最大的步子</span></div><div class="line">        </div><div class="line">        <span class="keyword">for</span> step <span class="keyword">in</span> step_sizes:</div><div class="line">            w = np.array([latest_optimum, latest_optimum])</div><div class="line">            optimized = <span class="keyword">False</span></div><div class="line">            <span class="keyword">while</span> <span class="keyword">not</span> optimized:</div><div class="line">                <span class="keyword">for</span> b <span class="keyword">in</span> np.arange(<span class="number">-1</span>*(self.max_feature_value * b_range_multiple),</div><div class="line">                                   self.max_feature_value * b_range_multiple,</div><div class="line">                                   step * b_multiple):</div><div class="line">                    <span class="keyword">for</span> transformation <span class="keyword">in</span> transforms:</div><div class="line">                        w_t = w*transformation</div><div class="line">                        found_option = <span class="keyword">True</span></div><div class="line">                        </div><div class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> self.data:</div><div class="line">                            <span class="keyword">for</span> xi <span class="keyword">in</span> self.data[i]:</div><div class="line">                                yi = i</div><div class="line">                                <span class="keyword">if</span> <span class="keyword">not</span> yi*(np.dot(w_t, xi)+b) &gt;= <span class="number">1</span>:</div><div class="line">                                    found_option = <span class="keyword">False</span></div><div class="line">                        </div><div class="line">                        <span class="comment">#如果约束优化条件成立</span></div><div class="line">                        <span class="keyword">if</span> found_option:</div><div class="line">                            opt_dict[np.linalg.norm(w_t)] = [w_t, b]</div><div class="line">                </div><div class="line">                <span class="comment">#若是值为负数则停止进一步的优化步子</span></div><div class="line">                <span class="keyword">if</span> w[<span class="number">0</span>] &lt;<span class="number">0</span>:</div><div class="line">                    optimized = <span class="keyword">True</span></div><div class="line">                    print(<span class="string">'Optimized a step.'</span>)</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    w = w - step</div><div class="line">            norms = sorted([n <span class="keyword">for</span> n <span class="keyword">in</span> opt_dict])</div><div class="line">            </div><div class="line">            opt_choice = opt_dict[norms[<span class="number">0</span>]]</div><div class="line">            self.w = opt_choice[<span class="number">0</span>]</div><div class="line">            self.b = opt_choice[<span class="number">1</span>]</div><div class="line">            latest_optimum = opt_choice[<span class="number">0</span>][<span class="number">0</span>]+step*<span class="number">2</span></div><div class="line">            </div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> self.data:</div><div class="line">            <span class="keyword">for</span> xi <span class="keyword">in</span> self.data[i]:</div><div class="line">                yi = i</div><div class="line">                print(xi, <span class="string">':'</span>, yi*(np.dot(self.w, xi)+self.b))</div><div class="line">            </div><div class="line">    <span class="comment">#预测部分</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, features)</span>:</span></div><div class="line">        classification = np.sign(np.dot(np.array(features), self.w)+self.b)</div><div class="line">        <span class="keyword">if</span> classification != <span class="number">0</span> <span class="keyword">and</span> self.visualization:</div><div class="line">            self.ax.scatter(features[<span class="number">0</span>], features[<span class="number">1</span>], s=<span class="number">200</span>, marker=<span class="string">'*'</span>, c=self.colors[classification])</div><div class="line">        </div><div class="line">        <span class="keyword">return</span> classification</div><div class="line">    </div><div class="line">    <span class="comment">#可视化部分</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">visualize</span><span class="params">(self)</span>:</span></div><div class="line">        [[self.ax.scatter(x[<span class="number">0</span>], x[<span class="number">1</span>], s=<span class="number">100</span>, color=self.colors[i]) <span class="keyword">for</span> x <span class="keyword">in</span> data_dict[i]] <span class="keyword">for</span> i <span class="keyword">in</span> data_dict]</div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">hyperplane</span><span class="params">(x, w, b, v)</span>:</span></div><div class="line">            <span class="keyword">return</span> (-w[<span class="number">0</span>]*x-b+v) / w[<span class="number">1</span>]</div><div class="line">        </div><div class="line">        datarange = (self.min_feature_value*<span class="number">0.9</span>, self.max_feature_value*<span class="number">1.1</span>)</div><div class="line">        hyp_x_min = datarange[<span class="number">0</span>]</div><div class="line">        hyp_x_max = datarange[<span class="number">1</span>]</div><div class="line">        </div><div class="line">        psv1 = hyperplane(hyp_x_min, self.w, self.b, <span class="number">1</span>)</div><div class="line">        psv2 = hyperplane(hyp_x_max, self.w, self.b, <span class="number">1</span>)</div><div class="line">        self.ax.plot([hyp_x_min, hyp_x_max], [psv1,psv2], <span class="string">'k'</span>)</div><div class="line">        </div><div class="line">        nsv1 = hyperplane(hyp_x_min, self.w, self.b, <span class="number">-1</span>)</div><div class="line">        nsv2 = hyperplane(hyp_x_max, self.w, self.b, <span class="number">-1</span>)</div><div class="line">        self.ax.plot([hyp_x_min, hyp_x_max], [nsv1,nsv2], <span class="string">'k'</span>)</div><div class="line">        </div><div class="line">        db1 = hyperplane(hyp_x_min, self.w, self.b, <span class="number">0</span>)</div><div class="line">        db2 = hyperplane(hyp_x_max, self.w, self.b, <span class="number">0</span>)</div><div class="line">        self.ax.plot([hyp_x_min, hyp_x_max], [db1, db2], <span class="string">'y--'</span>)</div><div class="line">        </div><div class="line">        plt.show()</div></pre></td></tr></table></figure><p>铺助理解链接：</p><ul><li><p><a href="https://blog.csdn.net/qianwenhong/article/details/41414809" target="_blank" rel="external">Python 中的range(),arange()函数</a></p></li><li><p><a href="https://www.cnblogs.com/hezhiyao/p/8649231.html" target="_blank" rel="external">python中np.multiply（）、np.dot（）和星号（*）三种乘法运算的区别（转）</a></p></li></ul><h2 id="简要数据集预测以及结果可视化"><a href="#简要数据集预测以及结果可视化" class="headerlink" title="简要数据集预测以及结果可视化"></a>简要数据集预测以及结果可视化</h2><p>以下是完整代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Support_Vector_Machine</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, visualization=True)</span>:</span></div><div class="line">        self.visualization = visualization</div><div class="line">        self.colors = &#123;<span class="number">1</span>:<span class="string">'r'</span>, <span class="number">-1</span>:<span class="string">'b'</span>&#125;</div><div class="line">        <span class="keyword">if</span> self.visualization:</div><div class="line">            self.fig = plt.figure()</div><div class="line">            self.ax = self.fig.add_subplot(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>)</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, data)</span>:</span></div><div class="line">        self.data = data</div><div class="line">        opt_dict = &#123;&#125;</div><div class="line">        </div><div class="line">        transforms = [[<span class="number">1</span>,<span class="number">1</span>],</div><div class="line">                      [<span class="number">-1</span>,<span class="number">1</span>],</div><div class="line">                      [<span class="number">-1</span>,<span class="number">-1</span>],</div><div class="line">                      [<span class="number">1</span>,<span class="number">-1</span>]]</div><div class="line">        </div><div class="line">        all_data = []</div><div class="line">        <span class="keyword">for</span> yi <span class="keyword">in</span> self.data:</div><div class="line">            <span class="keyword">for</span> featureset <span class="keyword">in</span> self.data[yi]:</div><div class="line">                <span class="keyword">for</span> feature <span class="keyword">in</span> featureset:</div><div class="line">                    all_data.append(feature)</div><div class="line">        </div><div class="line">        self.max_feature_value = max(all_data)</div><div class="line">        self.min_feature_value = min(all_data)</div><div class="line">        all_data = <span class="keyword">None</span></div><div class="line">        </div><div class="line">        <span class="comment">#指定梯度下降的步子大小</span></div><div class="line">        step_sizes = [self.max_feature_value * <span class="number">0.1</span>,</div><div class="line">                      self.max_feature_value * <span class="number">0.01</span>,</div><div class="line">                      self.max_feature_value * <span class="number">0.001</span>,]</div><div class="line">        </div><div class="line">        <span class="comment">#b的假设大小，最为重要的是参数w，而不是参数b </span></div><div class="line">        b_range_multiple = <span class="number">2</span></div><div class="line">        b_multiple =<span class="number">5</span></div><div class="line">        latest_optimum = self.max_feature_value*<span class="number">10</span> <span class="comment">#最大的步子</span></div><div class="line">        </div><div class="line">        <span class="keyword">for</span> step <span class="keyword">in</span> step_sizes:</div><div class="line">            w = np.array([latest_optimum, latest_optimum])</div><div class="line">            optimized = <span class="keyword">False</span></div><div class="line">            <span class="keyword">while</span> <span class="keyword">not</span> optimized:</div><div class="line">                <span class="keyword">for</span> b <span class="keyword">in</span> np.arange(<span class="number">-1</span>*(self.max_feature_value * b_range_multiple),</div><div class="line">                                   self.max_feature_value * b_range_multiple,</div><div class="line">                                   step * b_multiple):</div><div class="line">                    <span class="keyword">for</span> transformation <span class="keyword">in</span> transforms:</div><div class="line">                        w_t = w*transformation</div><div class="line">                        found_option = <span class="keyword">True</span></div><div class="line">                        </div><div class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> self.data:</div><div class="line">                            <span class="keyword">for</span> xi <span class="keyword">in</span> self.data[i]:</div><div class="line">                                yi = i</div><div class="line">                                <span class="keyword">if</span> <span class="keyword">not</span> yi*(np.dot(w_t, xi)+b) &gt;= <span class="number">1</span>:</div><div class="line">                                    found_option = <span class="keyword">False</span></div><div class="line">                        </div><div class="line">                        <span class="comment">#如果约束优化条件成立</span></div><div class="line">                        <span class="keyword">if</span> found_option:</div><div class="line">                            opt_dict[np.linalg.norm(w_t)] = [w_t, b]</div><div class="line">                </div><div class="line">                <span class="comment">#若是值为负数则停止进一步的优化步子</span></div><div class="line">                <span class="keyword">if</span> w[<span class="number">0</span>] &lt;<span class="number">0</span>:</div><div class="line">                    optimized = <span class="keyword">True</span></div><div class="line">                    print(<span class="string">'Optimized a step.'</span>)</div><div class="line">                <span class="keyword">else</span>:</div><div class="line">                    w = w - step</div><div class="line">            norms = sorted([n <span class="keyword">for</span> n <span class="keyword">in</span> opt_dict])</div><div class="line">            </div><div class="line">            opt_choice = opt_dict[norms[<span class="number">0</span>]]</div><div class="line">            self.w = opt_choice[<span class="number">0</span>]</div><div class="line">            self.b = opt_choice[<span class="number">1</span>]</div><div class="line">            latest_optimum = opt_choice[<span class="number">0</span>][<span class="number">0</span>]+step*<span class="number">2</span></div><div class="line">            </div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> self.data:</div><div class="line">            <span class="keyword">for</span> xi <span class="keyword">in</span> self.data[i]:</div><div class="line">                yi = i</div><div class="line">                print(xi, <span class="string">':'</span>, yi*(np.dot(self.w, xi)+self.b))</div><div class="line">            </div><div class="line">    <span class="comment">#预测部分</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, features)</span>:</span></div><div class="line">        classification = np.sign(np.dot(np.array(features), self.w)+self.b)</div><div class="line">        <span class="keyword">if</span> classification != <span class="number">0</span> <span class="keyword">and</span> self.visualization:</div><div class="line">            self.ax.scatter(features[<span class="number">0</span>], features[<span class="number">1</span>], s=<span class="number">200</span>, marker=<span class="string">'*'</span>, c=self.colors[classification])</div><div class="line">        </div><div class="line">        <span class="keyword">return</span> classification</div><div class="line">    </div><div class="line">    <span class="comment">#可视化部分</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">visualize</span><span class="params">(self)</span>:</span></div><div class="line">        [[self.ax.scatter(x[<span class="number">0</span>], x[<span class="number">1</span>], s=<span class="number">100</span>, color=self.colors[i]) <span class="keyword">for</span> x <span class="keyword">in</span> data_dict[i]] <span class="keyword">for</span> i <span class="keyword">in</span> data_dict]</div><div class="line">        </div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">hyperplane</span><span class="params">(x, w, b, v)</span>:</span></div><div class="line">            <span class="keyword">return</span> (-w[<span class="number">0</span>]*x-b+v) / w[<span class="number">1</span>]</div><div class="line">        </div><div class="line">        datarange = (self.min_feature_value*<span class="number">0.9</span>, self.max_feature_value*<span class="number">1.1</span>)</div><div class="line">        hyp_x_min = datarange[<span class="number">0</span>]</div><div class="line">        hyp_x_max = datarange[<span class="number">1</span>]</div><div class="line">        </div><div class="line">        psv1 = hyperplane(hyp_x_min, self.w, self.b, <span class="number">1</span>)</div><div class="line">        psv2 = hyperplane(hyp_x_max, self.w, self.b, <span class="number">1</span>)</div><div class="line">        self.ax.plot([hyp_x_min, hyp_x_max], [psv1,psv2], <span class="string">'k'</span>)</div><div class="line">        </div><div class="line">        nsv1 = hyperplane(hyp_x_min, self.w, self.b, <span class="number">-1</span>)</div><div class="line">        nsv2 = hyperplane(hyp_x_max, self.w, self.b, <span class="number">-1</span>)</div><div class="line">        self.ax.plot([hyp_x_min, hyp_x_max], [nsv1,nsv2], <span class="string">'k'</span>)</div><div class="line">        </div><div class="line">        db1 = hyperplane(hyp_x_min, self.w, self.b, <span class="number">0</span>)</div><div class="line">        db2 = hyperplane(hyp_x_max, self.w, self.b, <span class="number">0</span>)</div><div class="line">        self.ax.plot([hyp_x_min, hyp_x_max], [db1, db2], <span class="string">'y--'</span>)</div><div class="line">        </div><div class="line">        plt.show()</div><div class="line"></div><div class="line"><span class="comment">#训练数据集</span></div><div class="line">data_dict = &#123;<span class="number">-1</span>:np.array([[<span class="number">1</span>,<span class="number">7</span>],</div><div class="line">                          [<span class="number">2</span>,<span class="number">8</span>],</div><div class="line">                          [<span class="number">3</span>,<span class="number">8</span>],]),</div><div class="line">             </div><div class="line">             <span class="number">1</span>:np.array([[<span class="number">5</span>,<span class="number">1</span>],</div><div class="line">                         [<span class="number">6</span>,<span class="number">-1</span>],</div><div class="line">                         [<span class="number">7</span>,<span class="number">3</span>],])&#125;</div><div class="line"></div><div class="line">svm = Support_Vector_Machine()</div><div class="line">svm.fit(data=data_dict)</div><div class="line"></div><div class="line"><span class="comment">#预测数据集</span></div><div class="line">predict_us = [[<span class="number">0</span>,<span class="number">10</span>],</div><div class="line">              [<span class="number">1</span>,<span class="number">3</span>],</div><div class="line">              [<span class="number">3</span>,<span class="number">4</span>],</div><div class="line">              [<span class="number">3</span>,<span class="number">5</span>],</div><div class="line">              [<span class="number">5</span>,<span class="number">5</span>],</div><div class="line">              [<span class="number">5</span>,<span class="number">6</span>],</div><div class="line">              [<span class="number">6</span>,<span class="number">-5</span>],</div><div class="line">              [<span class="number">5</span>,<span class="number">8</span>]]</div><div class="line"></div><div class="line"><span class="keyword">for</span> p <span class="keyword">in</span> predict_us:</div><div class="line">    svm.predict(p)</div><div class="line"></div><div class="line">svm.visualize()</div></pre></td></tr></table></figure><p>这样一来就完成了算法的实现了，可视化的图表如下：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-26%20%E4%B8%8B%E5%8D%887.49.15.png" alt=""></p><blockquote><p>实际上这只是算法的简单实现，许多的细节并没有照顾到。而且这个算法的基础必须要牢固，不然很难理解上面的代码。</p></blockquote><h1 id="SVM进阶"><a href="#SVM进阶" class="headerlink" title="SVM进阶"></a>SVM进阶</h1><p>相关到<code>核函数</code>，<code>硬间隔最大化</code>，<code>软间隔最大化</code>等知识，其中的<code>核函数</code>，<code>软间隔最大化</code>针对于非线性数据(即线性不可分)，<code>硬间隔最大化</code>针对于线性可分数据类型，这需要自行去了解、理解。在上面说的书籍中可以找到相关的知识。</p><p>以下是关于<code>核函数</code>，<code>软间隔最大化</code>的针对于非线性数据python代码的实现，可以理解为SVM的底层实现的一部分，可以更好的理解内部实现的于原理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Mathieu Blondel, September 2010</span></div><div class="line"><span class="comment"># License: BSD 3 clause</span></div><div class="line"><span class="comment"># http://www.mblondel.org/journal/2010/09/19/support-vector-machines-in-python/</span></div><div class="line"></div><div class="line"><span class="comment"># visualizing what translating to another dimension does</span></div><div class="line"><span class="comment"># and bringing back to 2D:</span></div><div class="line"><span class="comment"># https://www.youtube.com/watch?v=3liCbRZPrZA</span></div><div class="line"></div><div class="line"><span class="comment"># Docs: http://cvxopt.org/userguide/coneprog.html#quadratic-programming</span></div><div class="line"><span class="comment"># Docs qp example: http://cvxopt.org/examples/tutorial/qp.html</span></div><div class="line"></div><div class="line"><span class="comment"># Nice tutorial:</span></div><div class="line"><span class="comment"># https://courses.csail.mit.edu/6.867/wiki/images/a/a7/Qp-cvxopt.pdf</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> linalg</div><div class="line"><span class="keyword">import</span> cvxopt</div><div class="line"><span class="keyword">import</span> cvxopt.solvers</div><div class="line">             </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">linear_kernel</span><span class="params">(x1, x2)</span>:</span></div><div class="line">    <span class="keyword">return</span> np.dot(x1, x2)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">polynomial_kernel</span><span class="params">(x, y, p=<span class="number">3</span>)</span>:</span></div><div class="line">    <span class="keyword">return</span> (<span class="number">1</span> + np.dot(x, y)) ** p</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">gaussian_kernel</span><span class="params">(x, y, sigma=<span class="number">5.0</span>)</span>:</span></div><div class="line">    <span class="keyword">return</span> np.exp(-linalg.norm(x-y)**<span class="number">2</span> / (<span class="number">2</span> * (sigma ** <span class="number">2</span>)))</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SVM</span><span class="params">(object)</span>:</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, kernel=linear_kernel, C=None)</span>:</span></div><div class="line">        self.kernel = kernel</div><div class="line">        self.C = C</div><div class="line">        <span class="keyword">if</span> self.C <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>: self.C = float(self.C)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fit</span><span class="params">(self, X, y)</span>:</span></div><div class="line">        n_samples, n_features = X.shape</div><div class="line"></div><div class="line">        <span class="comment"># Gram matrix</span></div><div class="line">        K = np.zeros((n_samples, n_samples))</div><div class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n_samples):</div><div class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(n_samples):</div><div class="line">                K[i,j] = self.kernel(X[i], X[j])</div><div class="line"></div><div class="line">        P = cvxopt.matrix(np.outer(y,y) * K)</div><div class="line">        q = cvxopt.matrix(np.ones(n_samples) * <span class="number">-1</span>)</div><div class="line">        A = cvxopt.matrix(y, (<span class="number">1</span>,n_samples))</div><div class="line">        b = cvxopt.matrix(<span class="number">0.0</span>)</div><div class="line"></div><div class="line">        <span class="keyword">if</span> self.C <span class="keyword">is</span> <span class="keyword">None</span>:</div><div class="line">            G = cvxopt.matrix(np.diag(np.ones(n_samples) * <span class="number">-1</span>))</div><div class="line">            h = cvxopt.matrix(np.zeros(n_samples))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            tmp1 = np.diag(np.ones(n_samples) * <span class="number">-1</span>)</div><div class="line">            tmp2 = np.identity(n_samples)</div><div class="line">            G = cvxopt.matrix(np.vstack((tmp1, tmp2)))</div><div class="line">            tmp1 = np.zeros(n_samples)</div><div class="line">            tmp2 = np.ones(n_samples) * self.C</div><div class="line">            h = cvxopt.matrix(np.hstack((tmp1, tmp2)))</div><div class="line"></div><div class="line">        <span class="comment"># solve QP problem</span></div><div class="line">        solution = cvxopt.solvers.qp(P, q, G, h, A, b)</div><div class="line"></div><div class="line">        <span class="comment"># Lagrange multipliers</span></div><div class="line">        a = np.ravel(solution[<span class="string">'x'</span>])</div><div class="line"></div><div class="line">        <span class="comment"># Support vectors have non zero lagrange multipliers</span></div><div class="line">        sv = a &gt; <span class="number">1e-5</span></div><div class="line">        ind = np.arange(len(a))[sv]</div><div class="line">        self.a = a[sv]</div><div class="line">        self.sv = X[sv]</div><div class="line">        self.sv_y = y[sv]</div><div class="line">        print(<span class="string">"%d support vectors out of %d points"</span> % (len(self.a), n_samples))</div><div class="line"></div><div class="line">        <span class="comment"># Intercept</span></div><div class="line">        self.b = <span class="number">0</span></div><div class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(len(self.a)):</div><div class="line">            self.b += self.sv_y[n]</div><div class="line">            self.b -= np.sum(self.a * self.sv_y * K[ind[n],sv])</div><div class="line">        self.b /= len(self.a)</div><div class="line"></div><div class="line">        <span class="comment"># Weight vector</span></div><div class="line">        <span class="keyword">if</span> self.kernel == linear_kernel:</div><div class="line">            self.w = np.zeros(n_features)</div><div class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> range(len(self.a)):</div><div class="line">                self.w += self.a[n] * self.sv_y[n] * self.sv[n]</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            self.w = <span class="keyword">None</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">project</span><span class="params">(self, X)</span>:</span></div><div class="line">        <span class="keyword">if</span> self.w <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</div><div class="line">            <span class="keyword">return</span> np.dot(X, self.w) + self.b</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            y_predict = np.zeros(len(X))</div><div class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(len(X)):</div><div class="line">                s = <span class="number">0</span></div><div class="line">                <span class="keyword">for</span> a, sv_y, sv <span class="keyword">in</span> zip(self.a, self.sv_y, self.sv):</div><div class="line">                    s += a * sv_y * self.kernel(X[i], sv)</div><div class="line">                y_predict[i] = s</div><div class="line">            <span class="keyword">return</span> y_predict + self.b</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(self, X)</span>:</span></div><div class="line">        <span class="keyword">return</span> np.sign(self.project(X))</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    <span class="keyword">import</span> pylab <span class="keyword">as</span> pl</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_lin_separable_data</span><span class="params">()</span>:</span></div><div class="line">        <span class="comment"># generate training data in the 2-d case</span></div><div class="line">        mean1 = np.array([<span class="number">0</span>, <span class="number">2</span>])</div><div class="line">        mean2 = np.array([<span class="number">2</span>, <span class="number">0</span>])</div><div class="line">        cov = np.array([[<span class="number">0.8</span>, <span class="number">0.6</span>], [<span class="number">0.6</span>, <span class="number">0.8</span>]])</div><div class="line">        X1 = np.random.multivariate_normal(mean1, cov, <span class="number">100</span>)</div><div class="line">        y1 = np.ones(len(X1))</div><div class="line">        X2 = np.random.multivariate_normal(mean2, cov, <span class="number">100</span>)</div><div class="line">        y2 = np.ones(len(X2)) * <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> X1, y1, X2, y2</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_non_lin_separable_data</span><span class="params">()</span>:</span></div><div class="line">        mean1 = [<span class="number">-1</span>, <span class="number">2</span>]</div><div class="line">        mean2 = [<span class="number">1</span>, <span class="number">-1</span>]</div><div class="line">        mean3 = [<span class="number">4</span>, <span class="number">-4</span>]</div><div class="line">        mean4 = [<span class="number">-4</span>, <span class="number">4</span>]</div><div class="line">        cov = [[<span class="number">1.0</span>,<span class="number">0.8</span>], [<span class="number">0.8</span>, <span class="number">1.0</span>]]</div><div class="line">        X1 = np.random.multivariate_normal(mean1, cov, <span class="number">50</span>)</div><div class="line">        X1 = np.vstack((X1, np.random.multivariate_normal(mean3, cov, <span class="number">50</span>)))</div><div class="line">        y1 = np.ones(len(X1))</div><div class="line">        X2 = np.random.multivariate_normal(mean2, cov, <span class="number">50</span>)</div><div class="line">        X2 = np.vstack((X2, np.random.multivariate_normal(mean4, cov, <span class="number">50</span>)))</div><div class="line">        y2 = np.ones(len(X2)) * <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> X1, y1, X2, y2</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen_lin_separable_overlap_data</span><span class="params">()</span>:</span></div><div class="line">        <span class="comment"># generate training data in the 2-d case</span></div><div class="line">        mean1 = np.array([<span class="number">0</span>, <span class="number">2</span>])</div><div class="line">        mean2 = np.array([<span class="number">2</span>, <span class="number">0</span>])</div><div class="line">        cov = np.array([[<span class="number">1.5</span>, <span class="number">1.0</span>], [<span class="number">1.0</span>, <span class="number">1.5</span>]])</div><div class="line">        X1 = np.random.multivariate_normal(mean1, cov, <span class="number">100</span>)</div><div class="line">        y1 = np.ones(len(X1))</div><div class="line">        X2 = np.random.multivariate_normal(mean2, cov, <span class="number">100</span>)</div><div class="line">        y2 = np.ones(len(X2)) * <span class="number">-1</span></div><div class="line">        <span class="keyword">return</span> X1, y1, X2, y2</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">split_train</span><span class="params">(X1, y1, X2, y2)</span>:</span></div><div class="line">        X1_train = X1[:<span class="number">90</span>]</div><div class="line">        y1_train = y1[:<span class="number">90</span>]</div><div class="line">        X2_train = X2[:<span class="number">90</span>]</div><div class="line">        y2_train = y2[:<span class="number">90</span>]</div><div class="line">        X_train = np.vstack((X1_train, X2_train))</div><div class="line">        y_train = np.hstack((y1_train, y2_train))</div><div class="line">        <span class="keyword">return</span> X_train, y_train</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">split_test</span><span class="params">(X1, y1, X2, y2)</span>:</span></div><div class="line">        X1_test = X1[<span class="number">90</span>:]</div><div class="line">        y1_test = y1[<span class="number">90</span>:]</div><div class="line">        X2_test = X2[<span class="number">90</span>:]</div><div class="line">        y2_test = y2[<span class="number">90</span>:]</div><div class="line">        X_test = np.vstack((X1_test, X2_test))</div><div class="line">        y_test = np.hstack((y1_test, y2_test))</div><div class="line">        <span class="keyword">return</span> X_test, y_test</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plot_margin</span><span class="params">(X1_train, X2_train, clf)</span>:</span></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x, w, b, c=<span class="number">0</span>)</span>:</span></div><div class="line">            <span class="comment"># given x, return y such that [x,y] in on the line</span></div><div class="line">            <span class="comment"># w.x + b = c</span></div><div class="line">            <span class="keyword">return</span> (-w[<span class="number">0</span>] * x - b + c) / w[<span class="number">1</span>]</div><div class="line"></div><div class="line">        pl.plot(X1_train[:,<span class="number">0</span>], X1_train[:,<span class="number">1</span>], <span class="string">"ro"</span>)</div><div class="line">        pl.plot(X2_train[:,<span class="number">0</span>], X2_train[:,<span class="number">1</span>], <span class="string">"bo"</span>)</div><div class="line">        pl.scatter(clf.sv[:,<span class="number">0</span>], clf.sv[:,<span class="number">1</span>], s=<span class="number">100</span>, c=<span class="string">"g"</span>)</div><div class="line"></div><div class="line">        <span class="comment"># w.x + b = 0</span></div><div class="line">        a0 = <span class="number">-4</span>; a1 = f(a0, clf.w, clf.b)</div><div class="line">        b0 = <span class="number">4</span>; b1 = f(b0, clf.w, clf.b)</div><div class="line">        pl.plot([a0,b0], [a1,b1], <span class="string">"k"</span>)</div><div class="line"></div><div class="line">        <span class="comment"># w.x + b = 1</span></div><div class="line">        a0 = <span class="number">-4</span>; a1 = f(a0, clf.w, clf.b, <span class="number">1</span>)</div><div class="line">        b0 = <span class="number">4</span>; b1 = f(b0, clf.w, clf.b, <span class="number">1</span>)</div><div class="line">        pl.plot([a0,b0], [a1,b1], <span class="string">"k--"</span>)</div><div class="line"></div><div class="line">        <span class="comment"># w.x + b = -1</span></div><div class="line">        a0 = <span class="number">-4</span>; a1 = f(a0, clf.w, clf.b, <span class="number">-1</span>)</div><div class="line">        b0 = <span class="number">4</span>; b1 = f(b0, clf.w, clf.b, <span class="number">-1</span>)</div><div class="line">        pl.plot([a0,b0], [a1,b1], <span class="string">"k--"</span>)</div><div class="line"></div><div class="line">        pl.axis(<span class="string">"tight"</span>)</div><div class="line">        pl.show()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">plot_contour</span><span class="params">(X1_train, X2_train, clf)</span>:</span></div><div class="line">        pl.plot(X1_train[:,<span class="number">0</span>], X1_train[:,<span class="number">1</span>], <span class="string">"ro"</span>)</div><div class="line">        pl.plot(X2_train[:,<span class="number">0</span>], X2_train[:,<span class="number">1</span>], <span class="string">"bo"</span>)</div><div class="line">        pl.scatter(clf.sv[:,<span class="number">0</span>], clf.sv[:,<span class="number">1</span>], s=<span class="number">100</span>, c=<span class="string">"g"</span>)</div><div class="line"></div><div class="line">        X1, X2 = np.meshgrid(np.linspace(<span class="number">-6</span>,<span class="number">6</span>,<span class="number">50</span>), np.linspace(<span class="number">-6</span>,<span class="number">6</span>,<span class="number">50</span>))</div><div class="line">        X = np.array([[x1, x2] <span class="keyword">for</span> x1, x2 <span class="keyword">in</span> zip(np.ravel(X1), np.ravel(X2))])</div><div class="line">        Z = clf.project(X).reshape(X1.shape)</div><div class="line">        pl.contour(X1, X2, Z, [<span class="number">0.0</span>], colors=<span class="string">'k'</span>, linewidths=<span class="number">1</span>, origin=<span class="string">'lower'</span>)</div><div class="line">        pl.contour(X1, X2, Z + <span class="number">1</span>, [<span class="number">0.0</span>], colors=<span class="string">'grey'</span>, linewidths=<span class="number">1</span>, origin=<span class="string">'lower'</span>)</div><div class="line">        pl.contour(X1, X2, Z - <span class="number">1</span>, [<span class="number">0.0</span>], colors=<span class="string">'grey'</span>, linewidths=<span class="number">1</span>, origin=<span class="string">'lower'</span>)</div><div class="line"></div><div class="line">        pl.axis(<span class="string">"tight"</span>)</div><div class="line">        pl.show()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_linear</span><span class="params">()</span>:</span></div><div class="line">        X1, y1, X2, y2 = gen_lin_separable_data()</div><div class="line">        X_train, y_train = split_train(X1, y1, X2, y2)</div><div class="line">        X_test, y_test = split_test(X1, y1, X2, y2)</div><div class="line"></div><div class="line">        clf = SVM()</div><div class="line">        clf.fit(X_train, y_train)</div><div class="line"></div><div class="line">        y_predict = clf.predict(X_test)</div><div class="line">        correct = np.sum(y_predict == y_test)</div><div class="line">        print(<span class="string">"%d out of %d predictions correct"</span> % (correct, len(y_predict)))</div><div class="line"></div><div class="line">        plot_margin(X_train[y_train==<span class="number">1</span>], X_train[y_train==<span class="number">-1</span>], clf)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_non_linear</span><span class="params">()</span>:</span></div><div class="line">        X1, y1, X2, y2 = gen_non_lin_separable_data()</div><div class="line">        X_train, y_train = split_train(X1, y1, X2, y2)</div><div class="line">        X_test, y_test = split_test(X1, y1, X2, y2)</div><div class="line"></div><div class="line">        clf = SVM(polynomial_kernel)</div><div class="line">        clf.fit(X_train, y_train)</div><div class="line"></div><div class="line">        y_predict = clf.predict(X_test)</div><div class="line">        correct = np.sum(y_predict == y_test)</div><div class="line">        print(<span class="string">"%d out of %d predictions correct"</span> % (correct, len(y_predict)))</div><div class="line"></div><div class="line">        plot_contour(X_train[y_train==<span class="number">1</span>], X_train[y_train==<span class="number">-1</span>], clf)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_soft</span><span class="params">()</span>:</span></div><div class="line">        X1, y1, X2, y2 = gen_lin_separable_overlap_data()</div><div class="line">        X_train, y_train = split_train(X1, y1, X2, y2)</div><div class="line">        X_test, y_test = split_test(X1, y1, X2, y2)</div><div class="line"></div><div class="line">        clf = SVM(C=<span class="number">1000.1</span>)</div><div class="line">        clf.fit(X_train, y_train)</div><div class="line"></div><div class="line">        y_predict = clf.predict(X_test)</div><div class="line">        correct = np.sum(y_predict == y_test)</div><div class="line">        print(<span class="string">"%d out of %d predictions correct"</span> % (correct, len(y_predict)))</div><div class="line"></div><div class="line">        plot_contour(X_train[y_train==<span class="number">1</span>], X_train[y_train==<span class="number">-1</span>], clf)</div><div class="line"></div><div class="line">        </div><div class="line">    <span class="comment">#test_linear()</span></div><div class="line">    <span class="comment">#test_non_linear()</span></div><div class="line">    test_soft()</div></pre></td></tr></table></figure><blockquote><p><strong>具体相关说明可见<a href="https://pythonprogramming.net/soft-margin-kernel-cvxopt-svm-machine-learning-tutorial/?completed=/soft-margin-svm-machine-learning-tutorial/" target="_blank" rel="external">对应的课程地址</a>。</strong></p></blockquote><p>更多的铺助链接：</p><ul><li><p><a href="https://cvxopt.org/userguide/intro.html" target="_blank" rel="external">pythonC最优化模块库：VXOPT二次编程文档</a></p></li><li><p><a href="https://courses.csail.mit.edu/6.867/wiki/images/a/a7/Qp-cvxopt.pdf" target="_blank" rel="external">CVXOPT进行二次编程的更深入的示例</a></p></li><li><p><a href="https://www.csie.ntu.edu.tw/~cjlin/libsvm/" target="_blank" rel="external">用于支持向量机优化的库</a></p></li></ul><h1 id="SVM的应用"><a href="#SVM的应用" class="headerlink" title="SVM的应用"></a>SVM的应用</h1><p>还是利用了在上个文章<a href="http://liujunworld.com/2018/10/21/python机器学习系列：K近邻算法(KNN" target="_blank" rel="external">python机器学习系列：K近邻算法(KNN)的实现及应用</a>的实现及应用/)的实际数据集。只是将<code>sklearn</code>模块中的现成的拿来用了。</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing, neighbors, svm</div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"></div><div class="line">df = pd.read_csv(<span class="string">'breast-cancer-wisconsin.data'</span>)</div><div class="line"></div><div class="line">df.replace(<span class="string">'?'</span>,<span class="number">-99999</span>,inplace=<span class="keyword">True</span>) <span class="comment">#替换异常值为-99999，inplace=True表示文件中也将进行同步更改</span></div><div class="line"></div><div class="line"><span class="comment">#去除不相关的特征列</span></div><div class="line">df.drop([<span class="string">'Id'</span>], <span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line"></div><div class="line">X = np.array(df.drop([<span class="string">'Class'</span>], <span class="number">1</span>)) <span class="comment">#去除标签列，自制数据集</span></div><div class="line">y = np.array(df[<span class="string">'Class'</span>])</div><div class="line"></div><div class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>)</div><div class="line"></div><div class="line">clf = svm.SVC() <span class="comment">#分类SVM</span></div><div class="line">clf.fit(X_train, y_train)</div><div class="line"></div><div class="line">accuracy = clf.score(X_test, y_test) <span class="comment">#得出准确值</span></div><div class="line">print(accuracy)</div><div class="line"></div><div class="line"><span class="comment">#创建数据集来进行简单的预测</span></div><div class="line">example_maasurse = np.array([[<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>]])</div><div class="line"></div><div class="line">example_maasurse = example_maasurse.reshape(len(example_maasurse),<span class="number">-1</span>) <span class="comment">#重朔,其中的-1可理解为，只想输出2行的情况下，后面的列我写上-1由numpy自行得出对应相符的数组，有点抽象...其实也就那么回事</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">prediction = clf.predict(example_maasurse)</div><div class="line">print(prediction)</div></pre></td></tr></table></figure><p>结果跟上篇介绍的用<code>KNN</code>的结果几乎一样，就不展示了。</p><p>关于现成算法的参数的使用可移步：</p><ul><li><a href="http://sklearn.apachecn.org/cn/stable/index.html" target="_blank" rel="external">sklearn中文主页</a></li></ul><p>这样这篇文章基本上就这样了，需要更新的话再来补充。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决eclipse中运行Django时出现错误Django not found</title>
      <link href="/2018/10/21/%E8%A7%A3%E5%86%B3eclipse%E4%B8%AD%E8%BF%90%E8%A1%8CDjango%E6%97%B6%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AFDjango-not-found/"/>
      <url>/2018/10/21/%E8%A7%A3%E5%86%B3eclipse%E4%B8%AD%E8%BF%90%E8%A1%8CDjango%E6%97%B6%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AFDjango-not-found/</url>
      
        <content type="html"><![CDATA[<p>打算在<em>eclipse</em>中运行<em>Django</em>项目，结果发现出现了错误Django not found，如下图(网上找的一张，忘记截图了..)：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/20151111171637700.png" alt=""></p><blockquote><p>图片来源：<a href="https://blog.csdn.net/wlsyn/article/details/49784263?utm_source=blogxgwz2" target="_blank" rel="external">https://blog.csdn.net/wlsyn/article/details/49784263?utm_source=blogxgwz2</a></p></blockquote><p>试了一些网上所谓的重新嵌入解释器目录的方法，还有重装<em>Django</em>的方法，都没有什么用。</p><a id="more"></a><p>但是我真的不想放弃啊，eclipse那么好用，而且在其中运行Django是那么的方便…</p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><h2 id="git下载GitHub上的Django"><a href="#git下载GitHub上的Django" class="headerlink" title="git下载GitHub上的Django"></a>git下载GitHub上的Django</h2><p>使用命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/django/django.git</div></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://www.djangoproject.com/download/" target="_blank" rel="external">https://www.djangoproject.com/download/</a></p></blockquote><h2 id="移动安装包"><a href="#移动安装包" class="headerlink" title="移动安装包"></a>移动安装包</h2><p>之后将下载好的移动到要用到的python版本中的<code>site-packages</code>中，如我的目录<code>/anaconda3/lib/python3.6/site-packages/</code>。</p><h2 id="eclipse配置"><a href="#eclipse配置" class="headerlink" title="eclipse配置"></a>eclipse配置</h2><p>之后打开eclipse配置界面，看图吧，一图胜千言。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-21%20%E4%B8%8B%E5%8D%888.16.27.png" alt=""></p><p>之后应用、关闭。</p><p>然后再建立Django项目时就不会再出现错误Django not found了。</p><p>测试和建立项目过程不妨可以参考以下链接：</p><blockquote><p><a href="http://www.cnblogs.com/lanxuezaipiao/p/3283932.html" target="_blank" rel="external">http://www.cnblogs.com/lanxuezaipiao/p/3283932.html</a></p></blockquote><p>我就不重复制造轮子了。</p><p>测试成功之后：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-21%20%E4%B8%8B%E5%8D%888.04.02.png" alt=""></p><p>Yes,it`s successful!</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Eclipse </category>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Eclipse </tag>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python机器学习系列：K近邻算法(KNN)的实现及应用</title>
      <link href="/2018/10/21/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9AK%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95(KNN)%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
      <url>/2018/10/21/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9AK%E8%BF%91%E9%82%BB%E7%AE%97%E6%B3%95(KNN)%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%8F%8A%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/r_D5TTV9-2c" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p>还是老样子，这篇文章不适合纯粹的小白，仅仅注重实践，基础知识说的比较浅，基本上一笔带过。</p><p>我在作者的原代码和数据上进行了一点修改以符合当今的实际情况。</p><p>此篇文章将实现K近邻算法的基本原理，以及实现K邻近算法并且应用到实际数据集之中，之后会有一个实战项目。<br><a id="more"></a></p><h1 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h1><h2 id="欧几里得原理以及代码实现"><a href="#欧几里得原理以及代码实现" class="headerlink" title="欧几里得原理以及代码实现"></a>欧几里得原理以及代码实现</h2><p>欧几里得公式：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/euclidean-distance.png" alt=""></p><blockquote><p>实际上很简单，想想求解两点值之间的距离的问题吧…</p></blockquote><p>代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</div><div class="line"></div><div class="line"><span class="comment">#数据自制</span></div><div class="line">feature_1 = [<span class="number">1</span>,<span class="number">3</span>]</div><div class="line">feature_2 = [<span class="number">2</span>,<span class="number">6</span>]</div><div class="line"></div><div class="line">euclidean_distance = sqrt((variable_2[<span class="number">0</span>]-variable_1[<span class="number">0</span>])**<span class="number">2</span> + (variable_2[<span class="number">1</span>]-variable_1[<span class="number">1</span>])**<span class="number">2</span>)</div><div class="line">print(euclidean_distance)</div></pre></td></tr></table></figure><blockquote><p>这里是中文相关一节的地址：<a href="https://www.yxgapp.com/video/c8426884-2b56-494f-a274-0aa3105503f1.html" target="_blank" rel="external">https://www.yxgapp.com/video/c8426884-2b56-494f-a274-0aa3105503f1.html</a></p></blockquote><h2 id="实现KNN"><a href="#实现KNN" class="headerlink" title="实现KNN"></a>实现KNN</h2><p>KNN的工作机制(来自志华哥的《机器学习》)：</p><blockquote><p>给定测试样本，基于某种距离度量找出训练集中与其最近的k个训练样本，然后基于这k个“邻居”的信息来进行预测，通常，在分类任务中可使用“投票法”(在本文当中明显就是分类问题)，即选择这k个样本中出现最多的类别标记作为预测结果；在回归任务中可使用“平均法”，即将这k个样本的实值输出标记的平均值作为预测结果；还可基于距离远近进行加权平均或加权投票，距离越近的样本权重越大。</p></blockquote><p>这样就能好理解之后写的算法了，这毕竟不是给纯粹的小白写的。</p><p>简单说说下面写的代码的原理：通过原有的数值与新的数值代入欧几里得原理得出各点与新数值的距离，然后对这些数值进行从小到大排序并且选取前面K个数值(即所谓的K近邻)作为选择值，之后选择第一个最近的(距离最小的)作为新数据的标签。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> warnings</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"></div><div class="line"><span class="comment">#自制数据集</span></div><div class="line">dataset = &#123;<span class="string">'k'</span>:[[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">3</span>,<span class="number">1</span>]], <span class="string">'r'</span>:[[<span class="number">6</span>,<span class="number">5</span>],[<span class="number">7</span>,<span class="number">7</span>],[<span class="number">8</span>,<span class="number">6</span>]]&#125; <span class="comment">#这个字典的key值为何这样命名看到下面就知道了，作为color参数的输入</span></div><div class="line">new_features = [<span class="number">5</span>,<span class="number">7</span>]</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">k_nearest_neighbors</span><span class="params">(data, predict_feature, k=<span class="number">3</span>)</span>:</span> <span class="comment">#特别说明：k值在sklearn中的模型默认为5</span></div><div class="line">    <span class="keyword">if</span> len(data) &gt;= k:</div><div class="line">        warnings.warn(<span class="string">'你这样就没有意义了...笨猪！'</span>)</div><div class="line">    distances = []</div><div class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> data:</div><div class="line">        <span class="keyword">for</span> features <span class="keyword">in</span> data[group]: <span class="comment">#这两段代码与for group, features in dateset.items():意义一致</span></div><div class="line">            euclidean_distance = np.linalg.norm(np.array(features)-np.array(predict_feature)) <span class="comment">#使用numpy的相关的模块会显得更加的快速以及更加的高级</span></div><div class="line">            distances.append([euclidean_distance, group])</div><div class="line">            </div><div class="line">    votes = [i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> sorted(distances)[:k]] <span class="comment">#从小到大的排序，选择出现在前面的K个样本作为投票得出的结果</span></div><div class="line">    vote_result = Counter(votes).most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> vote_result</div><div class="line"></div><div class="line">result = k_nearest_neighbors(dataset, new_features, k=<span class="number">3</span>)</div><div class="line">print(result)</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line"><span class="comment">#可通过图表展示出结果信息</span></div><div class="line">[[plt.scatter(ii[<span class="number">0</span>],ii[<span class="number">1</span>], s=<span class="number">20</span>, color=i) <span class="keyword">for</span> ii <span class="keyword">in</span> dateset[i]] <span class="keyword">for</span> i <span class="keyword">in</span> dateset] <span class="comment">#color输出为'r'，可见上面作者命名的含义</span></div><div class="line"></div><div class="line">result = k_nearest_neighbors(dataset, new_features)</div><div class="line">plt.scatter(new_features[<span class="number">0</span>], new_features[<span class="number">1</span>], s=<span class="number">20</span>, color = result) <span class="comment">#color输出为'r'，可见上面作者命名的含义</span></div><div class="line">plt.show()</div></pre></td></tr></table></figure><p>可帮助理解的链接：</p><ul><li><p><a href="http://www.pythoner.com/205.html" target="_blank" rel="external">Python标准库——collections模块的Counter类</a></p></li><li><p><a href="https://blog.csdn.net/hqh131360239/article/details/79061535" target="_blank" rel="external">np.linalg.norm(求范数)</a></p></li></ul><blockquote><p>看完并且理解了上面的代码之后，你就会发现<strong>KNN算法为何对于异常值不敏感了吧，因为异常值太大，得出的距离也很大，所以一般在投票选择排序时就被out了。</strong></p></blockquote><h2 id="展示图表以及运行结果"><a href="#展示图表以及运行结果" class="headerlink" title="展示图表以及运行结果"></a>展示图表以及运行结果</h2><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-22%20%E4%B8%8B%E5%8D%885.55.39.png" alt=""></p><p>这样就一目了然了。</p><h1 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h1><ul><li>数据来源：<a href="https://archive.ics.uci.edu/ml/datasets.html" target="_blank" rel="external">https://archive.ics.uci.edu/ml/datasets.html</a>﻿</li></ul><p>这是加州大学的一个用于机器学习数据的仓库，基本上是开放数据给我们使用的。</p><ul><li><p>项目使用的数据下载页面：<a href="https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+(Diagnostic" target="_blank" rel="external">https://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+(Diagnostic</a>)</p></li><li><p>项目使用的数据下载链接：<a href="https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/" target="_blank" rel="external">https://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/</a></p></li></ul><p>下载其中的<code>breast-cancer-wisconsin.data</code>，查看特征系数情况查看<code>breast-cancer-wisconsin.names</code>。</p><p>因为需要对数据进行一些特征增加的修改，所以我贴上修改后的数据在下，也可查看上面的作者的YouTube教程来进行修改。</p><ul><li>修改后的数据集：<a href="https://pan.baidu.com/s/1J-G6ESB-JXFfBk8yTl8lmw" target="_blank" rel="external">https://pan.baidu.com/s/1J-G6ESB-JXFfBk8yTl8lmw</a></li></ul><blockquote><p>也就是添加了特征名而已。</p></blockquote><p>这是一个关于乳腺癌判断的数据集。从<code>breast-cancer-wisconsin.names</code>中可得知缺失的数据由<code>&#39;?&#39;</code>来表示。</p><blockquote><ol><li><p>Missing attribute values: 16</p><p>There are 16 instances in Groups 1 to 6 that contain a single missing (i.e., unavailable) attribute value, now denoted by “?”.  </p></li></ol></blockquote><p>这样一来就能开始整个项目了。</p><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><p>数据集中的特征意喻：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Attribute Information: (class attribute has been moved to last column)</div><div class="line"></div><div class="line">   <span class="comment">#  Attribute                     Domain</span></div><div class="line">   -- -----------------------------------------</div><div class="line">   1. Sample code number            id number</div><div class="line">   2. Clump Thickness               1 - 10</div><div class="line">   3. Uniformity of Cell Size       1 - 10</div><div class="line">   4. Uniformity of Cell Shape      1 - 10</div><div class="line">   5. Marginal Adhesion             1 - 10</div><div class="line">   6. Single Epithelial Cell Size   1 - 10</div><div class="line">   7. Bare Nuclei                   1 - 10</div><div class="line">   8. Bland Chromatin               1 - 10</div><div class="line">   9. Normal Nucleoli               1 - 10</div><div class="line">  10. Mitoses                       1 - 10</div><div class="line">  11. Class:                        (2 <span class="keyword">for</span> benign(良性), 4 <span class="keyword">for</span> malignant(恶性))</div></pre></td></tr></table></figure><p>因为缺失的数据并不多，并且在我修改了那几个缺失值测试了好几次用于训练之后发现差距基本上可以忽略，所以这里的关于缺失值改为异常值来处理，因为基本上对于模型训练基本上没有什么影响。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"></div><div class="line">df = pd.read_csv(<span class="string">'breast-cancer-wisconsin.data'</span>)</div><div class="line"></div><div class="line">df.replace(<span class="string">'?'</span>,<span class="number">-99999</span>,inplace=<span class="keyword">True</span>) <span class="comment">#替换异常值为-99999，inplace=True表示文件中也将进行同步更改</span></div><div class="line"><span class="comment">#去除不相关的特征列</span></div><div class="line">df.drop([<span class="string">'Id'</span>], <span class="number">1</span>, inplace=<span class="keyword">True</span>)</div></pre></td></tr></table></figure><p>数据量本身也就是那么点…所以数据预处理也就这样了…<strong>KNN算法对于异常值不敏感。</strong></p><h2 id="模型训练及预测"><a href="#模型训练及预测" class="headerlink" title="模型训练及预测"></a>模型训练及预测</h2><p>分割数据集，进行训练，并且制作简易数据集来进行预测。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing,neighbors</div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div><div class="line"></div><div class="line">X = np.array(df.drop([<span class="string">'Class'</span>], <span class="number">1</span>)) <span class="comment">#去除标签列，自制数据集</span></div><div class="line">y = np.array(df[<span class="string">'Class'</span>])</div><div class="line"></div><div class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>)</div><div class="line"></div><div class="line">clf = neighbors.KNeighborsClassifier()</div><div class="line">clf.fit(X_train, y_train)</div><div class="line"></div><div class="line">accuracy = clf.score(X_test, y_test) <span class="comment">#得出准确值</span></div><div class="line">print(accuracy)</div><div class="line"></div><div class="line"><span class="comment">#创建数据集来进行简单的预测</span></div><div class="line">example_maasurse = np.array([[<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>]])</div><div class="line">example_maasurse = example_maasurse.reshape(len(example_maasurse),<span class="number">-1</span>) <span class="comment">#重朔,其中的-1可理解为，只想输出2行的情况下，后面的列我写上-1由numpy自行得出对应相符的数组，有点抽象...其实也就那么回事</span></div><div class="line"></div><div class="line"></div><div class="line">prediction = clf.predict(example_maasurse)</div><div class="line">print(prediction)</div></pre></td></tr></table></figure><p>输出如下：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-21%20%E4%B8%8B%E5%8D%884.10.36.png" alt=""></p><p>如果还是对于这条代码<code>example_maasurse.reshape(len(example_maasurse),-1)</code>中的<code>-1</code>还是不理解，可参考如下链接或者是官网：</p><ul><li><p><a href="https://www.zhihu.com/question/52684594" target="_blank" rel="external">Python中reshape函数参数-1的意思？</a></p></li><li><p><a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.reshape.html#numpy-reshape" target="_blank" rel="external">numpy.reshape</a></p></li><li><p><a href="">Python Numpy中reshape函数参数-1的含义</a></p></li></ul><p>其实也就那么回事…</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing,neighbors</div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line"></div><div class="line">df = pd.read_csv(<span class="string">'breast-cancer-wisconsin.data'</span>)</div><div class="line"></div><div class="line">df.replace(<span class="string">'?'</span>,<span class="number">-99999</span>,inplace=<span class="keyword">True</span>) </div><div class="line">df.drop([<span class="string">'Id'</span>], <span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line"></div><div class="line">X = np.array(df.drop([<span class="string">'Class'</span>], <span class="number">1</span>)) </div><div class="line">y = np.array(df[<span class="string">'Class'</span>])</div><div class="line"></div><div class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>)</div><div class="line"></div><div class="line">clf = neighbors.KNeighborsClassifier()</div><div class="line">clf.fit(X_train, y_train)</div><div class="line"></div><div class="line">accuracy = clf.score(X_test, y_test) </div><div class="line">print(accuracy)</div><div class="line"></div><div class="line">example_maasurse = np.array([[<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>],[<span class="number">4</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>]])</div><div class="line">example_maasurse = example_maasurse.reshape(len(example_maasurse),<span class="number">-1</span>)</div><div class="line"></div><div class="line">prediction = clf.predict(example_maasurse)</div><div class="line">print(prediction)</div></pre></td></tr></table></figure><h2 id="用手动实现的KNN训练此数据集"><a href="#用手动实现的KNN训练此数据集" class="headerlink" title="用手动实现的KNN训练此数据集"></a>用手动实现的KNN训练此数据集</h2><p>代入以上的实际数据，转换数据类型打乱整体(俗称“洗牌”)的数据集并且分割对应标签制作成可代入上面写的算法中的数据集形式，然后根据计算出的距离结合<code>K</code>的取值得出最终的测试数据集的整体预测标签(计算在训练数据集与测试数据集之间进行)，然后将预测得出的标签与实际的结果进行比较，最终即可得出整体的算法准确性(Accuracy)。</p><p>下面是实现的整体代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> warnings</div><div class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">k_nearest_neighbors</span><span class="params">(data, predict_feature, k=<span class="number">3</span>)</span>:</span> <span class="comment">#特别说明：k值在sklearn中的模型默认为5</span></div><div class="line">    <span class="keyword">if</span> len(data) &gt;= k:</div><div class="line">        warnings.warn(<span class="string">'你这样就没有意义了...笨猪！'</span>)</div><div class="line">    distances = []</div><div class="line">    <span class="keyword">for</span> group <span class="keyword">in</span> data:</div><div class="line">        <span class="keyword">for</span> features <span class="keyword">in</span> data[group]: <span class="comment">#这两段代码与for group, features in dateset.items():意义一致</span></div><div class="line">            euclidean_distance = np.linalg.norm(np.array(features)-np.array(predict_feature)) <span class="comment">#使用numpy的相关的模块会显得更加的快速以及更加的高级</span></div><div class="line">            distances.append([euclidean_distance, group])</div><div class="line">            </div><div class="line">    votes = [i[<span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> sorted(distances)[:k]] <span class="comment">#从小到大的排序，选择出现在前面的K个样本作为投票得出的结果</span></div><div class="line">    vote_result = Counter(votes).most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>]</div><div class="line">    confidence = Counter(votes).most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">1</span>] / k <span class="comment">#在预测的样本中正确预测的比例，但是数据量小，一般不靠谱，所以不采用，当然可写入代码中以便学习</span></div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">return</span> vote_result, confidence</div><div class="line"></div><div class="line">df = pd.read_csv(<span class="string">'breast-cancer-wisconsin.data'</span>)</div><div class="line">df.replace(<span class="string">'?'</span>, <span class="number">-99999</span>, inplace=<span class="keyword">True</span>)</div><div class="line">df.drop([<span class="string">'Id'</span>], <span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line">full_data = df.astype(float).values.tolist() <span class="comment">#转化为float、列表类型以便下面的随机打乱</span></div><div class="line"></div><div class="line">random.shuffle(full_data) <span class="comment">#随机打乱所有数据,洗牌函数</span></div><div class="line">test_size = <span class="number">0.2</span></div><div class="line">train_set = &#123;<span class="number">2</span>:[], <span class="number">4</span>:[]&#125;</div><div class="line">test_set = &#123;<span class="number">2</span>:[], <span class="number">4</span>:[]&#125;</div><div class="line"><span class="comment">#取训练数据集比例0.8:0.2</span></div><div class="line">train_data = full_data[:-int(test_size*len(full_data))]</div><div class="line">test_data = full_data[-int(test_size*len(full_data)):]</div><div class="line"></div><div class="line"><span class="comment">#数据分割对应</span></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> train_data:</div><div class="line">    train_set[i[<span class="number">-1</span>]].append(i[:<span class="number">-1</span>]) <span class="comment">#模版套入对应数据即可</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> test_data:</div><div class="line">    test_set[i[<span class="number">-1</span>]].append(i[:<span class="number">-1</span>])</div><div class="line">    </div><div class="line">correct = <span class="number">0</span></div><div class="line">total = <span class="number">0</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> group <span class="keyword">in</span> test_set:</div><div class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> test_set[group]: <span class="comment">#亦可理解为for group, data in test_set.items():</span></div><div class="line">        vote, confidence = k_nearest_neighbors(train_set, data, k=<span class="number">5</span>) </div><div class="line">        <span class="keyword">if</span> group == vote:</div><div class="line">            correct += <span class="number">1</span> <span class="comment">#若是准确预测了则加1</span></div><div class="line">        total += <span class="number">1</span></div><div class="line">print(<span class="string">'Accuracy:'</span>, correct/total)</div></pre></td></tr></table></figure><blockquote><p>铺助理解：<a href="http://www.runoob.com/python3/python3-func-number-shuffle.html" target="_blank" rel="external">Python3 shuffle() 函数</a></p></blockquote><p>运行可得预测准确性：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-22%20%E4%B8%8B%E5%8D%886.51.22.png" alt=""></p><p>其中有必要说明一下：<code>Accuracy</code>与<code>confidence</code>的关系，就相当于<code>查准率(Precision)</code>(<strong>预测正确的样本数与总体使用样本数的比例</strong>)和<code>查全率(Recall)</code>(<strong>预测正确样本数与全部使用数据数量的比例</strong>)的关系。另外补充一点关于平常常用的<code>score</code>参数的计算公式：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-22%20%E4%B8%8B%E5%8D%887.27.46.png" alt=""></p><blockquote><p>这些知识都是基础知识，可在网友整理的吴恩达老师的<a href="http://www.ai-start.com/ml2014/html/week6.html#header-n168" target="_blank" rel="external">机器学习笔记</a>中找到，也可完整的学习相关的知识，吴恩达老师的必看啊。</p></blockquote><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>以上的算法没有完全的实现，仅仅是实现基础的构想，还需要改进的地方有很多，比如数据量大了一点之后，需要用到的多线程等。</p><p>另外，KNN算法的优缺点值得去了解，上面我也说过一点，比如数据量大了之后它的效率会受到影响，但是它对于异常值处理的都很好，基本上不受异常值之类的影响等，自行翻书了解去吧。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python机器学习系列：线性回归算法的实现</title>
      <link href="/2018/10/19/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
      <url>/2018/10/19/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9A%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E7%AE%97%E6%B3%95%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/V59bYfIomVk" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><p>本来不想写太多关于这方面的基础知识的，但是为了加强理解，我想不妨直接写博文记录也是一个好的选择，也可以顺便帮助需要的人，何乐而不为呢？</p><p>那么开始吧。我在原课程的基础上进行那么一点点修改。</p><blockquote><p>这是我学习的相应的课程地址：<a href="https://pythonprogramming.net/how-to-program-best-fit-line-machine-learning-tutorial/?completed=/how-to-program-best-fit-line-slope-machine-learning-tutorial/" target="_blank" rel="external">https://pythonprogramming.net/how-to-program-best-fit-line-machine-learning-tutorial/?completed=/how-to-program-best-fit-line-slope-machine-learning-tutorial/</a></p></blockquote><p>这不是一个小白教程，需要自行取了解一些基础知识，基础知识我仅仅是一笔带过。</p><a id="more"></a><h1 id="算法原理"><a href="#算法原理" class="headerlink" title="算法原理"></a>算法原理</h1><p>众所周知，线性回归算法是以一条直线来将一些散点进行分类的算法，而这条直线通常可理解为<code>y(x)=mx+b</code>/<code>y=mx+b</code>这样的函数(这是最简单的线性回归算法实例)，其中<code>m</code>为直线的斜率，而<code>y</code>为直线的截距，而<code>x</code>为直线的自变量。</p><p>如下图，我们要将图1的散点，通过图2一条直线进行适当良好的分类开来：</p><ul><li>图1</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/linear-regression-tutorial.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/linear-regression-python-tutorial.png" alt=""></p><h2 id="求解m"><a href="#求解m" class="headerlink" title="求解m:"></a>求解<code>m</code>:</h2><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/best-fit-slope.png" alt=""></p><h2 id="求解b"><a href="#求解b" class="headerlink" title="求解b:"></a>求解<code>b</code>:</h2><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/best-fit-y-intercept.png" alt=""></p><p>实际上这与所谓的<code>感知机</code>是一样的原理(相关的知识可见李航老师的书籍《统计需诶下方法》)。再者，经过python实现编写对应的公式再进行可视化验证即可完成任务了。</p><h2 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h2><p>因为仅仅是为了说明算法的实现，所以数值就随便取的来用了。</p><h3 id="数值取值："><a href="#数值取值：" class="headerlink" title="数值取值："></a>数值取值：</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line">xs = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],dtype=np.float64)</div><div class="line">ys = np.array([<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],dtype=np.float64)</div></pre></td></tr></table></figure><h3 id="代码实现公式原理"><a href="#代码实现公式原理" class="headerlink" title="代码实现公式原理"></a>代码实现公式原理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> statistics <span class="keyword">import</span> mean</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">best_fit_slope_and_intercept</span><span class="params">(xs,ys)</span>:</span></div><div class="line">    </div><div class="line">    <span class="comment">#实现m参数，两种实现方法</span></div><div class="line"><span class="comment">#m = (mean(xs)*mean(ys) - mean(xs*ys)) / (mean(xs)*mean(xs) - mean(xs*xs))</span></div><div class="line">    m = (mean(xs)*mean(ys) - mean(xs*ys)) / (mean(xs)**<span class="number">2</span> - mean(xs**<span class="number">2</span>))</div><div class="line">    <span class="comment">#实现b参数</span></div><div class="line">    b = mean(ys)-m*mean(xs)</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> m,b</div></pre></td></tr></table></figure><h3 id="画图预测展示"><a href="#画图预测展示" class="headerlink" title="画图预测展示"></a>画图预测展示</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">m,b = best_fit_slope_and_intercept(xs,ys)</div><div class="line"></div><div class="line">regression_line = [(m*x)+b <span class="keyword">for</span> x <span class="keyword">in</span> xs] <span class="comment">#y(x)的实现</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#趋势直线点向</span></div><div class="line">predict_x = <span class="number">9</span></div><div class="line">predict_y = (m*predict_x)+b</div><div class="line"></div><div class="line"><span class="comment">#散点图</span></div><div class="line">plt.scatter(xs,ys)</div><div class="line">plt.scatter(predict_x,predict_y)</div><div class="line">plt.plot(xs,regression_line) <span class="comment">#直线描绘</span></div><div class="line">plt.show()</div></pre></td></tr></table></figure><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Figure_1.png" alt=""></p><p>这样就完成任务了。</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> statistics <span class="keyword">import</span> mean</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">xs = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],dtype=np.float64)</div><div class="line">ys = np.array([<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],dtype=np.float64)</div><div class="line"><span class="comment"># print(xs,ys)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">best_fit_slope_and_intercept</span><span class="params">(xs,ys)</span>:</span></div><div class="line">    </div><div class="line"></div><div class="line"><span class="comment">#m = (mean(xs)*mean(ys) - mean(xs*ys)) / (mean(xs)*mean(xs) - mean(xs*xs))</span></div><div class="line">    m = (mean(xs)*mean(ys) - mean(xs*ys)) / (mean(xs)**<span class="number">2</span> - mean(xs**<span class="number">2</span>))</div><div class="line">    b = mean(ys)-m*mean(xs)</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> m,b</div><div class="line"></div><div class="line">m,b = best_fit_slope_and_intercept(xs,ys)</div><div class="line"></div><div class="line">regression_line = [(m*x)+b <span class="keyword">for</span> x <span class="keyword">in</span> xs] <span class="comment">#y(x)的实现</span></div><div class="line"></div><div class="line">predict_x = <span class="number">9</span></div><div class="line">predict_y = (m*predict_x)+b</div><div class="line"></div><div class="line"></div><div class="line">plt.scatter(xs,ys)</div><div class="line">plt.scatter(predict_x,predict_y)</div><div class="line">plt.plot(xs,regression_line) <span class="comment">#直线描绘</span></div><div class="line">plt.show()</div></pre></td></tr></table></figure><h2 id="铺助理解链接"><a href="#铺助理解链接" class="headerlink" title="铺助理解链接"></a>铺助理解链接</h2><ul><li><p><a href="http://www.runoob.com/python/python-operators.html" target="_blank" rel="external">Python 运算符</a></p></li><li><p><a href="https://pythoncaff.com/docs/pymotw/statistics-statistical-calculations/106" target="_blank" rel="external">statistics — 统计学计算</a></p></li></ul><h1 id="补充R平方理论以及检验假设"><a href="#补充R平方理论以及检验假设" class="headerlink" title="补充R平方理论以及检验假设"></a>补充R平方理论以及检验假设</h1><p>强烈建议查看书籍学习了解相关的统计知识：</p><blockquote><p>商务与经济统计：<a href="https://pan.baidu.com/s/1O9G7l4QbeqOPsPs_90lFGA" target="_blank" rel="external">https://pan.baidu.com/s/1O9G7l4QbeqOPsPs_90lFGA</a></p></blockquote><p>这是一本好书。</p><h2 id="关于R平方理论"><a href="#关于R平方理论" class="headerlink" title="关于R平方理论"></a>关于R平方理论</h2><p>又称<em>决定系数/判定系数</em>。这是检验一个线性回归中<code>y</code>变量的变差与<code>x</code>变量的变差比例的系数，比例越大说明这个线性方程的拟合效果越好(可简单的理解为，它就是衡量一个线性回归算法的拟合精确度的)。它与相关系数也是有关系的。</p><blockquote><p><a href="https://wenku.baidu.com/view/2cad65f24afe04a1b171de05.html" target="_blank" rel="external">可查看百度文库的解释</a></p></blockquote><p>就不再多说了，这篇文章不是给小白看的教程，只注重实践部分。</p><h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>图一：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/coefficient-of-determination-r-squared.png" alt=""></p><p>这个公式还可变换为：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/v2-254f5004fb3ceaf68a6366ec593c1a63_hd.jpg" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/v2-dd32ad2965e1bdeeefa3431c96c89357_hd.jpg" alt=""></p><p>其中<code>r^2 = SSR/SST = 1 - SSE/SST</code>亦成立，所以这里的<code>r^2 = SSR/SST = 1 - SSE/SST</code>公式即对应着图一的公式，这样就好理解下面写的代码了。</p><p>目的是检验上方的<code>ys</code>取值(即测试数据点的坐标y轴线的取值点)与训练得出的<code>y(x)</code>(即上方程序中的<code>regression_line</code>)的拟合效果如何(会有一个量化值出现)。</p><blockquote><p>可参考：</p><p><a href="https://zhuanlan.zhihu.com/p/32335608" target="_blank" rel="external">线性回归中的相关度和决定系数</a></p><p><a href="https://ww2.mathworks.cn/help/stats/coefficient-of-determination-r-squared.html" target="_blank" rel="external">Coefficient of Determination (R-Squared)</a></p></blockquote><h3 id="代码实现演示"><a href="#代码实现演示" class="headerlink" title="代码实现演示"></a>代码实现演示</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#平方误差函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">squared_error</span><span class="params">(ys_orig, ys_line)</span>:</span></div><div class="line">    <span class="keyword">return</span> sum((ys_line-ys_orig)**<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">coefficient_of_determination</span><span class="params">(ys_orig, ys_line)</span>:</span></div><div class="line">    y_mean_line = [mean(ys_orig) <span class="keyword">for</span> y <span class="keyword">in</span> ys_orig]</div><div class="line">    squared_error_regr = squared_error(ys_orig, ys_line) <span class="comment">#SSE</span></div><div class="line">    squared_error_y_mean = squared_error(y_mean_line, ys_orig) <span class="comment">#SST</span></div><div class="line">    <span class="keyword">return</span> <span class="number">1</span> - (squared_error_regr / squared_error_y_mean)</div><div class="line">    print(y_mean_line)</div><div class="line"></div><div class="line">r_squared = coefficient_of_determination(ys, regression_line)</div><div class="line">print(r_squared)</div></pre></td></tr></table></figure><p>代入以上完整代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> statistics <span class="keyword">import</span> mean</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">xs = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],dtype=np.float64)</div><div class="line">ys = np.array([<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>],dtype=np.float64)</div><div class="line"><span class="comment"># print(xs,ys)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">best_fit_slope_and_intercept</span><span class="params">(xs,ys)</span>:</span></div><div class="line">    </div><div class="line"></div><div class="line"><span class="comment">#m = (mean(xs)*mean(ys) - mean(xs*ys)) / (mean(xs)*mean(xs) - mean(xs*xs))</span></div><div class="line">    m = (mean(xs)*mean(ys) - mean(xs*ys)) / (mean(xs)**<span class="number">2</span> - mean(xs**<span class="number">2</span>))</div><div class="line">    b = mean(ys)-m*mean(xs)</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> m,b</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">squared_error</span><span class="params">(ys_orig, ys_line)</span>:</span></div><div class="line">    <span class="keyword">return</span> sum((ys_line-ys_orig)**<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">coefficient_of_determination</span><span class="params">(ys_orig, ys_line)</span>:</span></div><div class="line">    y_mean_line = [mean(ys_orig) <span class="keyword">for</span> y <span class="keyword">in</span> ys_orig]</div><div class="line">    squared_error_regr = squared_error(ys_orig, ys_line) <span class="comment">#SSE</span></div><div class="line">    squared_error_y_mean = squared_error(y_mean_line, ys_orig) <span class="comment">#SST</span></div><div class="line">    <span class="keyword">return</span> <span class="number">1</span> - (squared_error_regr / squared_error_y_mean)</div><div class="line">    print(y_mean_line)</div><div class="line"></div><div class="line">m,b = best_fit_slope_and_intercept(xs,ys)</div><div class="line"></div><div class="line">regression_line = [(m*x)+b <span class="keyword">for</span> x <span class="keyword">in</span> xs] <span class="comment">#y(x)的实现</span></div><div class="line"></div><div class="line">r_squared = coefficient_of_determination(ys, regression_line)</div><div class="line">print(r_squared)</div><div class="line"></div><div class="line"><span class="comment">#predict_x = 9</span></div><div class="line"><span class="comment">#predict_y = (m*predict_x)+b</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#plt.scatter(xs,ys)</span></div><div class="line"><span class="comment">#plt.scatter(predict_x,predict_y)</span></div><div class="line"><span class="comment">#plt.plot(xs,regression_line) #直线描绘</span></div><div class="line"><span class="comment">#plt.show()</span></div></pre></td></tr></table></figure><blockquote><p>将会输出一个<code>R</code>的平方值，用以衡量拟合效果如何。</p></blockquote><h2 id="关于检验假设"><a href="#关于检验假设" class="headerlink" title="关于检验假设"></a>关于检验假设</h2><p>关于检验假设，这是一个可检验数据是否符合相关算法的一个验证，也可理解为先假设，然后去验证对不对(验证假设对不对)。这可与关于R平方理论(输出效果量化值)结合，从而可得出算法对于多类不同数据的拟合效果如何。</p><p>在此之后将通过伪随机生成器(可理解只要是计算机生成的随机数都是伪随机数)来进行一段实例演示。</p><blockquote><p><a href="https://blog.csdn.net/czc1997/article/details/78167705" target="_blank" rel="external">随机数：真随机数和伪随机数</a></p></blockquote><h3 id="代码实现演示-1"><a href="#代码实现演示-1" class="headerlink" title="代码实现演示"></a>代码实现演示</h3><p>这里既是一个简单的随机数据生成器，与相关性、方差有关，为其中的参数选择。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> random</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#数据量的多少，方差，平均每个点步骤(与相关性的取值有关)，相关性设定,默认无相关性</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_dataset</span><span class="params">(hm, variance, step=<span class="number">2</span>, correlation=False)</span>:</span></div><div class="line">    val = <span class="number">1</span> <span class="comment">#初始值</span></div><div class="line">    ys = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(hm):</div><div class="line">        y = val + random.randrange(-variance,variance)</div><div class="line">        ys.append(y)</div><div class="line">        <span class="comment">#若为正相关</span></div><div class="line">        <span class="keyword">if</span> correlation <span class="keyword">and</span> correlation == <span class="string">'pos'</span>:</div><div class="line">            val += step</div><div class="line">        <span class="keyword">elif</span> correlation <span class="keyword">and</span> correlation ==<span class="string">'neg'</span>:</div><div class="line">            val -= step</div><div class="line">    xs = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ys))] <span class="comment">#xs为平常的顺序取值数</span></div><div class="line">    </div><div class="line">    <span class="keyword">return</span> np.array(xs, dtype=np.float64), np.array(ys, dtype=np.float64)</div><div class="line"></div><div class="line">xs, ys = create_dataset(<span class="number">40</span>, <span class="number">40</span>, <span class="number">2</span>, correlation=<span class="string">'pos'</span>)</div></pre></td></tr></table></figure><h2 id="完整代码-1"><a href="#完整代码-1" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> statistics <span class="keyword">import</span> mean</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> random</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line"><span class="comment"># xs = np.array([1,2,3,4,5,6],dtype=np.float64)</span></div><div class="line"><span class="comment"># ys = np.array([5,4,6,5,6,7],dtype=np.float64)</span></div><div class="line"></div><div class="line"><span class="comment">#数据量的多少，方差，平均每个点步骤(与相关性的取值有关)，相关性设定,默认无相关性</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_dataset</span><span class="params">(hm, variance, step=<span class="number">2</span>, correlation=False)</span>:</span></div><div class="line">    val = <span class="number">1</span> <span class="comment">#初始值</span></div><div class="line">    ys = []</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(hm):</div><div class="line">        y = val + random.randrange(-variance,variance)</div><div class="line">        ys.append(y)</div><div class="line">        <span class="comment">#若为正相关</span></div><div class="line">        <span class="keyword">if</span> correlation <span class="keyword">and</span> correlation == <span class="string">'pos'</span>:</div><div class="line">            val += step</div><div class="line">        <span class="keyword">elif</span> correlation <span class="keyword">and</span> correlation ==<span class="string">'neg'</span>:</div><div class="line">            val -= step</div><div class="line">    xs = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ys))] <span class="comment">#xs为平常的顺序取值数</span></div><div class="line">    </div><div class="line">    <span class="keyword">return</span> np.array(xs, dtype=np.float64), np.array(ys, dtype=np.float64)</div><div class="line">            </div><div class="line">    </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">best_fit_slope_and_intercept</span><span class="params">(xs,ys)</span>:</span></div><div class="line">    </div><div class="line">    <span class="comment">#实现m参数</span></div><div class="line">    <span class="comment">#m = (mean(xs)*mean(ys) - mean(xs*ys)) / (mean(xs)*mean(xs) - mean(xs*xs))</span></div><div class="line">    m = (mean(xs)*mean(ys) - mean(xs*ys)) / (mean(xs)**<span class="number">2</span> - mean(xs**<span class="number">2</span>))</div><div class="line">    <span class="comment">#实现b参数</span></div><div class="line">    b = mean(ys)-m*mean(xs)</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> m,b</div><div class="line"></div><div class="line"><span class="comment">#平方误差函数</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">squared_error</span><span class="params">(ys_orig, ys_line)</span>:</span></div><div class="line">    <span class="keyword">return</span> sum((ys_line-ys_orig)**<span class="number">2</span>)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">coefficient_of_determination</span><span class="params">(ys_orig, ys_line)</span>:</span></div><div class="line">    y_mean_line = [mean(ys_orig) <span class="keyword">for</span> y <span class="keyword">in</span> ys_orig]</div><div class="line">    squared_error_regr = squared_error(ys_orig, ys_line) <span class="comment">#SSE</span></div><div class="line">    squared_error_y_mean = squared_error(y_mean_line, ys_orig) <span class="comment">#SST</span></div><div class="line">    <span class="keyword">return</span> <span class="number">1</span> - (squared_error_regr / squared_error_y_mean)</div><div class="line">    print(y_mean_line)</div><div class="line"></div><div class="line">xs, ys = create_dataset(<span class="number">40</span>, <span class="number">40</span>, <span class="number">2</span>, correlation=<span class="string">'pos'</span>)</div><div class="line">    </div><div class="line">m,b = best_fit_slope_and_intercept(xs,ys)</div><div class="line"></div><div class="line">regression_line = [(m*x)+b <span class="keyword">for</span> x <span class="keyword">in</span> xs] <span class="comment">#y(x)的实现</span></div><div class="line"></div><div class="line">r_squared = coefficient_of_determination(ys, regression_line)</div><div class="line">print(r_squared)</div><div class="line"></div><div class="line"><span class="comment">#趋势点向</span></div><div class="line">predict_x = <span class="number">9</span></div><div class="line">predict_y = (m*predict_x)+b</div><div class="line"></div><div class="line"><span class="comment">#散点图</span></div><div class="line">plt.scatter(xs,ys)</div><div class="line">plt.scatter(predict_x,predict_y)</div><div class="line">plt.plot(xs,regression_line) <span class="comment">#直线描绘</span></div><div class="line">plt.show()</div></pre></td></tr></table></figure><blockquote><p><a href="http://www.runoob.com/python/func-number-randrange.html" target="_blank" rel="external">Python randrange() 函数</a></p></blockquote><h2 id="结果展示"><a href="#结果展示" class="headerlink" title="结果展示"></a>结果展示</h2><p>会输出一个<code>R</code>平方值和一张由于随机数据为基础的训练图表。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-20%20%E4%B8%8B%E5%8D%8810.03.18.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python机器学习系列：预测房价并且可视化</title>
      <link href="/2018/10/18/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9A%E9%A2%84%E6%B5%8B%E6%88%BF%E4%BB%B7%E5%B9%B6%E4%B8%94%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
      <url>/2018/10/18/python%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%EF%BC%9A%E9%A2%84%E6%B5%8B%E6%88%BF%E4%BB%B7%E5%B9%B6%E4%B8%94%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>这篇文章不是给纯粹的小白看的，需要一定的基础，需要小白补充一定的基础知识，在我的博客有<a href="http://liujunworld.com/2018/09/16/%E5%88%9D%E5%AD%A6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/" target="_blank" rel="external">相关的资源</a>介绍。</p><p>在这里记录下这篇文章时因为很实用，并且也希望以此帮助需要的人。</p><p>这是我在<em>YouTube</em>上学习到的。</p><iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/QLVMqwpOLPk" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe><ul><li>中文地址(不全)：<a href="https://www.yxgapp.com/channel/349.html" target="_blank" rel="external">https://www.yxgapp.com/channel/349.html</a></li></ul><blockquote><p>对应的网页课程地址在此：<a href="https://pythonprogramming.net/forecasting-predicting-machine-learning-tutorial/" target="_blank" rel="external">https://pythonprogramming.net/forecasting-predicting-machine-learning-tutorial/</a></p></blockquote><p>在作者的基础上进行了一点点的改动。说明一下：<strong>相关的库自行安装，就不一一废话了。</strong></p><a id="more"></a><h1 id="项目开始"><a href="#项目开始" class="headerlink" title="项目开始"></a>项目开始</h1><p><strong>项目过程：从开放的数据接口拿到数据，并且做简单的数据处理，自行做好数据标签用于算法训练，之后在利用相关的模块做好预测得到的数值与相应的时间值的对接，得出数据的图表(包括预测部分)，项目完成。</strong></p><h2 id="获取数据以及简单数据处理"><a href="#获取数据以及简单数据处理" class="headerlink" title="获取数据以及简单数据处理"></a>获取数据以及简单数据处理</h2><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> quandl,math</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing</div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div><div class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</div><div class="line"></div><div class="line"><span class="comment">#获取公共数据接口</span></div><div class="line">df = quandl.get(<span class="string">"WIKI/GOOGL"</span>)</div><div class="line"></div><div class="line"><span class="comment">#简单的数据特征处理、整理，目的是得出“标签”特征列（因为仅仅是做到实践的效果，所以就不多说了，看代码便知）。</span></div><div class="line">df = df[[<span class="string">'Adj. Open'</span>, <span class="string">'Adj. High'</span>, <span class="string">'Adj. Low'</span>, <span class="string">'Adj. Close'</span>, <span class="string">'Adj. Volume'</span>]]  <span class="comment">#取用时需要用大括号</span></div><div class="line">df[<span class="string">'HL_PCT'</span>] = (df[<span class="string">'Adj. High'</span>] - df[<span class="string">'Adj. Close'</span>]) / df[<span class="string">'Adj. Close'</span>] * <span class="number">100.0</span></div><div class="line">df[<span class="string">'PCT_change'</span>] = (df[<span class="string">'Adj. Close'</span>] - df[<span class="string">'Adj. Open'</span>]) /df[<span class="string">'Adj. Open'</span>] * <span class="number">100.0</span></div><div class="line"></div><div class="line">df = df[[<span class="string">'Adj. Close'</span>, <span class="string">'Adj. Volume'</span>,<span class="string">'HL_PCT'</span>,<span class="string">'PCT_change'</span>]]</div><div class="line"></div><div class="line">forecast_col = <span class="string">'Adj. Close'</span></div><div class="line">df.fillna(value=<span class="number">-99999</span>, inplace=<span class="keyword">True</span>)</div><div class="line">forecast_out = int(math.ceil(<span class="number">0.01</span> * len(df)))</div><div class="line"><span class="comment">#得出标签特征列，以便直接用于训练</span></div><div class="line">df[<span class="string">'label'</span>] = df[forecast_col].shift(-forecast_out)</div></pre></td></tr></table></figure><blockquote><p>关于<a href="https://www.quandl.com" target="_blank" rel="external">quandl</a>,是个公开的数据网站，有免费的，也有收费的，它有很好的支持python的数据接口。可用<code>pip install quandl</code>下载相关的支持模块。<strong>如果有时获取数据出错了，重新运行直到没错误出现为止。</strong></p></blockquote><h2 id="算法预测"><a href="#算法预测" class="headerlink" title="算法预测"></a>算法预测</h2><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">X = np.array(df.drop([<span class="string">'label'</span>], <span class="number">1</span>))</div><div class="line">X = preprocessing.scale(X)</div><div class="line"></div><div class="line"><span class="comment">#这里是取数据的后面一小部分用于预测得出的数值使用</span></div><div class="line">X_lately = X[-forecast_out:]</div><div class="line">X = X[:-forecast_out]</div><div class="line"></div><div class="line">df.dropna(inplace=<span class="keyword">True</span>)</div><div class="line"></div><div class="line">y = np.array(df[<span class="string">'label'</span>])</div><div class="line"></div><div class="line"><span class="comment">#数据分割</span></div><div class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>)</div><div class="line">clf = LinearRegression(n_jobs=<span class="number">-1</span>)</div><div class="line">clf.fit(X_train, y_train)</div><div class="line"><span class="comment">#预测准确性</span></div><div class="line">confidence = clf.score(X_test, y_test)</div><div class="line"></div><div class="line"><span class="comment">#最后预测的数值部分</span></div><div class="line">forecast_set = clf.predict(X_lately)</div></pre></td></tr></table></figure><blockquote><p>这里是简单的预测部分了，其中有一些简单的数据处理部分。</p></blockquote><h2 id="时间与预测值的对应以及图表的描绘"><a href="#时间与预测值的对应以及图表的描绘" class="headerlink" title="时间与预测值的对应以及图表的描绘"></a>时间与预测值的对应以及图表的描绘</h2><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> datetime</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line"><span class="comment">#matplotlib的美化图表风格</span></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line"><span class="comment">#预测标签</span></div><div class="line">df[<span class="string">'Forecast'</span>] = np.nan</div><div class="line"></div><div class="line"><span class="comment">#获取源数据最后一天日期</span></div><div class="line">last_date = df.iloc[<span class="number">-1</span>].name</div><div class="line">last_unix = last_date.timestamp()</div><div class="line">one_day = <span class="number">86400</span> <span class="comment">#一天的时间戳</span></div><div class="line">next_unix = last_unix + one_day</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> forecast_set:</div><div class="line">    next_date = datetime.datetime.fromtimestamp(next_unix)</div><div class="line">    next_unix += <span class="number">86400</span></div><div class="line">    <span class="comment">#将此日期对应的前面五列不相干的均设为nan，而仅仅加上预测的数值，即仅仅有相应的时间对应相应的预测数值</span></div><div class="line">    df.loc[next_date] = [np.nan <span class="keyword">for</span> _ <span class="keyword">in</span> range(len(df.columns)<span class="number">-1</span>)]+[i] <span class="comment">#如果这里不理解的话，可以查看df的head和tail部分试试，就能一目了然了</span></div><div class="line"></div><div class="line"><span class="comment">#图表描绘</span></div><div class="line">df[<span class="string">'Adj. Close'</span>].plot()</div><div class="line">df[<span class="string">'Forecast'</span>].plot()</div><div class="line">plt.legend(loc=<span class="number">4</span>)</div><div class="line">plt.xlabel(<span class="string">'Date'</span>)</div><div class="line">plt.ylabel(<span class="string">'Price'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure><blockquote><p>这里有些难理解，但是其实很好理解，只是一些代码根本没见到过，所以导致阅读障碍。</p></blockquote><p>估计有人不理解这段<code>df.loc[next_date] = [np.nan for _ in range(len(df.columns)-1)]+[i]</code>代码，我来简单说明一下。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> forecast_set:</div><div class="line">    next_date = datetime.datetime.fromtimestamp(next_unix)</div><div class="line">    next_unix += <span class="number">86400</span></div><div class="line">    df.loc[next_date] = [np.nan <span class="keyword">for</span> _ <span class="keyword">in</span> range(len(df.columns)<span class="number">-1</span>)]+[i]</div><div class="line"></div><div class="line">print(df.head())   </div><div class="line"></div><div class="line">输出：</div><div class="line"></div><div class="line">         Adj. Close  Adj. Volume   HL_PCT  PCT_change   label      Forecast</div><div class="line">Date                                                                          </div><div class="line"><span class="number">2004</span><span class="number">-08</span><span class="number">-19</span>   <span class="number">50.322842</span>   <span class="number">44659000.0</span>  <span class="number">3.712563</span>    <span class="number">0.324968</span>  <span class="number">69.078238</span>       NaN</div><div class="line"><span class="number">2004</span><span class="number">-08</span><span class="number">-20</span>   <span class="number">54.322689</span>   <span class="number">22834300.0</span>  <span class="number">0.710922</span>    <span class="number">7.227007</span>  <span class="number">67.839414</span>       NaN</div><div class="line"><span class="number">2004</span><span class="number">-08</span><span class="number">-23</span>   <span class="number">54.869377</span>   <span class="number">18256100.0</span>  <span class="number">3.729433</span>   <span class="number">-1.227880</span>  <span class="number">68.912727</span>       NaN</div><div class="line"><span class="number">2004</span><span class="number">-08</span><span class="number">-24</span>   <span class="number">52.597363</span>   <span class="number">15247300.0</span>  <span class="number">6.417469</span>   <span class="number">-5.726357</span>  <span class="number">70.668146</span>       NaN</div><div class="line"><span class="number">2004</span><span class="number">-08</span><span class="number">-25</span>   <span class="number">53.164113</span>    <span class="number">9188600.0</span>  <span class="number">1.886792</span>    <span class="number">1.183658</span>  <span class="number">71.219849</span>       NaN </div><div class="line"></div><div class="line"></div><div class="line">print(df.tail())</div><div class="line"></div><div class="line">输出：</div><div class="line"></div><div class="line">                     Adj. Close  Adj. Volume  HL_PCT  PCT_change  label  \</div><div class="line">Date                                                                      </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-08</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>         NaN          NaN     NaN         NaN    NaN   </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-09</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>         NaN          NaN     NaN         NaN    NaN   </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-10</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>         NaN          NaN     NaN         NaN    NaN   </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-11</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>         NaN          NaN     NaN         NaN    NaN   </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-12</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>         NaN          NaN     NaN         NaN    NaN   </div><div class="line"></div><div class="line">                        Forecast  </div><div class="line">Date                              </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-08</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>  <span class="number">1113.922012</span>  </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-09</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>  <span class="number">1071.104993</span>  </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-10</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>  <span class="number">1043.810593</span>  </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-11</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>  <span class="number">1073.778780</span>  </div><div class="line"><span class="number">2018</span><span class="number">-03</span><span class="number">-12</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">00</span>  <span class="number">1022.639186</span></div></pre></td></tr></table></figure><blockquote><p>就是这样，已经很明了了，就是仅仅为了让预测的时间对应预测的房价数值而已。</p></blockquote><h3 id="什么是时间戳"><a href="#什么是时间戳" class="headerlink" title="什么是时间戳?"></a>什么是时间戳?</h3><p>简单说说：时间戳是自1970年1月1日（00:00:00 UTC/GMT）以来的秒数。它也被称为Unix时间戳（Unix Timestam、Unix epoch、POSIX time、Unix timestamp）是从1970年1月1日（UTC/GMT的午夜）开始所经过的秒数，不考虑闰秒。</p><p>  UNIX时间戳的0按照ISO 8601规范为：1970-01-01T00:00:00Z</p><p>  一个小时表示为UNIX时间戳格式为：3600秒；一天表示为UNIX时间戳为86400秒，闰秒不计算。</p><blockquote><p>来自：<a href="http://www.htmer.com/article/420.htm" target="_blank" rel="external">http://www.htmer.com/article/420.htm</a></p></blockquote><h2 id="完整代码："><a href="#完整代码：" class="headerlink" title="完整代码："></a>完整代码：</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> quandl,math,datetime</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing,svm</div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div><div class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">df = quandl.get(<span class="string">"WIKI/GOOGL"</span>)</div><div class="line"></div><div class="line">df = df[[<span class="string">'Adj. Open'</span>, <span class="string">'Adj. High'</span>, <span class="string">'Adj. Low'</span>, <span class="string">'Adj. Close'</span>, <span class="string">'Adj. Volume'</span>]] <span class="comment">#取用时需要用大括号</span></div><div class="line">df[<span class="string">'HL_PCT'</span>] = (df[<span class="string">'Adj. High'</span>] - df[<span class="string">'Adj. Close'</span>]) / df[<span class="string">'Adj. Close'</span>] * <span class="number">100.0</span></div><div class="line">df[<span class="string">'PCT_change'</span>] = (df[<span class="string">'Adj. Close'</span>] - df[<span class="string">'Adj. Open'</span>]) /df[<span class="string">'Adj. Open'</span>] * <span class="number">100.0</span></div><div class="line"></div><div class="line">df = df[[<span class="string">'Adj. Close'</span>, <span class="string">'Adj. Volume'</span>,<span class="string">'HL_PCT'</span>,<span class="string">'PCT_change'</span>]]</div><div class="line"></div><div class="line">forecast_col = <span class="string">'Adj. Close'</span></div><div class="line"></div><div class="line">df.fillna(value=<span class="number">-99999</span>, inplace=<span class="keyword">True</span>)</div><div class="line">forecast_out = int(math.ceil(<span class="number">0.01</span> * len(df)))</div><div class="line">df[<span class="string">'label'</span>] = df[forecast_col].shift(-forecast_out)</div><div class="line"></div><div class="line">X = np.array(df.drop([<span class="string">'label'</span>], <span class="number">1</span>))</div><div class="line">X = preprocessing.scale(X)</div><div class="line">X_lately = X[-forecast_out:]</div><div class="line">X = X[:-forecast_out]</div><div class="line"></div><div class="line">df.dropna(inplace=<span class="keyword">True</span>)</div><div class="line"></div><div class="line">y = np.array(df[<span class="string">'label'</span>])</div><div class="line"></div><div class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>)</div><div class="line">clf = LinearRegression(n_jobs=<span class="number">-1</span>)</div><div class="line">clf.fit(X_train, y_train)</div><div class="line">confidence = clf.score(X_test, y_test)</div><div class="line"></div><div class="line">forecast_set = clf.predict(X_lately)</div><div class="line">df[<span class="string">'Forecast'</span>] = np.nan</div><div class="line"></div><div class="line">last_date = df.iloc[<span class="number">-1</span>].name</div><div class="line">last_unix = last_date.timestamp()</div><div class="line">one_day = <span class="number">86400</span></div><div class="line">next_unix = last_unix + one_day</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> forecast_set:</div><div class="line">    next_date = datetime.datetime.fromtimestamp(next_unix)</div><div class="line">    next_unix += <span class="number">86400</span></div><div class="line">    df.loc[next_date] = [np.nan <span class="keyword">for</span> _ <span class="keyword">in</span> range(len(df.columns)<span class="number">-1</span>)]+[i]</div><div class="line"></div><div class="line">df[<span class="string">'Adj. Close'</span>].plot()</div><div class="line">df[<span class="string">'Forecast'</span>].plot()</div><div class="line">plt.legend(loc=<span class="number">4</span>)</div><div class="line">plt.xlabel(<span class="string">'Date'</span>)</div><div class="line">plt.ylabel(<span class="string">'Price'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure><h2 id="最终效果展示"><a href="#最终效果展示" class="headerlink" title="最终效果展示"></a>最终效果展示</h2><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/Oct-18-2018%2020-13-50.gif" alt=""></p><blockquote><p>可以查看到预测的部分展示。</p></blockquote><h2 id="补助链接"><a href="#补助链接" class="headerlink" title="补助链接"></a>补助链接</h2><p>这里是帮助理解的链接。</p><ul><li><p><a href="https://blog.csdn.net/brucewong0516/article/details/80157639" target="_blank" rel="external">python pandas库常用函数之shift详解</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/37891729" target="_blank" rel="external">样式美化matplotlib.pyplot.style.use定制画布风格</a></p></li><li><p><a href="http://www.wklken.me/posts/2015/03/03/python-base-datetime.html#6-huo-qu-ben-zhou-ben-yue-shang-yue-zui-hou-yi-tian" target="_blank" rel="external">PYTHON-基础-时间日期处理小结</a></p></li><li><p><a href="https://morvanzhou.github.io/tutorials/data-manipulation/np-pd/3-2-pd-indexing/" target="_blank" rel="external">Pandas 选择数据</a></p></li><li><p><a href="https://morvanzhou.github.io/tutorials/data-manipulation/plt/2-5-lagend/" target="_blank" rel="external">Legend 图例</a></p></li></ul><p>值得说明一下<em>Legend 图例</em>的一些知识：</p><p>使用<code>plt.legend(loc=n)</code>中<code>n</code>的选择代表什么：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="string">'best'</span> : <span class="number">0</span>,          </div><div class="line"><span class="string">'upper right'</span>  : <span class="number">1</span>,</div><div class="line"><span class="string">'upper left'</span>   : <span class="number">2</span>,</div><div class="line"><span class="string">'lower left'</span>   : <span class="number">3</span>,</div><div class="line"><span class="string">'lower right'</span>  : <span class="number">4</span>,</div><div class="line"><span class="string">'right'</span>        : <span class="number">5</span>,</div><div class="line"><span class="string">'center left'</span>  : <span class="number">6</span>,</div><div class="line"><span class="string">'center right'</span> : <span class="number">7</span>,</div><div class="line"><span class="string">'lower center'</span> : <span class="number">8</span>,</div><div class="line"><span class="string">'upper center'</span> : <span class="number">9</span>,</div><div class="line"><span class="string">'center'</span>       : <span class="number">10</span>。</div></pre></td></tr></table></figure><h1 id="补充添加序列化保存预测模型"><a href="#补充添加序列化保存预测模型" class="headerlink" title="补充添加序列化保存预测模型"></a>补充添加序列化保存预测模型</h1><p>添加了如何将预测代码序列化的过程加相关的代码。</p><p>序列化可简单理解为：先保存了这个预测的模型(序列化的过程)，然后我们可以拿出这个模型直接进行以后的预测(反序列化的过程)。</p><p>加上代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pickle</div><div class="line"></div><div class="line"><span class="keyword">with</span> open(<span class="string">'houseforecastmodel.pickle'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">   <span class="comment">#下载模型</span></div><div class="line">   pickle.dump(clf,f)</div><div class="line"></div><div class="line">pickle_in = open(<span class="string">'houseforecastmodel.pickle'</span>,<span class="string">'rb'</span>)</div><div class="line">clf = pickle.load(pickle_in) <span class="comment">#加载模型</span></div></pre></td></tr></table></figure><p>完整代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> quandl,math,datetime</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing,svm</div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div><div class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> pickle</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">df = quandl.get(<span class="string">"WIKI/GOOGL"</span>)</div><div class="line"></div><div class="line">df = df[[<span class="string">'Adj. Open'</span>, <span class="string">'Adj. High'</span>, <span class="string">'Adj. Low'</span>, <span class="string">'Adj. Close'</span>, <span class="string">'Adj. Volume'</span>]] <span class="comment">#取用时需要用大括号</span></div><div class="line">df[<span class="string">'HL_PCT'</span>] = (df[<span class="string">'Adj. High'</span>] - df[<span class="string">'Adj. Close'</span>]) / df[<span class="string">'Adj. Close'</span>] * <span class="number">100.0</span></div><div class="line">df[<span class="string">'PCT_change'</span>] = (df[<span class="string">'Adj. Close'</span>] - df[<span class="string">'Adj. Open'</span>]) /df[<span class="string">'Adj. Open'</span>] * <span class="number">100.0</span></div><div class="line"></div><div class="line">df = df[[<span class="string">'Adj. Close'</span>, <span class="string">'Adj. Volume'</span>,<span class="string">'HL_PCT'</span>,<span class="string">'PCT_change'</span>]]</div><div class="line"></div><div class="line">forecast_col = <span class="string">'Adj. Close'</span></div><div class="line"></div><div class="line">df.fillna(value=<span class="number">-99999</span>, inplace=<span class="keyword">True</span>)</div><div class="line">forecast_out = int(math.ceil(<span class="number">0.01</span> * len(df)))</div><div class="line">df[<span class="string">'label'</span>] = df[forecast_col].shift(-forecast_out)</div><div class="line"></div><div class="line">X = np.array(df.drop([<span class="string">'label'</span>], <span class="number">1</span>))</div><div class="line">X = preprocessing.scale(X)</div><div class="line">X_lately = X[-forecast_out:]</div><div class="line">X = X[:-forecast_out]</div><div class="line"></div><div class="line">df.dropna(inplace=<span class="keyword">True</span>)</div><div class="line"></div><div class="line">y = np.array(df[<span class="string">'label'</span>])</div><div class="line"></div><div class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>)</div><div class="line">clf = LinearRegression(n_jobs=<span class="number">-1</span>)</div><div class="line">clf.fit(X_train, y_train)</div><div class="line"></div><div class="line"><span class="keyword">with</span> open(<span class="string">'houseforecastmodel.pickle'</span>,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">   <span class="comment">#下载模型</span></div><div class="line">   pickle.dump(clf,f)</div><div class="line"></div><div class="line">pickle_in = open(<span class="string">'houseforecastmodel.pickle'</span>,<span class="string">'rb'</span>)</div><div class="line">clf = pickle.load(pickle_in) <span class="comment">#加载模型</span></div><div class="line"></div><div class="line">confidence = clf.score(X_test, y_test)</div><div class="line"></div><div class="line">forecast_set = clf.predict(X_lately)</div><div class="line">df[<span class="string">'Forecast'</span>] = np.nan</div><div class="line"></div><div class="line">last_date = df.iloc[<span class="number">-1</span>].name</div><div class="line">last_unix = last_date.timestamp()</div><div class="line">one_day = <span class="number">86400</span></div><div class="line">next_unix = last_unix + one_day</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> forecast_set:</div><div class="line">    next_date = datetime.datetime.fromtimestamp(next_unix)</div><div class="line">    next_unix += <span class="number">86400</span></div><div class="line">    df.loc[next_date] = [np.nan <span class="keyword">for</span> _ <span class="keyword">in</span> range(len(df.columns)<span class="number">-1</span>)]+[i]</div><div class="line"></div><div class="line">df[<span class="string">'Adj. Close'</span>].plot()</div><div class="line">df[<span class="string">'Forecast'</span>].plot()</div><div class="line">plt.legend(loc=<span class="number">4</span>)</div><div class="line">plt.xlabel(<span class="string">'Date'</span>)</div><div class="line">plt.ylabel(<span class="string">'Price'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure><p>在运行一遍以上的代码之后，就可以直接从保存的文件来加载模型来预测数据啦，如下可测试：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> quandl,math,datetime</div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing,svm</div><div class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> train_test_split</div><div class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> pickle</div><div class="line"></div><div class="line">plt.style.use(<span class="string">'ggplot'</span>)</div><div class="line"></div><div class="line">df = quandl.get(<span class="string">"WIKI/GOOGL"</span>)</div><div class="line"></div><div class="line">df = df[[<span class="string">'Adj. Open'</span>, <span class="string">'Adj. High'</span>, <span class="string">'Adj. Low'</span>, <span class="string">'Adj. Close'</span>, <span class="string">'Adj. Volume'</span>]] <span class="comment">#取用时需要用大括号</span></div><div class="line">df[<span class="string">'HL_PCT'</span>] = (df[<span class="string">'Adj. High'</span>] - df[<span class="string">'Adj. Close'</span>]) / df[<span class="string">'Adj. Close'</span>] * <span class="number">100.0</span></div><div class="line">df[<span class="string">'PCT_change'</span>] = (df[<span class="string">'Adj. Close'</span>] - df[<span class="string">'Adj. Open'</span>]) /df[<span class="string">'Adj. Open'</span>] * <span class="number">100.0</span></div><div class="line"></div><div class="line">df = df[[<span class="string">'Adj. Close'</span>, <span class="string">'Adj. Volume'</span>,<span class="string">'HL_PCT'</span>,<span class="string">'PCT_change'</span>]]</div><div class="line"></div><div class="line">forecast_col = <span class="string">'Adj. Close'</span></div><div class="line"></div><div class="line">df.fillna(value=<span class="number">-99999</span>, inplace=<span class="keyword">True</span>)</div><div class="line">forecast_out = int(math.ceil(<span class="number">0.01</span> * len(df)))</div><div class="line">df[<span class="string">'label'</span>] = df[forecast_col].shift(-forecast_out)</div><div class="line"></div><div class="line">X = np.array(df.drop([<span class="string">'label'</span>], <span class="number">1</span>))</div><div class="line">X = preprocessing.scale(X)</div><div class="line">X_lately = X[-forecast_out:]</div><div class="line">X = X[:-forecast_out]</div><div class="line"></div><div class="line">df.dropna(inplace=<span class="keyword">True</span>)</div><div class="line"></div><div class="line">y = np.array(df[<span class="string">'label'</span>])</div><div class="line"></div><div class="line">X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=<span class="number">0.2</span>)</div><div class="line"><span class="comment">#clf = LinearRegression(n_jobs=-1)</span></div><div class="line"><span class="comment">#clf.fit(X_train, y_train)</span></div><div class="line"></div><div class="line"><span class="comment">#with open('houseforecastmodel.pickle','wb') as f:</span></div><div class="line">   <span class="comment">#下载模型</span></div><div class="line">   <span class="comment">#pickle.dump(clf,f)</span></div><div class="line"></div><div class="line">pickle_in = open(<span class="string">'houseforecastmodel.pickle'</span>,<span class="string">'rb'</span>)</div><div class="line">clf = pickle.load(pickle_in) <span class="comment">#加载模型</span></div><div class="line"></div><div class="line">confidence = clf.score(X_test, y_test)</div><div class="line"></div><div class="line">forecast_set = clf.predict(X_lately)</div><div class="line">df[<span class="string">'Forecast'</span>] = np.nan</div><div class="line"></div><div class="line">last_date = df.iloc[<span class="number">-1</span>].name</div><div class="line">last_unix = last_date.timestamp()</div><div class="line">one_day = <span class="number">86400</span></div><div class="line">next_unix = last_unix + one_day</div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> forecast_set:</div><div class="line">    next_date = datetime.datetime.fromtimestamp(next_unix)</div><div class="line">    next_unix += <span class="number">86400</span></div><div class="line">    df.loc[next_date] = [np.nan <span class="keyword">for</span> _ <span class="keyword">in</span> range(len(df.columns)<span class="number">-1</span>)]+[i]</div><div class="line"></div><div class="line">df[<span class="string">'Adj. Close'</span>].plot()</div><div class="line">df[<span class="string">'Forecast'</span>].plot()</div><div class="line">plt.legend(loc=<span class="number">4</span>)</div><div class="line">plt.xlabel(<span class="string">'Date'</span>)</div><div class="line">plt.ylabel(<span class="string">'Price'</span>)</div><div class="line">plt.show()</div></pre></td></tr></table></figure><blockquote><p>得出的结果与上方展示的一致。</p></blockquote><h2 id="了解pickle"><a href="#了解pickle" class="headerlink" title="了解pickle"></a>了解pickle</h2><ul><li><p><a href="https://morvanzhou.github.io/tutorials/python-basic/basic/13-08-pickle/" target="_blank" rel="external">pickle 保存数据</a></p></li><li><p><a href="https://docs.python.org/3/library/pickle.html" target="_blank" rel="external">pickle — Python object serialization</a></p></li><li><p><a href="https://www.jianshu.com/p/113f33ab6f31" target="_blank" rel="external">scikit-learn系列之如何存储和导入机器学习模型</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 机器学习 </category>
          
          <category> 数据分析 </category>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下安装lightGBM</title>
      <link href="/2018/10/16/Mac%E4%B8%8B%E5%AE%89%E8%A3%85lightGBM/"/>
      <url>/2018/10/16/Mac%E4%B8%8B%E5%AE%89%E8%A3%85lightGBM/</url>
      
        <content type="html"><![CDATA[<p>最近需要这个算法做点东西，在此记录一下安装的过程。</p><a id="more"></a><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><p>用homebrew安装相关的插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">brew install cmake</div><div class="line">brew install gcc --without-multilib</div></pre></td></tr></table></figure><blockquote><p>在安装之后如果在使用<code>cmake ..</code>命令行出现了关于在下载的<em>cmake</em>的相关的问题时，可以考虑<code>brew uninstall cmake</code>，然后重新下载。这种问题我就遇上了…</p></blockquote><p>下载好gcc之后，我配置了一下环境问题，如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-16%20%E4%B8%8B%E5%8D%881.25.10.png" alt=""></p><blockquote><p>使用命令行<code>vi ~/.bash_profile</code>配置环境变量问题。</p></blockquote><p>接下来是git下载相关的GitHub资源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> --recursive https://github.com/Microsoft/LightGBM</div></pre></td></tr></table></figure><p>依次使用下方命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> LightGBM</div><div class="line"><span class="built_in">export</span> CXX=g++-8 CC=gcc-8</div><div class="line">mkdir build </div><div class="line"><span class="built_in">cd</span> build</div><div class="line">cmake ..</div><div class="line">make -j4</div></pre></td></tr></table></figure><blockquote><p>这样只要相关的插件下载完全了，一般就没什么问题出现了。</p></blockquote><p>之后可以使用pip命令下载了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install --no-binary :all: lightgbm</div></pre></td></tr></table></figure><blockquote><p>由于不是很懂这个命令，我又使用了<code>pip install lightgbm</code>。</p></blockquote><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-16%20%E4%B8%8B%E5%8D%881.23.55.png" alt=""></p><blockquote><p>用的是anaconda默认的python3环境。</p></blockquote><h1 id="遇到的错误问题"><a href="#遇到的错误问题" class="headerlink" title="遇到的错误问题"></a>遇到的错误问题</h1><p>如下类似问题：</p><pre><code>OSError: dlopen(/usr/local/lib/python3.6/site-packages/lightgbm/lib_lightgbm.so, 6): Library not loaded: /usr/local/opt/gcc/lib/gcc/7/libgomp.1.dylib  Referenced from: /usr/local/lib/python3.6/site-packages/lightgbm/lib_lightgbm.so  Reason: image not found</code></pre><blockquote><p>解决方案：<a href="https://github.com/Microsoft/LightGBM/issues/1369" target="_blank" rel="external">https://github.com/Microsoft/LightGBM/issues/1369</a></p></blockquote><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><p><a href="http://lightgbm.apachecn.org/cn/latest/Installation-Guide.html" target="_blank" rel="external">http://lightgbm.apachecn.org/cn/latest/Installation-Guide.html</a></p></li><li><p><a href="https://blog.csdn.net/fitzgerald0/article/details/78321527?utm_source=blogxgwz4" target="_blank" rel="external">https://blog.csdn.net/fitzgerald0/article/details/78321527?utm_source=blogxgwz4</a></p></li><li><p><a href="https://github.com/Microsoft/LightGBM/issues/1369smartjpa.com" target="_blank" rel="external">https://github.com/Microsoft/LightGBM/issues/1369smartjpa.com</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
          <category> 机器学习 </category>
          
          <category> LightGBM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> LightGBM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac上下载xgboost</title>
      <link href="/2018/10/15/Mac%E4%B8%8A%E4%B8%8B%E8%BD%BDxgboost/"/>
      <url>/2018/10/15/Mac%E4%B8%8A%E4%B8%8B%E8%BD%BDxgboost/</url>
      
        <content type="html"><![CDATA[<p>这会有事了，感觉有必要记录一下。</p><p>最近想搞搞<em>kaggle</em>的入门级比赛，参考他人的<em>kernel</em>用到了<em>xgboost</em>，但是安装时遇到了一些坑，特别是<a href="https://xgboost.readthedocs.io/en/latest/build.html" target="_blank" rel="external">官网的安装教程</a>…真的让人吐血，根本不能解决我要安装的欲望。以下是我参考了一些文章并且成功安装的经验记录。</p><a id="more"></a><h1 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h1><p>先用homebrew下载相关的依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew install gcc --without-multilib</div></pre></td></tr></table></figure><blockquote><p>加上<code>--without-multilib</code>目的是开启默认不开启支持多线程的插件。</p></blockquote><p>然后git下载在GitHub上的xgboost：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> --recursive https://github.com/dmlc/xgboost</div></pre></td></tr></table></figure><blockquote><p>最好下载在根目录。</p></blockquote><p>下载完成之后：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> xgboost</div></pre></td></tr></table></figure><p>修改相关的配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi config.mk</div></pre></td></tr></table></figure><blockquote><p>实际上这个文件有好多个，我最终都修改成一致的了…如下图</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-16%20%E4%B8%8A%E5%8D%8810.25.58.png" alt=""></p><p>修改内容为，改成用homebrew下载的gcc版本目录地址：</p><pre><code>export CC = /usr/local/Cellar/gcc/8.2.0/bin/gcc-8export CXX = /usr/local/Cellar/gcc/8.2.0/bin/g++-8export MPICXX = /usr/local/Cellar/gcc/8.2.0/bin/mpicxx</code></pre><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-16%20%E4%B8%8A%E5%8D%8810.27.14.png" alt=""></p><p>之后使用命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp make/config.mk ./config.mk</div><div class="line">make -j4</div></pre></td></tr></table></figure><blockquote><p><code>-j4</code>是开启4个线程的意思。</p></blockquote><p>之后就是编译成包的过程了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> python-package</div><div class="line">   python setup.py install</div></pre></td></tr></table></figure><blockquote><p>我用的是anaconda的python版本。</p></blockquote><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-16%20%E4%B8%8A%E5%8D%8810.31.22.png" alt=""></p><p>这样就大功告成了。</p><h1 id="期间遇到过的问题"><a href="#期间遇到过的问题" class="headerlink" title="期间遇到过的问题"></a>期间遇到过的问题</h1><h2 id="问题一："><a href="#问题一：" class="headerlink" title="问题一："></a>问题一：</h2><pre><code>XGBoostLibraryNotFound: Cannot find XGBoost Libarary in the candidate path, did you install compilers and run build.sh in root path?List of candidates:/home/dmlc/anaconda/lib/python3.6/site-packages/xgboost-0.4-py3.6.egg/xgboost/libxgboostwrapper.so/home/dmlc/anaconda/lib/python3.6/site-packages/xgboost-0.4-py3.6.egg/xgboost/../../wrapper/libxgboostwrapper.so/home/dmlc/anaconda/lib/python3.6/site-packages/xgboost-0.4-py3.6.egg/xgboost/./wrapper/libxgboostwrapper.so</code></pre><p>此类问题，可能是<code>git clone --recursive https://github.com/dmlc/xgboost</code>下载执行未完全。</p><h2 id="问题二"><a href="#问题二" class="headerlink" title="问题二"></a>问题二</h2><p>使用命令行<code>make -j4</code>时出现：</p><pre><code>clang: error: unsupported option &apos;-fopenmp&apos;</code></pre><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-16%20%E4%B8%8A%E5%8D%8810.47.57.png" alt=""></p><p>解决方案：</p><pre><code>export CC = /usr/local/Cellar/gcc/8.2.0/bin/gcc-8export CXX = /usr/local/Cellar/gcc/8.2.0/bin/g++-8export MPICXX = /usr/local/Cellar/gcc/8.2.0/bin/mpicxx</code></pre><blockquote><p>这只是未能识别相关插件的问题，修改文件<code>config.mk</code>相关的部分如上即可。</p><p>在此参考了：<a href="https://stackoverflow.com/questions/36211018/clang-error-errorunsupported-option-fopenmp-on-mac-osx-el-capitan-buildin" target="_blank" rel="external">https://stackoverflow.com/questions/36211018/clang-error-errorunsupported-option-fopenmp-on-mac-osx-el-capitan-buildin</a></p></blockquote><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul><li><p><a href="https://www.jianshu.com/p/c2b0c3067d84" target="_blank" rel="external">https://www.jianshu.com/p/c2b0c3067d84</a></p></li><li><p><a href="https://www.jianshu.com/p/76ff402a8b58" target="_blank" rel="external">https://www.jianshu.com/p/76ff402a8b58</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/23996104" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/23996104</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
          <category> 机器学习 </category>
          
          <category> Xgboost </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> Xgboost </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思考意义</title>
      <link href="/2018/10/15/%E6%80%9D%E8%80%83%E6%84%8F%E4%B9%89/"/>
      <url>/2018/10/15/%E6%80%9D%E8%80%83%E6%84%8F%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<p>追个不舍，活着的意义是什么，我还在寻找。</p><p>但现在我想我有些开怀了。</p><p>从来到走，不谈虚无，我想记录一些实在的心里话。</p><a id="more"></a><p>我向着“大爱”，做我能做和我想做的事，而我在平凡，苟活之间有些小的挣扎，但我依然也对什么虚荣不感冒。我矛盾，还是无法完全说服自己。我有些犹豫，这世间的种种诱惑真的有些感染到我，曾经的我，不为所动，但如今我愿意去了解更多存在于在这世间的人们，我变得有些“贪恋”人间了，如今的世界在我眼里更偏向像是个乌托邦式。</p><p>但是现在冷静下来想想，原来还是我向着“大爱”的心绪不宁了。我自相矛盾有时就会无缘无故的在我思维里像是小鹿乱撞一样，到头来也是把我自己搞得哭笑不得。</p><p>我想接下传承的接力棒，做我能做和做我想做的事。我也想尽一份力，帮助需要的所有，我愿意付出，但不会盲目。</p><p>得先是我自己，体验生而为“人”的人生生活。生而为“人”，有着各自的灵魂，做自己是生为“人”的基本原则。</p><p>我知道我的答案可能只是暂时的，但只会比现在更加积极。</p><p>即刻想想，现在心血来潮记录的这些东西也不足挂齿了，心里想说的话是永远说不完，写不完的，我再想想我执着着记录这些东西是为什么，不过是为了记录当今这个时段我内心的部分想法罢了。</p><p>看了看，又是草草了事呐～</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>吾道</title>
      <link href="/2018/10/13/%E5%90%BE%E9%81%93/"/>
      <url>/2018/10/13/%E5%90%BE%E9%81%93/</url>
      
        <content type="html"><![CDATA[<p>道非道，自成道。</p><p>吾道，非常言道，非万物道，吾道属吾道。</p><a id="more"></a><p>吾道，在吾一念之间，可从无，可从有。</p><p>吾道，吾道，还在继往开来之时。</p><p>吾道，与时无关，与实无关，可有可无。</p><p>吾道，贪恋未来，不念过往。</p><p>吾道之成，在终了之时。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客绑定独立域名以及转移云服务器</title>
      <link href="/2018/10/12/Hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D%E4%BB%A5%E5%8F%8A%E8%BD%AC%E7%A7%BB%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2018/10/12/Hexo%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E7%8B%AC%E7%AB%8B%E5%9F%9F%E5%90%8D%E4%BB%A5%E5%8F%8A%E8%BD%AC%E7%A7%BB%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<p>最近对我的博客进行了一系列大换血，以前的样子太难看了，而且速度也一直不怎么满意，这次想好好的修改一下，其中包括了买了个域名，转移到了云服务器上运行。</p><p>当然在昨天开始就开始折腾了，所以把所有想要记录的都在此记录一下。</p><a id="more"></a><h1 id="大换血修改设置"><a href="#大换血修改设置" class="headerlink" title="大换血修改设置"></a>大换血修改设置</h1><p>关于这个我就贴上相关的链接好了，毕竟重复造轮子不是我的初衷。</p><p>一些对我有帮助的链接，谢谢分享的网友们：</p><ul><li><p><a href="https://asdfv1929.github.io/2018/01/21/daovoice/" target="_blank" rel="external">Hexo NexT主题内接入网页在线联系功能</a></p></li><li><p><a href="https://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="external">hexo的next主题个性化教程：打造炫酷网站</a></p></li><li><p><a href="http://blog.sciencenet.cn/blog-3247241-1139774.html" target="_blank" rel="external">hexo博客解决不蒜子统计无法显示问题</a></p></li><li><p><a href="http://zouzls.github.io/2017/03/17/Next主题背景个性化DIY/" target="_blank" rel="external">Next主题背景个性化DIY</a></p></li><li><p><a href="https://www.jianshu.com/p/b20fc983005f" target="_blank" rel="external">Hexo设置主题以及Next主题个性设置</a></p></li><li><p><a href="http://leozzy.com/2017/09/08/hexo-sidebar-auto/" target="_blank" rel="external">2017版 Hexo Next主题侧边栏 Sidebar 配置自动展开教程</a></p></li><li><p><a href="https://ohmyarch.github.io/2014/12/24/Hexo主页显示摘要/" target="_blank" rel="external">Hexo主页显示摘要</a></p></li><li><p><a href="https://segmentfault.com/q/1010000004840061/a-1020000004895286" target="_blank" rel="external">hexo next主题如何在首页摘要里显示文章图片？</a></p></li><li><p><a href="https://www.ofind.cn/blog/HEXO/HEXO下的语法高亮拓展修改.html" target="_blank" rel="external">HEXO下的语法高亮拓展修改</a></p></li><li><p><a href="https://juejin.im/entry/59d4a6a651882530f31a43f4" target="_blank" rel="external">打造个性超赞博客Hexo+NexT+GithubPages的超深度优化</a></p></li><li><p><a href="http://mashirosorata.vicp.io/HEXO-NEXT主题个性化配置.html" target="_blank" rel="external">HEXO+NEXT主题个性化配置</a></p></li></ul><blockquote><p>以上就不在写明作者了，都是一些比较有帮助的文章。</p></blockquote><p>在此简单说明一下关于我在<code>next</code>主题设置头像的问题，其实在主页的<code>_config.yml</code>设置一下就可以得出头像了，如下图，我将图片发在七牛云上，将外链拿到这里存放就好了。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-12%20%E4%B8%8B%E5%8D%882.54.00.png" alt=""></p><hr><h1 id="关于hexo博客绑定域名"><a href="#关于hexo博客绑定域名" class="headerlink" title="关于hexo博客绑定域名"></a>关于hexo博客绑定域名</h1><p>关于这个事我简单说一下好了，先放有用的链接，再稍微补充一下。</p><ul><li><p><a href="http://fengdaoting.com/2017/11/12/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E7%BB%91%E5%AE%9AGithub%E4%B8%8A%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%B0Godaddy%E5%9F%9F%E5%90%8D/" target="_blank" rel="external">绑定Github上的个人博客到Godaddy域名</a></p></li><li><p><a href="http://hushiyu1995.com/2017/10/01/build-web-1/index.html" target="_blank" rel="external">Github Page + Hexo + Godaddy 搭建一个个性域名的博客网站</a></p></li><li><p><a href="https://www.jianshu.com/p/6a3ee5b5abfd" target="_blank" rel="external">基于github和hexo搭建博客—-绑定个人域名</a></p></li><li><p><a href="https://www.dute.me/godaddy-alipay.html" target="_blank" rel="external">GoDaddy不支持支付宝的解决办法</a></p></li><li><p><a href="https://www.dute.me/" target="_blank" rel="external">GoDaddy优惠码</a></p></li></ul><h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><h3 id="关于查找GitHub-pages的ip"><a href="#关于查找GitHub-pages的ip" class="headerlink" title="关于查找GitHub pages的ip"></a>关于查找GitHub pages的ip</h3><p>两种方法：</p><p>第一种：</p><blockquote><p><code>ping liujunjie11.github.io</code> ping自己的博客目录地址</p></blockquote><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-12%20%E4%B8%8B%E5%8D%883.00.33.png" alt=""></p><p>第二种：</p><p>打开网站<a href="https://help.github.com/articles/troubleshooting-custom-domains/，拉到下面查看相关的IP，如图：" target="_blank" rel="external">https://help.github.com/articles/troubleshooting-custom-domains/，拉到下面查看相关的IP，如图：</a></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-12%20%E4%B8%8B%E5%8D%883.02.32.png" alt=""></p><h3 id="建立CNAME文件的存放目录"><a href="#建立CNAME文件的存放目录" class="headerlink" title="建立CNAME文件的存放目录"></a>建立CNAME文件的存放目录</h3><p>是要放在Hexo项目的sources目录下的，我为了保险在next的sources目录下也放了一份。</p><p>补充的就这么点了。</p><h1 id="Hexo转移到云服务器"><a href="#Hexo转移到云服务器" class="headerlink" title="Hexo转移到云服务器"></a>Hexo转移到云服务器</h1><p>这地方因为不怎么懂而且自身能力也不够，所以遇到了很多的坑，唉，有些人可能自己都搞不清楚就写文章了，搞完所有流程又不对…真的是无力吐槽了，花费了那么多精力。现在还没搞好，到时候补上需要说明的。</p><p>因为GitHub允许每个仓库在1GB左右的空间，而我现在寄托在GitHub的博客大小才130M…so,我现在不打算转移到云服务器了，到时候再说吧。</p><blockquote><p>GitHub的仓库内存说明：<a href="https://help.github.com/articles/what-is-my-disk-quota/" target="_blank" rel="external">https://help.github.com/articles/what-is-my-disk-quota/</a></p></blockquote><p>贴上参考过的链接：</p><ul><li><p><a href="https://segmentfault.com/a/1190000005723321" target="_blank" rel="external">阿里云VPS搭建自己的的Hexo博客</a></p></li><li><p><a href="https://www.hellolvs.com/hexo/" target="_blank" rel="external">VPS服务器搭建Hexo博客教程</a></p></li><li><p><a href="https://www.jianshu.com/p/ad71f7a531a5" target="_blank" rel="external">利用云服务器搭架Hexo个人博客</a></p></li><li><p><a href="https://www.laoyuyu.me/2017/10/10/hexo_deploy_vps/" target="_blank" rel="external">HEXO 部署到云服务器详细指南</a></p></li></ul><blockquote><p>也就是在云服务器上建好一些需要的软件，然后就像使用命令<code>hexo g -d</code>一样上传GitHub一样，并不需要重新开始所有。    </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于错误ERROR Asset render failed: css/main.css</title>
      <link href="/2018/10/11/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AFERROR-Asset-render-failed-css-main-css/"/>
      <url>/2018/10/11/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AFERROR-Asset-render-failed-css-main-css/</url>
      
        <content type="html"><![CDATA[<p>在修改一些字体的时候使用<code>hexo s</code>/<code>hexo s -debug</code>时出现了以下错误：</p><pre><code>ERROR Asset render failed: css/main.cssError: /Users/junjieliu/liujunjie11.github.io/themes/next/source/css/main.styl:14:27   10|    11| // Variables Layer   12| // --------------------------------------------------   13| for $variable in $variables   14|   @import &quot;_variables/&quot; + $variable;---------------------------------^   15|    16|    17| // Mixins Layerfailed to locate @import file _variables/base.styl</code></pre><a id="more"></a><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-11%20%E4%B8%8B%E5%8D%887.48.37.png" alt=""></p><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>有个文件在我修改了一个字体参数之后出现了(如图)。还好我记得前面打开目录时是没有这个文件存在的，之后我把它删除再使用上面的命令就没有再报错了。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-11%20%E4%B8%8B%E5%8D%887.47.24.png" alt=""></p><blockquote><p>这个文件估计是在第一次修改相关文件的参数时才会出现，删除之后就能恢复正常了。</p></blockquote><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>在删除之后发现问题还是解决不了，折腾了一下，去文件所指的目录地址去看了一下，发现了以下问题(如图)：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-12%20%E4%B8%8A%E5%8D%889.31.21.png" alt=""></p><blockquote><p>在此处的文件名自己发生了改变了，而且不知为何当初自己进了垃圾桶…把名字改回来<code>base.styl</code>之后再使用命令就没有再出现以上错误了。</p></blockquote><p>以下是这次错误相关的文件目录：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-10-12%20%E4%B8%8A%E5%8D%889.32.59.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 问题记录笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac升级到Mojave版本之后的Safari插件问题</title>
      <link href="/2018/10/11/Mac%E5%8D%87%E7%BA%A7%E5%88%B0Mojave%E7%89%88%E6%9C%AC%E4%B9%8B%E5%90%8E%E7%9A%84Safari%E6%8F%92%E4%BB%B6%E9%97%AE%E9%A2%98/"/>
      <url>/2018/10/11/Mac%E5%8D%87%E7%BA%A7%E5%88%B0Mojave%E7%89%88%E6%9C%AC%E4%B9%8B%E5%90%8E%E7%9A%84Safari%E6%8F%92%E4%BB%B6%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在升级到了<em>Mojave</em>最新版本之后的最大问题发现就是<em>Safari</em>浏览器之前一些常用的插件不能用了，其他的对我来说都是优点，系统比以前更加流畅了，优化了不少。</p><p>废话不多说了，我在此仅列出我常用的插件列表以及如何再次正常使用它们。</p><h1 id="插件一：Search-Engine-Switcher"><a href="#插件一：Search-Engine-Switcher" class="headerlink" title="插件一：Search Engine Switcher"></a>插件一：<em>Search Engine Switcher</em></h1><p>这款插件能够使得在使用浏览器搜索关键词时可以在百度、谷歌之间的搜索引擎变换搜索相关内容。在升级之后本来不被<em>Safari</em>支持了。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>打开新版的<em>app store</em>搜索关键词<em>Search Engine Switcher</em>直接下载即可用了。</p><a id="more"></a><h1 id="插件二：Adblock-Plus"><a href="#插件二：Adblock-Plus" class="headerlink" title="插件二：Adblock Plus"></a>插件二：<em>Adblock Plus</em></h1><p>这是一个让人头疼的问题，没有了之后广告太多了，受不了，找了一些付费的替代品，但是还是都不如<em>Adblock Plus</em>好用，在逛国外的一些论坛时发现了一个解决方案。</p><h2 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h2><p>下载<em>Adblock Plus</em>的最后一个在<em>Safari</em>的插件版本即可完美解决这个问题，不用去<em>app store</em>下载了，那个根本没什么用。</p><p>具体的可以先去下载这个插件即可直接使用了：</p><ul><li><strong><a href="https://uploadfiles.io/3q7wu" target="_blank" rel="external">https://uploadfiles.io/3q7wu</a></strong></li></ul><blockquote><p>这个链接是国外网友的分享，链接在此：<a href="https://forums.macrumors.com/threads/adblock-plus-not-working.2121621/" target="_blank" rel="external">https://forums.macrumors.com/threads/adblock-plus-not-working.2121621/</a></p><p>这是他的原话：Here you go dude: <a href="https://ufile.io/3q7wu" target="_blank" rel="external">https://ufile.io/3q7wu</a><br>It’s the original AdBlock.safariextz latest version! Just put it in the folder I mentioned above and enable it in Safari’s preferences. It should work. Good luck!</p></blockquote><p>下载完之后会跳转到这个网页：<a href="https://safari-extensions.apple.com/details/?id=com.betafish.adblockforsafari-UAMUU4S2D9" target="_blank" rel="external">https://safari-extensions.apple.com/details/?id=com.betafish.adblockforsafari-UAMUU4S2D9</a></p><p>直接下载就是了，一切和从前一样了…</p><p>如果在你下载之后没有得到什么实质性的作用，不妨可以看看官方的<a href="https://getadblock.com/update/2.70.0/?u=a210xe6x25809560" target="_blank" rel="external">解释</a>：</p><blockquote><p>在 2019 年的某个时候，我们将停止对传统扩展的支持，极少数特例除外。 我们强烈建议您迁移到我们的新 Mac 应用上来。 我们将在新的应用上投入全部精力，让 AdBlock for Safari 成为 Apple 设备上最好的广告拦截工具。</p></blockquote><p>这是好像有点运气成分的…</p><p>就这样了，that’s all!good luck~~</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>旅程</title>
      <link href="/2018/09/29/%E6%97%85%E7%A8%8B/"/>
      <url>/2018/09/29/%E6%97%85%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>一段在活着的人生旅程是相对矛盾的，常常也因此而把自己堵塞的一言不能发。</p><p>观看完《云图》之后引发了我的一系列思考，虽然在曾经都有过接触的那些思想，但是从书上或者是自己思考得出的相比，从电影的形式来进行描述何尝不是一种更好的选择。《云图》是一部好作品，她给我的启示对于我想要寻找的答案来说是有一定推进作用的，不知怎么的我想记下现在所想的一些东西，不妨叫其为，“观《云图》有感吧”。</p><a id="more"></a><p>人与人之间是相互牵连着的，每个人的所作所为都会对在这世上的人产生一定的影响的，继而形成一个链式反应，“人类是命运共同体”，这样理解也不为过。我看完《云图》感受是一股“勿以善小而不为”的感受的，当然这部作品本身给我的信息远不止如此。她另外给了我的信息是：捍卫心中认为正确的真相、真理，哪怕付出所有；勇敢去做自己认为对的事情，哪怕只有自身一人的力量那般微不足道。在上的前提是我们真的是我们自己，不受世间规则的约束，不受世间传统的的纠缠。</p><p>“稳定的发展”不应成为“被规则”的理由。世界的稳定维持，好似是有一股神秘的力量在背后发挥着作用，这股力量引导着世世代代的人们生活着的世界从有到现在，如今的人们把这股力量称为世间的自然秩序。多数的人们怕破坏了这秩序，世间的稳定发展会发生动摇，会引来这股神秘力量的报复，久而久之秩序成为了一种活着的人们都应该要被遵守的规则，秩序规则，规则秩序，源远流长，不声不息。所以会有大多数人会为了“稳定的发展”而也会要求其他人不要不遵守这些规则，更不允许被破坏这些股规则。该称之为一般的“伟大”吗？套着“稳定”外衣的“规则”。这股秩序规则的存在恰恰也是限制当世人们的一条锁链，给人的感觉就是一切都是被安排好的，一切都是冥冥中自有的存在与发生，这难道不是一种“洗脑”吗？大多数人们会因此变得沉默，他们以为这就是一切早已安排好的天命，而我只需要静静的，毫无波澜的干自己该做的事便好。这是一种对鲜活生命的摧残，一种对生命的不尊重，一种教人们对自己生命的不负责。一条生命在诞生之时，他就是独立的，并且一直都是独立的，孤独？“孤独”不过是煽情的人们用来安慰、说服自己的字词理由罢了。人，生而孤独，生而独立，所以这世间的规则并不是我们应当铭记于心的，而应该是我们根据自己的选择去选择的，世间规则不应当成为生而为人的我们的必须枷锁。但是世间也需要规则，也需要秩序，这一点也是毫无破绽的。我可以适当的遵守一定规则，但我永远不会将其铭记于心，更不会让其成为我自由生长的一把枷锁。“规则”有时一旦被另有企图的人们所利用，稍加不当作为一种源远流长，依旧可能会成为一些人们堕落的根源。</p><p>一个人真正的成长与成熟不是学会了如何精通这世间的规则继而将此铭记于心成为一个形态意识上的墨守陈规的人，而是一个在知晓了这世间大多数的规则之下，却依旧能做自己的人。前者已经失去了自我，不再是一个真正独立的人了。</p><p>活在这世间，实属不易，有牵绊，有诱惑，有不解。守护本心，活成自己有时变得那么难，那么难，很多时候我们难真正的成为自己，过着自己理想的生活，做着自己喜欢的事。但是这些都不能成为理由而不去成为自己，多些在自己的空间里多加思考会发现这原本只是两回事的存在罢了。</p><p>守护那来之不易的真相，并且舍得去奉献。</p><p>人生来的旅程，一千个人有一千颗心，有一千个自己的存在。世间因此也变得“矛盾”，还是本身就是一个矛盾体？无论如何，人类命运体中伴随着矛盾是不可避免的事实，那是因为”我们“的存在。这世间值得一走，一走一停，探究其秘，何乐而不为。</p><p>我曾看到一句话我很喜欢：</p><blockquote><p><strong>笑对人生，独立寰宇。</strong></p></blockquote><p>完。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网，自建VPS-SS应用</title>
      <link href="/2018/09/28/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%EF%BC%8C%E8%87%AA%E5%BB%BAVPS-SS%E5%BA%94%E7%94%A8/"/>
      <url>/2018/09/28/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%EF%BC%8C%E8%87%AA%E5%BB%BAVPS-SS%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>最近因为需求想自己搭建一个VPS加SS应用。用的是<a href="https://www.vultr.com/?ref=7548655" target="_blank" rel="external">Vultr</a>这个平台。</p><p>唉…这东西的教程已经是满大街都是了，我就不重复造轮子了，现在的轮子还没有失效。</p><a id="more"></a><p>具体的服务器租建过程可参考：</p><ul><li><p><a href="https://github.com/Alvin9999/new-pac/wiki/自建ss服务器教程" target="_blank" rel="external">自建ss服务器教程</a></p></li><li><p><a href="https://medium.com/@zoomyale/科学上网的终极姿势-在-vultr-vps-上搭建-shadowsocks-fd57c807d97e" target="_blank" rel="external">科学上网的终极姿势-在-vultr-vps-上搭建</a></p></li><li><p><a href="http://mpc2008cn.github.io/2015/10/22/vps/" target="_blank" rel="external">Vultr的vps搭建shadowsocks翻墙</a></p></li><li><p><a href="https://segmentfault.com/a/1190000015558387" target="_blank" rel="external">超详细 Vultr（VPS）搭建 SS / 新手图文指导教程</a></p></li><li><p><a href="https://blog.whsir.com/post-1045.html" target="_blank" rel="external">如何查看修改ss服务器的端口密码</a></p></li><li><p><a href="https://blog.whsir.com/post-274.html" target="_blank" rel="external">shadowsocks多端口密码手动配置方法</a></p></li><li><p><a href="https://blog.csdn.net/Feng512275/article/details/79701885" target="_blank" rel="external">SS多用户配置</a></p></li><li><p><a href="https://blog.csdn.net/ljbmxsm/article/details/50650008" target="_blank" rel="external">Linux查看端口占用情况和开启端口命令</a></p></li><li><p><a href="http://975156298.iteye.com/blog/2323688" target="_blank" rel="external">Linux下iptables 禁止端口和开放端口</a></p></li></ul><p>关于在<em>TCP Fast Open</em>过程中命令行增加的一些补充(我自己加上的)：</p><blockquote><p>每一次的…ipv4…之外我都加上了…ipv6…的一样的命令行。</p><p>如：<code>echo 3 &gt; /proc/sys/net/ipv4/tcp_fastopen</code><br>另外加上了：<code>echo 3 &gt; /proc/sys/net/ipv6/tcp_fastopen</code></p><p>如：<code>net.ipv4.tcp_fastopen = 3</code><br>另外加上了：<code>net.ipv6.tcp_fastopen = 3</code></p></blockquote><p>…</p><p><strong>其中注意的细节是：</strong></p><ol><li><p><strong>开通服务器时，当出现了ip，不要立马去ping或者用xshell去连接，再等5分钟之后，有个缓冲时间。</strong></p></li><li><p><strong>注意加密算法的对齐填写。</strong></p></li><li><p>后续补充…</p></li></ol><p>简单说说体验吧，用的是在日本的服务器，经过上面的参考之后，换了好几台服务器才有了现在的暂时稳定…另外要补充一下：如果在使用命令行<code>ssh root@&lt;ip&gt;</code>不通时(即没有提示要求输入密码登陆的出现的其他情况，比如超时)，直接重新另外开一台就是了，不用再花多余的时间去测试了。</p><p>我一共换了好几台才有3台是可以用的…心累…可能是我太急了？？有可能。</p><p><strong>补充：目前上YouTube测试最高连接可以达到25M/s…超级快的哈哈哈哈～～估计还可以上升～～～美滋滋～～</strong></p><h1 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h1><p>最近添加了多个用户的设置，即添加了多个独立端口以及独立密码，均需要将端口添加至服务器端口列表才行，并且还要注意添加<em>tcp/udp协议</em>，这很重要。</p><h1 id="SS的以及BBR的相关的命令记录"><a href="#SS的以及BBR的相关的命令记录" class="headerlink" title="SS的以及BBR的相关的命令记录"></a>SS的以及BBR的相关的命令记录</h1><ul><li><em>SS</em>：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">下载安装命令</span></div><div class="line">wget --no-check-certificate -O shadowsocks.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</div><div class="line"></div><div class="line">chmod +x shadowsocks.sh</div><div class="line">./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">查看当前ss服务器所开放的端口</span></div><div class="line">ss -lntp | grep ssserver</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">查看当前ss服务器的密码，通过以下命令可见ss的配置文件，配置文件中自然有密码</span></div><div class="line">ps aux | grep ssserver</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">用cat查看下配置文件即可看见密码了</span></div><div class="line">cat /etc/shadowsocks.json</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">修改ss密码：</span></div><div class="line">vi /etc/shadowsocks.json</div><div class="line">按i键进入编辑模式，修改密码为123456</div><div class="line"></div><div class="line">"password":"123456",</div><div class="line">然后按ESC，再输入:wq保存退出</div><div class="line"></div><div class="line">重启ss即可</div><div class="line"></div><div class="line">service shadowsocks restart</div><div class="line">附：ss启动停止方法</div><div class="line"></div><div class="line">启动：service shadowsocks start</div><div class="line">停止：service shadowsocks stop</div><div class="line">重启：service shadowsocks restart</div><div class="line">状态：service shadowsocks status</div></pre></td></tr></table></figure><blockquote><p>关于更多的命令操作以及下载<em>SSR</em>可查看：<a href="https://blog.whsir.com/post-1045.html" target="_blank" rel="external">如何查看修改ss服务器的端口密码</a>、<a href="https://github.com/Alvin9999/new-pac/wiki/自建ss服务器教程" target="_blank" rel="external">自建ss服务器教程</a></p></blockquote><ul><li><p>更多的SS版本选择：<a href="https://blog.upx8.com/2249" target="_blank" rel="external">Shadowsocks SS一键4合一安装包（SS搭建架设）</a></p></li><li><p><em>BBR</em>:</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash">下载命令</span></div><div class="line">yum -y install wget</div><div class="line"></div><div class="line">wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh</div><div class="line"></div><div class="line">chmod +x bbr.sh</div><div class="line"></div><div class="line">./bbr.sh</div><div class="line"></div><div class="line"><span class="meta">#</span><span class="bash">安装查看命令</span></div><div class="line">lsmod | grep bbr</div></pre></td></tr></table></figure><blockquote><p><strong>在系统<code>CentOS 8</code>中已经自带BBR了！！可用命令<code>lsmod | grep bbr</code>查看。</strong></p></blockquote><p>另外在测试下，其实只要本地的网络速度快，用不用BBR的情况下都是可接受的，都是不影响正常使用的，而且发现最近安装完BBR之后，SS全部不能正常使用了…无奈之下只能重新开一台又一台，难受…所以索性不用了。</p><h1 id="关于ss搭建Socks5代理"><a href="#关于ss搭建Socks5代理" class="headerlink" title="关于ss搭建Socks5代理"></a>关于ss搭建Socks5代理</h1><p>可参考：</p><ul><li><p><a href="https://www.diycode.cc/topics/738" target="_blank" rel="external">轻松在 VPS 搭建 Shadowsocks 翻墙 ($5/月 支付宝)</a></p></li><li><p><a href="https://www.synscope.com/370/%E6%90%AD%E5%BB%BAsocks5%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/" target="_blank" rel="external">Centos 7 搭建 socks5 代理服务器</a></p></li></ul><blockquote><p>一般来说，在VPS上搭建完SS应用之后，就能直接使用<em>Socks5</em>代理了，一般的账号和端口即为：<code>127.0.0.1</code>、<code>1080</code>(<strong>在ss打开并且行得通的情况下</strong>)。当然这些均可修改，具体可查看上方的两个链接。</p></blockquote><h1 id="关于Vutrl里的Snapshot功能"><a href="#关于Vutrl里的Snapshot功能" class="headerlink" title="关于Vutrl里的Snapshot功能"></a>关于Vutrl里的Snapshot功能</h1><p>这个可以保存某个VPS服务器在此时此刻的状态，在之后创建的新的服务器之后可直接恢复即可。</p><blockquote><p>具体可参考链接：<a href="https://www.diycode.cc/topics/738" target="_blank" rel="external">轻松在 VPS 搭建 Shadowsocks 翻墙 ($5/月 支付宝)</a></p></blockquote><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>新型墙的阻断方式：<a href="https://www.vultryhw.com/vultr-how-to-deal-with-ip-blocked/" target="_blank" rel="external">ICMP阻断和TCP阻断</a></p><blockquote><p><code>ping</code>得通(ICMP协议)，但是<code>ssh</code>不通(TCP协议)，即为TCP阻断。</p></blockquote><p>解决方案：重新开一台主机…</p><p>另外，若是<code>ssh</code>可行，而<code>ping</code>不通，则可选择重新选择端口号试试。</p><h2 id="添加福利网址"><a href="#添加福利网址" class="headerlink" title="添加福利网址"></a>添加福利网址</h2><ul><li>具体可见：<a href="https://freeid.xyz/" target="_blank" rel="external">https://freeid.xyz/</a></li></ul><h2 id="添加BBRplus链接"><a href="#添加BBRplus链接" class="headerlink" title="添加BBRplus链接"></a>添加BBRplus链接</h2><ul><li><a href="https://www.vultryhw.cn/vultr-bbrplus-speed-up/" target="_blank" rel="external">vultr加速教程：vultr一键开启bbrplus加速</a></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum -y install wget</div><div class="line">wget <span class="string">"https://github.com/cx9208/bbrplus/raw/master/ok_bbrplus_centos.sh"</span> &amp;&amp; chmod +x ok_bbrplus_centos.sh &amp;&amp; ./ok_bbrplus_centos.sh</div><div class="line"></div><div class="line"><span class="comment">#安装成功之后查看端口命令</span></div><div class="line">lsmod | grep bbr</div></pre></td></tr></table></figure><blockquote><p>bbrplus在原版bbr加速的基础上进行了一些改进，但是效果因人而异，根据大部分群友的测试bbrplus是要优于bbr加速的，不过目前这个bbrplus一键脚本只支持Centos7。</p></blockquote><ul><li><a href="https://github.com/cx9208/bbrplus" target="_blank" rel="external">bbrplus Github地址</a></li></ul><h3 id="另外关于更多的Vultr加速链接"><a href="#另外关于更多的Vultr加速链接" class="headerlink" title="另外关于更多的Vultr加速链接"></a>另外关于更多的Vultr加速链接</h3><ul><li><a href="https://www.vultryhw.cn/tag/vultr加速/" target="_blank" rel="external">https://www.vultryhw.cn/tag/vultr加速/</a></li></ul><h2 id="关于多种加速的软件选择"><a href="#关于多种加速的软件选择" class="headerlink" title="关于多种加速的软件选择"></a>关于多种加速的软件选择</h2><ul><li>可参考：<a href="https://www.itren.org/106.html" target="_blank" rel="external">BBR原版/BBR魔改/BBRPLUS/锐速</a></li></ul><p>另外，我认为有必要需要说明的：</p><blockquote><p><strong>以下文字来源于：<a href="https://groups.google.com/forum/#!msg/ustc_lug/Ka-vrTWcSOg/TK0TuV8d5GgJ" target="_blank" rel="external">https://groups.google.com/forum/#!msg/ustc_lug/Ka-vrTWcSOg/TK0TuV8d5GgJ</a></strong></p><p>不要使用锐速此类软件，它会破坏与你共享网络链路者的公平性。TCP 是有拥塞控制的，也就是它感受到网络拥塞的时候就会减慢发送速率。在 Internet 上感受到拥塞的方法有两种，一是丢包（假定丢包都是拥塞导致的），二是往返延迟（RTT）增大。如果把拥塞控制去掉（例如像某些下载软件一样采用 UDP + 丢包重传），自然能挤掉链路上其他的 TCP 流，表现出很快的下载速度。</p><p>锐速宣称是基于 Zeta TCP，它是有拥塞控制的，不过会把其他常见的 TCP 实现（如经典的 TCP Reno，Windows Vista+ 的 CTCP，Linux/BSD 的 Cubic TCP）挤掉，也就是不公平。由于 Internet 不可能在一夜间更换 TCP 实现，任何会导致不公平的 TCP 拥塞控制算法都不能大规模使用。</p><p>至于 Wikipedia Zeta TCP 词条宣称的 “不论对方是 Zeta TCP 还是其他 TCP 都能加速”，事实上是任何有实用价值的 TCP 改进算法的必要条件（总不能要求客户端和服务器同时升级系统吧）。词条中的 Congestion Avoidance 提出把基于丢包的和基于往返延迟的拥塞控制相结合，这也不是什么新思路，事实上 Windows Vista 至今的 Compound TCP 就是这样做的，这里的关键是“结合”的细节。词条中还提到 Loss Detection，也就是早些发现丢包的可能并予以重传，算法细节没有公布，但似乎比较拙劣，事实上 RFC 5827 已经定义了新的丢包检测与重传算法，并由 Google 实现在了 Linux 3.5 中。</p><p>设计快速的 TCP 拥塞控制算法不难，难点是要与常见的 TCP 实现保证公平。感兴趣的可以看我老板的回忆文章：<br><a href="http://blog.sina.com.cn/s/blog_4caedc7a0100gd8f.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_4caedc7a0100gd8f.html</a></p><p>像 Zeta TCP 这样的适用于小规模的部署，所有机器都要部署 Zeta TCP。如果你只是想尽快下载，不在乎别人抱怨，那就用 UDP + 应用层丢包重传吧。</p></blockquote><ul><li>另外关于锐速与BBR的原理简单解析可参考：</li></ul><blockquote><p><a href="https://www.zhujiboke.com/2017/08/673.html" target="_blank" rel="external">锐速与BBR的原理简单解析</a></p></blockquote><p>最终我还是选择了原版的<code>BBR</code>加速。第一，是因为它是经过Google多次验证调试才得以公开示众的，可信度及可靠性高，减少了许多的不确定性，所以较稳定；第二，关于那些魔改的，和plus之类的还只是属于那些“小打小闹”的层面，并且达不到严格验证，而且有些有失共享<code>TCP</code>的公平性，意义上有些损人利已的意味，这点我做不到能够完全接受。以上。</p><h2 id="Host-key-verification-failed-认证失败解决方法"><a href="#Host-key-verification-failed-认证失败解决方法" class="headerlink" title="Host key verification failed.认证失败解决方法"></a>Host key verification failed.认证失败解决方法</h2><p>当新开了一台服务器使用<code>ssh root@108.xx.xxx.248</code>时出现以下错误：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span></div><div class="line"><span class="meta">@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @</span></div><div class="line"><span class="meta">@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@</span></div><div class="line">IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!</div><div class="line">Someone could be eavesdropping on you right now (man-<span class="keyword">in</span>-the-middle attack)!</div><div class="line">It <span class="keyword">is</span> also possible that a host key has just been changed.</div><div class="line">The fingerprint <span class="keyword">for</span> the ECDSA key sent by the remote host <span class="keyword">is</span></div><div class="line">SHA256:mmjlETFOCngnf0Qmwtb68wIJJ3VKHJc2LSAjWPuA9zE.</div><div class="line">Please contact your system administrator.</div><div class="line">Add correct host key <span class="keyword">in</span> /Users/junjieliu/.ssh/known_hosts to get rid of this message.</div><div class="line">Offending ECDSA key <span class="keyword">in</span> /Users/junjieliu/.ssh/known_hosts:<span class="number">11</span></div><div class="line">ECDSA host key <span class="keyword">for</span> <span class="number">108.</span>xx.xxx<span class="number">.248</span> has changed <span class="keyword">and</span> you have requested strict checking.</div><div class="line">Host key verification failed.</div></pre></td></tr></table></figure><p>解决方法：使用<code>ssh-keygen -R 108.xx.xxx.248</code>命令重叠ssh中文件数据。之后再使用<code>ssh root@108.xx.xxx.248</code>一般就没什么问题了。</p><h2 id="电子设备使用Wi-Fi连不上SS"><a href="#电子设备使用Wi-Fi连不上SS" class="headerlink" title="电子设备使用Wi-Fi连不上SS"></a>电子设备使用Wi-Fi连不上SS</h2><p>今天刚刚遇到了，具体情况为Wi-Fi下开或者是不开SS连国内网站都也不进去了，以前都是好好的，但是现在只有使用数据流量才能继续连上了。之后我试着用终端SSH连接服务器，发现居然失败了…</p><p>最简单的解决方法：<strong>换一台服务器….</strong></p><p><strong>最近还发现了一个可能导致这个问题的原因：DNS污染。</strong>即可通过修改网络“高级”设置(我用的是Mac)，修改/删除当前DNS即可恢复正常！！</p><blockquote><p>另外Mac下的防止DNS污染的配置可参考：<a href="http://ju.outofmemory.cn/entry/267127" target="_blank" rel="external">在Mac OSX 上配置 DNSCrypt＋dnsmasq 防止污染</a></p></blockquote><h2 id="关于错误-Error-libsodium-1-0-16-install-failed"><a href="#关于错误-Error-libsodium-1-0-16-install-failed" class="headerlink" title="关于错误[Error] libsodium-1.0.16 install failed."></a>关于错误<code>[Error] libsodium-1.0.16 install failed.</code></h2><ul><li>解决方案可参考：<a href="https://blog.csdn.net/qq_31396185/article/details/81179492" target="_blank" rel="external">https://blog.csdn.net/qq_31396185/article/details/81179492</a></li></ul><blockquote><p>其中的测试环境为：<a href="https://www.bandwagonhost.net/5355.html" target="_blank" rel="external">CentOS 8</a></p></blockquote><h2 id="关于将系统从CentOS7迁移到CentOS8的变动"><a href="#关于将系统从CentOS7迁移到CentOS8的变动" class="headerlink" title="关于将系统从CentOS7迁移到CentOS8的变动"></a>关于将系统从<code>CentOS7</code>迁移到<code>CentOS8</code>的变动</h2><p>第一在<code>CentOS8</code>中使用上方的命令已经失效了。下方是新的命令(亲测有效)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">1、下载脚本</div><div class="line">一键脚本已集成TCP优化、自动开启Google BBR（限 4.9 或更高版本内核）、自动安装 shadowsocks-libev</div><div class="line"></div><div class="line">wget https://down.24kplus.com/linux/shadowsocks/centos-shadowsocks-libev.sh</div><div class="line">2、执行脚本进行安装</div><div class="line">chmod +x centos-shadowsocks-libev.sh &amp;&amp; ./centos-shadowsocks-libev.sh</div><div class="line"></div><div class="line">3、根据shell脚本提示输入相关信息</div><div class="line">1、提示设置SS密码，输入自定义密码后按回车，也可以直接按回车使用默认密码</div><div class="line">2、接下来选择SS要使用的服务器端口，输入自己喜欢的端口， 也可以直接按回车使用默认端口</div><div class="line">3、然后选择加密方式（仅保留相对安全的加密方式）</div><div class="line">4、安装完成后，记住各项信息，在客户端连接时需要用到</div><div class="line"></div><div class="line">4、查看配置</div><div class="line">cat /etc/shadowsocks-libev/config.json</div></pre></td></tr></table></figure><blockquote><p>具体的图文教程可参考：<a href="https://www.24kplus.com/linux/1371.html" target="_blank" rel="external">https://www.24kplus.com/linux/1371.html</a></p></blockquote><p>关于对<code>shadowsocks-libev</code>的介绍及其他具体使用可见其<a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="external">GitHub地址</a>。另外，关于<a href="https://gfw.report/blog/ss_tutorial/zh/" target="_blank" rel="external">如何部署一台抗封锁的Shadowsocks-libev服务器</a>。如上。</p><h2 id="关于CentOS8在Vultr的变动方案"><a href="#关于CentOS8在Vultr的变动方案" class="headerlink" title="关于CentOS8在Vultr的变动方案"></a>关于<code>CentOS8</code>在Vultr的变动方案</h2><p>众所周知，<code>CentOS8</code>已经在<code>Vultr</code>找不到了，已经变成了<code>CentOS8 Steam/CentOS9 Steam</code>，其中也相关联到一些变动，具体就不多说了。在此主要讲讲继续如何搭建以正常使用<code>VPS-SS</code>的过程。</p><p>因为<code>CentOS8 Steam/CentOS9 Steam</code>无法使用以上的命令了，但是还好以上命令还可以套用在<code>CentOS7</code>上。命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">脚本安装：</div><div class="line">一键脚本已集成TCP优化、自动开启Google BBR（限 4.9 或更高版本内核）、自动安装 shadowsocks-libev:</div><div class="line">wget https://down.24kplus.com/linux/shadowsocks/centos-shadowsocks-libev.sh</div><div class="line">执行脚本进行安装:</div><div class="line">chmod +x centos-shadowsocks-libev.sh &amp;&amp; ./centos-shadowsocks-libev.sh</div><div class="line"></div><div class="line">由于 Google BBR 需要内核版本 4.9 以上，如果安装时内核版本低于 4.9 建议先升级内核版本。</div><div class="line">提示：CentOS 7 自带内核版本为 3.10，CentOS 8 自带内核版本为 4.18。</div><div class="line">1、查看内核版本命令：</div><div class="line">uname -r</div><div class="line">2、升级内核</div><div class="line">升级内核需要先导入elrepo的key，然后安装elrepo的yum源：</div><div class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</div><div class="line">yum install -y https://www.elrepo.org/elrepo-release-7.0-4.el7.elrepo.noarch.rpm</div><div class="line"></div><div class="line">如果要安装ml内核，使用如下命令：</div><div class="line">yum --enablerepo=elrepo-kernel -y install kernel-ml-devel kernel-ml</div><div class="line"></div><div class="line">如果要安装lt内核，使用如下命令：</div><div class="line">yum --enablerepo=elrepo-kernel -y install kernel-lt-devel kernel-lt</div><div class="line"></div><div class="line">关于内核版本的定义：</div><div class="line">版本性质：主分支ml(mainline)，稳定版(stable)，长期维护版lt(longterm)</div><div class="line">版本命名格式为 “A.B.C”：</div><div class="line">数字 A 是内核版本号：版本号只有在代码和内核的概念有重大改变的时候才会改变，历史上有两次变化：</div><div class="line">数字 B 是内核主版本号：主版本号根据传统的奇-偶系统版本编号来分配：奇数为开发版，偶数为稳定版</div><div class="line">数字 C 是内核次版本号：次版本号是无论在内核增加安全补丁、修复bug、实现新的特性或者驱动时都会改变</div><div class="line"></div><div class="line">3、设置为默认内核</div><div class="line">grub2-set-default 0</div><div class="line">grub2-mkconfig -o /boot/grub2/grub.cfg </div><div class="line">4、删除旧的内核</div><div class="line">查看已安装的内核</div><div class="line">rpm -qa | grep kernel</div><div class="line">删除旧内核</div><div class="line">yum remove 内核名称</div><div class="line"></div><div class="line">5、reboot重启机器，然后查看内核版本</div><div class="line">uname -r</div><div class="line"></div><div class="line">接下来的过程跟上面的命令所进行的过程一致。</div></pre></td></tr></table></figure><blockquote><p>具体的图文链接来源：<a href="https://www.24kplus.com/linux/1371.html" target="_blank" rel="external">CentOS 一键安装 shadowsocks-libev</a>、<a href="https://www.24kplus.com/linux/210.html" target="_blank" rel="external">升级/更新 Centos 7 内核</a></p></blockquote><h2 id="关于Shadowsocks-Libev在其他Linux系统中的应用"><a href="#关于Shadowsocks-Libev在其他Linux系统中的应用" class="headerlink" title="关于Shadowsocks-Libev在其他Linux系统中的应用"></a>关于<code>Shadowsocks-Libev</code>在其他Linux系统中的应用</h2><p>详细相关内容可见<code>Shadowsocks-Libev</code>的GitHub地址：<a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="external">Shadowsocks-Libev GitHub</a>，其中有其详细介绍以及官方建议使用的说明。以下主要内容摘抄于：<a href="https://gfw.report/blog/ss_tutorial/zh/" target="_blank" rel="external">如何部署一台抗封锁的Shadowsocks-libev服务器</a>。并且在下方有说明的翻译文章链接。我主要是将两者之间的相关内容相互整合了。</p><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><h4 id="生成端口号和密码"><a href="#生成端口号和密码" class="headerlink" title="生成端口号和密码"></a>生成端口号和密码</h4><p>为了配置并维护一台<code>Shadowsocks-libev</code>服务器。 按照这里的配置建议，<code>Shadowsocks-libev</code>服务器可以抵御各种已知的攻击， 包括来自<a href="https://gfw.report/talks/imc20/en/" target="_blank" rel="external">GFW的主动探测</a>和封锁以及<a href="https://www.usenix.org/system/files/sec21summer_len.pdf#page=13" target="_blank" rel="external">partitioning oracle攻击</a>。 <code>Shadowsocks-libev</code>服务器需要一个不寻常的端口号和一个强密码。强密码有助缓解最新发现的针对Shadowsocks服务器的Partitioning Oracle攻击。首先生成一个随机端口号，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo $((1024 + $RANDOM))</div></pre></td></tr></table></figure><p><code>shell</code>函数 <code>RANDOM</code>提供了一个介于 0 和 32767 之间的伪随机整数，因此在计算算术表达式后，将得到一个介于 1024 和 33791 之间的端口号。另外，根据<a href="https://gfw.report/blog/ss_tutorial/zh/" target="_blank" rel="external">如何部署一台抗封锁的Shadowsocks-libev服务器</a>中的说法可以考虑将<code>server_port</code>的值改为 1024 到 65535 之间的任意整数。在以下其余部分的示例中，将使用以下端口为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">5405</div></pre></td></tr></table></figure><p>同时生成一个随机密码，用以下命令在终端生成一个强密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl rand -base64 24</div></pre></td></tr></table></figure><p>该<code>openssl rand -base64</code>函数提供一个随机数，以<code>base-64</code>表示法表示。由于参数24，它将基于 24 字节或 192 位。结果将有 32 个 <code>base-64</code>字符。在本页其余部分的示例中，将使用以下密码为例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vJYEKOgxcZsgPRA4zT3L5Sdu/NCo3KWY</div></pre></td></tr></table></figure><p>通过<code>Snap</code>安装的<code>Shadowsocks-libev</code>默认的配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo nano /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json</div></pre></td></tr></table></figure><p>将上方替换过密码的配置信息复制粘贴到配置文件后，按<code>Ctrl + x</code>退出。 退出时，文本编辑器将问你<code>&quot;Save modified buffer?&quot;</code>，请输入<code>y</code>然后按回车键。</p><h4 id="打开防火墙"><a href="#打开防火墙" class="headerlink" title="打开防火墙"></a>打开防火墙</h4><p>使用<code>ufw</code>来管理<code>Shadowsocks</code>服务器的防火墙。</p><p>在基于<code>Debian</code>的服务器上，可以通过如下命令安装<code>ufw</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt update &amp;&amp; sudo apt install -y ufw</div></pre></td></tr></table></figure><p>然后开放有关<code>ssh</code>和<code>Shadowsocks-libev</code>的端口。请注意，以下命令假设在<code>/var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json</code>中的<code>server_port</code>的值为8388。 如果你的<code>server_port</code>用了其他的值，请对以下命令作相应的修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo ufw allow ssh</div><div class="line">sudo ufw allow 8388</div></pre></td></tr></table></figure><p>现在我启动<code>ufw</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ufw enable</div></pre></td></tr></table></figure><p>启动时如果弹出<code>Command may disrupt existing ssh connections. Proceed with operation (y|n)?</code>，请输入<code>y</code>并按回车键。</p><p>最后，请用<code>sudo ufw status</code>检查一下你的配置是否和下面的一样：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Status: active</div><div class="line"></div><div class="line">To                         Action      From</div><div class="line">--                         ------      ----</div><div class="line">22/tcp                     ALLOW       Anywhere</div><div class="line">8388                       ALLOW       Anywhere</div><div class="line">22/tcp (v6)                ALLOW       Anywhere (v6)</div><div class="line">8388 (v6)                  ALLOW       Anywhere (v6)</div></pre></td></tr></table></figure><p>在<a href="https://www.oilandfish.com/posts/shadowsocks-libev.html" target="_blank" rel="external">How to Install, Configure, and Run Shadowsocks-Libev</a>中的翻译内容来看，如果在服务器上安装了防火墙，则需要打开一个端口以允许<code>Shadowsocks-Libev</code>接收客户端输入。选择<code>Shadowsocks-Libev</code>将侦听的端口。为TCP和可选的UDP打开该端口。</p><p>如果使用firewalld，打开端口的命令将如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">firewall-cmd --permanent --add-port=5405/tcp</div><div class="line">firewall-cmd --reload</div></pre></td></tr></table></figure><p>以下是<code>nftables</code>用户的相同命令模板，假设您正在使用该表<code>inet filter</code>并且端口是5405：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nft add rule inet filter input tcp dport 5405 counter accept</div><div class="line">nft list ruleset &gt; /etc/nftables.conf</div></pre></td></tr></table></figure><p>可以为<code>iptables</code>用户创建类似的规则。同样，假设有一个删除输入的策略，除非它被明确接受，并且假设之前已经安装并配置了<code>iptables-persistent</code>包。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iptables -A INPUT -p tcp --dport 5405 -j ACCEPT</div><div class="line">dpkg-reconfigure iptables-persistent</div></pre></td></tr></table></figure><p>对于<code>ufwfor</code>前端的用户<code>iptables</code>，等效的命令是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ufw allow 5405/tcp</div></pre></td></tr></table></figure><h4 id="使用-Teddysun-脚本安装"><a href="#使用-Teddysun-脚本安装" class="headerlink" title="使用 Teddysun 脚本安装"></a>使用 Teddysun 脚本安装</h4><p>一步安装、配置和运行<code>Shadowsocks-Libev</code>的简单方法是使用<code>Teddysun</code>脚本。在 <code>CentOS</code>平台上，通常必须先安装<code>wget</code>，然后下载并运行脚本<code>shadowsocks-libev.sh</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">yum install wget -y</div><div class="line">wget https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev.sh</div><div class="line">chmod +x shadowsocks-libev.sh</div><div class="line">./shadowsocks-libev.sh</div></pre></td></tr></table></figure><p>在<code>Debian</code>和<code>Ubuntu</code>上，该<code>wget</code>实用程序通常已经安装，因此只需下载并运行脚本<code>shadowsocks-libev-debian.sh</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev-debian.sh</div><div class="line">chmod +x shadowsocks-libev-debian.sh</div><div class="line">./shadowsocks-libev-debian.sh</div></pre></td></tr></table></figure><p>运行脚本将会提示一些问题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">#############################################################</div><div class="line"># Install Shadowsocks-libev server for Debian or Ubuntu #</div><div class="line"># Intro: https://teddysun.com/358.html #</div><div class="line"># Author: Teddysun &lt;i@teddysun.com&gt; #</div><div class="line"># Github: https://github.com/shadowsocks/shadowsocks-libev #</div><div class="line">#############################################################</div><div class="line"></div><div class="line">[Info] Latest version: shadowsocks-libev-3.3.4</div><div class="line"></div><div class="line">Please input password for shadowsocks-libev:</div><div class="line">(Default password: teddysun.com): vJYEKOgxcZsgPRA4zT3L5Sdu/NCo3KWY</div><div class="line"></div><div class="line">Please enter a port for shadowsocks-libev [1-65535]</div><div class="line">(Default port: 18122):5405</div><div class="line"></div><div class="line">Please select stream cipher for shadowsocks-libev:</div><div class="line">1) aes-256-gcm</div><div class="line">2) aes-192-gcm</div><div class="line">3) aes-128-gcm</div><div class="line">4) aes-256-ctr</div><div class="line">5) aes-192-ctr</div><div class="line">6) aes-128-ctr</div><div class="line">7) aes-256-cfb</div><div class="line">8) aes-192-cfb</div><div class="line">9) aes-128-cfb</div><div class="line">10) camellia-128-cfb</div><div class="line">11) camellia-192-cfb</div><div class="line">12) camellia-256-cfb</div><div class="line">13) xchacha20-ietf-poly1305</div><div class="line">14) chacha20-ietf-poly1305</div><div class="line">15) chacha20-ietf</div><div class="line">16) chacha20</div><div class="line">17) salsa20</div><div class="line">18) rc4-md5</div><div class="line">Which cipher you&apos;d select(Default: aes-256-gcm):14</div><div class="line"></div><div class="line">---------------------------</div><div class="line">cipher = chacha20-ietf-poly1305</div><div class="line">---------------------------</div><div class="line"></div><div class="line">Press any key to start...or press Ctrl+C to cancel</div></pre></td></tr></table></figure><p>该脚本下载、编译、配置和运行软件。编译将需要 10 分钟左右。在脚本结束时，会显示一些确认消息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Congratulations, Shadowsocks-libev server install completed!</div><div class="line">Your Server IP : YY.YY.YY.YY</div><div class="line">Your Server Port : 5405</div><div class="line">Your Password : vJYEKOgxcZsgPRA4zT3L5Sdu/NCo3KWY</div><div class="line">Your Encryption Method: chacha20-ietf-poly1305</div></pre></td></tr></table></figure><p>该脚本将配置放在<code>/etc/shadowsocks-libev/config.json. Shadowsocks</code>可执行文件位于<code>/usr/local/bin</code>. 可执行文件<code>ss-server</code>在后台运行并侦听指定端口（5405在的示例中）。编辑配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/shadowsocks-libev/config.json</div></pre></td></tr></table></figure><p>根据最新建议，将模式更改为仅TCP：(之前使用<code>tcp_only</code>模式是为了缓解Partitioning Oracle攻击。但正如Vinicius所指出的，如果你使用了长的随机密码，那么partitioning oracle攻击就不能成功。因此也就不需要禁用UDP代理模式。开启UDP代理模式可能会让经过Shadowsocks代理的视频通话质量更佳。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;server&quot;:&quot;0.0.0.0&quot;,</div><div class="line">&quot;server_port&quot;:5405,</div><div class="line">&quot;password&quot;:&quot;vJYEKOgxcZsgPRA4zT3L5Sdu/NCo3KWY&quot;,</div><div class="line">&quot;timeout&quot;:300,</div><div class="line">&quot;user&quot;:&quot;nobody&quot;,</div><div class="line">&quot;method&quot;:&quot;chacha20-ietf-poly1305&quot;,</div><div class="line">&quot;fast_open&quot;:false,</div><div class="line">&quot;nameserver&quot;:&quot;1.0.0.1&quot;,</div><div class="line">&quot;mode&quot;:&quot;tcp_only&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure><blockquote><p>用<code>chacha20-ietf-poly1305</code>作为加密方式。因为它是其中一种<code>AEAD ciphers</code>。而<code>AEAD ciphers</code>可以抵御来自GFW的主动探测。它同时也是<code>Shadowsocks-libev</code>及<code>OutlineVPN</code>的默认加密方式。</p></blockquote><p>将文件写入磁盘，然后退出编辑器。重启程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/shadowsocks restart</div></pre></td></tr></table></figure><p>应将看到的结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Stopping Shadowsocks-libev success</div><div class="line">Starting Shadowsocks-libev success</div></pre></td></tr></table></figure><h4 id="从存储库安装"><a href="#从存储库安装" class="headerlink" title="从存储库安装"></a>从存储库安装</h4><p>从常规存储库安装是最简单的方法。在<code>Debian</code>或<code>Ubuntu</code>上，发出命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt update &amp;&amp; apt upgrade -y</div><div class="line">apt install shadowsocks-libev -y</div></pre></td></tr></table></figure><p>在<code>Ubuntu 20.04</code>上，这将安装<code>Shadowsocks-Libev</code>版本<code>3.3.4</code>。该服务<code>shadowsocks-libev</code>已经在运行程序<code>ss-server</code>，基于<code>/etc/shadowsocks-libev/config.json</code>. 编辑配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /etc/shadowsocks-libev/config.json</div></pre></td></tr></table></figure><p>插入推荐值，更改端口号和密码以匹配选择的值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;server&quot;:[&quot;::0&quot;,&quot;0.0.0.0&quot;],</div><div class="line">&quot;server_port&quot;:5405,</div><div class="line">&quot;encryption_method&quot;:&quot;chacha20-ietf-poly1305&quot;,</div><div class="line">&quot;password&quot;:&quot;vJYEKOgxcZsgPRA4zT3L5Sdu/NCo3KWY&quot;,</div><div class="line">&quot;mode&quot;:&quot;tcp_only&quot;,</div><div class="line">&quot;fast_open&quot;:false</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>将文件写入磁盘，然后退出编辑器。使用新配置重新启动服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart shadowsocks-libev</div></pre></td></tr></table></figure><h4 id="安装Snap应用商店的方式安装Shadowsocks-Libev-官方推荐安装方式"><a href="#安装Snap应用商店的方式安装Shadowsocks-Libev-官方推荐安装方式" class="headerlink" title="安装Snap应用商店的方式安装Shadowsocks-Libev(官方推荐安装方式)"></a>安装Snap应用商店的方式安装<code>Shadowsocks-Libev</code>(官方推荐安装方式)</h4><blockquote><p>服务器运行<code>Ubuntu 16.04 LTS</code>及以上的版本，<code>Snap</code>已经默认安装好了。<code>Snap</code>已经安装在<code>Ubuntu 20.04</code>上。服务器运行了其他的<code>Linux</code>发行版，你只需跟着对应的发行版<a href="https://snapcraft.io/core" target="_blank" rel="external">安装Snap core</a>。</p></blockquote><p>在<code>Debian</code>上，必须首先安装<code>Snap</code>守护程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt update &amp;&amp; apt upgrade -y</div><div class="line">apt install snapd -y</div></pre></td></tr></table></figure><p>检测服务器已经安装了需要的<code>Snapd</code>和<code>Snap core</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo snap install core</div></pre></td></tr></table></figure><p>安装最新的<code>Shadowsocks-libev</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo snap install shadowsocks-libev --edge</div></pre></td></tr></table></figure><blockquote><p>对于<code>CentOS</code>，详细过程可参阅<a href="https://snapcraft.io/docs/installing-snap-on-centos。另外`Snap`的使用文档亦可参考其链接。" target="_blank" rel="external">https://snapcraft.io/docs/installing-snap-on-centos。另外`Snap`的使用文档亦可参考其链接。</a></p></blockquote><p>在<code>CentOS</code>上，在<code>CentOS</code>上安装<code>Snap</code>：<br><code>Snap</code>可用于<code>CentOS 8</code>和<code>CentOS 7</code>，从7.6版本开始。它也可用于 <code>Red Hat Enterprise Linux (RHEL) 7.6+</code>。</p><p><code>CentOS 8</code>和<code>CentOS 7</code>的软件包位于每个发行版各自的<code>Extra Packages for Enterprise Linux (EPEL)</code>存储库中。<code>CentOS 8</code>和<code>CentOS 7</code>之间添加此存储库的说明略有不同，这就是为什么它们在下面单独列出的原因。如果需要知道运行的是哪个版本的<code>CentOS</code>，请输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat /etc/centos-release.</div></pre></td></tr></table></figure><p>如果还没有将<code>CentOS</code>存储库添加到发行版中，可以按如下方式添加它：<br>将<code>EPEL</code>添加到<code>CentOS 8</code>可以使用以下命令将<code>EPEL</code>存储库添加到 <code>CentOS 8</code>系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo dnf install epel-release</div><div class="line">$ sudo dnf upgrade</div></pre></td></tr></table></figure><p>在<code>CentOS 7</code>中添加<code>EPEL</code>，可以使用以下命令将<code>EPEL</code>存储库添加到 <code>CentOS 7</code>系统：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install epel-release</div></pre></td></tr></table></figure><p><code>EPEL</code>缺少软件包，<code>EPEL</code>存储库中的软件包是根据当前<code>RHEL</code>版本的依赖项构建的，这些软件包由<code>CentOS</code>项目定期从<code>RHEL</code>导入。然而有时，用于构建<code>snapd RPM</code>的特定软件包的确切版本尚未导入到基本<code>CentOS</code>存储库中。这可能会导致类似于以下的丢失包错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Problem: package snapd-2.42.1-1.el8.x86_64 requires snapd-selinux = 2.42.1-1.el8,</div><div class="line">but none of the providers can be installed.</div></pre></td></tr></table></figure><p>在这种情况下，可以启用持续发布 (CR)存储库，而不是等待更新<code>EPEL</code>包。此储存库包含用于<code>CentOS</code>下一个版本的组件，并应满足任何缺失的版本不匹配依赖项。</p><p><code>CentOS</code>安装<code>Snapd</code>，将<code>EPEL</code>存储库添加到<code>CentOS</code>安装后，只需安装<code>Snapd</code>软件包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo yum install snapd</div></pre></td></tr></table></figure><p>安装后，需要启用管理主 snap 通信套接字的systemd单元：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo systemctl enable --now snapd.socket</div></pre></td></tr></table></figure><p>要启用经典/var/lib/snapd/snap快照支持，请输入以下内容以在和之间创建符号链接/snap：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo ln -s /var/lib/snapd/snap /snap</div></pre></td></tr></table></figure><p>注销并重新登录或重新启动系统以确保正确更新 snap 的路径。</p><p><code>Snap</code>现已安装并准备就绪！如果使用的是台式机，下一步是安装<code>Snap Store</code>应用程序。</p><p>安装<code>snap</code>守护程序后，安装<code>Shadowsocks-Libev</code>的最新稳定<code>snap</code>，如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">snap install core</div><div class="line">snap install shadowsocks-libev --edge</div></pre></td></tr></table></figure><p>编辑配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vi /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json</div></pre></td></tr></table></figure><p>插入推荐值，更改端口号和密码以匹配您选择的值：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">&quot;server&quot;:[&quot;::0&quot;,&quot;0.0.0.0&quot;],</div><div class="line">&quot;server_port&quot;:5405,</div><div class="line">&quot;encryption_method&quot;:&quot;chacha20-ietf-poly1305&quot;,</div><div class="line">&quot;password&quot;:&quot;vJYEKOgxcZsgPRA4zT3L5Sdu/NCo3KWY&quot;,</div><div class="line">&quot;mode&quot;:&quot;tcp_only&quot;,</div><div class="line">&quot;fast_open&quot;:false</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>将文件写入磁盘，然后退出编辑器。使用您的配置启动服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start snap.shadowsocks-libev.ss-server-daemon</div></pre></td></tr></table></figure><blockquote><p>以上主要摘抄内容翻译至：<a href="https://www.oilandfish.com/posts/shadowsocks-libev.html" target="_blank" rel="external">How to Install, Configure, and Run Shadowsocks-Libev</a></p></blockquote><p>其中还涉及到其他关于<code>Shadowsocks-Libev</code>的安装方式，以及各种平台下的可运行<code>Shadowsocks-Libev</code>的应用软件的内容，可自行查看。</p><h4 id="基于Snap安装运行Shadowsocks-libev"><a href="#基于Snap安装运行Shadowsocks-libev" class="headerlink" title="基于Snap安装运行Shadowsocks-libev"></a>基于<code>Snap</code>安装运行<code>Shadowsocks-libev</code></h4><p>以下来自根据<a href="https://gfw.report/blog/ss_tutorial/zh/" target="_blank" rel="external">如何部署一台抗封锁的Shadowsocks-libev服务器</a>中的说法。以下内容均为其中内容的摘抄。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">启动Shadowsocks-libev：</div><div class="line">sudo systemctl start snap.shadowsocks-libev.ss-server-daemon.service</div><div class="line"></div><div class="line">设置`Shadowsocks-libev`开机自启动：</div><div class="line">sudo systemctl enable snap.shadowsocks-libev.ss-server-daemon.service</div></pre></td></tr></table></figure><p>维护检查运行状态和日志，以下命令可以查看Shadowsocks-libev的运行状态：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl status snap.shadowsocks-libev.ss-server-daemon.service</div></pre></td></tr></table></figure><blockquote><p>如果你看到绿色的<code>Active: active (running)</code>，那么你的<code>Shadowsocks-libev</code>服务器就在正常的运行； 如果你看到红色的<code>Active: failed</code>，请用跳至如下命令<code>journalctl -u snap.shadowsocks-libev.ss-server-daemon.service</code>的尾部查看问题出在哪里了。</p></blockquote><p>重新加载配置文件。每当你修改过配置文件后，请用如下命令重启<code>Shadowsocks-libev</code>以加载修改后的文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo systemctl restart snap.shadowsocks-libev.ss-server-daemon.service</div></pre></td></tr></table></figure><p>另外配置备用端口来缓解端口封锁，截止2021年11月7日，我们收到零星的用户报告按此教程配置的服务器仍遭到了端口封锁。因为报告的封锁方式均为端口封锁，而非IP封锁，我们在此分享一个用备用端口来缓解端口括封锁的方法。</p><p>你可以在服务器上使用以下命令来将服务器从12000到12010端口接收到的<code>TCP</code>和<code>UDP</code>流量全部转发到8388端口：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo iptables -t nat -A PREROUTING -p tcp --dport 12000:12010 -j REDIRECT --to-port 8388</div><div class="line">sudo iptables -t nat -A PREROUTING -p udp --dport 12000:12010 -j REDIRECT --to-port 8388</div></pre></td></tr></table></figure><p>记得将12000:12010替换成一个只有你自己知道的端口号，或者端口区间(我们建议从1024到65535之间任选几个端口或一个区间)。将8388端口替换成你的<code>Shadowsocks</code>服务端实际使用的端口。这样一来，如果你使用的12000端口遭到了封锁，那么你无须更换IP，或者登录服务器修改配置文件。而是只需要在客户端（电脑或者手机上）将端口从12000改为12001就可以继续使用了。</p><p>如果你配置正确，那么以下命令的输出应该类似于：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">sudo iptables -t nat -L PREROUTING -nv --line-number</div><div class="line">&gt;&gt;&gt;</div><div class="line">Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)</div><div class="line">num   pkts bytes target     prot opt in     out     source               destination</div><div class="line">1        0     0 REDIRECT   tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpts:12000:12010 redir ports 8388</div><div class="line">2        0     0 REDIRECT   udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpts:12000:12010 redir ports 8388</div></pre></td></tr></table></figure><p>注意任何1024到65535的端口都可以作为备用端口。即使使用<code>ephermeral</code>端口(/proc/sys/net/ipv4/ip_local_port_range)作为配用端口也不会干扰服务器正常的向外连接。</p><blockquote><p>在此篇关于<a href="https://gfw.report/blog/ss_tutorial/zh/" target="_blank" rel="external">如何部署一台抗封锁的Shadowsocks-libev服务器</a>的文章中，有许多当下值得探究的问题以及许多道友一同困惑的问题可在此讨论获取一定解答。</p></blockquote><p>目前使用的还是基于一键命令式的<code>Shadowsocks-libev</code>应用在<code>CentOS 7</code>上，其中通过升级内核到<code>4.9</code>以上以配合BBR的使用。若是这个方法失效并且不可再稳定使用，会启用以上积累的知识：<code>安装Snap应用商店</code>、<code>安装配置Shadowsocks-libev</code>、<code>用别的加密方式(chacha20-ietf-poly1305)以及强密码(命令行openssl rand -base64 16生成)</code>、<code>配置防火墙</code>、<code>通过改端口检查被封的原因</code>、<code>通过更换IP检查被封的原因</code>。</p><h2 id="备份一键安装脚本专用"><a href="#备份一键安装脚本专用" class="headerlink" title="备份一键安装脚本专用"></a>备份一键安装脚本专用</h2><h3 id="shadowsocks-libev-snap一键安装脚本，使用的UFW防火墙"><a href="#shadowsocks-libev-snap一键安装脚本，使用的UFW防火墙" class="headerlink" title="shadowsocks-libev snap一键安装脚本，使用的UFW防火墙"></a>shadowsocks-libev snap一键安装脚本，使用的UFW防火墙</h3><blockquote><p>来源摘抄地址：<a href="https://github.com/lanlandezei/shadowsocks-libev" target="_blank" rel="external">lanlandezei/shadowsocks-libev</a>。</p></blockquote><p>支持系统： <code>debian9+ ubuntu16+ centos7.5+ fedora</code>。</p><p>只支持这两种加密协议<code>aes-256-gcm</code>、<code>chacha20-ietf-poly1305</code>，支持<code>AES</code>就用<code>aes-256-gcm</code>，不支持就用<code>chacha20-ietf-poly1305</code>，其他加密方式自行修改配置文件。想长久稳定使用，请务必使用UFW防火墙添加客户端使用的IP，和SS服务的端口，选择5会安装UFW防火墙，安装后默认只开放22端口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">安装脚本</div><div class="line">wget https://raw.githubusercontent.com/lanlandezei/shadowsocks-libev/main/install.sh &amp;&amp; chmod +x install.sh &amp;&amp; bash install.sh</div><div class="line">请选择执行的操作</div><div class="line">1.选择安装的加密协议：aes-256-gcm</div><div class="line">2.选择安装的加密协议：chacha20-ietf-poly1305</div><div class="line">3.检查SS运行状态</div><div class="line">4.重启SS</div><div class="line">5.防火墙添加放行IP和端口(重要)</div><div class="line">—————————————————————————</div><div class="line">配置文件路径：/var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json</div><div class="line">修改配置文件请重启SS</div><div class="line">选择执行的操作1-5：</div></pre></td></tr></table></figure><p>防火墙添加放行IP和端口:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">打开ip138.com或者百度显示的IP填入</div><div class="line">只能填入以下3种格式，&lt;&lt;示例&gt;&gt;</div><div class="line">--------------------------</div><div class="line">单个IP：114.114.114.114</div><div class="line">IP段：114.114.114.0/24</div><div class="line">更大范围：114.114.0.0/16</div><div class="line">--------------------------</div><div class="line">请输入添加放行防火墙的IP或IP段：   #客户端公网IP</div><div class="line">请输入放行端口：                  #SS服务端的端口</div></pre></td></tr></table></figure><h2 id="如何部署一台抗封锁的Shadowsocks-libev服务器"><a href="#如何部署一台抗封锁的Shadowsocks-libev服务器" class="headerlink" title="如何部署一台抗封锁的Shadowsocks-libev服务器"></a>如何部署一台抗封锁的Shadowsocks-libev服务器</h2><blockquote><p>本段文字内容基于<a href="https://gfw.report/blog/ss_tutorial/zh/" target="_blank" rel="external">如何部署一台抗封锁的Shadowsocks-libev服务器</a>。若是在下方的配置当中出现问题，可在此篇文章中查看评论区或者是解答区寻求帮助。</p></blockquote><p>本次内容基于<code>Debian</code>的服务器上。因为以上的一键加<code>BBR</code>的形式已经不管用了，经常性失效，没办法只好使用新的方式了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">安装snapd，Debian 9及以上，使用命令:</div><div class="line">sudo apt update</div><div class="line">sudo apt install snapd</div><div class="line">sudo snap install core</div><div class="line">下载Core命令:</div><div class="line">sudo snap install core</div><div class="line"></div><div class="line">安装Shadowsocks-libev：</div><div class="line">sudo snap install shadowsocks-libev --edge</div><div class="line"></div><div class="line">配置文件，复制以下内容，粘贴到终端即可:</div><div class="line">&#123;</div><div class="line">    &quot;server&quot;:[&quot;::0&quot;,&quot;0.0.0.0&quot;],</div><div class="line">    &quot;server_port&quot;:8388,</div><div class="line">    &quot;method&quot;:&quot;chacha20-ietf-poly1305&quot;,</div><div class="line">    &quot;password&quot;:&quot;ExamplePassword&quot;,</div><div class="line">    &quot;mode&quot;:&quot;tcp_and_udp&quot;,</div><div class="line">    &quot;fast_open&quot;:false</div><div class="line">&#125;</div><div class="line">其中，可用的命令：</div><div class="line">&quot;server_port&quot;:echo $((1024 + $RANDOM))</div><div class="line">&quot;password&quot;:openssl rand -base64 16</div><div class="line">注意：一定要记好端口号和密码！</div><div class="line"></div><div class="line">打开Shadowsocks-libev默认的配置文件：</div><div class="line">sudo nano /var/snap/shadowsocks-libev/common/etc/shadowsocks-libev/config.json</div><div class="line">注意：将上方替换过密码的配置信息复制粘贴到配置文件后， 按Ctrl + x退出。 退出时，文本编辑器将问你&quot;Save modified buffer?&quot;，请输入y然后按回车键。</div><div class="line"></div><div class="line">使用ufw来管理Shadowsocks服务器的防火墙。</div><div class="line">在基于Debian的服务器上，可以通过如下命令安装ufw：</div><div class="line">sudo apt update &amp;&amp; sudo apt install -y ufw</div><div class="line"></div><div class="line">如果你的server_port用了其他的值，请对以下命令作相应的修改：</div><div class="line">sudo ufw allow ssh</div><div class="line">sudo ufw allow 8388</div><div class="line">现在我们启动ufw:</div><div class="line">sudo ufw enable</div><div class="line">注意：启动时如果弹出Command may disrupt existing ssh connections. Proceed with operation (y|n)?，请输入y并按回车键。</div><div class="line"></div><div class="line">最后，用：</div><div class="line">sudo ufw status</div><div class="line">检查一下你的配置是否和下面的一样：</div><div class="line">Status: active</div><div class="line"></div><div class="line">To                         Action      From</div><div class="line">--                         ------      ----</div><div class="line">22/tcp                     ALLOW       Anywhere</div><div class="line">8388                       ALLOW       Anywhere</div><div class="line">22/tcp (v6)                ALLOW       Anywhere (v6)</div><div class="line">8388 (v6)                  ALLOW       Anywhere (v6)</div><div class="line"></div><div class="line">运行启动Shadowsocks-libev：</div><div class="line">sudo systemctl start snap.shadowsocks-libev.ss-server-daemon.service</div><div class="line">并且设置Shadowsocks-libev开机自启动：</div><div class="line">sudo systemctl enable snap.shadowsocks-libev.ss-server-daemon.service</div><div class="line"></div><div class="line">维护检查运行状态和日志，以下命令可以查看Shadowsocks-libev的运行状态：</div><div class="line">sudo systemctl status snap.shadowsocks-libev.ss-server-daemon.service</div><div class="line">注意：如果你看到绿色的Active: active (running)，那么你的Shadowsocks-libev服务器就在正常的运行； 如果你看到红色的Active: failed，请用跳至如下命令journalctl -u snap.shadowsocks-libev.ss-server-daemon.service的尾部查看问题出在哪里了！</div><div class="line"></div><div class="line">重新加载配置文件，每当你修改过配置文件后，请用如下命令重启Shadowsocks-libev以加载修改后的文件：</div><div class="line">sudo systemctl restart snap.shadowsocks-libev.ss-server-daemon.service</div><div class="line"></div><div class="line">配置备用端口来缓解端口封锁，按此教程配置的服务器仍遭到了端口封锁，</div><div class="line">而非IP封锁，在此分享一个用备用端口来缓解端口括封锁的方法。可以在服务器上使用以下命令来将服务器从12000到12010端口接收到的TCP和UDP流量全部转发到8388端口：</div><div class="line">sudo iptables -t nat -A PREROUTING -p tcp --dport 12000:12010 -j REDIRECT --to-port 8388</div><div class="line">sudo iptables -t nat -A PREROUTING -p udp --dport 12000:12010 -j REDIRECT --to-port 8388</div><div class="line">记得：</div><div class="line">将12000:12010替换成一个只有你自己知道的端口号，或者端口区间（建议从1024到65535之间任选几个端口或一个区间）。将8388端口替换成你的Shadowsocks服务端实际使用的端口。这样一来，如果使用的12000端口遭到了封锁，那么无须更换IP，或者登录服务器修改配置文件。而是只需要在客户端（电脑或者手机上）将端口从12000改为12001就可以继续使用了。如果你配置正确，那么以下命令的输出应该类似于：</div><div class="line"></div><div class="line">sudo iptables -t nat -L PREROUTING -nv --line-number</div><div class="line">Chain PREROUTING (policy ACCEPT 0 packets, 0 bytes)</div><div class="line">num   pkts bytes target     prot opt in     out     source               destination</div><div class="line">1        0     0 REDIRECT   tcp  --  *      *       0.0.0.0/0            0.0.0.0/0            tcp dpts:12000:12010 redir ports 8388</div><div class="line">2        0     0 REDIRECT   udp  --  *      *       0.0.0.0/0            0.0.0.0/0            udp dpts:12000:12010 redir ports 8388</div><div class="line">注意：任何1024到65535的端口都可以作为备用端口。即使使用ephermeral端口(/proc/sys/net/ipv4/ip_local_port_range)作为配用端口也不会干扰服务器正常的向外连接。</div></pre></td></tr></table></figure><blockquote><p>各系统下载<a href="https://snapcraft.io/core" target="_blank" rel="external">snapcore地址</a>。</p></blockquote><p>若是这个方式也失效了，只好启用<code>伪装nginx+ws+tls</code>之类的方式了。可参考文章<a href="https://www.4spaces.org/install-v2ray-on-debian-2021/" target="_blank" rel="external">2021最新在Debian系统基于nginx搭建v2ray服务端配置vmess+tls+websocket详细教程（图文）</a>。</p><p>如今遇到的新问题是：在用到一定时候可在流量状态下正常使用，但是在Wi-Fi状态下不能使用了。除了本身网络波动的原因之外，经过在网上得到的一些解答估计是与运营商的一些策略有关。另外，平时将<code>Shadowsocks</code>更新到最新版本或许是个不错的选择，能够避免一些现存的问题。</p><p>若使用这个脚本期间遇到PC端在Wi-Fi情况下无法正常使用的问题：先使用移动端的流量运行(一般都是可以在移动端流量下正常使用的)，继而再在PC端的Wi-Fi状态下尝试使用，会发现此时已经可以正常使用了。</p><h1 id="关于V2Ray的收藏链接-备用取代SS"><a href="#关于V2Ray的收藏链接-备用取代SS" class="headerlink" title="关于V2Ray的收藏链接(备用取代SS)"></a>关于V2Ray的收藏链接(备用取代SS)</h1><ul><li><p><a href="https://www.hijk.pw/centos-one-click-install-v2ray/" target="_blank" rel="external">V2Ray一键脚本</a></p></li><li><p><a href="https://www.hijk.pw/v2rayu-config-tutorial/" target="_blank" rel="external">V2rayU配置教程</a></p></li></ul><blockquote><p>V2RayU GitHub：<a href="https://github.com/yanue/V2rayU/releases" target="_blank" rel="external">https://github.com/yanue/V2rayU/releases</a></p></blockquote><ul><li><p><a href="https://www.hijk.pw/v2ray-mac-client-download/" target="_blank" rel="external">V2Ray mac客户端下载</a></p></li><li><p><a href="https://www.hijk.pw/shadowrocket-config-v2ray-tutorial/" target="_blank" rel="external">Shadowrocket配置V2Ray教程</a></p></li><li><p><a href="https://www.hijk.pw/v2ray-ios-client-download/" target="_blank" rel="external">V2Ray ios客户端下载</a></p></li><li><p><a href="http://app.zynet.xyz/" target="_blank" rel="external">软件下载链接</a></p></li><li><p><a href="https://tlanyan.me/v2ray-tutorial/" target="_blank" rel="external">V2Ray教程</a></p></li></ul><blockquote><p><a href="https://tlanyan.me/v2ray-traffic-mask/" target="_blank" rel="external">V2Ray高级技巧：流量伪装</a></p></blockquote><ul><li><a href="https://v2ray.com/" target="_blank" rel="external">V2Ray官网</a></li></ul><blockquote><p>V2Ray GitHub：    <a href="https://github.com/233boy/v2ray/wiki/V2Ray%E4%B8%80%E9%94%AE%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC" target="_blank" rel="external">GitHub地址</a></p></blockquote><ul><li><p><a href="https://tlanyan.me/v2ray-clients-download/" target="_blank" rel="external">V2Ray客户端</a></p></li><li><p><a href="https://www.4spaces.org/digitalocean-build-v2ray-0-1/" target="_blank" rel="external">从零开始：史上最详尽V2Ray搭建图文教程</a></p></li><li><p><a href="https://www.echoteen.com/v2ray-install-safe.html" target="_blank" rel="external">V2ray安装教程</a></p></li></ul><p>……..</p><h1 id="关于trojan翻墙工具备用-必要时用于取代SS"><a href="#关于trojan翻墙工具备用-必要时用于取代SS" class="headerlink" title="关于trojan翻墙工具备用(必要时用于取代SS)"></a>关于trojan翻墙工具备用(必要时用于取代SS)</h1><ul><li>trojan GitHub：<a href="https://github.com/trojan-gfw/trojan" target="_blank" rel="external">trojan GitHub地址</a></li></ul><p>………</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SS </tag>
            
            <tag> 科学上网 </tag>
            
            <tag> VPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读西游，得“真经”</title>
      <link href="/2018/09/27/%E8%AF%BB%E8%A5%BF%E6%B8%B8%EF%BC%8C%E5%BE%97%E2%80%9C%E7%9C%9F%E7%BB%8F%E2%80%9D/"/>
      <url>/2018/09/27/%E8%AF%BB%E8%A5%BF%E6%B8%B8%EF%BC%8C%E5%BE%97%E2%80%9C%E7%9C%9F%E7%BB%8F%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<p>这次兴趣来了想读读西游原著，之前也读过一些金典原著，都是读过几章节便草草了事了…</p><p>由于很喜欢孙悟空这个角色，所以才有心血来潮之意想认真读读，其中又惊又喜，发现了一个不同的孙悟空，各位对西游感兴趣的真应该好好读读呀。</p><blockquote><ul><li><a href="https://pan.baidu.com/s/1ygYeZSm2jSIm7gJFPJjDvA" target="_blank" rel="external">西游记原著下载链接</a></li></ul></blockquote><p>西游记乃是我等先辈所流传下来的文化宝藏，值得我等后辈花点时间精力来进行基本上的纠正解读，以此来”普度众生”，哈哈。</p><p>所以，记下的这篇文章仅是起到普及有关西游知识之用。</p><a id="more"></a><h1 id="西游记别全名"><a href="#西游记别全名" class="headerlink" title="西游记别全名"></a>西游记别全名</h1><p>见文第一章：</p><blockquote><p>诗曰:<br>  混沌未分天地乱，茫茫渺渺无人见。<br>  自从盘古破鸿蒙，开辟从兹清浊辨。<br>  覆载群生仰至仁，发明万物皆成善。<br>  欲知造化会元功，须看西游释厄传。</p></blockquote><p>在此我们可以看到西游记的别全名为“<strong>西游释厄传</strong>”。</p><h1 id="孙悟空“美猴王”一称呼由来"><a href="#孙悟空“美猴王”一称呼由来" class="headerlink" title="孙悟空“美猴王”一称呼由来"></a>孙悟空“美猴王”一称呼由来</h1><p>见文第一章：</p><blockquote><p>…石猿端坐上面道: “列位呵，‘人而无信，不知其可。’你们才说有本事进得来，出得去，不伤身体者，就拜他 为王。我如今进来又出去，出去又进来，寻了这一个洞天与列位安眠稳睡，各享成家之福， 何不拜我为王?”众猴听说，即拱伏无违。一个个序齿排班，朝上礼拜，都称“千岁大王”。 自此，石猴高登王位，将“石”字儿隐了，遂称美猴王。…</p></blockquote><p>进得来进得去指的是水帘洞。以上解读已经清晰明了，孙悟空以大胆之能征服了众猴，使得众猴甘拜称呼孙悟空为“美猴王”了。在这之后作者本人也经常引用“美猴王”来称呼孙悟空，这就容易造成人们也如出一辙的叫孙悟空为美猴王了，更有甚者，以为孙悟空长得漂亮…其实不然，可见我下面的纠正解读。</p><h1 id="孙悟空为何要执意学道，离走花果山？"><a href="#孙悟空为何要执意学道，离走花果山？" class="headerlink" title="孙悟空为何要执意学道，离走花果山？"></a>孙悟空为何要执意学道，离走花果山？</h1><p>见文第一章：</p><blockquote><p>…一日，与群猴喜宴之间，忽然忧恼，堕下泪来。众猴慌忙罗拜道:“大王何为烦恼?”猴王道:“我虽在欢喜之时，却有一点儿远虑，故此烦恼。” 众猴又笑道:“大王好不知足!我等日日欢会，在仙山福地，古洞神州，不伏麒麟辖，不伏凤 凰管，又不伏人间王位所拘束，自由自在，乃无量之福，为何远虑而忧也?”猴王道:“今日 虽不归人王法律，不惧禽兽威服，将来年老血衰，暗中有阎王老子管着，一旦身亡，可不枉 生世界之中，不得久住天人之内?”众猴闻此言，一个个掩面悲啼，俱以无常为虑。只见那班部中，忽跳出一个通背猿猴，厉声高叫道:“大王若是这般远虑，真所谓道心开 发也!如今五虫之内，惟有三等名色，不伏阎王老子所管。”猴王道:“你知那三等人?”猿 猴道:“乃是佛与仙与神圣三者，躲过轮回，不生不灭，与天地山川齐寿。”猴王道:“此三者 居于何所?”猿猴道:“他只在阎浮世界之中，古洞仙山之内。”猴王闻之，满心欢喜，道: “我明日就辞汝等下山，云游海角，远涉天涯，务必访此三者，学一个不老长生，常躲过阎 君之难。”噫!这句话，顿教跳出轮回网，致使齐天大圣成。众猴鼓掌称扬，都道:“善哉! 善哉!我等明日越岭登山，广寻些果品，大设筵宴送大王也。”…</p></blockquote><p>在此的“猴王”指的是孙悟空。孙悟空是个有情有义有担当的首领，是个为民为小的们为花果山着想的好大王，他有远见并且有勇有谋有智慧，愿意为了小的们独自一人去花费数年走尽千山万水，忍受人间俗人们的骂和打去寻求永生之道,以便学成之后带回来教授与小的们。在花果山他是个不折不扣的英雄。这也是为何孙悟空每次一回来花果山(在电视剧中就能感受到)就那么深得猴心，猴们和他的感情相互都很深的原因。其中论据可见下文证：</p><blockquote><p>…次日，美猴王早起， 教:“小的们，替我折些枯松，编作筏子，取个竹竿作篙，收拾些果品之类，我将去也。”果 独自登筏，尽力撑开，飘飘荡荡，径向大海波中，趁天风，来渡南赡部洲地界。…</p><p>…猴王参访仙道，无缘得遇。在于南赡部洲，串长城，游小县，不觉八九年馀。忽行至西洋大海，他想着海外必有神仙。独自个依前作筏，又飘过西海，直至西牛贺洲地界。…</p><p>…祖师道:“既是逐渐行来的也罢。你姓甚么?”猴王又道:“我无性。人若骂我，我也不 恼;若打我，我也不嗔，只是陪个礼儿就罢了。一生无性。”…</p></blockquote><h1 id="孙悟空的本性"><a href="#孙悟空的本性" class="headerlink" title="孙悟空的本性"></a>孙悟空的本性</h1><p>暂且不谈孙悟空自从石中蹦出来以能力以胆量征服众猴称王得“美猴王”美名的事(不是强迫众猴俯首称臣)，况且可见下文：</p><blockquote><p>…将那跑不动的拿住一个，剥了他衣裳，也学人 穿在身上，摇摇摆摆，穿州过府，在市尘中，学人礼，学人话。朝餐夜宿，一心里访问佛仙 神圣之道，觅个长生不老之方。…(兽有兽语，孙悟空与小的们交谈用的不是人语。)</p><p>…猴王用手扯住樵夫道:“老兄， 你便同我去去。若还得了好处，决不忘你指引之恩。”樵夫道:“你这汉子，甚不通变。我方 才这般与你说了，你还不省?假若我与你去了，却不误了我的生意?老母何人奉养?我要斫 柴，你自去，自去。”…</p><p>祖师道:“既是逐渐行来的也罢。你姓甚么?”猴王又道:“我无性。人若骂我，我也不 恼;若打我，我也不嗔，只是陪个礼儿就罢了。一生无性。”…</p></blockquote><p>经过上面的简单分析解读，孙悟空生来性本善，在人间行走懂得去粗取精，学人礼貌行事，也学人懂得用回报来感谢他人帮忙，是只好学并且懂得精学，聪明的猴子(遵守人间规则方才能在人间行走的游刃有余)。另外也可这么分析，他生来就是无性的，如同一张白纸，这原因已经明了，不再啰嗦了，明者自明。</p><h1 id="“孙悟空”名字的由来"><a href="#“孙悟空”名字的由来" class="headerlink" title="“孙悟空”名字的由来"></a>“孙悟空”名字的由来</h1><p>见文第一章：</p><blockquote><p>…祖师道:“既是逐渐行来的也罢。你姓甚么?”猴王又道:“我无性。人若骂我，我也不 恼;若打我，我也不嗔，只是陪个礼儿就罢了。一生无性。”祖师道:“不是这个性。你父母 原来姓甚么?”猴王道:“我也无父母。”祖师道:“既无父母，想是树上生的?”猴王道:“我 虽不是树生，却是石里长的。我只记得花果山上有一块仙石，其年石破，我便生也。”祖师闻 言，暗喜道:“这等说，却是天地生成的。你起来走走我看。”猴王纵身跳起，拐呀拐的走了 两遍。祖师笑道:“你身躯虽是鄙陋，却像个食松果的猢狲。我与你就身上取个姓氏，意思教 你姓‘猢’。猢字去了个兽傍，乃是古月。古者，老也;月者，阴也。老阴不能化育，教你姓 ‘狲’倒好。狲字去了兽傍，乃是个子系。子者，儿男也;系者，婴细也。正合婴儿之本论。 教你姓‘孙’罢。”猴王听说，满心欢喜，朝上叩头道:“好!好!好!今日方知姓也。万望 师父慈悲!既然有姓，再乞赐个名字，却好呼唤。”祖师道:“我门中有十二个字，分派起名 到你乃第十辈之小徒矣。”猴王道:“那十二个字?”祖师道:“乃广、大、智、慧、真、如、 性、海、颖、悟、圆、觉十二字。排到你，正当‘悟’字。与你起个法名叫做‘孙悟空’好 么?”猴王笑道:“好!好!好!自今就叫做孙悟空也!”正是:鸿蒙初辟原无姓，打破顽空 须悟空。…</p></blockquote><p>在上“祖师”所指<strong>须菩提祖师</strong>；“猴王”即指美猴王是也(在此处的“美猴王”其实是花果山上的猴臣子们所奉石猴之名)。</p><h1 id="孙悟空为何不能继续留在须菩提祖师身边得道"><a href="#孙悟空为何不能继续留在须菩提祖师身边得道" class="headerlink" title="孙悟空为何不能继续留在须菩提祖师身边得道"></a>孙悟空为何不能继续留在须菩提祖师身边得道</h1><p>见文第二章：</p><blockquote><p>…一日，春归夏至，大众都在松树下会讲多时。大众曰:“悟空，你是那世修来的缘法?前 日师父拊耳低言，传与你的躲三灾变化之法，可都会么?”悟空笑道:“不瞒诸兄长说，一则 是师父传授，二来也是我昼夜殷勤，那几般儿都会了。”大众道:“趁此良时，你试演演，让 我等看看。”悟空闻说，抖搜精神，卖弄手段道:“众师兄请出个题目。要我变化甚么?”大 众道:“就变棵松树罢。”悟空捻着诀，念动咒语，摇身一变，就变做一棵松树。真个是:郁郁含烟贯四时，凌云直上秀贞姿。全无一点妖猴像，尽是经霜耐雪枝。大众见了，鼓掌呀呀大笑。都道:“好猴儿!好猴儿!” 不觉的嚷闹，惊动了祖师。祖师急拽杖出门来问道:“是何人在此喧哗?”大众闻呼，慌忙检 束，整衣向前。悟空也现了本相，杂在丛中道:“启上尊师，我等在此会讲，更无外姓喧哗。” 祖师怒喝道:“你等大呼小叫，全不像个修行的体段!修行的人，口开神气散，舌动是非生。 如何在此嚷笑?”大众道:“不敢瞒师父，适才孙悟空演变化耍子。教他变棵松树，果然是棵 松树，弟子们俱称扬喝采，故高声惊冒尊师，望乞恕罪。”祖师道:“你等起去。”叫:“悟空， 过来!我问你弄甚么精神，变甚么松树?这个工夫，可好在人前卖弄?假如你见别人有，不 要求他?别人见你有，必然求你。你若畏祸，却要传他;若不传他，必然加害:你之性命又 不可保。”悟空叩道:“只望师父恕罪!”祖师道:“我也不罪你，但只是你去吧。”悟空闻此言， 满眼堕泪道:“师父教我往那里去?”祖师道:“你从那里来，便从那里去就是了。”悟空顿然 醒悟道:“我自东胜神洲傲来国花果山水帘洞来的。”祖师道:“你快回去，全你性命，若在此 间，断然不可!”悟空领罪，“上告尊师，我也离家有二十年矣，虽是回顾旧日儿孙，但念师 父厚恩未报，不敢去。”祖师道:“那里甚么恩义?你只是不惹祸不牵带我就罢了!”悟空见没奈何，只得拜辞，与众相别。祖师道:“你这去，定生不良。凭你怎么惹祸行凶， 却不许说是我的徒弟。你说出半个字来，我就知之，把你这猢狲剥皮锉骨，将神魂贬在九幽 之处，教你万劫不得翻身!”悟空道:“决不敢提起师父一字，只说是我自家会的便罢。”…</p></blockquote><p>大众在此指的是须菩提祖师的弟子们(其中包括孙悟空)。孙悟空生来便有一番天赋，学东西很快，深得须菩提祖师喜爱，这一番天赋必与孙悟空其本就是天地日月精华所铸成有关。如上文亦知，孙悟空也是个有情有义，有血有肉之物。另外可在此收获到重要信息，孙悟空本身的能力其实是很有限的，他从一穷二白花费数年之久来此学道，他虽然得须菩提祖师喜爱私下传授了几功夫，但是从上可知他只是个“半路被出师”的学徒罢了，这些都能为以后他能力不足的体现做伏笔。<strong>孙悟空并不是有可以“无法无天”的本事的，而且孙悟空本身性格也不够“无法无天”，而是拘于温和有礼的类型，这点从我上面的解读可得知一二。</strong></p><h1 id="筋斗云的由来"><a href="#筋斗云的由来" class="headerlink" title="筋斗云的由来"></a>筋斗云的由来</h1><p>见下文第二章：</p><blockquote><p>…祖师道:“凡诸仙腾云，皆跌足而起，你却不是这般。我才见你去，连扯方才 跳上。我今只就你这个势，传你个‘筋斗云’罢。”悟空又礼拜恳求，祖师却又传个口诀道: “这朵云，捻着诀，念动真言，攒紧了拳，对身一抖，跳将起来，一筋斗就有十万八千里路哩!”大众听说，一个个嘻嘻笑道:“悟空造化!若会这个法儿，与人家当铺兵，送文书，递 报单，不管那里都寻了饭吃!”师徒们天昏各归洞府。这一夜，悟空即运神炼法，会了筋斗云。 逐日家无拘无束，自在逍遥此一长生之美。…</p></blockquote><p>从上可知，筋斗云是诸神仙的标配，其中可能就名字的叫法不同且配置各有不同而已(比如太白金星的叫做“祥云”，配置不及孙悟空的筋斗云快疾)，而且另外要说的是关于总是说的孙悟空一跟头十万八千里，其实也是跟筋斗云是有关系的，并不是单纯的以跟头就可以达到十万八千里路的。</p><p>“祥云”不及孙悟空的筋斗云快疾证据：</p><blockquote><p>…那太白金星与美猴王，同出了洞天深处，一齐驾云而起。原来悟空筋斗云比众不同，十 分快疾，把个金星撇在脑后，先至南天门外。…</p></blockquote><h1 id="孙悟空的大概真实样子"><a href="#孙悟空的大概真实样子" class="headerlink" title="孙悟空的大概真实样子"></a>孙悟空的大概真实样子</h1><p>孙悟空的大概样子以作者的描述为准。</p><p>见下文第一章：</p><blockquote><p>…<strong>石猴</strong>却又瞑目蹲身，往里一跳，叫道:“都随我进来!进来!”那些猴有胆大的，都跳进去了;胆小的，一个个伸头 缩颈，抓耳挠腮，大声叫喊，缠一会，也都进去了。跳过桥头，一个个抢盆夺碗，占灶争床， 搬过来，移过去，正是猴性顽劣，再无一个宁时，只搬得力倦神疲方止。<strong>石猿</strong>端坐上面道:…</p><p>…祖师闻言，咄的一声，跳下高台，手持戒尺，指定悟空道:“你这<strong>猢狲</strong>，这般不学，那般 不学，却待怎么?”走上前，将悟空头上打了三下，倒背着手，走入里面，将中门关了，撇 下大众而去。…</p><p>…悟空 道:“我也头圆顶天，足方履地，一般有九窍四肢，五脏六腑，何以比人不同?”祖师道:“你 虽然像人，却比人<strong>少腮</strong>。”原来那猴子<strong>孤拐面，凹脸尖嘴</strong>。…</p><p>…魔王 笑道:“我常闻得那些猴精说他有个大王，出家修行去，想是今番来了。你们见他怎生打扮， 有甚器械?”小妖道:“他也没甚么器械，<strong>光着个头</strong>，穿一领红色衣，勒一条黄绦，足下踏一 对乌靴，不僧不俗，又不像道士神仙，赤手空拳，在门外叫哩。”…</p><p>…魔王见了，笑道:“你<strong>身不满四尺</strong>，年不过 三旬，手内又无兵器，怎么大胆猖狂，要寻我见甚么上下?”悟空骂道:“你这泼魔，原来没 眼!你量我小，要大却也不难。你量我无兵器，我两只手勾着天边月哩!你不要怕，只吃老 孙一拳!”纵一纵，跳上去，劈脸就打。那魔王伸手架住道:“你这般矬矮，我这般高长，你 要使拳，我要使刀，使刀就杀了你，也吃人笑，待我放下刀，与你使路拳看。”…</p><p>…唬得那牛头鬼东躲西藏，马面鬼南奔北跑，众鬼卒奔上森罗殿，报着:“大王!祸 事!祸事!外面一个<strong>毛脸雷公</strong>，打将来了!”…</p><p>…身穿金甲亮堂堂，头戴金冠光映映。手举金箍棒一根，足踏云鞋皆相称。 <strong>一双怪眼似明星，两耳过肩查又硬</strong>。挺挺身才变化多，声音响亮如钟磬。 尖嘴咨牙弼马温，心高要做齐天圣。…</p></blockquote><p>以上的关键词我也已经标出来了，根据上方的关键词基本上能得出孙悟空的真实模样轮廓了，就不废言了。</p><h1 id="孙悟空为何一把毫毛可变许多个猴子出来？"><a href="#孙悟空为何一把毫毛可变许多个猴子出来？" class="headerlink" title="孙悟空为何一把毫毛可变许多个猴子出来？"></a>孙悟空为何一把毫毛可变许多个猴子出来？</h1><p>见下文第二章：</p><blockquote><p>…悟空见他凶猛， 即使身外身法，拔一把毫毛，丢在口中嚼碎，望空中喷去，叫一声“变!”，即变做三二百个 小猴，周围攒簇。原来人得仙体，出神变化，无方不知。这猴王自从了道之后，身上有八万四千毛羽，根根能变，应物随心。那些小猴，眼乖会跳，刀来砍不着，枪去不能伤。…</p><p>…好猴王，即拔一 把毫毛，入口嚼烂，喷将处去，念动咒语，叫声:“变!”变做千百个小猴，都乱搬乱抢…</p></blockquote><p>以上。孙悟空得道已成为仙体，有不死之身除外，还有其他的一些隐藏技能…毛变猴子不过是其中一角。</p><ul><li>孙悟空有不死之身的部分证据：</li></ul><blockquote><p>…悟空备细言了一遍，众猴称扬不尽道:“大王去到 那方，不意学得这般手段!”悟空又道:“我当年别汝等，随波逐流，飘过东洋大海，径至南 赡部洲，学成人像，着此衣，穿此履，摆摆摇摇，云游八九年馀，更不曾有道;又渡西洋大 海，到西牛贺洲地界，访问多时，幸遇一老祖，传了我与天同寿的真功果，<strong>不死长生</strong>的大法门。”众猴称贺。都道:“万劫难逢也!”…</p></blockquote><h1 id="孙悟空与二郎神谁更强？"><a href="#孙悟空与二郎神谁更强？" class="headerlink" title="孙悟空与二郎神谁更强？"></a>孙悟空与二郎神谁更强？</h1><p>在孙悟空<strong>“封做‘齐天大 圣’，先有官无禄。着他代管蟠桃园;他即偷桃;又走至瑶池，偷肴，偷酒，搅乱大会;仗酒 又暗入兜率宫，偷老君仙丹，反出天宫。玉帝复遣十万天兵，亦不能收伏。”**</strong>“后观世音举二郎 真君同他义兄弟追杀。”**</p><p>实际上是二郎神携自己的义兄弟大战孙悟空一人，但是他的义兄弟们虽然发挥的作用不大，但是多多少少也是对于两人的战斗是有一定影响的，不妨听我慢慢说来。</p><blockquote><p>…真君与大圣斗经三百馀合，不知胜负。那真君抖擞神威，摇身一变，变得身高万丈，两只手，举着三尖两刃神锋，好便似华山顶上之峰，青脸獠牙，朱红头发，恶狠狠，望大圣着头就砍。这大圣也使神通，变得与二郎身躯一样，嘴脸一般，举一条如意金箍棒，却就是昆仑顶上擎天之柱，抵住二郎神，唬得那马、流元帅，战兢兢，摇不得旌旗;崩、巴二将，虚怯怯，使不得刀剑。这阵上，康、张、姚、李、郭申、直健，传号令，撒放草头神，向他那水帘洞外，纵着鹰犬，搭弩张弓，一齐掩杀。可怜冲散妖猴四健将，捉拿灵怪二三千!那些猴，抛戈弃甲，撇剑抛枪;跑的跑，喊的喊;上山的上山，归洞的归洞;好似夜猫惊宿鸟，飞洒满天星。众兄弟得胜不题。却说真君与大圣变做法天象地的规模，正斗时，大圣忽见本营中妖猴惊散，自觉心慌， 收了法象，掣棒抽身就起。真君见他败走，大步赶上道:“那里走，趁早归降，饶你性命!” 大圣不恋战，只情跑起，将近洞口，正撞着康、张、姚、李四太尉，郭申、直健二将军，一 齐帅众挡住道:“泼猴!那里走!”大圣慌了手脚，就把金箍棒捏做绣花针，藏在耳内，摇身 一变，变作个麻雀儿，飞在树稍头钉住。那六兄弟，慌慌张张，前后寻觅不见，一齐吆喝道: “走了这猴精也!走了这猴精也!”…</p></blockquote><p>二郎神的义兄弟们在孙悟空与二郎神单挑时攻打孙悟空的“后宫”，导致孙悟空心态发生变化，战斗好似是孙悟空处于一种劣势了。实际上在单独与二郎神单挑时，孙悟空的实力并不比二郎神的实力差。有人可能会有疑问，说孙悟空的变化都被二郎神给看破了，这一点就能看出二郎神实力更胜一筹，非也非也，且看：</p><blockquote><p>…正嚷间，真君到了，问:“兄弟们，赶到那厢不见了?”众神道:“才在这里围住，就不 见了。”二郎圆睁凤眼观看，见大圣变了麻雀儿，钉在树上，就收了法象，撇了神锋，卸下弹 弓，摇身一变，变作个雀鹰儿，抖开翅，飞将去扑打。大圣见了，搜的一翅飞起，去变作一 只大鹚老，冲天而去。二郎见了，急抖翎毛，摇身一变，变作一只大海鹤，钻上云霄来衔。 大圣又将身按下，入涧中，变作一个鱼儿，淬入水内。二郎赶至涧边，不见踪迹。心中暗想 道:“这猢狲必然下水去也。定变作鱼虾之类。等我再变变拿他。”果一变变作个鱼鹰儿，飘 荡在下溜头波面上。等待片时，那大圣变鱼儿，顺水正游，忽见一只飞禽，似青鹞，毛片不 青;似鹭鸶，顶上无缨;似老鹳，腿又不红:“想是二郎变化了等我哩!⋯⋯”急转头，打个 花就走。二郎看见道:“打花的鱼儿，似鲤鱼，尾巴不红;似鳜鱼，花鳞不见;似黑鱼，头上 无星;似鲂鱼，腮上无针。他怎么见了我就回去了?必然是那猴变的。”赶上来，刷的啄一嘴。 那大圣就撺出水中，一变，变作一条水蛇，游近岸，钻入草中。二郎因衔他不着，他见水响 中，见一条蛇撺出去，认得是大圣，急转身，又变了一只朱绣顶的灰鹤，伸着一个长嘴，与 一把尖头铁钳子相似，径来吃这水蛇。水蛇跳一跳，又变做一只花鸨，木木樗樗的，立在蓼 汀之上。二郎见他变得低贱，——花鸨乃鸟中至贱至淫之物，不拘鸾、凤、鹰、鸦都与交群——故此不去拢傍，即现原身，走将去，取过弹弓拽满，一弹子把他打个〔足龙〕踵。那大圣趁着机会，滚下山崖，伏在那里又变，变一座土地庙儿;大张着口，似个庙门;牙齿变做门扇，舌头变做菩萨，眼睛变做窗棂。只有尾巴不好收拾，竖在后面，变做一根旗竿。真君赶到崖下，不见打倒的鸨鸟，只有一间小庙，急睁凤眼，仔细看之，见旗竿立在后面，笑道:“是这猢狲了!他今又在那里哄我。我也曾见庙宇，更不曾见一个旗竿竖在后面的。 断是这畜生弄谊!他若哄我进去，他便一口咬住。我怎肯进去?等我掣拳先捣窗棂，后踢门 扇!”大圣听得，心惊道:“好狠!好狠!门扇是我牙齿，窗棂是我眼睛;若打了牙，捣了眼， 却怎么是好?”扑的一个虎跳，又冒在空中不见。…</p></blockquote><p>综上分析，两者在这方面其实也是没个高下。</p><p>那么二郎神是如何拿下孙悟空，继而得到玉帝舅舅的奖赏的呢？不说那<strong>“李天王高擎照妖镜，与哪吒住立云端”</strong>相助之外，其实还有高人相助的(天兵天将在此仅是补下天罗地网之用，与分析实力基本上不挂钩，在此忽略不计)：</p><blockquote><p>…早有些天丁、力士接着，开门遥观，只见众天丁布罗 网，围住四面;李天王与哪吒，擎照妖镜，立在空中;真君把大圣围绕中间，纷纷赌斗呢。 菩萨开口对老君说:“贫僧所举二郎神如何?——果有神通，已把那大圣围困，只是未得擒拿。 我如今助他一功，决拿住他也。”老君道:“菩萨将甚兵器?怎能助他?”菩萨道:“我将那净 瓶杨柳抛下去，打那猴头;即不能打死，也打一跌，教二郎小圣，好去拿他。”老君道:“你 这瓶是个磁器，准打着他便好;如打不着他的头，或撞着他的铁棒，却不打碎了?你且莫动 手，等我老君助他一功。”菩萨道:“你有甚么兵器?”老君道:“有，有，有。”捋起衣袖， 左膊上，取下一个圈子，说道:“这件兵器，乃锟钢抟炼的，被我将还丹点成，养就一身灵气， 善能变化，水火不侵，又能套诸物;一名‘金钢琢’，又名‘金钢套’。当年过函关，化胡为 佛，甚是亏他。早晚最可防身。等我丢下去打他一下。”话毕，自天门上往下一掼，滴流流，径落花果山营盘里，可可的着猴王头上一下。猴王 只顾苦战七圣，却不知天上坠下这兵器，打中了天灵，立不稳脚，跌了一跤，爬将起来就跑; 被二郎爷爷的细犬赶上，照腿肚子上一口，又扯了一跌。他睡倒在地，骂道:“这个亡人!你 不去妨家长，却来咬老孙!”急翻身爬不起来，被七圣一拥按住，即将绳索捆绑，使勾刀穿了 琵琶骨，再不能变化。…</p></blockquote><p>以上分析来看，孙悟空的实力与二郎神相比较，两者估计是不相上下的，如果“极端“一点的话估计也是孙悟空更胜一筹，原因在上，不再多言。</p><h1 id="孙悟空闹天宫部分实情"><a href="#孙悟空闹天宫部分实情" class="headerlink" title="孙悟空闹天宫部分实情"></a>孙悟空闹天宫部分实情</h1><p>孙悟空并没有打入凌霄殿，更没有玉帝躲藏椅下一幕：</p><blockquote><p>…那二圣得了旨，径到灵山胜境，雷音宝刹之前，对四金刚、八菩萨礼毕，即烦转达。众 神随至宝莲台下启知，如来召请。二圣礼佛三匝，侍立台下。如来问:“玉帝何事，烦二圣下 凡?”二圣即启道:“向时花果山产一猴，在那里弄神通，聚众猴搅乱世界。玉帝降招安旨， 封为‘弼马温’，他嫌官小反去。当遣李天王、哪吒太子擒拿未获，复招安他，封做‘齐天大 圣’，先有官无禄。着他代管蟠桃园;他即偷桃;又走至瑶池，偷肴，偷酒，搅乱大会;仗酒 又暗入兜率宫，偷老君仙丹，反出天宫。玉帝复遣十万天兵，亦不能收伏。后观世音举二郎 真君同他义兄弟追杀，他变化多端，亏老君抛金钢琢打重，二郎方得拿住。解赴御前，即命 斩之。刀砍斧剁，火烧雷打，俱不能伤，老君准奏领去，以火煅炼。四十九日开鼎，他却又 跳出八卦炉，打退天丁，<strong>径入通明殿里，灵霄殿外;被佑圣真君的佐使王灵官挡住苦战，又 调三十六员雷将，把他困在垓心，终不能相近。事在紧急，因此，玉帝特请如来救驾。</strong>”如来 闻说，即对众菩萨道:“汝等在此稳坐法庭，休得乱了禅位，待我炼魔救驾去来。”…</p></blockquote><p>玉帝是传旨如来来救驾：</p><blockquote><p>…善时成佛与成仙，恶处披毛并带角。无穷变化闹天宫，雷将神兵不可捉。当时众神把大圣攒在一处，却不能近身，乱嚷乱斗，早惊动玉帝。遂传旨着游弈灵官同翊圣真君上西方请佛老降伏。…</p></blockquote><h1 id="五行山指哪五行？"><a href="#五行山指哪五行？" class="headerlink" title="五行山指哪五行？"></a>五行山指哪五行？</h1><p>见下文：</p><blockquote><p>…好大圣，急纵身又要跳出，被佛祖翻掌一扑，把这猴王推出西天门外，将五指化作金、 木、水、火、土五座联山，唤名“五行山”，轻轻的把他压住。众雷神与阿傩、迦叶，一个个 合掌称扬道:“善哉!善哉!…</p></blockquote><p>以上。</p><h1 id="最后，为何仅指明还原这些内容"><a href="#最后，为何仅指明还原这些内容" class="headerlink" title="最后，为何仅指明还原这些内容"></a>最后，为何仅指明还原这些内容</h1><p>因为很喜欢孙悟空这个角色，也比较喜欢“齐天大圣”那段恩怨情怀，所以仅在此还原这段剧情。再者因为这段剧情被人喜欢的也多，继而被人更改的也多，所以如今的“齐天大圣”好像真的是给大多数没看过原著的人“无法无天”、bug一般的存在，所以我认为有必要写下这篇文章以作指正、纠正，“普度众生”，哈哈。</p><p>仅此。</p><p>另外说一句，80年代拍的那部西游记的一系列曲目如今听起来真的是非常不错，这些曲目的原作者为许镜清老先生。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Macbook上玩PS/win本游戏</title>
      <link href="/2018/09/18/%E5%9C%A8Macbook%E4%B8%8A%E7%8E%A9PS-win%E6%9C%AC%E6%B8%B8%E6%88%8F/"/>
      <url>/2018/09/18/%E5%9C%A8Macbook%E4%B8%8A%E7%8E%A9PS-win%E6%9C%AC%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<p>昨天想在电脑上玩玩<em>龙珠电光火石3</em>，这是一款我小时候经常喜欢玩的游戏呢，哈哈，甚是怀念～</p><p>话不多说，因为手上设备是<em>Macbook</em>，所以研究了一下，但是并不难，开始下面的教程吧。</p><a id="more"></a><h1 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h1><p>第一步当然是安装好我们的虚拟机了，这款虚拟机是微软开发的一款可以实现与<em>Macbook</em>文件共享的软件。什么叫文件共享？简单的说就是我们可以通过<em>Mac</em>上的下载软件下载好游戏以及模拟器之后直接打开<em>window虚拟机</em>则可以直接玩耍啦，因为文件是共享的！</p><p>这款要收费…所以不妨可参考哦我曾经的博文，里面有破解安装的链接：</p><blockquote><p><a href="https://liujunjie11.github.io/2018/04/17/关于Parallels-Desktop13的简单使用/">关于Parallels-Desktop13的简单使用</a></p></blockquote><p>这样虚拟机的问题就解决了～环境已经没问题啦，但是我还是要说明一下，这个虚拟机真的非常的强大啊～,我在玩游戏时没有一点点延迟，<strong>所以用这个来玩win本游戏又有何不可？当然分配内存大一点基本上是没什么问题的，所以用Macbook玩win本游戏就此也随便搞定了～</strong></p><h1 id="安装wii模拟器以及游戏"><a href="#安装wii模拟器以及游戏" class="headerlink" title="安装wii模拟器以及游戏"></a>安装wii模拟器以及游戏</h1><p>这里以安装<em>wii模拟器</em>以及<em>七龙珠电光火石3</em>游戏镜像为例。</p><p>直接参考这一篇吧，一路安装好就行了：</p><blockquote><p><a href="https://jingyan.baidu.com/article/3f16e00308e4482591c103df.html" target="_blank" rel="external">https://jingyan.baidu.com/article/3f16e00308e4482591c103df.html</a></p></blockquote><p><strong>补充一个快速下载龙珠电光火石3的迅雷链接(复制粘贴即可)：</strong></p><pre><code>ed2k://|file|%5B%E9%BE%99%E7%8F%A0Z.%E7%94%B5%E5%85%89%E7%81%AB%E7%9F%B33%5D.Dragon.Ball.Z.Sparking.Meteor.JPN.Wii.iso|4699979776|bdd5b903db318f4f20f9326ee0dbbb5f|h=mkxmrsue6bqztfa2dqm22324rzzobfss|/</code></pre><p><strong>如果链接失效了不妨可以留言我，我已经保存了，现在的这个链接还没有失效。</strong></p><h2 id="安装之后"><a href="#安装之后" class="headerlink" title="安装之后"></a>安装之后</h2><p>不知如何打开？请看此处的链接：<br><a href="https://tieba.baidu.com/p/3069784385?red_tag=0039514238" target="_blank" rel="external">https://tieba.baidu.com/p/3069784385?red_tag=0039514238</a></p><blockquote><p><strong>另外，我要补充一下，就是在初次打开时会出现错误‘Failed to load any D3DX9 dll, update your DX9 runtime, please’，解决方案在这里：<a href="https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=35" target="_blank" rel="external">下载DirectX驱动</a></strong></p></blockquote><ul><li>在这里参考了：<a href="https://forums.dolphin-emu.org/Thread-dxd39-dll-loading-error" target="_blank" rel="external">https://forums.dolphin-emu.org/Thread-dxd39-dll-loading-error</a></li></ul><p>这样就能完成基本上的任务了，不过就是要用键盘来进行操作啊，很麻烦，不如看看<a href="http://pc.tgbus.com/xinshou_182/17365/" target="_blank" rel="external">这个手柄连接模拟器的教程吧</a>。</p><p>手柄设置补充，图一为设置手柄接入虚拟机，图二为虚拟机系统接入手柄，之后一一设置好按键对应即可：</p><p>图一：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-09-18%20%E4%B8%8B%E5%8D%886.16.38.png" alt=""></p><p>图二：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-09-18%20%E4%B8%8B%E5%8D%886.16.50.png" alt=""></p><p>这样就完成了所有的任务了，开始游戏吧～</p><h2 id="补充：手柄在wii模拟器上的按键设置。"><a href="#补充：手柄在wii模拟器上的按键设置。" class="headerlink" title="补充：手柄在wii模拟器上的按键设置。"></a>补充：手柄在wii模拟器上的按键设置。</h2><blockquote><p>可参考：</p></blockquote><ul><li><blockquote><p><a href="https://zhidao.baidu.com/question/1767290945679820540.html?qbl=relate_question_1" target="_blank" rel="external">https://zhidao.baidu.com/question/1767290945679820540.html?qbl=relate_question_1</a></p></blockquote></li><li><blockquote><p><a href="https://zhidao.baidu.com/question/1446133145568041260.html?qbl=relate_question_1" target="_blank" rel="external">https://zhidao.baidu.com/question/1446133145568041260.html?qbl=relate_question_1</a></p></blockquote></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>介绍几款小时候觉得很好玩的游戏：</p><ul><li><p><em>奥特曼进化格斗3</em>以及资源:<a href="https://tieba.baidu.com/p/3223685286?pn=13" target="_blank" rel="external">https://tieba.baidu.com/p/3223685286?pn=13</a></p></li><li><p><em>数码宝贝编年史</em>以及资源：<a href="https://tieba.baidu.com/p/1974490485" target="_blank" rel="external">https://tieba.baidu.com/p/1974490485</a></p></li></ul><p><em>龙珠电光火石3</em>教程参考：<a href="https://tieba.baidu.com/p/3069784385?red_tag=0039514238" target="_blank" rel="external">https://tieba.baidu.com/p/3069784385?red_tag=0039514238</a></p><p>上面的资源我均有备份，如果是失效了不妨可以留言补上。</p><p>以上。happy time~</p><p><strong>补充关于wii模拟器减速的问题：</strong></p><p>看下图进行适当设置即可：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-09-18%20%E4%B8%8B%E5%8D%886.40.13.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学机器学习指南</title>
      <link href="/2018/09/16/%E5%88%9D%E5%AD%A6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/"/>
      <url>/2018/09/16/%E5%88%9D%E5%AD%A6%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>老早就想写下这一篇文章了，对我来说这个意义很大。</p><p>以下是我开始真正学习机器学习的入门经历，在这个过程中我感到异常的轻松(在仅仅是了解学习机器学习知识的过程中)，为何说是“真正的”开始学习呢？因为之前有过接触但是进度很慢…我相信有许多的人在选择如何入门的时候肯定也有这样的麻烦。废话不多说，开始说说如何以我的方法尽快入门吧。希望以此来帮助需要的人。</p><a id="more"></a><ul><li><strong>入门：看书，看视频，记笔记，回顾思考。</strong></li></ul><blockquote><p>无非就是这样的套路。顺序不重要，但是在此间交叉切换的过程却很重要。你不可能在入门的过程中一直的保持看书或者是看视频，so,我的意思已经明了，明者自明，哈哈，但是学会记笔记的却是最重要的，这点我有亲身体验，相信你也是。</p></blockquote><h1 id="以kaggle为起点"><a href="#以kaggle为起点" class="headerlink" title="以kaggle为起点"></a>以kaggle为起点</h1><p>我开始学习机器学习是因为我想着入数据挖掘的坑，我对<em>kaggle</em>早已有过了解，我在掌握一点点的机器学习概念(没错，仅仅是概念)之后就奋不顾身的投入到了<em>kaggle</em>的一个入门级比赛当中去了。补充一下，在这之前我是有写过数据分析的一些小程序的…</p><p>这个实践的入门级比赛即是：<strong>Exploring Survival on the Titanic</strong>，经典的<em>泰坦尼克号预测</em>入门级比赛。</p><p>现在需要的即是查找一些文章来参考模仿并且投入实践，一切学习都是从模仿开始的，静下心来，一步步实践，遇到问题利用好搜索引擎。有相关的错误出现一般可以将错误信息复制粘贴到搜索引擎上，一般都会有答案出现(一般都是英语答案)。不要畏惧英语。</p><p>具体哪些文章可参考：</p><ul><li><p>1，R实现：<a href="https://zhuanlan.zhihu.com/p/27655949" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/27655949</a></p></li><li><p>2，python实现：<a href="https://zhuanlan.zhihu.com/p/33733586" target="_blank" rel="external">https://zhuanlan.zhihu.com/p/33733586</a></p></li><li><p>3，python实现：<a href="http://www.jasongj.com/ml/classification/" target="_blank" rel="external">http://www.jasongj.com/ml/classification/</a></p></li><li><p>文章是参考不完的，但是还有一个重要的推荐，那就是<em>kaggle</em>本身的资源利用，即在每一个比赛都有<em>Kernel</em>资源分享，那是做过的前辈分享的经验，务必利用好。</p></li></ul><blockquote><p>在这个过程中，你可能想放弃，因为你什么都不懂..但是，你也要坚持下去，至少把流程是怎么一回事搞清楚。期间你可能会遇到编码问题，还有一些意外的错误问题，还是一句话，利用好搜索引擎。</p></blockquote><h1 id="工具选择"><a href="#工具选择" class="headerlink" title="工具选择"></a>工具选择</h1><ul><li><p><a href="https://www.anaconda.com/download/#macos" target="_blank" rel="external">Anaconda</a></p></li><li><p>Anaconda其中内嵌的notebook</p></li></ul><blockquote><p>非常不错，看起来很舒服，但是也有一些缺点，基本上可以忽略。notebook写python写R都是可以的，具体我有写过<a href="https://liujunjie11.github.io/2018/06/04/在Jupyter-Notebook中安装多种语言内核/#more">一篇文章介绍</a>。另外，出现的错误我也有相关的记录，自行根据需求查找。一句话说得好，一切发明都是根据需求产生的。</p></blockquote><h1 id="入门，机器学习理论"><a href="#入门，机器学习理论" class="headerlink" title="入门，机器学习理论"></a>入门，机器学习理论</h1><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><ul><li><p>1，<a href="https://github.com/hahaahaha111/Coursera-ML-AndrewNg-Notes" target="_blank" rel="external">吴恩达机器学习</a></p></li><li><p>2，<a href="https://github.com/hahaahaha111/deeplearning_ai_books" target="_blank" rel="external">吴恩达深度学习</a></p></li></ul><blockquote><p>视频的话看这个基本上差不多做个了解，网易云课堂也可查到相关的视频。上面的链接里面有作者的笔记记录，可以看视频再来看一遍对应的笔记加深印象。记得做笔记。</p></blockquote><h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><ul><li><p>1，<a href="http://www.ai-start.com/ml2014/" target="_blank" rel="external">斯坦福大学2014机器学习教程中文笔记目录</a></p></li><li><p>2，<a href="http://www.ai-start.com/dl2017/" target="_blank" rel="external">深度学习笔记目录</a></p></li></ul><blockquote><p>以上链接为为上面说的笔记目录，再结合视频看是一个不错的选择，里面记录有每一节的核心内容，总结的不错。</p></blockquote><h2 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h2><ul><li><p>1，<a href="https://pan.baidu.com/s/1jmjuoAU_nCudDpD9YqeXXQ" target="_blank" rel="external">商务经济统计学</a></p></li><li><p>2，<a href="https://pan.baidu.com/s/1PZFRFbyfArmePnoNjlk7Vw" target="_blank" rel="external">周志华机器学习</a></p></li><li><p>3，<a href="https://pan.baidu.com/s/1dNLlg8uCRKl5E22D6XnlXw" target="_blank" rel="external">李航统计学习方法</a></p></li><li><p>4，<a href="https://pan.baidu.com/s/1gBqm7rnU6qjxgmevEOsirg" target="_blank" rel="external">数据挖掘概念与技术</a></p></li><li><p>5，备手数学书籍以便随时补充遗忘或者是不懂的相关的知识。</p></li></ul><blockquote><p>暂时记得这么多，届时补充。视频书籍交叉看最好，记得做笔记。现在的首要任务是搞清楚概念理论以及出现了一系列问题该如何使用选择。</p></blockquote><h1 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h1><p>自己找一些项目做做练手。最好是根据自身的需求，明者自明，话不多说。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>暂时说这么多吧，以后看时间看需要再进行补充。这是一篇简易的机器学习入门指南。</p><p><strong>补充：</strong>这个指南可能不适合你，因为我确确实实是有过一点点准备才开始的这个计划流程…</p><p>以上。共勉。</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
            <tag> 资源分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接受“大和”？</title>
      <link href="/2018/09/15/%E6%8E%A5%E5%8F%97%E2%80%9C%E5%A4%A7%E5%92%8C%E2%80%9D%EF%BC%9F/"/>
      <url>/2018/09/15/%E6%8E%A5%E5%8F%97%E2%80%9C%E5%A4%A7%E5%92%8C%E2%80%9D%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<p>不知不觉，自身的思想发生了一些变化，这种变化已维持好久了。</p><p>什么时候，曾经有些玩世不恭，对于什么事都“满腔热血”的我开始变得有些动摇了，开始变得接受这世界的“大同”思维了，我也因此而麻木了好许长的时间了。以“大同”思维来说服自己，让自己不再“焦虑”，这是我变化的根本啊。</p><p>今日忽地觉醒了，今日的我真的与从前的我在思维上有了很大的不同，在接受“大同”的抉择上我开始了质疑，是的，我承认因此我变得有些冷漠有些麻木了，我也因此付出了代价，变成了这世界千千万万麻木不仁者其中一员…我感到落寞。</p><a id="more"></a><p>我还记得这种思维是我在接触所谓哲学类书籍所产生的，开始以“世间普遍”来镇压着我的各种焦虑与猜疑直至今日此时此刻。由不堪变成了柔和甚至是一而再再而三的所谓的”理解“，我以为是我成长了，以为是我长大了…如今在此重新思考此类问题，我有些话想说。</p><p><strong>成长是变得越来越愿意接受这世间的“大同”，但若是把握的不好，却是会变成认同这种“大同”，这是两个完全不同的抉择。</strong>而曾经的我就陷入了后者之中。</p><p><strong>究竟是我选择认同了“大同”，还是“大同”说服了我？</strong>我想这两者均有在不同时期交叉出现过，我从此也慢慢变得落寞了…</p><p><strong>“大同”使我慢慢的愿意接受平庸！这是铁的事实，再者接受这世俗的说法，容易染上各种各样的颜色…我，终究还是太年轻了啊…</strong></p><p>有一段时间，我没有把本心守护好，这是我最大的过失，我也因此付出了巨大的代价。是“安乐”？是“平庸世俗”？说到底不过是我意志上的欠缺罢了。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于错误Error: Permission denied @ dir_s_mkdir - /usr/local/Frameworks</title>
      <link href="/2018/09/07/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AFError-Permission-denied-dir-s-mkdir-usr-local-Frameworks/"/>
      <url>/2018/09/07/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AFError-Permission-denied-dir-s-mkdir-usr-local-Frameworks/</url>
      
        <content type="html"><![CDATA[<p>最近在用<em>homebrew</em>下载东西遇到了如下错误：</p><blockquote><p>Error: Permission denied @ dir_s_mkdir - /usr/local/Frameworks</p></blockquote><a id="more"></a><p><strong>解决方案：</strong></p><p>依次使用命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo mkdir /usr/<span class="built_in">local</span>/Frameworks</div><div class="line"></div><div class="line">sudo chown $(whoami):admin /usr/<span class="built_in">local</span>/Frameworks</div></pre></td></tr></table></figure><p>这样重新使用之前的命令行即可正常行使了。</p><ul><li>参考：<a href="https://github.com/Homebrew/homebrew-core/issues/19286" target="_blank" rel="external">https://github.com/Homebrew/homebrew-core/issues/19286</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
          <category> Homebrew </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> Homebrew </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>duet display在升级Macos 13.6之后崩溃的可行解决方法</title>
      <link href="/2018/08/31/duet-display%E5%9C%A8%E5%8D%87%E7%BA%A7Macos-13-6%E4%B9%8B%E5%90%8E%E5%B4%A9%E6%BA%83%E7%9A%84%E5%8F%AF%E8%A1%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2018/08/31/duet-display%E5%9C%A8%E5%8D%87%E7%BA%A7Macos-13-6%E4%B9%8B%E5%90%8E%E5%B4%A9%E6%BA%83%E7%9A%84%E5%8F%AF%E8%A1%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>下午看见<em>app store</em>里有更新系统的提示，心里想着好久未曾更新过哥的<em>mac</em>系统了，之前一直怕升级有什么毛病，就一直停留在<em>13.1</em>的系统。结果一升级悲剧了，哥昨天刚刚买的<em>duet display</em>一打开不显灵了…妈个鸡…</p><p>想过换回以前的系统，懒得搞了，麻烦…</p><a id="more"></a><p>想过替代品，暂时找不到，另外一方面：没钱加不想花钱了…</p><p>一怒之下哥把<em>duet display</em>删除了重装。没想到效果出奇的好：</p><blockquote><p><strong>软件可以正常使用了，不过就是在iPad上的显示不是全屏了，多了下面的一大条黑边，但是功能是和以前一样的，没区别。</strong></p></blockquote><p>下面简单说说解决方案：</p><ul><li>1、重装软件，仅<em>Mac端</em>；</li><li>2、在连接之后，顶部出现下边的镜像设置，如下设置：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-31%20%E4%B8%8B%E5%8D%889.50.07.png" alt=""></p><ul><li>3、在<em>duet</em>软件点击<em>高级设置</em>，如下设置：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-31%20%E4%B8%8B%E5%8D%889.50.28.png" alt=""></p><blockquote><p>不取消这个<em>镜像小勾勾</em>则永远不会成功！不然就是一系列的软件闪退！<strong>亲生经历，请勿模仿！！</strong></p></blockquote><p><strong>补充：今天更新了到了Mojavede版本，但是duet还是不能正常使用，但是只要调整一下分辨率就行了～，不妨可以自己试试看，我选择中间的那个分辨率的模式，在iPad上又是全屏幕啦～</strong></p><ul><li>4、连接上之后在<em>偏好系统</em>中的<em>显示器</em>设置界面的<em>排列</em>如下设置：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-31%20%E4%B8%8B%E5%8D%889.50.39.png" alt=""></p><blockquote><p>根据自身情况将扩展屏设置放在左边或者是右边，即达到一个鼠标可以自由通行的效果。</p></blockquote><p>就这样吧，软件虽然界面变小了一圈，但是也能接受。</p><p>还是那么流畅，还是那么好用，还是那么美滋滋～～</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> duet display </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于错误&#39;ValueError: Found array with 0 sample(s) (shape=(0, 4)) while a minimum of 1 is required.&#39;</title>
      <link href="/2018/08/20/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AF-ValueError-Found-array-with-0-sample-s-shape-0-4-while-a-minimum-of-1-is-required/"/>
      <url>/2018/08/20/%E5%85%B3%E4%BA%8E%E9%94%99%E8%AF%AF-ValueError-Found-array-with-0-sample-s-shape-0-4-while-a-minimum-of-1-is-required/</url>
      
        <content type="html"><![CDATA[<p>在参考他人的代码时运行出现了错误：</p><blockquote><p>‘ValueError: Found array with 0 sample(s) (shape=(0, 4)) while a minimum of 1 is required.’</p></blockquote><p>这是因为数据的改动造成的，本身自己所有的数据与他人的不同…</p><a id="more"></a><p><strong>解决方案：</strong></p><p><strong>在运行此相关的代码时重新运行一遍你的数据源程序(就是你的那个包涵数据源的变量的那段代码)</strong></p><p>这个解决方案对我来说是可行的。我想我说的已经够明白了吧…</p><ul><li>参考：</li></ul><blockquote><p><a href="https://www.jianshu.com/p/bbfbdedc3c1c" target="_blank" rel="external">https://www.jianshu.com/p/bbfbdedc3c1c</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Python </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python编程map函数及as_matrix函数简明</title>
      <link href="/2018/08/17/python%E7%BC%96%E7%A8%8Bmap%E5%87%BD%E6%95%B0%E5%8F%8Aas-matrix%E5%87%BD%E6%95%B0%E7%AE%80%E6%98%8E/"/>
      <url>/2018/08/17/python%E7%BC%96%E7%A8%8Bmap%E5%87%BD%E6%95%B0%E5%8F%8Aas-matrix%E5%87%BD%E6%95%B0%E7%AE%80%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<p>如题。</p><p><em>map函数</em>属于<em>python函数式编程</em>，具体的就不说了，可参考官网说明或者是直接看大神说明：<a href="https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00141861202544241651579c69d4399a9aa135afef28c44000" target="_blank" rel="external">https://www.liaoxuefeng.com/wiki/001374738125095c955c1e6d8bb493182103fac9270762a000/00141861202544241651579c69d4399a9aa135afef28c44000</a></p><p>在此简要说说如何理解，因为之前我有一点困惑。</p><a id="more"></a><p>已知：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">f</span><span class="params">(x)</span>:</span></div><div class="line"><span class="meta">... </span>    <span class="keyword">return</span> x * x</div><div class="line">...</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>map(f, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</div><div class="line">[<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">25</span>, <span class="number">36</span>, <span class="number">49</span>, <span class="number">64</span>, <span class="number">81</span>]</div></pre></td></tr></table></figure><p>那么在理解以下代码时：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Title_Dict = &#123;&#125;</div><div class="line"><span class="comment">#进行添加工作,将其中相关的字词以统一字词以替换</span></div><div class="line">Title_Dict.update(dict.fromkeys([<span class="string">'Capt'</span>,<span class="string">'Col'</span>,<span class="string">'Major'</span>,<span class="string">'Dr'</span>,<span class="string">'Rev'</span>],<span class="string">'Officer'</span>))</div><div class="line">Title_Dict.update(dict.fromkeys([<span class="string">'Don'</span>,<span class="string">'Sir'</span>,<span class="string">'the Countess'</span>,<span class="string">'Dona'</span>,<span class="string">'Lady'</span>],<span class="string">'Royalty'</span>))</div><div class="line">Title_Dict.update(dict.fromkeys([<span class="string">'Mme'</span>,<span class="string">'Ms'</span>,<span class="string">'Mrs'</span>],<span class="string">'Mrs'</span>))</div><div class="line">Title_Dict.update(dict.fromkeys([<span class="string">'Mlle'</span>,<span class="string">'Miss'</span>],<span class="string">'Miss'</span>))</div><div class="line">Title_Dict.update(dict.fromkeys([<span class="string">'Mr'</span>],<span class="string">'Mr'</span>))</div><div class="line">Title_Dict.update(dict.fromkeys([<span class="string">'Mme'</span>,<span class="string">'Ms'</span>,<span class="string">'Mrs'</span>],<span class="string">'Master'</span>))</div><div class="line">all_data[<span class="string">'Title'</span>] = all_data[<span class="string">'Title'</span>].map(Title_Dict)<span class="comment">#(在此中相当于返回了设定的值，与函数式返回类似)新建立一个列表，并且将先前统一好的代入进行整体分类</span></div><div class="line">sns.barplot(x=<span class="string">'Title'</span>,y=<span class="string">'Survived'</span>,data=all_data,palette=<span class="string">'Set2'</span>)</div></pre></td></tr></table></figure><p>可以简单的理解为一个函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [<span class="string">'Capt'</span>,<span class="string">'Col'</span>,<span class="string">'Major'</span>,<span class="string">'Dr'</span>,<span class="string">'Rev'</span>]:</div><div class="line"><span class="keyword">return</span> <span class="string">'Officer'</span></div></pre></td></tr></table></figure><blockquote><p>这样在结合变量使用时就容易理解的多了～</p></blockquote><p>在说说<code>as_matrix函数</code>。</p><p>如下代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">df = pd.DataFrame(np.random.randn(<span class="number">3</span>,<span class="number">4</span>) ,columns=list(<span class="string">'abcd'</span>))</div><div class="line"><span class="keyword">print</span> (df)</div><div class="line">输出：</div><div class="line">          a         b         c         d</div><div class="line"><span class="number">0</span>  <span class="number">0.702272</span>  <span class="number">0.199382</span>  <span class="number">0.590453</span> <span class="number">-0.177694</span></div><div class="line"><span class="number">1</span>  <span class="number">0.692848</span> <span class="number">-1.113005</span> <span class="number">-0.373606</span> <span class="number">-0.249216</span></div><div class="line"><span class="number">2</span> <span class="number">-0.928320</span> <span class="number">-0.920277</span>  <span class="number">0.804570</span> <span class="number">-0.383224</span></div><div class="line"></div><div class="line"><span class="keyword">print</span> (df.values)</div><div class="line">输出：</div><div class="line">[[ <span class="number">0.70227209</span>  <span class="number">0.19938178</span>  <span class="number">0.59045266</span> <span class="number">-0.17769368</span>]</div><div class="line"> [ <span class="number">0.69284849</span> <span class="number">-1.11300544</span> <span class="number">-0.37360597</span> <span class="number">-0.24921559</span>]</div><div class="line"> [<span class="number">-0.92831955</span> <span class="number">-0.92027708</span>  <span class="number">0.80457031</span> <span class="number">-0.38322414</span>]]</div><div class="line"> </div><div class="line"><span class="keyword">print</span> (df.as_matrix(columns=<span class="keyword">None</span>))</div><div class="line">输出：</div><div class="line">[[ <span class="number">0.70227209</span>  <span class="number">0.19938178</span>  <span class="number">0.59045266</span> <span class="number">-0.17769368</span>]</div><div class="line"> [ <span class="number">0.69284849</span> <span class="number">-1.11300544</span> <span class="number">-0.37360597</span> <span class="number">-0.24921559</span>]</div><div class="line"> [<span class="number">-0.92831955</span> <span class="number">-0.92027708</span>  <span class="number">0.80457031</span> <span class="number">-0.38322414</span>]]</div></pre></td></tr></table></figure><ul><li>参考代码来源：<a href="https://blog.csdn.net/yan456jie/article/details/52089128" target="_blank" rel="external">https://blog.csdn.net/yan456jie/article/details/52089128</a></li></ul><blockquote><p>实际上两者的转换就如同有无特征名称之间的来来往往…</p></blockquote><p>之前有些困惑，现在简单理解了一点。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Numpy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Numpy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas.Series.str.get()的简单使用</title>
      <link href="/2018/08/16/pandas-Series-str-get-%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/08/16/pandas-Series-str-get-%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关于这个函数可在官网找到：<br><a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.get.html" target="_blank" rel="external">https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.str.get.html</a></p></blockquote><p>实际上我在此只是起到一个翻译的作用…</p><a id="more"></a><p>这个函数语法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`Series.str.get(i)`</div></pre></td></tr></table></figure><blockquote><p>其中：</p><p>Parameters:    <code>i : int类型输入</code>，用于返回制定元素的一个位置(可理解为一个针对自身元素身上的一个索引)</p><p>Returns:<br>items : <code>Series/Index of objects</code>，即返回的数据类型</p></blockquote><p>具体使用参考官网上的例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>s = pd.Series([<span class="string">"String"</span>,</div><div class="line">           (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>),</div><div class="line">           [<span class="string">"a"</span>, <span class="string">"b"</span>, <span class="string">"c"</span>],</div><div class="line">           <span class="number">123</span>, <span class="number">-456</span>,</div><div class="line">           &#123;<span class="number">1</span>:<span class="string">"Hello"</span>, <span class="string">"2"</span>:<span class="string">"World"</span>&#125;])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s</div><div class="line"><span class="number">0</span>                        String</div><div class="line"><span class="number">1</span>                     (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</div><div class="line"><span class="number">2</span>                     [a, b, c]</div><div class="line"><span class="number">3</span>                           <span class="number">123</span></div><div class="line"><span class="number">4</span>                          <span class="number">-456</span></div><div class="line"><span class="number">5</span>    &#123;<span class="number">1</span>: <span class="string">'Hello'</span>, <span class="string">'2'</span>: <span class="string">'World'</span>&#125;</div><div class="line">dtype: object</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.str.get(<span class="number">1</span>)</div><div class="line"><span class="number">0</span>        t</div><div class="line"><span class="number">1</span>        <span class="number">2</span></div><div class="line"><span class="number">2</span>        b</div><div class="line"><span class="number">3</span>      NaN</div><div class="line"><span class="number">4</span>      NaN</div><div class="line"><span class="number">5</span>    Hello</div><div class="line">dtype: object</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>s.str.get(<span class="number">-1</span>)</div><div class="line"><span class="number">0</span>      g</div><div class="line"><span class="number">1</span>      <span class="number">3</span></div><div class="line"><span class="number">2</span>      c</div><div class="line"><span class="number">3</span>    NaN</div><div class="line"><span class="number">4</span>    NaN</div><div class="line"><span class="number">5</span>    NaN</div><div class="line">dtype: object</div></pre></td></tr></table></figure><p>好了就这样吧，记录这个是因为有预感以后会再次用到…</p><p>在此也简单的记录一下在<em>pandas</em>中的聚合<em>groupby</em>函数：</p><blockquote><p>可简单的理解为聚合的部分变成了索引，之后的操作均是围绕着这些个被聚合的数转。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Pandas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于python函数式编程以及相关调用方法的简单思考</title>
      <link href="/2018/08/16/%E5%85%B3%E4%BA%8Epython%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E6%80%9D%E8%80%83/"/>
      <url>/2018/08/16/%E5%85%B3%E4%BA%8Epython%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E7%AE%80%E5%8D%95%E6%80%9D%E8%80%83/</url>
      
        <content type="html"><![CDATA[<p>最近在参加<em>kaggle</em>上的一个入门级的比赛，在参考他人的代码时学习到了应用一些东西，在这里说的<em>python函数式编程</em>实际上在看书时看到了好几遍了，但是在真正的应用时是有一股“意想不到的”欣喜感的，哈哈..</p><p>在此简单记录一下，以便以后参考用。</p><a id="more"></a><p>在所谓的<em>函数式编程</em>中，若是简单的直接调用出结果那真的是大材小用了..实际上只是我认知较浅..哈哈~</p><p>在使用这些<em>函数</em>时，我发现会有惊人的效果，而且可以达到理想的效果，就如在处理一些数据中结合本身的<em>变量</em>时真的有一股得心应手的感觉～～</p><blockquote><p>这里的变量一般为<em>DataFrame</em>的数据类型，也可称为一个特征向量，维度。</p></blockquote><p>再者，如是需要以自定义的函数结合变量达到理想的效果，不妨可以试试<code>apply</code>这个方法，大胆的调用起来！真的是挺好的一个工具，哈哈。</p><p>学到了不少实用的东西～</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为Hexo博客(next主题)加上评论功能</title>
      <link href="/2018/08/15/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2-next%E4%B8%BB%E9%A2%98-%E5%8A%A0%E4%B8%8A%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"/>
      <url>/2018/08/15/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2-next%E4%B8%BB%E9%A2%98-%E5%8A%A0%E4%B8%8A%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<p>一直想加一个评论的功能，现在有时间了。</p><p>下面来说说简单的过程。</p><a id="more"></a><p>用的是<a href="https://livere.com" target="_blank" rel="external">来必力</a>这个评论系统。</p><p>首先需要进入其中进行注册。</p><blockquote><p>前面的注册过程具体参考下面这篇文章吧，但是后面的过程回来参考我的即可。</p><p>文章地址：<a href="https://segmentfault.com/a/1190000012918417" target="_blank" rel="external">https://segmentfault.com/a/1190000012918417</a></p></blockquote><p>如上面的文章可知，每个人注册成功之后会有一个独立的<code>uid</code>。</p><p>接下来打开目录位置目标<code>/Users/XX/XXXX/themes/next/_config.yml</code>，搜索关键词<code>liver</code>，将此位置改成</p><pre><code>livere:    on: true #控制开关    livere_uid: 你的uid</code></pre><p>如下图所示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%8810.02.45.png" alt=""></p><p><strong>接下来进行最重要的一步，打开目录位置目标<code>/Users/XX/XXXX/themes/next/layout/_partials/comments.swig</code></strong>，将其中的改成如下图所示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%889.35.56.png" alt=""></p><p>保存之后再有顺序的使用命令：</p><p><code>hexo s -debug</code> #调试并且展示</p><p><code>hexo g -d</code> #完成文件上传生成</p><p>另外可在自己的<em>来必力</em>设置界面设置成自己想要的样子：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%8810.14.05.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%8810.14.11.png" alt=""></p><p>之后打开自己的网站就可以看到效果如何啦：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-08-15%20%E4%B8%8B%E5%8D%8810.14.40.png" alt=""></p><h1 id="参考-amp-最后"><a href="#参考-amp-最后" class="headerlink" title="参考&amp;最后"></a>参考&amp;最后</h1><p>参考：<a href="https://www.jianshu.com/p/f5c184047e72" target="_blank" rel="external">https://www.jianshu.com/p/f5c184047e72</a></p><blockquote><p>实话说，加上评论功能之后网站加载时间多了那么几毫秒…总体来说还不错。另外我用的<em>Mac</em>，其他系统也无大碍，看目录位置即可。</p></blockquote><ul><li><strong>最后补充一点:</strong></li></ul><p><strong>有时这个评论系统加载不出来，可能有几点原因：</strong></p><blockquote><ol><li>网速不行，加载过慢；</li><li>来比利系统上的<em>cookie</em>过期了，重新登陆管理界面看看；</li><li>待发掘…</li></ol></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pandas.Dataframe.plot()及数值切片的一些记录</title>
      <link href="/2018/08/13/pandas-Dataframe-plot-%E5%8F%8A%E6%95%B0%E5%80%BC%E5%88%87%E7%89%87%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/08/13/pandas-Dataframe-plot-%E5%8F%8A%E6%95%B0%E5%80%BC%E5%88%87%E7%89%87%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>在学习其相关的一些库时有一些自己的理解，简单记录记录，方便以后理解。</p><a id="more"></a><p><code>pandas.Dataframe.plot()</code>此函数而言：</p><blockquote><p><code>x轴线</code>对应着第一列值，<code>y轴线</code>对应着第二列值or后面的列，而其中的属性对应着将要标记在上方的标签展示使用。</p></blockquote><p>在切片的理解中：</p><blockquote><p><code>[:]</code>为全体；</p><p><code>[1:]</code> or <code>[1]</code>需要考虑从0开始的顺序；</p><p><code>[:1]</code>即直接从1开始，无需从0开始；</p><p><code>[:,:]</code>表示行与列。</p><p><code>[1::]</code>表示从第二位置开始以1为跨度逐渐到最后一位(0为第一个位置)。</p><p><code>[::1]</code>表示从第一个位置开始逐渐以1为跨度直至最后一个位置。</p></blockquote><p>That’s all！</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> Pandas </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> Pandas </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下的matploylib绘图中文乱码问题</title>
      <link href="/2018/08/08/Mac%E4%B8%8B%E7%9A%84matploylib%E7%BB%98%E5%9B%BE%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
      <url>/2018/08/08/Mac%E4%B8%8B%E7%9A%84matploylib%E7%BB%98%E5%9B%BE%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>最近在接触一些在notebook上用<em>matploylib</em>这个库绘图时出现了中文乱码的问题，就是常见的那种小方块式的中文乱码问题。</p><p>下面简单说说解决方法。</p><a id="more"></a><h2 id="Mac本机上的字体册利用"><a href="#Mac本机上的字体册利用" class="headerlink" title="Mac本机上的字体册利用"></a>Mac本机上的字体册利用</h2><p>在打开<em>Mac</em>自带的字体册，可发现有许多的中文字体供我们选择使用，在此就能帮忙我们解决中文乱码的问题。</p><p>选择一个字体，找到他的文件位置在何处。之后需要添加的代码要用到。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8%E6%9C%88-08-2018%2014-10-08.gif" alt=""></p><blockquote><p>这样就知道了位置的所在。</p></blockquote><h2 id="需要添加的代码"><a href="#需要添加的代码" class="headerlink" title="需要添加的代码"></a>需要添加的代码</h2><p>如下添加代码，加上上面说的中文字体的所在位置，<strong>然后在每一次需要中文显示时，均要加上<code>fontproperties=font</code>（font即指下方的变量）。</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> matplotlib.font_manager <span class="keyword">import</span> FontProperties</div><div class="line">font = FontProperties(fname=<span class="string">'/Library/Fonts/Songti.ttc'</span>)</div><div class="line"></div><div class="line"></div><div class="line">&gt; 如：</div><div class="line">plt.subplot2grid((<span class="number">2</span>,<span class="number">3</span>),(<span class="number">1</span>,<span class="number">0</span>),colspan=<span class="number">2</span>) <span class="comment">#在此即为多行的占用</span></div><div class="line">data_train.Age[data_train.Pclass == <span class="number">1</span>].plot(kind=<span class="string">'kde'</span>) <span class="comment">#两者的结合绘图</span></div><div class="line">data_train.Age[data_train.Pclass == <span class="number">2</span>].plot(kind=<span class="string">'kde'</span>)</div><div class="line">data_train.Age[data_train.Pclass == <span class="number">3</span>].plot(kind=<span class="string">'kde'</span>)</div><div class="line">plt.xlabel(<span class="string">'年龄'</span>,fontproperties=font)</div><div class="line">plt.ylabel(<span class="string">'密度'</span>,fontproperties=font)</div><div class="line">plt.title(<span class="string">'各等级的乘客年龄分布'</span>,fontproperties=font)</div><div class="line">plt.legend((<span class="string">'Pclass1'</span>,<span class="string">'Pclass2'</span>,<span class="string">'Pclass3'</span>),loc=<span class="string">'best'</span>) <span class="comment">#多个说明，自动排好说明位置</span></div></pre></td></tr></table></figure><p>这样中文乱码的问题就能得到完美的解决了…唉，网上的一些方案根本没有用啊，折腾了几个小时，心累..</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> Matploylib </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Python </tag>
            
            <tag> Matploylib </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3爬虫与GUI:爬取腾讯视频</title>
      <link href="/2018/07/24/python3%E7%88%AC%E8%99%AB%E4%B8%8EGUI:%E7%88%AC%E5%8F%96%E8%85%BE%E8%AE%AF%E8%A7%86%E9%A2%91/"/>
      <url>/2018/07/24/python3%E7%88%AC%E8%99%AB%E4%B8%8EGUI:%E7%88%AC%E5%8F%96%E8%85%BE%E8%AE%AF%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<p>最近想研究一下用<em>python爬虫</em>爬一些经常看的视频网站，其中包括有<em>腾讯视频、YouTube、Twitter</em>。本文从腾讯开始，之后会慢慢的更新其他两个的。</p><p>腾讯视频我之前就有过尝试，结果都失败了(我的目标是直接爬取完整视频！实际上这视频分析来分析去都是分段来的..)花了不少时间，结果还是停留在了只能爬取分段视频的阶段..下面也来简单说说如何爬取一些分段片段！</p><a id="more"></a><h1 id="爬取视频片段分析"><a href="#爬取视频片段分析" class="headerlink" title="爬取视频片段分析"></a>爬取视频片段分析</h1><p>在我们经过抓包的过程中可发现一些有用的信息，比如<code>getinfo</code>、<code>getkey</code>的数据包。下面简单分析一下，实际上只用到<code>getinfo</code>数据包的内容即可！</p><p>为了简便直接放出相关的链接：</p><blockquote><p><strong>getinfo:</strong><a href="http://vv.video.qq.com/getinfo?vids={}&amp;platform=101001&amp;charge=0&amp;otype=xml" target="_blank" rel="external">http://vv.video.qq.com/getinfo?vids={}&amp;platform=101001&amp;charge=0&amp;otype=xml</a></p><p><strong>getkey:</strong><a href="http://vv.video.qq.com/getkey?otype=json&amp;platform=11&amp;format={}&amp;vid={}&amp;filename={}&amp;appver=3.2.19.333" target="_blank" rel="external">http://vv.video.qq.com/getkey?otype=json&amp;platform=11&amp;format={}&amp;vid={}&amp;filename={}&amp;appver=3.2.19.333</a></p></blockquote><p><strong>再强调一下，实际上仅仅分析<code>getinfo</code>的相关的内容即可得出片段视频！</strong></p><p>随便以一个腾讯视频的<a href="https://v.qq.com/x/cover/fzfi0p4etjrckhh/a00260ipkjg.html" target="_blank" rel="external">链接</a>来进行以下图片的简单说明，针对以上的相关的参数：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.36.23.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.38.43.png" alt=""></p><blockquote><p>即：<br><a href="http://vv.video.qq.com/getinfo?vids=a00260ipkjg&amp;platform=101001&amp;charge=0&amp;otype=xml" target="_blank" rel="external">http://vv.video.qq.com/getinfo?vids=a00260ipkjg&amp;platform=101001&amp;charge=0&amp;otype=xml</a></p></blockquote><p>视频的真实地址仅仅需要<code>fn(filename)</code>、<code>fvkey(key)</code>、<code>URL(ui~url)</code>这些参数即可。以下图将一一进行标出！</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.40.07.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.40.36.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.42.42.png" alt=""></p><blockquote><p>之后将得出一片段的真实地址：<br><a href="http://218.8.55.13/vlive.qqvideo.tc.qq.com/AU8SqeoXTl1JLXdNhOFSXiMVi2va5Pws1sz4YXZ7sAxo/d002684wnon.m1.mp4?vkey=BCCD552375F7D76708838E84668FDE0E15051F1BE9FF349A31FE6CA14BDC8EAE35FEF2322A8FAEA590EB2FCB129B0C96595BB896DBB756581A9F307ADA7D259AD4371F820D6C25194FD296D3570997912221A33D6678597050700BA156442AB5CB137D70537A706F" target="_blank" rel="external">http://218.8.55.13/vlive.qqvideo.tc.qq.com/AU8SqeoXTl1JLXdNhOFSXiMVi2va5Pws1sz4YXZ7sAxo/d002684wnon.m1.mp4?vkey=BCCD552375F7D76708838E84668FDE0E15051F1BE9FF349A31FE6CA14BDC8EAE35FEF2322A8FAEA590EB2FCB129B0C96595BB896DBB756581A9F307ADA7D259AD4371F820D6C25194FD296D3570997912221A33D6678597050700BA156442AB5CB137D70537A706F</a></p></blockquote><p>只有几分钟..</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-07-24%20%E4%B8%8B%E5%8D%887.46.32.png" alt=""></p><blockquote><p>如上..</p></blockquote><p>研究来研究去，花费了不少的时间了，再研究下去也感觉没有多大的收获了..加上感觉也难以进行下去了，所以我决定：<strong>先暂停研究，用已有的工具来满足一下～</strong>。当然也离不开用<em>python</em>来模拟爬取了，哈哈～</p><h1 id="分析模拟结合网站工具来下载完整视频"><a href="#分析模拟结合网站工具来下载完整视频" class="headerlink" title="分析模拟结合网站工具来下载完整视频"></a>分析模拟结合网站工具来下载完整视频</h1><p>经过我的研究，腾讯视频那都是一个一个片段的来进行“输出”的，所以一个一个进行爬取之后(利用网站工具)，再利用<em>python</em>的一些模块进行合并，即可获得视频的完整版。当然这些过程均将用<em>python</em>来进行模拟！</p><ul><li>使用的网站工具：<a href="http://www.weibodang.cn/dang.php" target="_blank" rel="external">http://www.weibodang.cn/dang.php</a></li></ul><p>打开此网站，输入刚刚的要下载的视频链接，点击<code>获取视频</code>之后会跳到另一个页面，会发现完整版的视频就是用几个片段分成的：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/7%E6%9C%88-24-2018%2020-00-51.gif" alt=""></p><blockquote><p>腾讯这个老狗..</p></blockquote><p>如上我们已得知所有相关的片段的真实地址了，接下来将它们都下载下来后合并即可得到一个完整的视频了，网速快的话实际上跟直接下载一个完整版的视频没什么两样，可能还要快，哈哈～</p><p><strong>至此，就都已经分析完了，只剩下代码的事了。</strong></p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><p><strong>先说一下，这样的代码我写过太多次了..有点腻了…写不下去了，感觉总是在做一些重复的事，我就不打算写太多了，大概说一下思路吧，将各个片段下载来之后，再利用一个<em>python</em>处理视频的模块库将择好几个片段一同进行连接即可完成了。但是，貌似今天我看到好像没有分片段了？好像直接可以爬到完整版了？难道是错觉？算了，反正我也不怎么下载腾讯视频..哈哈～</strong></p><p>核心代码，剩下的代码可参考我的其他博文，自己写吧，腻死了..这段代码已经达到能够爬取到所有分片段了..</p> <figure class="highlight python"><figcaption><span>`</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">Created on 2018年7月24日</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">@author: junjieliu</span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line"><span class="string">函数目标：结合pyQT5界面化爬取腾讯视频</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">编写时间：2018-7.24</span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> time </div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> re </div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QCoreApplication</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> (QPushButton, QWidget, QLineEdit, QTextEdit, QGridLayout, QApplication, QComboBox)</div><div class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</div><div class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</div><div class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</div><div class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</div><div class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</div><div class="line"></div><div class="line">browser = webdriver.Chrome(<span class="string">'/Users/junjieliu/Documents/webdirver小插件/chromedriver'</span>)</div><div class="line"><span class="comment"># 设置显示等待，超过时间返回失败，否则就地正法！</span></div><div class="line">wait = WebDriverWait(browser, <span class="number">40</span>)</div><div class="line">input_url = <span class="string">'https://v.qq.com/x/cover/fzfi0p4etjrckhh/a00260ipkjg.html'</span></div><div class="line"></div><div class="line">url = <span class="string">'http://www.weibodang.cn/dang.php'</span></div><div class="line">browser.get(url)</div><div class="line">input = wait.until(</div><div class="line">    EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">'#aform &gt; div &gt; div &gt; div &gt; input'</span>)))</div><div class="line">button = wait.until(</div><div class="line">    EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'#aform &gt; div &gt; div &gt; div &gt; span &gt; input'</span>)))</div><div class="line"><span class="comment"># button = browser.find_element_by_name('check')</span></div><div class="line"></div><div class="line">input.clear()</div><div class="line">input.send_keys(input_url)</div><div class="line">button.click()</div><div class="line">html = browser.page_source</div><div class="line"></div><div class="line"><span class="comment"># 直接爬取相关的内容，即播放地址，再进行一番清洗得到正确的地址</span></div><div class="line">referer = re.findall(<span class="string">r'&lt;video src="(.*?)"'</span>, html, re.S)</div><div class="line">for_name = re.match(<span class="string">r'视频如下可直接播放，.*?："(.*?)"'</span>, html, re.S)</div><div class="line">print(for_name)</div><div class="line"><span class="keyword">for</span> each <span class="keyword">in</span> referer:</div><div class="line">    results = each.replace(<span class="string">';'</span>, <span class="string">'&amp;'</span>)</div><div class="line"> print(results)</div><div class="line"></div><div class="line">`</div></pre></td></tr></table></figure><blockquote><p><strong>对了，GUI用的<em>pyQT5在我之前的博文也有介绍了，不说了..我承认我有点懶～</em></strong></p></blockquote><h1 id="参考-amp-最后"><a href="#参考-amp-最后" class="headerlink" title="参考&amp;最后"></a>参考&amp;最后</h1><p>一些在学习过程中用处较大的放上来了，比较懶..当然也感谢其他那些无私奉献的人们，我也从中学习到了不少的东西，谢谢～</p><p><em>1、</em><a href="https://blog.csdn.net/cplvfx/article/details/80080761" target="_blank" rel="external">https://blog.csdn.net/cplvfx/article/details/80080761</a></p><p>其中用到的一些模块不懂的还需自行去了解以及查找！</p><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>如今在爬取片段的那个方法可以直接爬取到腾讯以前的旧的完整的视频了，好像没有什么分片段了…方法过程如上！新的视频但是还待解决。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
          <category> PyQt5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
            <tag> PyQt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>心声</title>
      <link href="/2018/07/18/%E5%BF%83%E5%A3%B0/"/>
      <url>/2018/07/18/%E5%BF%83%E5%A3%B0/</url>
      
        <content type="html"><![CDATA[<p>我已沉默了许久了。</p><p>直到今日我看到了一个<a href="https://www.youtube.com/watch?v=1yY0U801tUs&amp;feature=youtu.be" target="_blank" rel="external">视频链接</a>，看到了下方的一个同胞说到“我一直在流泪，孩子。”。我的心顿时在流血一般的，泪水一度忍不住的留..</p><a id="more"></a><p>现在中国的年轻一代们，你们为何不去了解政治？你们有什么理由不去了解自己国家的政治？看到身边的行尸走肉们，我有时感到一股孤独感由然而生。幸好，我并不是一个人坚持着，在世界的各个角落都有我的同胞都有人在关心着这个国家与这里的人民生活的怎么样，想到这里，我总是有一股欣慰感。</p><p>我不是什么象牙塔里的花朵，我也不想为谁辩论什么。我只是想关心我的国家，在这里，我出生在这里，在出生之后我知道我是一个中国人，我的一个“大家”叫中国，这里有我的许许多多的兄弟姐妹，大家相依为命，情同手足…这曾经是在我的梦里时常出现的幻梦，如今依旧不变着。</p><p>这里的土地应当由这里的人民来当家作主，不是从什么地方过来的二流子政权来把这里搞得民不聊生，人人自危，看看吧，如今的这片土地上，什么荒谬的事情每天都在发生，一次又一次的冲击着无数人的底线。没有最荒谬的事在这里，只有更为荒谬的。虽然主体都是人，难道就与政治没有关系？政治关系着社会人民生活的方方面面，有什么理由不关心自己国家的政治？作为一个中国人。</p><p>如今的这个国家有着一部分的人利用着这个体制获取着从多数人民身上得来的不义之财，打着各种为这个国家为人民着想的口号，吃着人血馒头，过着丝毫没有悔改，为所欲为的生活。这些人只要有存在的一天，就是这个国家最大的心患，是不必要的，需清除的寄生虫！他们带坏了整个国家社会的风气，导致一些臭味相投的人跟着这歪风，一起欺压压榨着我们的人民，有点少人因为被逼的放弃自己的底线、良知与善良？只有大家一同关注起来，一同团结起来才能将这些人绳之于法，用我们自己的真正的“法”！</p><p>作为这个国家的一份子，在有些时候就不应该继续沉默着，勇敢的发出自己的声音，与更多的那些勇敢的人民一起前进！人们也不应太过于冷漠，这个国家社会终究是我们一个个组成，大家都心怀热情，保持善良的人格，理智的并且去热衷于帮助身边需要的每一个人！当身边越来越好一些了之后，整体才会慢慢的变好。</p><p>大家一起加油！！</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PS软件的记录</title>
      <link href="/2018/07/18/%E4%BD%BF%E7%94%A8PS%E8%BD%AF%E4%BB%B6%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/07/18/%E4%BD%BF%E7%94%A8PS%E8%BD%AF%E4%BB%B6%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>此文是关于<em>PS软件</em>的使用记录，因为使用的不多，但是是经常需要用到的一些小技巧，记录在此，以便日后查看。不定时更新。</p><a id="more"></a><h1 id="图片合并"><a href="#图片合并" class="headerlink" title="图片合并"></a>图片合并</h1><p><em>1，</em>在软件中新建一个默认的空白层，将需要合并的图片一并拖入其中，排版调整好，保存退出，即可完成合并任务。</p><h1 id="去水印"><a href="#去水印" class="headerlink" title="去水印"></a>去水印</h1><blockquote><p><strong>大小水印均可去除使用。</strong></p></blockquote><p><em>1，</em><a href="https://jingyan.baidu.com/article/4ae03de3e41dd33eff9e6bb9.html" target="_blank" rel="external">https://jingyan.baidu.com/article/4ae03de3e41dd33eff9e6bb9.html</a></p><blockquote><p>看其中教程视频的第一个方法即可完成任务。</p></blockquote><p><em>2，</em><a href="https://jingyan.baidu.com/article/a24b33cd2361e819fe002bed.html" target="_blank" rel="external">https://jingyan.baidu.com/article/a24b33cd2361e819fe002bed.html</a></p><blockquote><p>不稳定方法。</p></blockquote><h1 id="抠公章"><a href="#抠公章" class="headerlink" title="抠公章"></a>抠公章</h1><ul><li><p>参考百度：<a href="https://zhidao.baidu.com/question/365261660.html" target="_blank" rel="external">https://zhidao.baidu.com/question/365261660.html</a></p></li><li><p>YouTube教学：<a href="https://www.youtube.com/watch?v=33IpM1Hmst8" target="_blank" rel="external">元卅PS教程4：去水印（自动识别、仿制图章、混合颜色带、直方图等）</a></p></li></ul><blockquote><p>即为先将仿制图章工具将黑色填充至周围的颜色，然后再将重叠的黑色或者是缺少的红色部分进行修补即可（同样以填充即可），最后还要将公章红色部分进行一些补色，前景色进行填充。可适当将图片放大来进行处理。最后把图上的处理好之后就用抠图的方法将公章抠出来即可，换上一个白色背景即可，或者直接保存。如果背景颜色太混乱就再以上方法再试一次。</p></blockquote><ul><li>抠公章教程全程可参考：<a href="https://www.bilibili.com/video/av38397415/" target="_blank" rel="external">一个方法，对印章进行抠图操作，不会ps的您，掌握了吗？</a></li></ul><blockquote><p>B站视频。</p></blockquote><h2 id="公章插入word"><a href="#公章插入word" class="headerlink" title="公章插入word"></a>公章插入word</h2><ul><li>即可参考：<a href="https://jingyan.baidu.com/article/6b182309da144eba58e15931.html" target="_blank" rel="external">word中插入电子印章方法？</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反思记录</title>
      <link href="/2018/06/29/%E5%8F%8D%E6%80%9D%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/06/29/%E5%8F%8D%E6%80%9D%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>不知不觉又已经到了期末了，现在的我在花时间应付考试。</p><p>这个学期我学了一些什么，我细细的回想一看，发现真的是太少了，最大的收获即是学习了一些<em>python爬虫</em>，但是不得不说也其实就是一半吊子罢了。所以这一切的一切真的需要我去好好的反思一下了，当中有太多的<em>三分钟热度</em>了，我的懒惰也是一大通病。我花了不少的时间去学习，到现在来看，不过也就是昙花一现，真的是太少了，学的太少了，我的学习状态出现了问题，这一点倒是无可争议的。我如今真的发现了，我的问题就是太过于“顺其自然”了，我曾经的规划计划都被我放在脑后，这真的是错误到家了…真的是让我付出了沉重的代价–太多有限的时间！</p><a id="more"></a><p><strong>更为重要的是我的自律习惯也没有曾经的那一番更加坚决了，这都是我变得懒惰的真实写照，我开始变得安于现状了，这恰恰是致命的毛病，如果不改变，我想我真的会付出更多的代价！</strong></p><p><strong>是的，我一度要求自己追求“自由”的方式去对待每一件事，但是如今的我好像真的是过度了，过度的安抚自己要“顺其自然”了…</strong></p><p>我强调并且追寻“自由”，但现在的我好像不具备太多这样的选择，我想我需要做出改变。不能太安逸去选择，更不能太安逸的去做事。</p><p>我的问题就是：<strong>太过于放纵自己了，以致于真的浪费了不少的时间！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel使用记录</title>
      <link href="/2018/06/27/Excel%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/06/27/Excel%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>以下是我在学习<em>Excel</em>这个软件时的学习记录，以便以后方便查找，随便也希望可以帮助需要的人。不定时更新。</p><blockquote><p>所有的学习来源均来自网络。</p></blockquote><h1 id="excel整列求和的两种方法"><a href="#excel整列求和的两种方法" class="headerlink" title="excel整列求和的两种方法"></a>excel整列求和的两种方法</h1><blockquote><p><a href="http://www.ittribalwo.com/article/1324.html" target="_blank" rel="external">http://www.ittribalwo.com/article/1324.html</a></p></blockquote><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结合Chrome插件快速下载百度云文件</title>
      <link href="/2018/06/25/%E7%BB%93%E5%90%88Chrome%E6%8F%92%E4%BB%B6%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E4%BA%91%E6%96%87%E4%BB%B6/"/>
      <url>/2018/06/25/%E7%BB%93%E5%90%88Chrome%E6%8F%92%E4%BB%B6%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E4%BA%91%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>最近下载一个文件，需要用到百度云网盘，不耐烦啊，它不耐烦我肯定很烦了…</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%20%E4%B8%8B%E5%8D%882.49.37.png" alt=""></p><blockquote><p>唉，坑爹的百度！</p></blockquote><a id="more"></a><p>不废话了，以下是结合<em>Chrome</em>下载的教程。</p><p><strong>具体的前面步骤看这个(懒得写重复的文字了..)：<a href="https://blog.csdn.net/fkq_2016/article/details/78759244" target="_blank" rel="external">https://blog.csdn.net/fkq_2016/article/details/78759244</a></strong></p><p>需要补充的是，其实下载这个修改版的也不错，我用的就是这个修改版的。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%20%E4%B8%8B%E5%8D%883.00.25.png" alt=""></p><p>在获取到了真实的地址之后我又结合经过破解之后的迅雷，哈哈哈，速度还是可以的！</p><p>关于如何复制完全真实地址，可在<em>Chrome商店</em>中下载<em>Chrome下载管理器</em>，就像下面操作图一样！</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%20%E4%B8%8B%E5%8D%883.05.18.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-06-25%20%E4%B8%8B%E5%8D%883.05.36.png" alt=""></p><blockquote><p>不过重中之重的问题在于，你要先能学会翻墙…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Chrome </tag>
            
            <tag> 百度网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Jupyter Notebook中安装多种语言内核</title>
      <link href="/2018/06/04/%E5%9C%A8Jupyter-Notebook%E4%B8%AD%E5%AE%89%E8%A3%85%E5%A4%9A%E7%A7%8D%E8%AF%AD%E8%A8%80%E5%86%85%E6%A0%B8/"/>
      <url>/2018/06/04/%E5%9C%A8Jupyter-Notebook%E4%B8%AD%E5%AE%89%E8%A3%85%E5%A4%9A%E7%A7%8D%E8%AF%AD%E8%A8%80%E5%86%85%E6%A0%B8/</url>
      
        <content type="html"><![CDATA[<p><em>Jupyter Notrbook</em>有一个好的编译界面，输出内容也一目了然，让人感觉像是发现了一个新大陆..</p><p>下面来说说如何在其中安装多种语言内核。</p><blockquote><p>支持的语言内核可查：<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels" target="_blank" rel="external">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a></p></blockquote><a id="more"></a><h1 id="安装python2内核"><a href="#安装python2内核" class="headerlink" title="安装python2内核"></a>安装<em>python2</em>内核</h1><p>因为我的默认已经安装了<em>python3</em>，所以就在此讲解一下如何安装<em>python2</em>内核。</p><ul><li>在<em>notebook</em>为开启情况下，依次输入命令：</li></ul><p><code>pip install ipykernel</code></p><p><code>python2 -m ipykernel install</code></p><blockquote><p>参考：<a href="https://www.jianshu.com/p/8b90c2f12856" target="_blank" rel="external">https://www.jianshu.com/p/8b90c2f12856</a></p></blockquote><h1 id="安装R内核"><a href="#安装R内核" class="headerlink" title="安装R内核"></a>安装<em>R</em>内核</h1><p>上面的文章也有相关的介绍了。</p><p>但是在<em>anaconda</em>中一行命令即可完成下载：</p><p><code>conda install r-essential</code></p><p>或者是</p><p><code>conda  install -c r r-essentials</code></p><blockquote><p>参考：<a href="https://kangliping.wordpress.com/2017/09/15/anaconda_r/" target="_blank" rel="external">https://kangliping.wordpress.com/2017/09/15/anaconda_r/</a></p></blockquote><p><strong>下载第一次可能有几个包不成功，我经过重新输入命令行之后再次下载得到了解决。</strong></p><h1 id="安装bash内核"><a href="#安装bash内核" class="headerlink" title="安装bash内核"></a>安装<em>bash</em>内核</h1><p>新开一个终端，依次使用命令行：</p><p><code>pip install bash_kernel</code></p><p><code>python -m bash_kernel.install</code></p><blockquote><p>参考：<a href="https://blog.csdn.net/SA14023053/article/details/52053649" target="_blank" rel="external">https://blog.csdn.net/SA14023053/article/details/52053649</a></p></blockquote><h1 id="安装基于Scala的spark应用"><a href="#安装基于Scala的spark应用" class="headerlink" title="安装基于Scala的spark应用"></a>安装基于<em>Scala</em>的<em>spark</em>应用</h1><blockquote><p>具体移步：<a href="https://blog.csdn.net/Xmo_jiao/article/details/72674687" target="_blank" rel="external">https://blog.csdn.net/Xmo_jiao/article/details/72674687</a></p></blockquote><p>其中需要的内容在<em>spark</em>启动页面中都能找到。没办法，内容太多，又懒得写..</p><p><strong>但是需要注意的每次均要启动spark再进行进一步的编程操作。在已经安装<em>spark</em>的前提下输入命令行：<code>spark-shell</code>启动spark。</strong></p><h1 id="安装Matlab内核"><a href="#安装Matlab内核" class="headerlink" title="安装Matlab内核"></a>安装Matlab内核</h1><p>可参考：</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/31039961" target="_blank" rel="external">Jupyter Notebook with MATLAB</a></p></li><li><p><a href="https://github.com/hahaahaha111/matlab_kernel" target="_blank" rel="external">Matlab kernel for Jupyter</a></p></li></ul><blockquote><p>经测试，不怎么好用。</p></blockquote><h1 id="安装C语言内核"><a href="#安装C语言内核" class="headerlink" title="安装C语言内核"></a>安装C语言内核</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">sudo pip install jupyter-c-kernel</div><div class="line"></div><div class="line">install_c_kernel</div><div class="line"></div><div class="line">jupyter-notebook</div></pre></td></tr></table></figure><ul><li>参考：<a href="https://github.com/brendan-rius/jupyter-c-kernel" target="_blank" rel="external">https://github.com/brendan-rius/jupyter-c-kernel</a></li></ul><h1 id="安装C-内核"><a href="#安装C-内核" class="headerlink" title="安装C++内核"></a>安装C++内核</h1><ul><li><p>可参考：<a href="https://github.com/liujunjie11/xeus-cling" target="_blank" rel="external">https://github.com/liujunjie11/xeus-cling</a></p></li><li><p><a href="https://blog.csdn.net/H_O_W_E/article/details/77370456" target="_blank" rel="external">Anaconda创建环境、删除环境、激活环境、退出环境</a></p></li></ul><h2 id="另外一个方法可参考："><a href="#另外一个方法可参考：" class="headerlink" title="另外一个方法可参考："></a>另外一个方法可参考：</h2><ul><li><p><a href="https://jiegec.me/programming/2017/11/30/run-cpp-in-jupyter-notebook/" target="_blank" rel="external">Run Cpp In Jupyter Notebook</a></p></li><li><p><a href="http://www.codebelief.com/article/2017/06/run-cpp-code-interactively-on-jupyter-notebook/" target="_blank" rel="external">在 Jupyter Notebook 中交互式运行 C++ 代码</a></p></li><li><p><a href="http://pre.tir.tw/008/blog/output/cpp_in_jupyter.html" target="_blank" rel="external">C++ 直譯器 cling: jupyter notebook</a></p></li></ul><p>过程中发生的错误可参考：</p><ul><li><p><a href="https://github.com/root-project/cling/pull/198" target="_blank" rel="external">Fix cling not found in jupyter kernel when <code>which cling</code> is a link to relative path (e.g. ../Cellar/cling/…) </a></p></li><li><p><a href="https://stackoverflow.com/questions/35647998/cling-kernel-for-jupyter-on-ubuntu" target="_blank" rel="external">Cling Kernel for Jupyter on Ubuntu</a></p></li><li><p><a href="https://github.com/root-project/cling/issues/209" target="_blank" rel="external">Cling jupyter kernel fails when <code>cling</code> is a relative path symlink</a></p></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><blockquote><p><strong>所有内核查询</strong>：<a href="https://github.com/jupyter/jupyter/wiki/Jupyter-kernels" target="_blank" rel="external">https://github.com/jupyter/jupyter/wiki/Jupyter-kernels</a></p></blockquote><p>输入以下命令行查看已安装的内核列表：</p><p><code>jupyter kernelspec list</code></p><p>先写这么多，以后有需要再进行补充。</p><p><strong>关于在下载完之后发现启动内核失败(dead kernel的情况)</strong></p><p>可参考以下链接：</p><ol><li><p><a href="https://blog.csdn.net/liangdagongjue/article/details/79533538" target="_blank" rel="external">https://blog.csdn.net/liangdagongjue/article/details/79533538</a></p></li><li><p><a href="https://blog.csdn.net/wobeatit/article/details/78885339" target="_blank" rel="external">https://blog.csdn.net/wobeatit/article/details/78885339</a></p></li></ol><blockquote><p>即实际上就是我将<em>Anaconda</em>升级之后出现了以上的<code>dead kernel</code>的情况，后来发现真的是软件更新没有跟上的问题，将<em>notebook</em>之类的一并更新一遍即可解决。</p></blockquote><p>实际使用命令行如下：</p><p><code>conda upgrade notebook</code></p><p><code>conda upgrade jupyter</code></p><p><code>conda update mkl</code></p><p>一并更新之后重新打开会发现一切都可以正常使用了。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Jupyter Notebook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下载2018CAD破解</title>
      <link href="/2018/05/29/Mac%E4%B8%8B%E8%BD%BD2018CAD%E7%A0%B4%E8%A7%A3/"/>
      <url>/2018/05/29/Mac%E4%B8%8B%E8%BD%BD2018CAD%E7%A0%B4%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>最近因为选修课要用到<em>CAD</em>，用的恰好是<em>Mac book</em>，就在此记录.</p><a id="more"></a><h1 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>先去官网下载好2018的试用版：<a href="https://www.autodesk.com.cn/products/autocad/free-trial#0" target="_blank" rel="external">https://www.autodesk.com.cn/products/autocad/free-trial#0</a></p><blockquote><p><strong>需要注意的是：选择企业注册就好，不然很麻烦…</strong></p></blockquote><h1 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h1><h2 id="参考以下文章即可"><a href="#参考以下文章即可" class="headerlink" title="参考以下文章即可.."></a>参考以下文章即可..</h2><ul><li>参考：<a href="http://www.anyxz.com/index.php/2902.html" target="_blank" rel="external">http://www.anyxz.com/index.php/2902.html</a></li></ul><blockquote><p>因为我只是完成作业就卸载了..所以一个试用版就足够..</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> CAD </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>理解常用传统算法的合集资源总结</title>
      <link href="/2018/05/10/%E7%90%86%E8%A7%A3%E5%B8%B8%E7%94%A8%E4%BC%A0%E7%BB%9F%E7%AE%97%E6%B3%95%E7%9A%84%E5%90%88%E9%9B%86%E8%B5%84%E6%BA%90%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/10/%E7%90%86%E8%A7%A3%E5%B8%B8%E7%94%A8%E4%BC%A0%E7%BB%9F%E7%AE%97%E6%B3%95%E7%9A%84%E5%90%88%E9%9B%86%E8%B5%84%E6%BA%90%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>平时学习算法是为了理解其中的原理以及思想，另外还有各种算法之间的比较以及应用场景。下面是一些常用常见的传统算法，我在<em>YouTube</em>上找了一些可简单理解其原理思想的视频，真正的做到通俗易懂！</p><p>另外关于算法的各种时间复杂度以及空间复杂度均在此小列出来。关于以下各种算法的应用场景实际上还是需要自己去结合这些算法的思想去选择的，就不在此多说了。</p><blockquote><p>参考了许多的网页，包括<em>YouTube</em>，<em>维基百科</em>等灯，也从中学习到了许多，就是在此汇总一下。<strong>另外参考的网页就不一一列出来了，感谢他们/她们的付出与分享。</strong></p></blockquote><a id="more"></a><p><strong>主要参考：</strong></p><ul><li><p><a href="http://wiki.jikexueyuan.com/project/data-structure-sorting/insertion-sort.html" target="_blank" rel="external">http://wiki.jikexueyuan.com/project/data-structure-sorting/insertion-sort.html</a></p></li><li><p><a href="https://github.com/francistao/LearningNotes/blob/master/Part3/Algorithm/Sort/面试中的%2010%20大排序算法总结.md" target="_blank" rel="external">https://github.com/francistao/LearningNotes/blob/master/Part3/Algorithm/Sort/面试中的%2010%20大排序算法总结.md</a></p></li><li><p>常用排序算法总结(一):<a href="http://www.cnblogs.com/eniac12/p/5329396.html" target="_blank" rel="external">http://www.cnblogs.com/eniac12/p/5329396.html</a></p></li><li><p>常用排序算法总结(二):<a href="http://www.cnblogs.com/eniac12/p/5332117.html" target="_blank" rel="external">http://www.cnblogs.com/eniac12/p/5332117.html</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3爬虫与GUI:基于有道词典的词典小工具</title>
      <link href="/2018/05/07/python3%E7%88%AC%E8%99%AB%E4%B8%8EGUI-%E5%9F%BA%E4%BA%8E%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%E7%9A%84%E8%AF%8D%E5%85%B8%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
      <url>/2018/05/07/python3%E7%88%AC%E8%99%AB%E4%B8%8EGUI-%E5%9F%BA%E4%BA%8E%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%E7%9A%84%E8%AF%8D%E5%85%B8%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>最近看到了一篇文章，一个基于<em>有道</em>的词典小工具，心血来潮，想着自己来写一个试试看。</p><blockquote><p>下面我将用<em>python</em>完成接口的对接(即进行抓包)，并且用<em>pyQT5</em>实现对应的GUI界面。接下来就是事件机制的编写了，这样任务就完成了。</p></blockquote><a id="more"></a><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>在分析的过程中需要分析网页中的<em>JS</em>代码，因为有道现在使用加密算法来进行翻译结果的加密了。下面一一进行简单的说明。</p><p>首先用<em>Chrome浏览器</em>打开<a href="http://fanyi.youdao.com/" target="_blank" rel="external">有道在线翻译页面</a>，随便输入一个中文，会自动检测翻译成英文。(在我们已经都知道有道现在是加密的情况下我就不废话太多了，下面直接挑重点的说。)打开其自带的开发者工具查看到相关的包信息：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.17.22.png" alt=""></p><blockquote><p>如果多翻译试几次翻译会发现上图所指的两个参数是持续变化的，还有一个<code>i</code>是输入的词，这个是在正常不过的，没什么疑义。</p></blockquote><h2 id="找到相应的JS整体代码"><a href="#找到相应的JS整体代码" class="headerlink" title="找到相应的JS整体代码"></a>找到相应的JS整体代码</h2><p>为了知道加密算法的过程以及整个流程是怎么一回事，找到网页的整体<em>JS</em>代码是唯一的选择。</p><p>先借助<em>火狐浏览器</em>分析翻译的接口，可快速的发现<em>JS</em>代码的所在处：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-08-2018%2016-32-38.gif" alt=""></p><p>知道了<em>JS</em>文件的所在处，我们可在<em>Chrome浏览器</em>下找到这个地址：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.20.45.png" alt=""></p><p>新建标签页打开：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.21.11.png" alt=""></p><blockquote><p>发现这是一个混淆的<em>JS</em>代码，需要进行格式化才可知道其庐山真面目！<br>推荐两个反混淆的网站：<br><a href="http://tool.oschina.net/codeformat/js" target="_blank" rel="external">http://tool.oschina.net/codeformat/js</a> ，<a href="http://www.bm8.com.cn/jsConfusion/" target="_blank" rel="external">http://www.bm8.com.cn/jsConfusion/</a></p></blockquote><p>将混淆的代码复制粘贴在以上任意的一个网站，选择点击格式化之后即可得最终正解代码，之后为了查找关键词，我将这些代码编入一个文件中(<em>Mac</em>直接用文本编辑创建新文件即可。)：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.22.49.png" alt=""></p><blockquote><p>格式化之后的JS代码一览。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.23.13.png" alt=""></p><blockquote><p>之后查找关键词<code>salt</code>，找到对应上方的所指的参数位置。其中的乱码不用管，对分析代码没什么影响。</p></blockquote><h2 id="分析内容过程"><a href="#分析内容过程" class="headerlink" title="分析内容过程"></a>分析内容过程</h2><p>分析了一下之后，在<em>Chrome浏览器</em>中运行一下相关的代码，然后进入<a href="http://tool.chinaz.com/Tools/unixtime.aspx" target="_blank" rel="external">关于时间戳转换的网站</a>进行简单的转换，会发现这是一个有关时间戳的随机生成的一串数字：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.23.13.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.23.42.png" alt=""></p><blockquote><p>结合上下文(即<code>salt</code>关键词的上下一点范围即可)，发现有<em>md5</em>算法的字样出现了。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.27.05.png" alt=""></p><blockquote><p>代码中关键的相关的内容。之后我们会用<em>python</em>来模拟这些代码来进行相关参数的输出。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.29.07.png" alt=""></p><blockquote><p>用<em>Chrome</em>试着运行一下。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.30.43.png" alt=""></p><blockquote><p>将运行之后的数字填入转换得出结果。</p></blockquote><p>在得知了两个随着翻译变化的关键词之一<code>salt</code>的生成原理之后，再来看看最后一个突破点，即找到关键词<code>sign</code>的生成原理，在这之后利用<em>python</em>模仿运行生成再代人相关的参数即可完成需要的翻译结果的输出。</p><p>其实往上看一点点就能发现诀窍了：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.23.42.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-08%20%E4%B8%8B%E5%8D%884.31.13.png" alt=""></p><blockquote><p>结合<em>md5算法</em>以及必要的几个参数即可得出<code>sign</code>的生成值。</p></blockquote><p>这样一来思路就都清晰明了了，仅仅需要代码的实现了。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><p>以下代码已经套上了结合<em>pyQt5</em>开发出来了GUI的整体代码。</p><blockquote><p>关于<em>pyQt5</em>不清楚可参考我之前的相关博文，或者是利用好搜索引擎。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">函数目标：</span></div><div class="line"><span class="string">基于有道的GUI搜索小工具</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">编写时间：</span></div><div class="line"><span class="string">2018-5-08</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> time </div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> hashlib</div><div class="line"><span class="keyword">import</span> random</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QCoreApplication</div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> (QPushButton, QWidget, QLabel, QLineEdit, QTextEdit, QGridLayout, QApplication,</div><div class="line">    QComboBox)</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        </div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save_translateResult</span><span class="params">(self, word)</span>:</span></div><div class="line">        <span class="string">"""</span></div><div class="line"><span class="string">        本函数用于翻译结果的返回。</span></div><div class="line"><span class="string">        """</span></div><div class="line">        </div><div class="line">        r = str(int(time.time() * <span class="number">1000</span> + random.randint(<span class="number">1</span>, <span class="number">10</span>)))  <span class="comment"># 模仿JS代码的仿写</span></div><div class="line">        S = <span class="string">'fanyideskweb'</span></div><div class="line">        n = word</div><div class="line">        D = <span class="string">"ebSeFb%=XZ%T[KZ)c(sy!"</span>  <span class="comment"># 在完整的JS代码中可找到</span></div><div class="line">        </div><div class="line">        o = hashlib.md5((S + n + str(r) + D).encode(<span class="string">'utf-8'</span>)).hexdigest()</div><div class="line">        </div><div class="line">        data = &#123;</div><div class="line">            <span class="string">'i'</span>: word,</div><div class="line">            <span class="string">'from'</span>: <span class="string">'AUTO'</span>,</div><div class="line">            <span class="string">'to'</span>: <span class="string">'AUTO'</span>,</div><div class="line">            <span class="string">'smartresult'</span>: <span class="string">'dict'</span>,</div><div class="line">            <span class="string">'client'</span>: S,</div><div class="line">            <span class="string">'salt'</span>: r,</div><div class="line">            <span class="string">'sign'</span>: o,</div><div class="line">            <span class="string">'doctype'</span>: <span class="string">'json'</span>,</div><div class="line">            <span class="string">'version'</span>: <span class="string">'2.1'</span>,</div><div class="line">            <span class="string">'keyfrom'</span>: <span class="string">'fanyi.web'</span>,</div><div class="line">            <span class="string">'action'</span>: <span class="string">'FY_BY_REALTIME'</span>,</div><div class="line">            <span class="string">'typoResult'</span>: <span class="string">'false'</span></div><div class="line">        &#125;</div><div class="line">        url = <span class="string">'http://fanyi.youdao.com/translate_o?smartresult=dict&amp;smartresult=rule'</span></div><div class="line">        </div><div class="line">        <span class="comment"># 在代理中需要加入cookies信息，否则会出现代码错误信息的返回</span></div><div class="line">        header = &#123;</div><div class="line">            <span class="string">'Cookie'</span>: XXXXXXXXXXXXXXXXXXXntes_nnid=<span class="number">25</span>aff2b1480f17471ca1585f6f2f4293,<span class="number">15120241366</span><span class="string">',</span></div><div class="line"><span class="string">            '</span>Refere<span class="string">r': '</span>http://fanyi.youdao.com/<span class="string">',</span></div><div class="line"><span class="string">            '</span>User-Agent<span class="string">': '</span>Mozilla/<span class="number">5.0</span> (Macintosh; Intel Mac OS X <span class="number">10</span>_13_1) AppleWebKit/<span class="number">537.36</span> (KHTML, like Gecko) Chrome/<span class="number">66.0</span><span class="number">.3359</span><span class="number">.139</span> Safari/<span class="number">537.36</span><span class="string">'</span></div><div class="line"><span class="string">        &#125;</span></div><div class="line"><span class="string">        response = requests.post(url=url, headers=header, data=data)</span></div><div class="line"><span class="string">        response.encoding = '</span>utf<span class="number">-8</span><span class="string">'</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        translateResult = json.loads(response.text)["translateResult"][0][0]['</span>tgt<span class="string">']</span></div><div class="line"><span class="string">        return translateResult</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    def take_test(self, word):</span></div><div class="line"><span class="string">        """</span></div><div class="line"><span class="string">        本函数用于输出测试。</span></div><div class="line"><span class="string">        """</span></div><div class="line"><span class="string">        try:</span></div><div class="line"><span class="string">            return self.save_translateResult(word)</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        except AttributeError:</span></div><div class="line"><span class="string">            return "输入点有误/输出出现问题！！"</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">    def initUI(self):</span></div><div class="line"><span class="string">        # 组件添加</span></div><div class="line"><span class="string">        combo = QComboBox(self)</span></div><div class="line"><span class="string">        combo.addItem('</span>有道词典<span class="string">')</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        label = QLabel("请输入:")</span></div><div class="line"><span class="string">        line = QLineEdit()</span></div><div class="line"><span class="string">        button_1 = QPushButton('</span>开始翻译<span class="string">', self)</span></div><div class="line"><span class="string">        button_2 = QPushButton('</span>退出<span class="string">', self)</span></div><div class="line"><span class="string">        button_3 = QPushButton('</span>清空<span class="string">', self)</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        result = QTextEdit()</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        # 布局设置</span></div><div class="line"><span class="string">        grip = QGridLayout()</span></div><div class="line"><span class="string">        grip.setSpacing(4)</span></div><div class="line"><span class="string">        grip.addWidget(label, 1, 0)</span></div><div class="line"><span class="string">        grip.addWidget(line, 2, 0)</span></div><div class="line"><span class="string">        grip.addWidget(button_3, 2, 1)</span></div><div class="line"><span class="string">        grip.addWidget(button_1, 3, 0)</span></div><div class="line"><span class="string">        grip.addWidget(button_2, 3, 1)</span></div><div class="line"><span class="string">        grip.addWidget(result, 4, 0)</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        self.setLayout(grip)</span></div><div class="line"><span class="string">        combo.move(500, 0)</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        # 基于Macbook设置基本的快捷键以及推出程序的信号槽</span></div><div class="line"><span class="string">        button_1.setShortcut('</span><span class="keyword">return</span><span class="string">')</span></div><div class="line"><span class="string">        button_2.setShortcut('</span>command+q<span class="string">')</span></div><div class="line"><span class="string">        button_2.clicked.connect(QCoreApplication.instance().quit)</span></div><div class="line"><span class="string">        button_3.setShortcut('</span>esc<span class="string">')</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        def translate():</span></div><div class="line"><span class="string">            """</span></div><div class="line"><span class="string">            本函数用于返回翻译按钮之后的结果输出！</span></div><div class="line"><span class="string">            """</span></div><div class="line"><span class="string">            result.setText(self.take_test(line.text()))</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        button_1.clicked.connect(translate)</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        def clear():</span></div><div class="line"><span class="string">            """</span></div><div class="line"><span class="string">            本函数用于输入输出框的清空！</span></div><div class="line"><span class="string">            """</span></div><div class="line"><span class="string">            line.setText("")</span></div><div class="line"><span class="string">            result.setText("")</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        button_3.clicked.connect(clear)</span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">        # 设置窗口大小</span></div><div class="line"><span class="string">        self.setGeometry(500, 150, 600, 500)</span></div><div class="line"><span class="string">        self.setWindowTitle("有道翻译小工具")</span></div><div class="line"><span class="string">        self.show()</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">        </span></div><div class="line"><span class="string">if __name__ == "__main__":</span></div><div class="line"><span class="string">    app = QApplication(sys.argv)</span></div><div class="line"><span class="string">    ex = Example()</span></div><div class="line"><span class="string">    sys.exit(app.exec_())</span></div></pre></td></tr></table></figure><blockquote><p><strong>上面的<em>cookies</em>值是必须要的！否则会出现错误，当然，在上面的代码我的<em>cookies</em>数值我进行了隐藏更改，如果需要测试运行，可加上自己浏览器上有道在线翻译的<em>cookies</em>。</strong></p></blockquote><p>运行演示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-08-2018%2016-32-56.gif" alt=""></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li>代码中的模块可参考：</li></ul><p><em>1.</em> JavaScript parseInt() 函数：<a href="http://www.w3school.com.cn/js/jsref_parseInt.asp" target="_blank" rel="external">http://www.w3school.com.cn/js/jsref_parseInt.asp</a></p><p><em>2.</em> time.time()：返回当前时间的时间戳。：<a href="http://qinxuye.me/article/details-about-time-module-in-python/" target="_blank" rel="external">http://qinxuye.me/article/details-about-time-module-in-python/</a></p><p><em>3.</em> random.randint：<a href="https://www.cnblogs.com/yd1227/archive/2011/03/18/1988015.html" target="_blank" rel="external">https://www.cnblogs.com/yd1227/archive/2011/03/18/1988015.html</a></p><p><em>4.</em> hashlib:<a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319556588648dd1fb0047a34d0c945ee33e8f4c90cc000" target="_blank" rel="external">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319556588648dd1fb0047a34d0c945ee33e8f4c90cc000</a></p><blockquote><p>其他的自行查找。特别是<em>pyQt5</em>这个库，可查看我之前写的文章作为参考：<a href="https://liujunjie11.github.io/2018/04/28/python3爬虫与GUI：一个简易的搜索实用小工具/#more">https://liujunjie11.github.io/2018/04/28/python3爬虫与GUI：一个简易的搜索实用小工具/#more</a></p></blockquote><ul><li>参考：</li></ul><p><em>1.</em>  <a href="http://study.163.com/course/courseLearn.htm?courseId=1004108008#/learn/video?lessonId=1047998193&amp;courseId=1004108008" target="_blank" rel="external">http://study.163.com/course/courseLearn.htm?courseId=1004108008#/learn/video?lessonId=1047998193&amp;courseId=1004108008</a></p><p><em>2.</em>  <a href="https://cuiqingcai.com/5024.html" target="_blank" rel="external">https://cuiqingcai.com/5024.html</a></p><p><em>3.</em>  <a href="https://blog.csdn.net/karmacode/article/details/79145728" target="_blank" rel="external">https://blog.csdn.net/karmacode/article/details/79145728</a></p><p><em>4.</em>  <a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319556588648dd1fb0047a34d0c945ee33e8f4c90cc000" target="_blank" rel="external">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000/0014319556588648dd1fb0047a34d0c945ee33e8f4c90cc000</a></p><p><em>5.</em>  <a href="http://qinxuye.me/article/details-about-time-module-in-python/" target="_blank" rel="external">http://qinxuye.me/article/details-about-time-module-in-python/</a></p><p><em>6.</em>  <a href="https://www.cnblogs.com/yd1227/archive/2011/03/18/1988015.html" target="_blank" rel="external">https://www.cnblogs.com/yd1227/archive/2011/03/18/1988015.html</a></p><p>关于<em>python</em>的加密算法以及加密原理：</p><p><em>1.</em>  <a href="https://www.oudahe.com/p/python/z545/" target="_blank" rel="external">https://www.oudahe.com/p/python/z545/</a></p><p><em>2.</em>  <a href="https://www.oudahe.com/p/python/z545/" target="_blank" rel="external">https://www.oudahe.com/p/python/z545/</a></p><blockquote><p>最后不懂的模块知识可利用好搜索引擎。</p></blockquote><p>实际上也参考了我自己的文章：</p><blockquote><p><a href="https://liujunjie11.github.io/2018/04/28/python3爬虫与GUI：一个简易的搜索实用小工具/#more">https://liujunjie11.github.io/2018/04/28/python3爬虫与GUI：一个简易的搜索实用小工具/#more</a></p></blockquote><p>以及<em>pyqt5</em>的官网教程：</p><blockquote><p><a href="https://maicss.gitbooks.io/pyqt5/content/事件和信号.html" target="_blank" rel="external">https://maicss.gitbooks.io/pyqt5/content/事件和信号.html</a></p></blockquote><ul><li>关于将python文件打包生成app的工具库：</li></ul><blockquote><p><strong>py2app:.py –&gt; .dmg</strong></p><p><strong>py2exe:.py –&gt; .exe</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
          <category> PyQt5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
            <tag> PyQt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(转)五大常用算法总结</title>
      <link href="/2018/05/07/%E8%BD%AC-%E4%BA%94%E5%A4%A7%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/07/%E8%BD%AC-%E4%BA%94%E5%A4%A7%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>本文转自：</p><blockquote><p><strong>博客园：<a href="http://www.cnblogs.com/steven_oyj/archive/2010/05/22/1741370.html" target="_blank" rel="external">http://www.cnblogs.com/steven_oyj/archive/2010/05/22/1741370.html</a></strong><br><strong>作者：红脸书生</strong></p></blockquote><hr><a id="more"></a><h1 id="分治算法"><a href="#分治算法" class="headerlink" title="分治算法"></a>分治算法</h1><h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><p>   在计算机科学中，分治法是一种很重要的算法。字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，再把子问题分成更小的子问题……直到最后子问题可以简单的直接求解，原问题的解即子问题的解的合并。这个技巧是很多高效算法的基础，如排序算法(快速排序，归并排序)，傅立叶变换(快速傅立叶变换)……</p><p>   任何一个可以用计算机求解的问题所需的计算时间都与其规模有关。问题的规模越小，越容易直接求解，解题所需的计算时间也越少。例如，对于n个元素的排序问题，当n=1时，不需任何计算。n=2时，只要作一次比较即可排好序。n=3时只要作3次比较即可，…。而当n较大时，问题就不那么容易处理了。要想直接解决一个规模较大的问题，有时是相当困难的。</p><h2 id="二、基本思想及策略"><a href="#二、基本思想及策略" class="headerlink" title="二、基本思想及策略"></a>二、基本思想及策略</h2><p>   <strong>分治法的设计思想是：</strong>将一个难以直接解决的大问题，分割成一些规模较小的相同问题，以便各个击破，分而治之。</p><p>   <strong>分治策略是：</strong>对于一个规模为n的问题，若该问题可以容易地解决（比如说规模n较小）则直接解决，否则将其分解为k个规模较小的子问题，这些子问题互相独立且与原问题形式相同，递归地解这些子问题，然后将各子问题的解合并得到原问题的解。这种算法设计策略叫做分治法。</p><p>   如果原问题可分割成k个子问题，1&lt;k≤n，且这些子问题都可解并可利用这些子问题的解求出原问题的解，那么这种分治法就是可行的。由分治法产生的子问题往往是原问题的较小模式，这就为使用递归技术提供了方便。在这种情况下，反复应用分治手段，可以使子问题与原问题类型一致而其规模却不断缩小，最终使子问题缩小到很容易直接求出其解。这自然导致递归过程的产生。分治与递归像一对孪生兄弟，经常同时应用在算法设计之中，并由此产生许多高效算法。</p><h2 id="三、分治法适用的情况"><a href="#三、分治法适用的情况" class="headerlink" title="三、分治法适用的情况"></a>三、分治法适用的情况</h2><ul><li><p>分治法所能解决的问题一般具有以下几个特征：</p><p>（1) 该问题的规模缩小到一定的程度就可以容易地解决</p><p>（2) 该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质。</p><p>（3) 利用该问题分解出的子问题的解可以合并为该问题的解；</p><p>（4) 该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子子问题。</p></li></ul><blockquote><p>第一条特征是绝大多数问题都可以满足的，因为问题的计算复杂性一般是随着问题规模的增加而增加；</p><p>第二条特征是应用分治法的前提它也是大多数问题可以满足的，此特征反映了递归思想的应用；、</p><p>第三条特征是关键，能否利用分治法完全取决于问题是否具有第三条特征，如果具备了第一条和第二条特征，而不具备第三条特征，则可以考虑用贪心法或动态规划法。</p><p>第四条特征涉及到分治法的效率，如果各子问题是不独立的则分治法要做许多不必要的工作，重复地解公共的子问题，此时虽然可用分治法，但一般用动态规划法较好。</p></blockquote><h2 id="四、分治法的基本步骤"><a href="#四、分治法的基本步骤" class="headerlink" title="四、分治法的基本步骤"></a>四、分治法的基本步骤</h2><p>分治法在每一层递归上都有三个步骤：</p><ul><li><p>step1 分解：将原问题分解为若干个规模较小，相互独立，与原问题形式相同的子问题；</p></li><li><p>step2 解决：若子问题规模较小而容易被解决则直接解，否则递归地解各个子问题</p></li><li><p>step3 合并：将各个子问题的解合并为原问题的解。</p></li></ul><p>它的一般的算法设计模式如下：</p><pre><code>Divide-and-Conquer(P)1. if |P|≤n02. then return(ADHOC(P))3. 将P分解为较小的子问题 P1 ,P2 ,...,Pk4. for i←1 to k5. do yi ← Divide-and-Conquer(Pi) △ 递归解决Pi6. T ← MERGE(y1,y2,...,yk) △ 合并子问题7. return(T)</code></pre><blockquote><p>   其中|P|表示问题P的规模；n0为一阈值，表示当问题P的规模不超过n0时，问题已容易直接解出，不必再继续分解。ADHOC(P)是该分治法中的基本子算法，用于直接解小规模的问题P。因此，当P的规模不超过n0时直接用算法ADHOC(P)求解。算法MERGE(y1,y2,…,yk)是该分治法中的合并子算法，用于将P的子问题P1 ,P2 ,…,Pk的相应的解y1,y2,…,yk合并为P的解。</p></blockquote><h2 id="五、分治法的复杂性分析"><a href="#五、分治法的复杂性分析" class="headerlink" title="五、分治法的复杂性分析"></a>五、分治法的复杂性分析</h2><p>   一个分治法将规模为n的问题分成k个规模为n／m的子问题去解。设分解阀值n0=1，且adhoc解规模为1的问题耗费1个单位时间。再设将原问题分解为k个子问题以及用merge将k个子问题的解合并为原问题的解需用f(n)个单位时间。用T(n)表示该分治法解规模为|P|=n的问题所需的计算时间，则有：</p><p> T（n）= k T(n/m)+f(n)</p><p>  通过迭代法求得方程的解：</p><p>  递归方程及其解只给出n等于m的方幂时T(n)的值，但是如果认为T(n)足够平滑，那么由n等于m的方幂时T(n)的值可以估计T(n)的增长速度。通常假定T(n)是单调上升的，从而当mi≤n&lt;mi+1时，T(mi)≤T(n)&lt;T(mi+1)。 </p><h2 id="六、可使用分治法求解的一些经典问题"><a href="#六、可使用分治法求解的一些经典问题" class="headerlink" title="六、可使用分治法求解的一些经典问题"></a>六、可使用分治法求解的一些经典问题</h2><p> （1）二分搜索<br> （2）大整数乘法<br> （3）Strassen矩阵乘法<br> （4）棋盘覆盖<br> （5）合并排序<br> （6）快速排序<br> （7）线性时间选择</p><p> （8）最接近点对问题<br> （9）循环赛日程表<br> （10）汉诺塔</p><h2 id="七、依据分治法设计程序时的思维过程"><a href="#七、依据分治法设计程序时的思维过程" class="headerlink" title="七、依据分治法设计程序时的思维过程"></a>七、依据分治法设计程序时的思维过程</h2><blockquote><p>   实际上就是类似于数学归纳法，找到解决本问题的求解方程公式，然后根据方程公式设计递归程序。</p></blockquote><p>1、一定是先找到最小问题规模时的求解方法</p><p>2、然后考虑随着问题规模增大时的求解方法</p><p>3、找到求解的递归函数式后（各种规模或因子），设计递归程序即可。</p><h1 id="动态规划算法"><a href="#动态规划算法" class="headerlink" title="动态规划算法"></a>动态规划算法</h1><h2 id="一、基本概念-1"><a href="#一、基本概念-1" class="headerlink" title="一、基本概念"></a>一、基本概念</h2><p>   动态规划过程是：每次决策依赖于当前状态，又随即引起状态的转移。一个决策序列就是在变化的状态中产生出来的，所以，这种多阶段最优化决策解决问题的过程就称为动态规划。</p><h2 id="二、基本思想与策略"><a href="#二、基本思想与策略" class="headerlink" title="二、基本思想与策略"></a>二、基本思想与策略</h2><p>   基本思想与分治法类似，也是将待求解的问题分解为若干个子问题（阶段），按顺序求解子阶段，前一子问题的解，为后一子问题的求解提供了有用的信息。在求解任一子问题时，列出各种可能的局部解，通过决策保留那些有可能达到最优的局部解，丢弃其他局部解。依次解决各子问题，最后一个子问题就是初始问题的解。</p><p>   由于动态规划解决的问题多数有重叠子问题这个特点，为减少重复计算，对每一个子问题只解一次，将其不同阶段的不同状态保存在一个二维数组中。</p><blockquote><p> 与分治法最大的差别是：适合于用动态规划法求解的问题，经分解后得到的子问题往往不是互相独立的（即下一个子阶段的求解是建立在上一个子阶段的解的基础上，进行进一步的求解）。</p></blockquote><h2 id="三、适用的情况"><a href="#三、适用的情况" class="headerlink" title="三、适用的情况"></a>三、适用的情况</h2><p>能采用动态规划求解的问题的一般要具有3个性质：</p><ul><li><p>最优化原理：如果问题的最优解所包含的子问题的解也是最优的，就称该问题具有最优子结构，即满足最优化原理。</p></li><li><p>无后效性：即某阶段状态一旦确定，就不受这个状态以后决策的影响。也就是说，某状态以后的过程不会影响以前的状态，只与当前状态有关。</p></li><li><p>有重叠子问题：即子问题之间是不独立的，一个子问题在下一阶段决策中可能被多次使用到。（该性质并不是动态规划适用的必要条件，但是如果没有这条性质，动态规划算法同其他算法相比就不具备优势）</p></li></ul><h2 id="四、求解的基本步骤"><a href="#四、求解的基本步骤" class="headerlink" title="四、求解的基本步骤"></a>四、求解的基本步骤</h2><p>   动态规划所处理的问题是一个多阶段决策问题，一般由初始状态开始，通过对中间阶段决策的选择，达到结束状态。这些决策形成了一个决策序列，同时确定了完成整个过程的一条活动路线(通常是求最优的活动路线)。如图所示。动态规划的设计都有着一定的模式，一般要经历以下几个步骤。</p><blockquote><p>   初始状态→│决策１│→│决策２│→…→│决策ｎ│→结束状态<br>                      图1 动态规划决策过程示意图</p></blockquote><p>   (1)划分阶段：按照问题的时间或空间特征，把问题分为若干个阶段。在划分阶段时，注意划分后的阶段一定要是有序的或者是可排序的，否则问题就无法求解。</p><p>   (2)确定状态和状态变量：将问题发展到各个阶段时所处于的各种客观情况用不同的状态表示出来。当然，状态的选择要满足无后效性。</p><p>   (3)确定决策并写出状态转移方程：因为决策和状态转移有着天然的联系，状态转移就是根据上一阶段的状态和决策来导出本阶段的状态。所以如果确定了决策，状态转移方程也就可写出。但事实上常常是反过来做，根据相邻两个阶段的状态之间的关系来确定决策方法和状态转移方程。</p><p>   (4)寻找边界条件：给出的状态转移方程是一个递推式，需要一个递推的终止条件或边界条件。一般，只要解决问题的阶段、状态和状态转移决策确定了，就可以写出状态转移方程（包括边界条件）。</p><p>实际应用中可以按以下几个简化的步骤进行设计：</p><pre><code>（1）分析最优解的性质，并刻画其结构特征。（2）递归的定义最优解。（3）以自底向上或自顶向下的记忆化方式（备忘录法）计算出最优值（4）根据计算最优值时得到的信息，构造问题的最优解</code></pre><h2 id="五、算法实现的说明"><a href="#五、算法实现的说明" class="headerlink" title="五、算法实现的说明"></a>五、算法实现的说明</h2><p>   动态规划的主要难点在于理论上的设计，也就是上面4个步骤的确定，一旦设计完成，实现部分就会非常简单。使用动态规划求解问题，最重要的就是确定动态规划三要素：</p><p>（1）问题的阶段 </p><p>（2）每个阶段的状态</p><p>（3）从前一个阶段转化到后一个阶段之间的递推关系。</p><p>   递推关系必须是从次小的问题开始到较大的问题之间的转化，从这个角度来说，动态规划往往可以用递归程序来实现，不过因为递推可以充分利用前面保存的子问题的解来减少重复计算，所以对于大规模问题来说，有递归不可比拟的优势，这也是动态规划算法的核心之处。</p><p>   确定了动态规划的这三要素，整个求解过程就可以用一个最优决策表来描述，最优决策表是一个二维表，其中行表示决策的阶段，列表示问题状态，表格需要填写的数据一般对应此问题的在某个阶段某个状态下的最优值（如最短路径，最长公共子序列，最大价值等），填表的过程就是根据递推关系，从1行1列开始，以行或者列优先的顺序，依次填写表格，最后根据整个表格的数据通过简单的取舍或者运算求得问题的最优解。</p><pre><code>f(n,m)=max{f(n-1,m), f(n-1,m-w[n])+P(n,m)}</code></pre><h2 id="六、动态规划算法基本框架"><a href="#六、动态规划算法基本框架" class="headerlink" title="六、动态规划算法基本框架"></a>六、动态规划算法基本框架</h2><p>代码：</p><pre><code>for(j=1; j&lt;=m; j=j+1) // 第一个阶段   xn[j] = 初始值; for(i=n-1; i&gt;=1; i=i-1)// 其他n-1个阶段   for(j=1; j&gt;=f(i); j=j+1)//f(i)与i有关的表达式     xi[j]=j=max（或min）{g(xi-1[j1:j2]), ......, g(xi-1[jk:jk+1])};t = g(x1[j1:j2]); // 由子问题的最优解求解整个问题的最优解的方案print(x1[j1]);for(i=2; i&lt;=n-1; i=i+1）{       t = t-xi-1[ji];     for(j=1; j&gt;=f(i); j=j+1)        if(t=xi[ji])             break;}</code></pre><h1 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h1><h2 id="一、基本概念："><a href="#一、基本概念：" class="headerlink" title="一、基本概念："></a>一、基本概念：</h2><p>   所谓贪心算法是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的仅是在某种意义上的局部最优解。</p><p>   贪心算法没有固定的算法框架，算法设计的关键是贪心策略的选择。必须注意的是，贪心算法不是对所有问题都能得到整体最优解，选择的贪心策略必须具备无后效性，即某个状态以后的过程不会影响以前的状态，只与当前状态有关。</p><p>   所以对所采用的贪心策略一定要仔细分析其是否满足无后效性。</p><h2 id="二、贪心算法的基本思路："><a href="#二、贪心算法的基本思路：" class="headerlink" title="二、贪心算法的基本思路："></a>二、贪心算法的基本思路：</h2><p>1.建立数学模型来描述问题。</p><p>2.把求解的问题分成若干个子问题。</p><p>3.对每一子问题求解，得到子问题的局部最优解。</p><p>4.把子问题的解局部最优解合成原来解问题的一个解。</p><h2 id="三、贪心算法适用的问题"><a href="#三、贪心算法适用的问题" class="headerlink" title="三、贪心算法适用的问题"></a>三、贪心算法适用的问题</h2><p>   贪心策略适用的前提是：局部最优策略能导致产生全局最优解。实际上，贪心算法适用的情况很少。一般，对一个问题分析是否适用于贪心算法，可以先选择该问题下的几个实际数据进行分析，就可做出判断。</p><h2 id="四、贪心算法的实现框架"><a href="#四、贪心算法的实现框架" class="headerlink" title="四、贪心算法的实现框架"></a>四、贪心算法的实现框架</h2><pre><code>从问题的某一初始解出发；while （能朝给定总目标前进一步）{       利用可行的决策，求出可行解的一个解元素；}由所有解元素组合成问题的一个可行解；</code></pre><h2 id="五、贪心策略的选择"><a href="#五、贪心策略的选择" class="headerlink" title="五、贪心策略的选择"></a>五、贪心策略的选择</h2><p>   因为用贪心算法只能通过解局部最优解的策略来达到全局最优解，因此，一定要注意判断问题是否适合采用贪心算法策略，找到的解是否一定是问题的最优解。</p><h2 id="六、例题分析"><a href="#六、例题分析" class="headerlink" title="六、例题分析"></a>六、例题分析</h2><pre><code>下面是一个可以试用贪心算法解的题目，贪心解的确不错，可惜不是最优解。[背包问题]有一个背包，背包容量是M=150。有7个物品，物品可以分割成任意大小。要求尽可能让装入背包中的物品总价值最大，但不能超过总容量。物品 A B C D E F G重量 35 30 60 50 40 10 25价值 10 40 30 50 35 40 30分析：目标函数： ∑pi最大约束条件是装入的物品总重量不超过背包容量：∑wi&lt;=M( M=150)（1）根据贪心的策略，每次挑选价值最大的物品装入背包，得到的结果是否最优？（2）每次挑选所占重量最小的物品装入是否能得到最优解？（3）每次选取单位重量价值最大的物品，成为解本题的策略。值得注意的是，贪心算法并不是完全不可以使用，贪心策略一旦经过证明成立后，它就是一种高效的算法。贪心算法还是很常见的算法之一，这是由于它简单易行，构造贪心策略不是很困难。可惜的是，它需要证明后才能真正运用到题目的算法中。一般来说，贪心算法的证明围绕着：整个问题的最优解一定由在贪心策略中存在的子问题的最优解得来的。对于例题中的3种贪心策略，都是无法成立（无法被证明）的，解释如下：（1）贪心策略：选取价值最大者。反例：W=30物品：A B C重量：28 12 12价值：30 20 20根据策略，首先选取物品A，接下来就无法再选取了，可是，选取B、C则更好。（2）贪心策略：选取重量最小。它的反例与第一种策略的反例差不多。（3）贪心策略：选取单位重量价值最大的物品。反例：W=30物品：A B C重量：28 20 10价值：28 20 10根据策略，三种物品单位重量价值一样，程序无法依据现有策略作出判断，如果选择A，则答案错误。</code></pre><h1 id="回溯法"><a href="#回溯法" class="headerlink" title="回溯法"></a>回溯法</h1><h2 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h2><p>   回溯算法实际上一个类似枚举的搜索尝试过程，主要是在搜索尝试过程中寻找问题的解，当发现已不满足求解条件时，就“回溯”返回，尝试别的路径。</p><p>   回溯法是一种选优搜索法，按选优条件向前搜索，以达到目标。但当探索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择，这种走不通就退回再走的技术为回溯法，而满足回溯条件的某个状态的点称为“回溯点”。</p><p>   许多复杂的，规模较大的问题都可以使用回溯法，有“通用解题方法”的美称。</p><h2 id="2、基本思想"><a href="#2、基本思想" class="headerlink" title="2、基本思想"></a>2、基本思想</h2><p>   在包含问题的所有解的解空间树中，按照深度优先搜索的策略，从根结点出发深度探索解空间树。当探索到某一结点时，要先判断该结点是否包含问题的解，如果包含，就从该结点出发继续探索下去，如果该结点不包含问题的解，则逐层向其祖先结点回溯。（其实回溯法就是对隐式图的深度优先搜索算法）。</p><p>   若用回溯法求问题的所有解时，要回溯到根，且根结点的所有可行的子树都要已被搜索遍才结束。</p><p>   而若使用回溯法求任一个解时，只要搜索到问题的一个解就可以结束。</p><p>3、<strong>用回溯法解题的一般步骤：</strong></p><p>（1）针对所给问题，确定问题的解空间：首先应明确定义问题的解空间，问题的解空间应至少包含问题的一个（最优）解。</p><p>（2）确定结点的扩展搜索规则</p><p>（3）以深度优先方式搜索解空间，并在搜索过程中用剪枝函数避免无效搜索。</p><h2 id="4、算法框架"><a href="#4、算法框架" class="headerlink" title="4、算法框架"></a>4、算法框架</h2><h3 id="（1）问题框架"><a href="#（1）问题框架" class="headerlink" title="（1）问题框架"></a>（1）问题框架</h3><pre><code>设问题的解是一个n维向量(a1,a2,………,an),约束条件是ai(i=1,2,3,…..,n)之间满足某种条件，记为f(ai)。</code></pre><h3 id="（2）非递归回溯框架"><a href="#（2）非递归回溯框架" class="headerlink" title="（2）非递归回溯框架"></a>（2）非递归回溯框架</h3><pre><code> 1: int a[n],i; 2: 初始化数组a[]; 3: i = 1; 4: while (i&gt;0(有路可走)   and  (未达到目标))  // 还未回溯到头 5: { 6:     if(i &gt; n)                                              // 搜索到叶结点 7:     {    8:           搜索到一个解，输出； 9:     }10:     else                                                   // 处理第i个元素11:     { 12:           a[i]第一个可能的值；13:           while(a[i]在不满足约束条件且在搜索空间内)</code></pre><h3 id="3）递归的算法框架"><a href="#3）递归的算法框架" class="headerlink" title="3）递归的算法框架"></a>3）递归的算法框架</h3><blockquote><p>回溯法是对解空间的深度优先搜索，在一般情况下使用递归函数来实现回溯法比较简单，其中i为搜索的深度，框架如下：</p></blockquote><pre><code> 1: int a[n]; 2: try(int i) 3: { 4:     if(i&gt;n) 5:        输出结果; 6:      else 7:     { 8:        for(j = 下界; j &lt;= 上界; j=j+1)  // 枚举i所有可能的路径 9:        {10:            if(fun(j))                 // 满足限界函数和约束条件11:              {12:                 a[i] = j;13:               ...                         // 其他操作</code></pre><h1 id="分支限界法"><a href="#分支限界法" class="headerlink" title="分支限界法"></a>分支限界法</h1><h2 id="一、基本描述"><a href="#一、基本描述" class="headerlink" title="一、基本描述"></a>一、基本描述</h2><p>   类似于回溯法，也是一种在问题的解空间树T上搜索问题解的算法。但在一般情况下，分支限界法与回溯法的求解目标不同。回溯法的求解目标是找出T中满足约束条件的所有解，而分支限界法的求解目标则是找出满足约束条件的一个解，或是在满足约束条件的解中找出使某一目标函数值达到极大或极小的解，即在某种意义下的最优解。</p><h3 id="（1）分支搜索算法"><a href="#（1）分支搜索算法" class="headerlink" title="（1）分支搜索算法"></a>（1）分支搜索算法</h3><blockquote><p>所谓“分支”就是采用广度优先的策略，依次搜索E-结点的所有分支，也就是所有相邻结点，抛弃不满足约束条件的结点，其余结点加入活结点表。然后从表中选择一个结点作为下一个E-结点，继续搜索。</p></blockquote><p>选择下一个E-结点的方式不同，则会有几种不同的分支搜索方式。</p><ul><li><p>FIFO搜索</p></li><li><p>LIFO搜索</p></li><li><p>优先队列式搜索</p></li></ul><h3 id="（2）分支限界搜索算法"><a href="#（2）分支限界搜索算法" class="headerlink" title="（2）分支限界搜索算法"></a>（2）分支限界搜索算法</h3><h2 id="二、分支限界法的一般过程"><a href="#二、分支限界法的一般过程" class="headerlink" title="二、分支限界法的一般过程"></a>二、分支限界法的一般过程</h2><blockquote><p>由于求解目标不同，导致分支限界法与回溯法在解空间树T上的搜索方式也不相同。回溯法以深度优先的方式搜索解空间树T，而分支限界法则以广度优先或以最小耗费优先的方式搜索解空间树T。</p></blockquote><p><strong>分支限界法的搜索策略是：</strong></p><p>在扩展结点处，先生成其所有的儿子结点（分支），然后再从当前的活结点表中选择下一个扩展对点。为了有效地选择下一扩展结点，以加速搜索的进程，在每一活结点处，计算一个函数值（限界），并根据这些已计算出的函数值，从当前活结点表中选择一个最有利的结点作为扩展结点，使搜索朝着解空间树上有最优解的分支推进，以便尽快地找出一个最优解。</p><p>分支限界法常以广度优先或以最小耗费（最大效益）优先的方式搜索问题的解空间树。问题的解空间树是表示问题解空间的一棵有序树，常见的有子集树和排列树。在搜索问题的解空间树时，分支限界法与回溯法对当前扩展结点所使用的扩展方式不同。在分支限界法中，每一个活结点只有一次机会成为扩展结点。活结点一旦成为扩展结点，就一次性产生其所有儿子结点。在这些儿子结点中，那些导致不可行解或导致非最优解的儿子结点被舍弃，其余儿子结点被子加入活结点表中。此后，从活结点表中取下一结点成为当前扩展结点，并重复上述结点扩展过程。这个过程一直持续到找到所求的解或活结点表为空时为止。</p><h2 id="三、回溯法和分支限界法的一些区别"><a href="#三、回溯法和分支限界法的一些区别" class="headerlink" title="三、回溯法和分支限界法的一些区别"></a>三、回溯法和分支限界法的一些区别</h2><blockquote><p>有一些问题其实无论用回溯法还是分支限界法都可以得到很好的解决，但是另外一些则不然。也许我们需要具体一些的分析——到底何时使用分支限界而何时使用回溯呢？</p></blockquote><h3 id="回溯法和分支限界法的一些区别："><a href="#回溯法和分支限界法的一些区别：" class="headerlink" title="回溯法和分支限界法的一些区别："></a>回溯法和分支限界法的一些区别：</h3><ul><li><p>方法对解空间树的搜索方式       </p></li><li><p>存储结点的常用数据结构      </p></li><li><p>结点存储特性常用应用</p></li></ul><blockquote><p><strong>回溯法深度优先搜索堆栈活结点的所有可行子结点被遍历后才被从栈中弹出找出满足约束条件的所有解</strong></p><p><strong>分支限界法广度优先或最小消耗优先搜索队列、优先队列每个结点只有一次成为活结点的机会找出满足约束条件的一个解或特定意义下的最优解</strong></p></blockquote><p><strong>策略是面向问题的，算法是面向实现的。</strong></p><h1 id="一、不同算法策略特点小结"><a href="#一、不同算法策略特点小结" class="headerlink" title="一、不同算法策略特点小结"></a>一、不同算法策略特点小结</h1><h2 id="1、贪心策略"><a href="#1、贪心策略" class="headerlink" title="1、贪心策略"></a>1、贪心策略</h2><ul><li><p>贪心策略一方面是求解过程比较简单的算法，另一方面它又是对能适用问题的条件要求最严格（即适用范围很小）的算法。</p></li><li><p>贪心策略解决问题是按一定顺序，在只考虑当前局部信息的情况下，就做出一定的决策，最终得出问题的解。</p></li></ul><blockquote><p>即：通过局部最优决策能得到全局最优决策</p></blockquote><h2 id="2、递推策略"><a href="#2、递推策略" class="headerlink" title="2、递推策略"></a>2、递推策略</h2><p>   递推也是由当前问题的逐步解决从而得到整个问题的解，依赖于信息间本身的递推关系，每一步不需要决策参与到算法中，更多用于计算</p><h2 id="3、递归策略"><a href="#3、递归策略" class="headerlink" title="3、递归策略"></a>3、递归策略</h2><p>   递归常常用于分治算法、动态规划算法中。</p><p>   递归是利用大问题与其子问题间的递推关系来解决问题的。</p><p>   能采用递归策略的算法一般有以下特征：</p><p>   （1）为求解规模为N的问题，设法将它分解成规模较小的问题，然后从这些小问题的解方便地构造出大问题的解</p><p>   （2）并且这些规模较小的问题也能采用同样的分解和综合方法，分解成更小的问题，并从这些更小的问题的解构造出规模较大问题的解</p><p>   （3）特别的，当规模N = 1时，能直接得解</p><h2 id="4、枚举策略"><a href="#4、枚举策略" class="headerlink" title="4、枚举策略"></a>4、枚举策略</h2><p>   对问题所有的解逐一尝试，从而找出问题的真正解。一般用于决策类问题，很难找到大、小规模之间的关系，也不易对问题进行分解。</p><h2 id="5、递归回溯策略"><a href="#5、递归回溯策略" class="headerlink" title="5、递归回溯策略"></a>5、递归回溯策略</h2><p>   类似于枚举，通过尝试遍历问题各个可能解的通路，当发现此路不通时，回溯到上一步继续尝试别的通路。</p><h2 id="6、分治策略"><a href="#6、分治策略" class="headerlink" title="6、分治策略"></a>6、分治策略</h2><p>   分治一般用于较复杂的问题，必须可以逐步被分解为容易解决的独立的子问题，这些子问题解决后，进而将它们的解“合成”，就得到较大问题的解，最终合成为总问题的解。</p><h2 id="7、动态规划策略"><a href="#7、动态规划策略" class="headerlink" title="7、动态规划策略"></a>7、动态规划策略</h2><p>   与贪心类似，也是通过多阶段决策过程来解决问题。每个阶段决策的结果是一个决策结果序列，这个结果序列中，最终哪一个是最优的结果，取决于以后每个阶段的决策，当然每次决策结果序列都必须进行存储。因此是“高效率，高消费的算法”。</p><p>   同时，它又与递归法类似，当问题不能分解为独立的阶段，却又符合最优化原理时，就可以使用动态规划法，通过递归决策过程，逐步找出子问题的最优解，从而决策出问题的解。</p><h1 id="二、算法策略间的关系"><a href="#二、算法策略间的关系" class="headerlink" title="二、算法策略间的关系"></a>二、算法策略间的关系</h1><h2 id="1、对问题进行分解的算法策略——分治法与动态规划法"><a href="#1、对问题进行分解的算法策略——分治法与动态规划法" class="headerlink" title="1、对问题进行分解的算法策略——分治法与动态规划法"></a>1、对问题进行分解的算法策略——分治法与动态规划法</h2><ul><li><p><strong>共同点：</strong></p><p> （1）分治法与动态规划法实际上都是递归思想的运用</p><p> （2）二者的根本策略都是对问题进行分解，找到大规模与小规模的关系，然后通过解小规模的解，得出大规模的解</p></li><li><p><strong>不同点：</strong>适用于分治法的问题分解成子问题后，各子问题间无公共子子问题，而动态规划法相反。</p></li></ul><blockquote><p><strong>动态规划法 = 分治算法思想 + 解决子问题间的冗余情况</strong></p></blockquote><h2 id="2、多阶段逐步解决问题的策略——贪心算法、递推法、递归法和动态规划法"><a href="#2、多阶段逐步解决问题的策略——贪心算法、递推法、递归法和动态规划法" class="headerlink" title="2、多阶段逐步解决问题的策略——贪心算法、递推法、递归法和动态规划法"></a>2、多阶段逐步解决问题的策略——贪心算法、递推法、递归法和动态规划法</h2><p>   <strong>贪心算法</strong>：每一步都根据策略得到一个结果，并传递到下一步，自顶向下，一步一步地做出贪心决策。</p><p>   <strong>动态规划算法</strong>：每一步决策得到的不是一个唯一结果，而是一组中间结果（且这些结果在以后各步可能得到多次引用），只是每一步都使问题的规模逐步缩小，最终得到问题的一个结果。</p><p>   <strong>递推、递归法：</strong>注重每一步之间的关系，决策的因素较少。递推法是根据关系从前向后推导，从小规模问题的结论推解出大问题的解。而递归法是根据关系从后向前使大问题转化为小问题，最后同样由小规模问题的解推解出大问题的解。</p><h2 id="3、全面逐一尝试、比较——蛮力法、枚举法、递归回溯法"><a href="#3、全面逐一尝试、比较——蛮力法、枚举法、递归回溯法" class="headerlink" title="3、全面逐一尝试、比较——蛮力法、枚举法、递归回溯法"></a>3、全面逐一尝试、比较——蛮力法、枚举法、递归回溯法</h2><p>蛮力策略（即枚举和递归回溯）：</p><p>   当问题找不到信息间的相互关系、也不能将问题分解为独立的子问题，就只有把全部解都列出来之后，才能判定和推断出问题的解。</p><blockquote><p>蛮力策略适用于规模不大的问题。</p></blockquote><p>（1）枚举法：实现依赖于循环。所以一个枚举法只针对一个特定问题规模的情况，例如：八重循环嵌套解八皇后问题的算法。</p><p>（2）递归回溯法：适用于任意指定规模的情况，例如：递归回溯法解N皇后问题。</p><h2 id="4、算法策略的中心思想"><a href="#4、算法策略的中心思想" class="headerlink" title="4、算法策略的中心思想"></a>4、算法策略的中心思想</h2><p>   用算法策略将解决问题的过程归结为：用算法的基本工具“循环机制和递归机制”实现。</p><h1 id="三、算法策略侧重的问题类型"><a href="#三、算法策略侧重的问题类型" class="headerlink" title="三、算法策略侧重的问题类型"></a>三、算法策略侧重的问题类型</h1><p>一般常遇到的问题分为四类：</p><p>（1）判定性问题：可用递推法、递归法</p><p>（2）计算问题：可用递推法、递归法</p><p>（3）最优化问题：贪心算法、分治法、动态规划法、枚举法</p><p>（4）构造性问题：贪心算法、分治法、广度优先搜索、深度优先搜索</p><p>好</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 数据结构与算法 </category>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> 转载笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3爬取拉勾网职位信息</title>
      <link href="/2018/05/05/python3%E7%88%AC%E5%8F%96%E6%8B%89%E5%8B%BE%E7%BD%91%E8%81%8C%E4%BD%8D%E4%BF%A1%E6%81%AF/"/>
      <url>/2018/05/05/python3%E7%88%AC%E5%8F%96%E6%8B%89%E5%8B%BE%E7%BD%91%E8%81%8C%E4%BD%8D%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>爬取拉勾网的最大障碍：<strong>普通模块难以实现翻页爬取。</strong>自己加了参数<code>page</code>，经过抓包查询之后也达不到我的理想要求。</p><p>没办法了，只好用<em>selenium</em>模块结合浏览器来实现边翻页边爬取了。</p><blockquote><p>实际上比较浪费系统资源，这种情况不得已还是尽量别用的好。</p></blockquote><p>在此记录下主要的过程，包括实现的代码。</p><p>还是要说明一下：<strong>不懂的地方还是需要自己去查询了解，代码不过就是几个模块的知识运用罢了。</strong></p><a id="more"></a><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>启动<em>Chrome**webdriver</em>插件，之后复制其所在地址，加入代码中启动<em>selenium</em>模块程序。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-06-2018%2022-29-25.gif" alt=""></p><blockquote><p>启动插件。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-06%20%E4%B8%8B%E5%8D%8810.28.45.png" alt=""></p><blockquote><p>本机此插件所在的目录位置。</p></blockquote><h2 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h2><p>经过简单的分析，发现页面的切换的同时URL没有任何的改变(这就是我为何要用<em>selenium</em>来爬取的原因！)：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-06%20%E4%B8%8B%E5%8D%8810.32.58.png" alt=""></p><p>我们的目标是，点击在此符合条件的发布公司链接，进入招聘信息详细的界面爬取详细的所有需要的信息：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-06%20%E4%B8%8B%E5%8D%8810.34.40.png" alt=""></p><blockquote><p>一一进入进行爬取。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-06%20%E4%B8%8B%E5%8D%8810.35.34.png" alt=""></p><blockquote><p>进入之后详细的招聘信息页面。</p></blockquote><p>那么思路一下就出来了：<strong>用selenium模块实现翻页的功能，并且返回对应页面的源代码，并且一一进行分析提取即可。</strong></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div></pre></td><td class="code"><pre><div class="line"><span class="string">"""</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">函数目标：</span></div><div class="line"><span class="string">翻页爬取拉勾网的职位信息</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">编写时间：</span></div><div class="line"><span class="string">2018-05-05</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">"""</span></div><div class="line"></div><div class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</div><div class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</div><div class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</div><div class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</div><div class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">import</span> time</div><div class="line"> </div><div class="line"><span class="comment"># 启动对象驱动，并且设置预期的等待时间</span></div><div class="line">browser = webdriver.Chrome(<span class="string">'/Users/junjieliu/Downloads/webdirver小插件/chromedriver'</span>)</div><div class="line">wait = WebDriverWait(browser, <span class="number">10</span>)</div><div class="line"> </div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">page_content</span><span class="params">(pages)</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    返回每一页的页面源代码，顾名知义，从URL中可知许多的筛选信息了，可自行选择，</span></div><div class="line"><span class="string">    在此仅以职位关键词职位作为输入。</span></div><div class="line"><span class="string">    """</span></div><div class="line">    print(<span class="string">'-'</span> * <span class="number">10</span> + <span class="string">'正在爬取第'</span> + str(pages) + <span class="string">'页的内容'</span> + <span class="string">'.'</span> * <span class="number">6</span>)</div><div class="line">    keyword = <span class="string">'数据分析师'</span>  <span class="comment"># 职位关键词</span></div><div class="line">    url = <span class="string">'https://www.lagou.com/jobs/list_'</span> + quote(keyword) + <span class="string">'?'</span> + <span class="string">'px=default&amp;gx=实习&amp;gj=&amp;xl=本科&amp;isSchoolJob=1&amp;city=全国#filterBox'</span> </div><div class="line">     </div><div class="line">    browser.get(url)</div><div class="line">    <span class="keyword">if</span> pages &gt; <span class="number">1</span>:</div><div class="line">        <span class="comment"># 如果页面数大于1页则启用自动翻页</span></div><div class="line">        next_botton = wait.until(</div><div class="line">                    EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'#s_position_list &gt; div.item_con_pager &gt; div &gt; span.pager_next'</span>)))</div><div class="line">         </div><div class="line">        next_botton.click()</div><div class="line">    <span class="comment"># 指定要爬取区域,非必须要写</span></div><div class="line">    wait.until(</div><div class="line">            EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">'#s_position_list &gt; ul &gt; li.con_list_item'</span>)))</div><div class="line">    print(<span class="string">'爬取此页源码成功！以下是本页一系列相关的内容：'</span>)</div><div class="line">    informations_save()</div><div class="line">     </div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">informations_save</span><span class="params">()</span>:</span></div><div class="line">    <span class="string">"""</span></div><div class="line"><span class="string">    一一进入内部URL，爬取详细的招聘信息！</span></div><div class="line"><span class="string">    """</span></div><div class="line">    source_code = browser.page_source</div><div class="line">    doc = pq(source_code)</div><div class="line">    url = re.findall(<span class="string">r'class="position_link".*?href="(.*?)"'</span>, source_code, re.S)  <span class="comment"># @UndefinedVariable  </span></div><div class="line">    </div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(url)):</div><div class="line">           </div><div class="line">        header = &#123;</div><div class="line">        <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,</div><div class="line">        <span class="string">'Host'</span>: <span class="string">'www.lagou.com'</span>,</div><div class="line">        <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</div><div class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.139 Safari/537.36'</span></div><div class="line">    &#125;</div><div class="line">        response = requests.get(url=url[i], headers=header)</div><div class="line">        response.encoding = <span class="string">'utf-8'</span></div><div class="line">        doc1 = pq(response.text)</div><div class="line">           </div><div class="line">        infor = &#123;</div><div class="line">            <span class="string">'company'</span>:doc1.find(<span class="string">'body &gt; div.position-head &gt; div &gt; div.position-content-l &gt; div &gt; div.company'</span>).text(),  <span class="comment"># 公司名称</span></div><div class="line">            <span class="string">'infor_url'</span>:doc1.find(<span class="string">'#job_company &gt; dt &gt; a'</span>).attr(<span class="string">'href'</span>),  <span class="comment"># 此公司详细介绍网站</span></div><div class="line">            <span class="string">'position'</span>:doc1.find(<span class="string">'body &gt; div.position-head &gt; div &gt; div.position-content-l &gt; div &gt; span.name'</span>).text(),  <span class="comment"># 职位</span></div><div class="line">            <span class="string">'salary'</span>:doc1.find(<span class="string">'body &gt; div.position-head &gt; div &gt; div.position-content-l &gt; dd &gt; p:nth-child(1) &gt; span.salary'</span>).text(),  <span class="comment"># 工资</span></div><div class="line">            <span class="string">'locale'</span>:doc1.find(<span class="string">'#job_detail &gt; dd.job-address.clearfix &gt; input[type="hidden"]:nth-child(6)'</span>).text().replace(<span class="string">'/'</span>, <span class="string">''</span>),  <span class="comment"># 地点</span></div><div class="line">            <span class="string">'place'</span>:doc1.find(<span class="string">'#job_detail &gt; dd.job-address.clearfix &gt; div.work_addr'</span>).text(),  <span class="comment"># 具体位置</span></div><div class="line">            <span class="string">'required'</span>:doc1.find(<span class="string">'div.position-content-l &gt; dd &gt; p:nth-child(1) &gt; span:nth-child(3)'</span>).text().replace(<span class="string">'/'</span>, <span class="string">''</span>),  <span class="comment"># 经验要求</span></div><div class="line">            <span class="string">'education'</span>:doc1.find(<span class="string">'div.position-content-l &gt; dd &gt; p:nth-child(1) &gt; span:nth-child(4)'</span>).text().replace(<span class="string">'/'</span>, <span class="string">''</span>),  <span class="comment"># 学历要求</span></div><div class="line">            <span class="string">'job_nature'</span>:doc1.find(<span class="string">'div.position-content-l &gt; dd &gt; p:nth-child(1) &gt; span:nth-child(5)'</span>).text().replace(<span class="string">'/'</span>, <span class="string">''</span>),  <span class="comment"># 工作性质</span></div><div class="line">            <span class="string">'attract'</span>:doc1.find(<span class="string">'#job_detail &gt; dd.job-advantage'</span>).text().replace(<span class="string">'\n'</span>, <span class="string">' '</span>),  <span class="comment"># 工作诱惑</span></div><div class="line">            <span class="string">'describe'</span>:doc1.find(<span class="string">'#job_detail &gt; dd.job_bt'</span>).text().replace(<span class="string">'\n'</span>, <span class="string">' '</span>)  <span class="comment"># 工作描述</span></div><div class="line">            </div><div class="line">        &#125;</div><div class="line">        print(infor)     </div><div class="line">        </div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">     </div><div class="line">    pages = <span class="number">6</span>  <span class="comment"># 总的页面数，从网页第一面就可知了，6是测试用的数字页码</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, pages + <span class="number">1</span>):</div><div class="line">        page_content(i)</div><div class="line">        time.sleep(<span class="number">20</span>)</div></pre></td></tr></table></figure><blockquote><p>最后我选择将爬取的内容保存至一个<code>.txt</code>文件下。</p></blockquote><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-06%20%E4%B8%8B%E5%8D%8810.27.19.png" alt=""></p><blockquote><p>运行之后的效果，有些爬取不了，明明源代码都没什么变化…</p></blockquote><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li><p>这个代码的模型并不能爬取页面上对应的全部内容，这个我也是有点疑惑。</p></li><li><p>有时会跳到需要登录的界面，重新来几次就行了，总有一次能爬取。</p></li></ul><p>有不懂的知识可参考：<a href="https://cuiqingcai.com/5630.html" target="_blank" rel="external">https://cuiqingcai.com/5630.html</a></p><blockquote><p>以及相关的模块的官网亦可。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法书籍资源共享</title>
      <link href="/2018/05/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB/"/>
      <url>/2018/05/04/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E4%B9%A6%E7%B1%8D%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB/</url>
      
        <content type="html"><![CDATA[<ul><li>计算机程序设计艺术(卷1～卷四全)：</li></ul><blockquote><p><a href="https://pan.baidu.com/s/1922E16LZR0iXZHZQCgsbLg" target="_blank" rel="external">https://pan.baidu.com/s/1922E16LZR0iXZHZQCgsbLg</a></p></blockquote><ul><li>算法导论(第三版)：</li></ul><blockquote><p><a href="https://pan.baidu.com/s/1XqAeeJx803rcVCx7QMA62g" target="_blank" rel="external">https://pan.baidu.com/s/1XqAeeJx803rcVCx7QMA62g</a></p></blockquote><p>以上资源来于网络，感谢默默分享的人们！</p><p>还有一些其他的金典书籍，我都没怎么看啊..</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络知识总结</title>
      <link href="/2018/05/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2018/05/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>计算机网络也是计算机基础重要的一部分。</p><p>本来打算总结下关于计算机网络基础知识，发现下面的这些课件总结的已经非常好了，所以在此分享，我就不说多了…</p><blockquote><p>下载课件：<a href="https://pan.baidu.com/s/1uodpU6E8n050QyazgdLXVw" target="_blank" rel="external">https://pan.baidu.com/s/1uodpU6E8n050QyazgdLXVw</a></p></blockquote><a id="more"></a><ul><li>说明：</li></ul><p>课件来源：《数据通信与计算机网络》</p><p>还有以下这个：</p><blockquote><p>下载课件：<a href="https://pan.baidu.com/s/1oCHb3GkybHn7vI-cvMCJIA" target="_blank" rel="external">https://pan.baidu.com/s/1oCHb3GkybHn7vI-cvMCJIA</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 资源分享 </category>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源分享 </tag>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我对学习计算机基础的一些心得见解</title>
      <link href="/2018/04/29/%E6%88%91%E5%AF%B9%E5%AD%A6%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BF%83%E5%BE%97%E8%A7%81%E8%A7%A3/"/>
      <url>/2018/04/29/%E6%88%91%E5%AF%B9%E5%AD%A6%E4%B9%A0%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BF%83%E5%BE%97%E8%A7%81%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>最近总是遇到了许多的瓶颈…即感觉认识的知道的太少了。</p><p>在前些天看到了一些关于<em>python</em>的优化内容之后，加上之前用<em>python</em>也有一段时间了，突然的感觉到一些基础细节才是最重要的，我意识到了<strong>这往往可能就是人与人技术之间的一个分水岭，也往往是突破瓶颈关键点，也往往能决定一个人技术的所在点。基础细节知识是能决定一个人能走多远的</strong></p><a id="more"></a><p>平时在写程序时不应满足于功能的实现，更加应当注意那些可优化的细节问题，就好比一个算法的时间复杂度与空间复杂度一样的，写的每一个程序(无论那种编程语言)均有可优化的最优解选择。在我平时因为涉及的数据规模不大，这种问题目前是看不出来的，如果运用到的是一个数据规模大的问题上，优化必然是重要的，不可或缺的。</p><p>平时想问题总是感觉能联想到的知识太少，回过头来看，发现自己对计算机的认识本来也不够全面(注意是全面！而非透彻！)。这往往也限制了我许多的想象，从而造成了我的瓶颈突出明显。</p><p>说了这么多，只是想说一个问题：<strong>计算机基础知识(包括编程基础知识)是能决定一个人技术的高度的。</strong>至少我现在就有这种感觉，写一个程序不应满足于功能的实现，更应探索最优解的选择。<strong>这往往就是技术<code>好</code>与<code>坏</code>的一个区分标准吧。</strong></p><p>关于如何学习以上说的基础知识，我有一些见解在此想要说明一下。</p><ul><li><p>知识尽量要了解全面，不能为了速度而一知半解的，那样只会浪费时间，最后还是什么都不知道。</p></li><li><p>有些知识可能会引起我们的好奇，想要进一步理解透彻(彻彻底底)，但是这其中却是有太多的知识链关联着的…这点我深有体会。如果顺着知识链步步了解，我们的确也能学习到许多的知识，但是最后会发现其实这些在我们实际需要中根本没有多大的作用，仅仅当时作为一种科普了，当然现在学习到的知识也是以后我们技术的一种铺垫，如果实在有兴趣就当我没说，兴趣是学习一种知识最好的引导。</p></li><li><p>有些是需要理解透彻的，有些(大部分)可能仅仅是需要了解一下就好的。</p></li><li><p>根据目前的需求来进行学习也是一种好的驱动力。</p></li><li><p>一些必要的基础知识是需要了解的，比如学习了计算机概论，那一般以后买电脑时就会有自己的一些见解了。学习了数据结构与算法基础之后，编程时就不会仅仅以达到目的而“不择手段”编写程序了，因为再学习了这些基础知识之后我们脑子里必然会有一些规则“约束”了。</p></li></ul><p>最后，我还是想说，对于底层的电路什么的那种我想我是不愿也是不情愿接触的…</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3爬虫与GUI：一个简易的搜索实用小工具</title>
      <link href="/2018/04/28/python3%E7%88%AC%E8%99%AB%E4%B8%8EGUI%EF%BC%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E6%90%9C%E7%B4%A2%E5%AE%9E%E7%94%A8%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
      <url>/2018/04/28/python3%E7%88%AC%E8%99%AB%E4%B8%8EGUI%EF%BC%9A%E4%B8%80%E4%B8%AA%E7%AE%80%E6%98%93%E7%9A%84%E6%90%9C%E7%B4%A2%E5%AE%9E%E7%94%A8%E5%B0%8F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>平时在获取爬虫之后，会不满足于仅仅得到了结果，而是想经过一个交互式的界面来进一步的完善，获取更多的功能，从而可以更好的展示数据。</p><p>下面运用了<em>python</em>的<em>pyqt5</em>库来进行<em>GUI</em>的设计。</p><p>用<em>pyqt5</em>这个库实现简单的界面化有两种方法：</p><ul><li><p>编写代码(一般为几十行代码足够了)。</p></li><li><p>结合<em>QT Creator</em>来进行界面设计，加入信号与槽的机制，槽这一方面还是需要编写相应的几行代码。</p></li></ul><blockquote><p>下面一一进行简单的介绍。</p></blockquote><a id="more"></a><h2 id="代码编写方式"><a href="#代码编写方式" class="headerlink" title="代码编写方式"></a>代码编写方式</h2><p>假设我已经利用爬虫写出来了<em>百度百科</em>，<em>维基百科</em>的接口的代码程序，接下来仅仅需要设计好界面，再者之后利用好信号与槽的机制将接口代码与界面相连接即可完成一个简易的搜索实用小工具了。</p><p>在此简单理解一下信号与槽机制以及所谓的事件机制：<strong>比如我们有一个按钮，点击此按钮便弹出一个写有‘Hello’的窗口，点击到弹出新窗口的这一过程，有个响应的过程，我们可以理解为发送信号(点击按钮)，之后有弹出新窗口(响应),而这一系列过程包括弹出的内容我们可称之为事件。</strong></p><blockquote><p>关于学习<em>pyqt5</em>库的中文教程地址：<a href="https://maicss.gitbooks.io/pyqt5/content/事件和信号.html" target="_blank" rel="external">https://maicss.gitbooks.io/pyqt5/content/事件和信号.html</a></p></blockquote><p>从头开始看一下，之后再看这一篇大概就知道简单的交互式界面是如何生成的了。</p><p>简单描述一下思路：<strong>先设计布局好界面(包括定义好相关按钮的快捷键)，写入爬虫代码，信号与槽机制的连接设定，即完成了此次的任务。</strong></p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> urllib.request  </div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote </div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> (QPushButton, QWidget, QLabel, QLineEdit, QTextEdit, QGridLayout, QApplication,</div><div class="line">    QComboBox)</div><div class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QCoreApplication</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span><span class="params">(QWidget)</span>:</span> </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">        初始化</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        super().__init__()</div><div class="line">        self.initUI()</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">baidu_baike</span><span class="params">(self, entry)</span>:</span>  </div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">        百度百科词条内容爬取代码</span></div><div class="line"><span class="string">        entry：词条</span></div><div class="line"><span class="string">        因为太懒了..所以爬取的代码没有自己写..</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        url = <span class="string">'https://baike.baidu.com/item/'</span> + urllib.parse.quote(entry)</div><div class="line">        html = urllib.request.urlopen(url)  </div><div class="line">        content = html.read().decode(<span class="string">'utf-8'</span>)</div><div class="line">        html.close()</div><div class="line">        <span class="comment"># lxml器进行解析</span></div><div class="line">        soup = BeautifulSoup(content, <span class="string">"lxml"</span>)  </div><div class="line">        text = soup.find(<span class="string">'div'</span>, class_=<span class="string">"lemma-summary"</span>).children  <span class="comment"># 簡介部分</span></div><div class="line">        intro_text = <span class="string">''</span></div><div class="line">        <span class="comment"># 数据爬取</span></div><div class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> text:</div><div class="line">            word = re.sub(re.compile(<span class="string">r"&lt;(.+?)&gt;"</span>), <span class="string">''</span>, str(x))</div><div class="line">            words = re.sub(re.compile(<span class="string">r"\[(.+?)\]"</span>), <span class="string">''</span>, word)</div><div class="line">            intro_text += words</div><div class="line"></div><div class="line">        <span class="keyword">return</span> intro_text  <span class="comment"># 返回文本(str格式)</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intro_final</span><span class="params">(self, entry)</span>:</span>  </div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">        异常处理</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        <span class="keyword">try</span>:</div><div class="line">            <span class="keyword">return</span> self.baidu_baike(entry)</div><div class="line">        <span class="keyword">except</span> AttributeError:</div><div class="line">            <span class="keyword">return</span> <span class="string">"词条定义不够清晰/词条目前未成立！"</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">initUI</span><span class="params">(self)</span>:</span></div><div class="line">        <span class="comment"># GUI布局及控件放置</span></div><div class="line">        search_label = QLabel(<span class="string">"请输入搜索词条："</span>)</div><div class="line">        search_item = QLineEdit()</div><div class="line">        </div><div class="line">        combo = QComboBox(self)</div><div class="line">        combo.addItem(<span class="string">"百度百科"</span>)</div><div class="line">        combo.addItem(<span class="string">"维基百科(不可用)"</span>)</div><div class="line">        btn1 = QPushButton(<span class="string">"开始搜索"</span>, self)</div><div class="line">        <span class="comment"># shortcut快捷键的设置</span></div><div class="line">        btn1.setShortcut(<span class="string">'return'</span>)</div><div class="line">        btn2 = QPushButton(<span class="string">"清空"</span>, self)</div><div class="line">        btn2.setShortcut(<span class="string">'esc'</span>)</div><div class="line">        btn3 = QPushButton(<span class="string">'退出'</span>, self)</div><div class="line">        btn3.setShortcut(<span class="string">'command+q'</span>)</div><div class="line">        btn3.setShortcut(<span class="string">'Ctrl+q'</span>)</div><div class="line">        btn3.clicked.connect(QCoreApplication.instance().quit)</div><div class="line">        </div><div class="line">        search_result = QTextEdit()</div><div class="line">        grid = QGridLayout()</div><div class="line">        grid.setSpacing(<span class="number">5</span>)</div><div class="line">        grid.addWidget(search_label, <span class="number">1</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(btn3, <span class="number">2</span>, <span class="number">1</span>)</div><div class="line">        grid.addWidget(search_item, <span class="number">2</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(btn1, <span class="number">3</span>, <span class="number">0</span>)</div><div class="line">        grid.addWidget(btn2, <span class="number">3</span>, <span class="number">1</span>)</div><div class="line">        grid.addWidget(search_result, <span class="number">4</span>, <span class="number">0</span>, <span class="number">5</span> , <span class="number">0</span>)</div><div class="line">        </div><div class="line">        self.setLayout(grid)</div><div class="line"></div><div class="line">        <span class="comment"># 信号机制的设置，定义为一个方法作为反映的对象，这里很好理解</span></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">()</span>:</span></div><div class="line">            <span class="string">'''</span></div><div class="line"><span class="string">            搜索信号反映的响应</span></div><div class="line"><span class="string">            '''</span></div><div class="line">            search_result.setText(self.intro_final(search_item.text()))</div><div class="line"> </div><div class="line">        btn1.clicked.connect(search)</div><div class="line"> </div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">clear</span><span class="params">()</span>:</span></div><div class="line">            <span class="string">'''</span></div><div class="line"><span class="string">            清空信号反映的响应</span></div><div class="line"><span class="string">            '''</span></div><div class="line">            search_result.setText(<span class="string">""</span>)</div><div class="line">            search_item.setText(<span class="string">""</span>)</div><div class="line"> </div><div class="line">        btn2.clicked.connect(clear)</div><div class="line"></div><div class="line">        <span class="comment"># 设置窗口大小</span></div><div class="line">        self.setGeometry(<span class="number">500</span>, <span class="number">150</span>, <span class="number">600</span>, <span class="number">500</span>)</div><div class="line">        self.setWindowTitle(<span class="string">"搜索引擎GUI"</span>)</div><div class="line">        self.show()</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    app = QApplication(sys.argv)</div><div class="line">    ex = Example()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><blockquote><p>以上有不懂的地方均可在<a href="https://maicss.gitbooks.io/pyqt5/content/hello_world.html" target="_blank" rel="external">pyqt5中文教程</a>中找到思路。</p></blockquote><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-02-2018%2019-31-44.gif" alt=""></p><h2 id="结合QT-Creator的界面设计"><a href="#结合QT-Creator的界面设计" class="headerlink" title="结合QT Creator的界面设计"></a>结合<em>QT Creator</em>的界面设计</h2><p>结合<em>QT Creator</em>的界面，我们肯定会想到：那当我们进行界面设计完成之后，就算是转化为<code>.py</code>的<em>python</em>脚本，那我们又该如何定义信号与槽的机制以及事件的机制呢？</p><p>下面的解说就是解决这个疑惑的。</p><p>第一步当然是去官网下载好软件了。</p><blockquote><p>参考此篇文章：<a href="https://blog.csdn.net/win_turn/article/details/50465127" target="_blank" rel="external">https://blog.csdn.net/win_turn/article/details/50465127</a></p></blockquote><p><strong>话不多说了，下载的时候其实有一个坑，即要记得下载有调试的那个版本，否则在设计界面时无法得到运行。</strong></p><h3 id="创建文件并且设计"><a href="#创建文件并且设计" class="headerlink" title="创建文件并且设计"></a>创建文件并且设计</h3><p>在这里仅仅是为了达到解说的目的所以简单设计一下就好，说说设计下面的思路：<strong>定义一个按钮(名为确定)，一个输入框，一个输出框，达到的目的是从输入框输入文字，按下确定按钮，输出框中输出与输入框一致的内容。</strong></p><p>创建新的文件过程如图所示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-02-2018%2019-42-52.gif" alt=""></p><blockquote><p>总之就是如上图一路点击下去即可。</p></blockquote><p>之后会发现有这样的界面出现：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-02%20%E4%B8%8B%E5%8D%887.43.59.png" alt=""></p><p>这个<em>mainwindow.ui</em>不说就能轻易知道就是用它来进行界面设计的。双击它即可进入设计界面(如图1)，当然可选择<em>Qt Designer</em>进行设计(对其右键可弹出选项，如图2)。</p><ul><li>图1</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-02%20%E4%B8%8B%E5%8D%887.49.34.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-02%20%E4%B8%8B%E5%8D%887.47.52.png" alt=""></p><p>为了尽快达到写完的目的，我简单的来进行一下示范…</p><p>先在界面中，设计一个按钮：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-02-2018%2020-15-04.gif" alt=""></p><p>然后添加下面两种组件：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-02-2018%2020-15-15.gif" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-02-2018%2020-15-38.gif" alt=""></p><h3 id="定义信号与槽"><a href="#定义信号与槽" class="headerlink" title="定义信号与槽"></a>定义信号与槽</h3><p>在这之前先将设计好的转为<code>.py</code><em>python</em>脚本文件。<code>cd</code>到相应的文件的目录下(即上面的<em>mainwindow.ui</em>所在的目录。注意，此步非常重要！)利用命令行：<code>pyuic5 -o  mainwindow.py mainwindow.ui</code></p><blockquote><p>关于此命令行具体可参考：<a href="https://blog.csdn.net/yingmutongxue/article/details/8487348" target="_blank" rel="external">https://blog.csdn.net/yingmutongxue/article/details/8487348</a><br><strong>(在此需要注意的是，我使用的是<em>pyqt5</em>，所以对应的命令行应当是pyuic5开头，若是<em>pyqt4</em>，则为pyuic4开头了。)</strong></p></blockquote><p>这样在本目录下即可找到转为后的<em>python</em>文件了。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-05-02%20%E4%B8%8B%E5%8D%889.04.04.png" alt=""></p><p>再者，我们需要在这个文件实现上面说的思路，即相应的信号与槽机制的代码。因为时间问题，就不在此实现了(是真的写不下去了…)。</p><p>在完成之后，我们直接将此调入<em>eclipse</em>的工程目录下(我用的是<em>eclipse</em>)，之后我们直接调用此文件即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication , QMainWindow</div><div class="line"></div><div class="line"><span class="keyword">from</span> mainwindow <span class="keyword">import</span> *</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"><span class="comment">#     主函数</span></div><div class="line"></div><div class="line">    app = QtWidgets.QApplication(sys.argv)</div><div class="line">    MainWindow = QtWidgets.QMainWindow()</div><div class="line">    ui = Ui_MainWindow()</div><div class="line">    ui.setupUi(MainWindow)</div><div class="line">    MainWindow.show()</div><div class="line">    sys.exit(app.exec_())</div></pre></td></tr></table></figure><blockquote><p>这样即可完成结合软件设计界面，并在<em>python</em>中运行的一条龙服务了…</p><p>其实在<em>Qt creator</em>中就有信号与槽机制以及快捷键的设置了，这个可参考：<a href="https://wizardforcel.gitbooks.io/qt-beginning/content/60.html" target="_blank" rel="external">https://wizardforcel.gitbooks.io/qt-beginning/content/60.html</a><br>(<strong>全面介绍了</strong>)</p></blockquote><p>简单认识一下设计界面上的那些按钮功能(网上的图，出处忘记了…)</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/d.png" alt=""></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>唉..突然感觉直接写代码都还要方便多了…结合软件设计搞的时间浪费的还要多…</p><ul><li>参考：</li></ul><blockquote><p><a href="https://blog.csdn.net/jclian91/article/details/77407723" target="_blank" rel="external">https://blog.csdn.net/jclian91/article/details/77407723</a></p><p><a href="https://maicss.gitbooks.io/pyqt5/content/介绍.html" target="_blank" rel="external">https://maicss.gitbooks.io/pyqt5/content/介绍.html</a><br><strong>(以上所有内容的拼接均可根据此pyqt5库中文教程来进行理解学习，还是一句话，要多动脑多动手实践。)</strong></p><p><a href="https://cuiqingcai.com/5551.html" target="_blank" rel="external">https://cuiqingcai.com/5551.html</a><br><strong>（pyquery的使用教程）</strong></p></blockquote><ul><li>关于将<em>python</em>文件打包生成app的工具库：</li></ul><blockquote><p>py2app:.py –&gt; .dmg</p><p>py2exe:.py –&gt; .exe </p></blockquote><ul><li>关于<em>css选择器</em>等其他内容的快速获取(基于<em>chrome</em>浏览器)：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/5%E6%9C%88-02-2018%2019-33-40.gif" alt=""></p><blockquote><p>看上方的动图，选择完之后粘贴即可得出对应的内容(可适当删除中间字段而不影响达到目的)，当然最好学会一点相关的内容，其实也不难上手。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
          <category> PyQt5 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
            <tag> PyQt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Mac的快捷键及fn键设置</title>
      <link href="/2018/04/27/%E5%85%B3%E4%BA%8EMac%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%8F%8Afn%E9%94%AE%E8%AE%BE%E7%BD%AE/"/>
      <url>/2018/04/27/%E5%85%B3%E4%BA%8EMac%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%8F%8Afn%E9%94%AE%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>最近因为需要，就花了点时间看了一下。本文用于记录下一些常用的在<em>Mac</em>下的一些设置。</p><a id="more"></a><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>关于在认识<em>Macbook</em>的一些快捷键时，进入步骤：<code>系统偏好设置</code> –&gt; <code>键盘</code>–&gt;<code>快捷键</code>–&gt; <code>左边栏</code>。一个一个都看看，发现快捷键系统的都在。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-27-2018%2015-27-50.gif" alt=""></p><blockquote><p>当然可根据需要自行更改。</p></blockquote><h2 id="fn健的设置"><a href="#fn健的设置" class="headerlink" title="fn健的设置"></a>fn健的设置</h2><p>按下<em>fn</em>健可显示<code>F1</code>～<code>F12</code>的按键，关于如何设置在特定的软件打开时无需按此就显示<code>F1</code>～<code>F12</code>的按键：<code>系统偏好设置</code> –&gt; <code>键盘</code>–&gt;<code>快捷键</code>–&gt;<code>(fn)功能键</code>–&gt;添加软件即可。在这之后会发现打开相应的软件之后，无需按下<em>fn</em>健即可显示出<code>F1</code>～<code>F12</code>的按键了。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-27-2018%2015-28-06.gif" alt=""></p><h2 id="关于设置文件的默认打开方式"><a href="#关于设置文件的默认打开方式" class="headerlink" title="关于设置文件的默认打开方式"></a>关于设置文件的默认打开方式</h2><p>例子：右键打开一个文件，点击<code>显示简介</code>–&gt;<code>打开方式</code>–&gt;选择好想要默认打开用的软件–&gt;<code>全部更改</code>。再次打开此类型的文件均以选定的软件打开显示。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-27-2018%2015-28-21.gif" alt=""></p><h2 id="关闭软件通知"><a href="#关闭软件通知" class="headerlink" title="关闭软件通知"></a>关闭软件通知</h2><p>有时用的破解软件经常提醒要更新…<code>系统偏好设置</code> –&gt; <code>通知</code>。里面设置停止通知即可。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-27-2018%2015-28-39.gif" alt=""></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>如果有时发现没有相关的内容，可先重新启动，再次进行操作。不仅此类型的问题需要重新启动，只要是发现很系统奇怪跟往常不一致时均可通过重新启动来解决。</p><p>以后有需要用的上的再补上。</p><blockquote><p>主要资料可参考<em>Apple</em>官网的说明即可。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Jupyter Notebook的简单使用</title>
      <link href="/2018/04/21/%E5%85%B3%E4%BA%8EJupyter-Notebook%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/04/21/%E5%85%B3%E4%BA%8EJupyter-Notebook%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>关于<em>Jupyter Notebook</em>的介绍就不在此多说了。</p><p>官网教程：</p><blockquote><p><a href="https://jupyter-notebook.readthedocs.io/en/stable/notebook.html" target="_blank" rel="external">https://jupyter-notebook.readthedocs.io/en/stable/notebook.html</a></p></blockquote><p>直接开始介绍整个流程好了。</p><p>先下载<em>Anaconda</em>，里面有包含了现成的<em>Jupyter Notebook</em>，之后我们打开<em>Anaconda</em>客户端即可直接使用<em>Jupyter Notebook</em>了。</p><a id="more"></a><blockquote><p><em>Anaconda</em>官网：<a href="https://www.anaconda.com/download/#macos" target="_blank" rel="external">https://www.anaconda.com/download/#macos</a></p><p>其中有两个版本，选择需要的下载的版本与完成之后打开的<em>Jupyter Notebook</em>中的<em>python</em>版本是一致的。</p></blockquote><p>打开客户端，进入<em>Jupyter Notebook</em>：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-21-2018%2020-55-27.gif" alt=""></p><p>在<em>Jupyter Notebook</em>中新建一个文本：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-21-2018%2020-55-59.gif" alt=""></p><p>在创建了一个脚本文件之后的界面上的小图标各有不同的功能，可以自己点击一下就知道是怎么回事了，再不然可结合文档来进行操作即可。再者接下来就是根据个人的需要来进行编码了，更多的功能暂时用不到，可参考上面的官网教程。</p><blockquote><p>关于<em>Ipython</em>教程可参考：<a href="https://itacey.gitbooks.io/learning_ipython/content/第一章.html" target="_blank" rel="external">https://itacey.gitbooks.io/learning_ipython/content/第一章.html</a></p><p>关于在<em>Mac</em>中使用<em>Jupyter Notebook</em>编码时的快捷键可参考：<a href="https://www.jianshu.com/p/20f6a77dd23c" target="_blank" rel="external">https://www.jianshu.com/p/20f6a77dd23c</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> Anaconda </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Anaconda </tag>
            
            <tag> Python </tag>
            
            <tag> Jupyter Notebook </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Django开发环境</title>
      <link href="/2018/04/19/%E6%90%AD%E5%BB%BADjango%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
      <url>/2018/04/19/%E6%90%AD%E5%BB%BADjango%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<p>老早就想将一些数据库里的数据来进行交互式的实现了，之前看了有主要的两种方法：</p><ul><li><p>一是<em>pyQt5</em>这个库，结合<em>Qt creator</em>来进行完成。</p></li><li><p>另外就是通过网页形式来进行交互式的实现了。</p></li></ul><blockquote><p>在接触了前者之后发现学习的时间成本比较高一些，所以打算选择后者了…</p></blockquote><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在终端使用命令行：<code>pip3 install Django</code></p><blockquote><p>默认<em>python3</em>进行。<em>python2</em>:<code>pip install Django</code>。两者均会下载<em>Django</em>库的最新版本，亦可指定下载那个版本。</p></blockquote><h3 id="测试安装："><a href="#测试安装：" class="headerlink" title="测试安装："></a>测试安装：</h3><p>在编译器中：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> django  <span class="comment"># @UnresolvedImport</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"></div><div class="line">    print(django.get_version())</div><div class="line">```    </div><div class="line"></div><div class="line">&gt; **在*eclipse*中会提示导入Django库找不到，但是运行是可以成功的，加上<span class="comment"># @UnresolvedImport 让错误提示不再提示。**</span></div><div class="line"></div><div class="line">在终端，先打开*python*的编译环境，依次输入：</div><div class="line"></div><div class="line">```python</div><div class="line"><span class="keyword">import</span> django</div><div class="line">print(django.get_version())</div></pre></td></tr></table></figure><blockquote><p>以上两者均会输出下载的<em>Django</em>版本号。</p></blockquote><h2 id="测试Django运行"><a href="#测试Django运行" class="headerlink" title="测试Django运行"></a>测试Django运行</h2><h3 id="项目建立"><a href="#项目建立" class="headerlink" title="项目建立"></a>项目建立</h3><p><code>cd</code> 至编译器或者是IDE的开发环境的目录下，使用创建项目命令：<code>django-admin startproject mysite</code><strong>（其中的mysite是项目名称）</strong>：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-19%20%E4%B8%8B%E5%8D%887.33.13.png" alt=""></p><p>创建项目成功之后刷新在编译器的目录，我的是<em>eclipse</em>，可看到项目目录出来了：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-19%20%E4%B8%8B%E5%8D%887.30.32.png" alt=""></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在上面的基础下<code>cd</code>至新建的项目之下，启动主文件：<code>python manage.py runserver</code>，打开链接<a href="http://127.0.0.1:8000/" target="_blank" rel="external">http://127.0.0.1:8000/</a></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-19%20%E4%B8%8B%E5%8D%887.30.55.png" alt=""></p><p>出现了Django成功运行的网页：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-19%20%E4%B8%8B%E5%8D%887.31.09.png" alt=""></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li><p>在<em>eclipse</em>中的导入<em>Django</em>提示错误，实际上运行无障碍。</p></li><li><p>详细可参考：</p></li></ul><p><strong><a href="https://docs.djangoproject.com/en/2.0/intro/tutorial01/" target="_blank" rel="external">https://docs.djangoproject.com/en/2.0/intro/tutorial01/</a></strong></p><p><strong><a href="https://www.w3cschool.cn/django/dl5b8ozt.html" target="_blank" rel="external">https://www.w3cschool.cn/django/dl5b8ozt.html</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Parallels Desktop13的简单使用</title>
      <link href="/2018/04/17/%E5%85%B3%E4%BA%8EParallels-Desktop13%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/04/17/%E5%85%B3%E4%BA%8EParallels-Desktop13%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>Parallels Desktop13破解版的下载以及简单的操作可见：<a href="https://blog.csdn.net/weixin_41000111/article/details/79428402" target="_blank" rel="external">https://blog.csdn.net/weixin_41000111/article/details/79428402</a></strong></p></blockquote><p>本文仅仅是做一些补充。</p><a id="more"></a><h2 id="关于新建一个虚拟机"><a href="#关于新建一个虚拟机" class="headerlink" title="关于新建一个虚拟机"></a>关于新建一个虚拟机</h2><p>比如已经有了一个<em>win</em>系统的虚拟机，想建一个<em>Linux</em>的虚拟机。如下图所示，打开在右上角的<em>Parallels Desktop</em>的小图标，点击<code>新建..</code>即可。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-17%20%E4%B8%8A%E5%8D%889.42.25.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-17%20%E4%B8%8A%E5%8D%889.42.37.png" alt=""></p><blockquote><p>之后的安装步骤会有点不一致，不过容易上手。</p></blockquote><p><strong>注意：若是在安装初期出现有“没有可用的映像”的问题，期间主要是密钥填写的问题，可以选择跳过不填进行安装即可。</strong></p><h2 id="关于Parallels-Desktop13的扩展功能"><a href="#关于Parallels-Desktop13的扩展功能" class="headerlink" title="关于Parallels Desktop13的扩展功能"></a>关于<em>Parallels Desktop13</em>的扩展功能</h2><p>打开在右上角的<em>Parallels Desktop</em>的小图标中的<em>偏好设置</em>，如下图所示下载<em>Toolbox</em>。打开之后发现会有许多的小工具，比如下方的视频下载工具可下载<em>YouTube</em>上的视频文件。更多的新功能可见官网：<strong><a href="https://www.parallels.com/products/desktop/" target="_blank" rel="external">https://www.parallels.com/products/desktop/</a></strong></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-17%20%E4%B8%8A%E5%8D%889.50.08.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-17-2018%2010-01-17.gif" alt=""></p><blockquote><p>官网的介绍视频中有相关的详细介绍。</p></blockquote><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>说说体验吧。与我之前用过的虚拟机软件<em>VirtualBox</em>相较，<em>Parallels Desktop</em>明显的运行起来比前者更为流畅，更为人性化一些，并且功能更为强大。</p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Parallels Desktop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在eclipse中运行scrapy项目</title>
      <link href="/2018/04/13/%E5%85%B3%E4%BA%8E%E5%9C%A8eclipse%E4%B8%AD%E8%BF%90%E8%A1%8Cscrapy%E9%A1%B9%E7%9B%AE/"/>
      <url>/2018/04/13/%E5%85%B3%E4%BA%8E%E5%9C%A8eclipse%E4%B8%AD%E8%BF%90%E8%A1%8Cscrapy%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>关于在<em>eclipse</em>中运行爬虫<em>scrapy</em>框架的项目介绍如下。</p><blockquote><p><strong>scrapy官方文档：<a href="http://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/shell.html" target="_blank" rel="external">http://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/shell.html</a></strong></p></blockquote><p>首先打开终端将<code>cd</code>至<em>eclipse</em>目录下的（即<em>eclipse-workspace</em>），使用命令行<code>scrapy startproject tutorial</code>（其中的<em>tutorial</em>是自由选择的），之后会生成一个目录，将其目录移至一个<em>python工程</em>下。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-13%20%E4%B8%8B%E5%8D%887.49.25.png" alt=""></p><blockquote><p>如上图。</p></blockquote><a id="more"></a><p>在<em>spider</em>包下建立一个脚本文件（如上图我的那个<em>first</em>文件，名字随意），是用来写爬虫程序用的。之后在<em>tutorial</em>包下建立一个名为<em>cmdline</em>的脚本文件（名字随意）。</p><p>下面为了直接达到运行成功的目的，贴上测试用的代码。</p><p><strong>first.py中的代码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> scrapy</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DmozSpider</span><span class="params">(scrapy.Spider)</span>:</span></div><div class="line">    name = <span class="string">"first"</span> <span class="comment">#此处很重要</span></div><div class="line">    allowed_domains = [<span class="string">"dmoz.org"</span>]</div><div class="line">    start_urls = [</div><div class="line">        <span class="string">"http://www.dmoz.org/Computers/Programming/Languages/Python/Books/"</span>,</div><div class="line">        <span class="string">"http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/"</span></div><div class="line">    ]</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></div><div class="line">        filename = response.url.split(<span class="string">"/"</span>)[<span class="number">-2</span>]</div><div class="line">        <span class="keyword">with</span> open(filename, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</div><div class="line">            f.write(response.body)</div></pre></td></tr></table></figure><p><strong>cmdline.py中的代码：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"><span class="comment">#第三个参数就是上方的first文件名！其他两个参数如下正常</span></div><div class="line">    execute(argv=[<span class="string">'scrapy'</span>, <span class="string">'crawl'</span>, <span class="string">'first'</span>])</div></pre></td></tr></table></figure><p><strong>items.py中的代码：</strong></p><pre><code class="python"><span class="keyword">import</span> scrapy<span class="class"><span class="keyword">class</span> <span class="title">TutorialItem</span><span class="params">(scrapy.Item)</span>:</span>    <span class="comment"># define the fields for your item here like:</span>    <span class="comment"># name = scrapy.Field()</span>    title = scrapy.Field()    link = scrapy.Field()    desc = scrapy.Field()</code></pre><blockquote><p>这个文件是与<em>first</em>文件有直接联系的。可参考官方文档介绍。</p></blockquote><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>接下来直接运行<em>cmdline.py</em>可得出结果：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-13%20%E4%B8%8B%E5%8D%887.50.00.png" alt=""></p><hr><h2 id="配置调试"><a href="#配置调试" class="headerlink" title="配置调试"></a>配置调试</h2><p>直接看下面的图上解说吧。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-13%20%E4%B8%8B%E5%8D%887.46.09.png" alt=""></p><hr><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-13%20%E4%B8%8B%E5%8D%887.46.17.png" alt=""></p><blockquote><p>接下来点击debug。</p></blockquote><hr><p><strong>最终两者均可达到输出的效果！</strong></p><p>参考：</p><p><a href="https://blog.csdn.net/otengyue/article/details/48065841" target="_blank" rel="external">https://blog.csdn.net/otengyue/article/details/48065841</a></p><p><a href="http://www.cnblogs.com/v-BigdoG-v/p/7393601.html" target="_blank" rel="external">http://www.cnblogs.com/v-BigdoG-v/p/7393601.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Scrapy </category>
          
          <category> Eclispe </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Scrapy </tag>
            
            <tag> Eclispe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于eclipse的风格与主题</title>
      <link href="/2018/04/13/%E5%85%B3%E4%BA%8Eeclipse%E7%9A%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E4%B8%BB%E9%A2%98/"/>
      <url>/2018/04/13/%E5%85%B3%E4%BA%8Eeclipse%E7%9A%84%E9%A3%8E%E6%A0%BC%E4%B8%8E%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="eclipse的界面主题更换"><a href="#eclipse的界面主题更换" class="headerlink" title="eclipse的界面主题更换"></a><em>eclipse</em>的界面主题更换</h2><p>关于我的<em>eclipse</em>的界面主题更换（目前为<em>eclipse Oxygen</em>版本），在内置中已经可以作为一种选择了。</p><p>具体看图所示即可：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-13-2018%2013-07-55.gif" alt=""></p><blockquote><p>可供的选择有三种，其中的<em>dark</em>类型是比较护眼的，均可试试。</p></blockquote><p>实际的<em>dark</em>展示：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-13%20%E4%B8%8B%E5%8D%881.08.27.png" alt=""></p><hr><a id="more"></a><h2 id="eclipse代码风格更换"><a href="#eclipse代码风格更换" class="headerlink" title="eclipse代码风格更换"></a><em>eclipse</em>代码风格更换</h2><p>可参考此处：<a href="https://blog.csdn.net/zhouchangshi/article/details/37901519" target="_blank" rel="external">https://blog.csdn.net/zhouchangshi/article/details/37901519</a></p><blockquote><p>其中已经有了许多的并且详细的介绍了。</p></blockquote><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>关于更换编译处的字体大小以及字体选择（如图）:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-13-2018%2013-11-02.gif" alt=""></p><ul><li>关于控制台的字体更改以及选择（如图）:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-13-2018%2013-10-41.gif" alt=""></p><hr><p><strong>参考：</strong></p><p><a href="https://jingyan.baidu.com/article/f96699bb9442f3894e3c1b15.html" target="_blank" rel="external">https://jingyan.baidu.com/article/f96699bb9442f3894e3c1b15.html</a></p><p><a href="https://blog.csdn.net/zhouchangshi/article/details/37901519" target="_blank" rel="external">https://blog.csdn.net/zhouchangshi/article/details/37901519</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Eclispe </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Eclispe </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3爬虫：爬取淘宝商品信息的两种方法</title>
      <link href="/2018/04/08/python3%E7%88%AC%E8%99%AB%EF%BC%9A%E7%88%AC%E5%8F%96%E6%B7%98%E5%AE%9D%E5%95%86%E5%93%81%E4%BF%A1%E6%81%AF%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/"/>
      <url>/2018/04/08/python3%E7%88%AC%E8%99%AB%EF%BC%9A%E7%88%AC%E5%8F%96%E6%B7%98%E5%AE%9D%E5%95%86%E5%93%81%E4%BF%A1%E6%81%AF%E7%9A%84%E4%B8%A4%E7%A7%8D%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>爬取淘宝信息：</p><blockquote><p>1，可用<em>selenium</em>模块与<em>driver Chrome</em>插件自动化模拟爬取。</p><p>2， 进行抓包爬取。</p></blockquote><p><strong>下面一一进行介绍并且贴出实现代码。但是在此必须说明一下，因为时间有限，相关模块不懂的还需要自行搜索，在此不做教程解说，只提供分析思路与代码实现过程。</strong></p><blockquote><p>学习博客推荐：<a href="https://cuiqingcai.com，" target="_blank" rel="external">https://cuiqingcai.com，</a><br>实际上我也是根据此博客学习到了一些知识，也是我参考学习的唯一博客。</p></blockquote><a id="more"></a><h2 id="自动化模拟爬取"><a href="#自动化模拟爬取" class="headerlink" title="自动化模拟爬取"></a>自动化模拟爬取</h2><p>python爬虫的<em>selenium</em>模块是一个可以实现模拟浏览器相关动作，并且可跳过<em>JavaScript动态渲染</em>直接返回其网页源代码的一个自动化测试工具。如下我们需要爬取关键词为<em>MacBook Pro</em>的商品信息，可用它来实现自动翻页并且返回每一页的源代码直接进行相关信息的爬取。</p><h3 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h3><p>下面直接进行分析过程。</p><p>首先打开淘宝主页：<a href="https://www.taobao.com" target="_blank" rel="external">https://www.taobao.com</a> ，进入其中输入关键词观察一下页面，可以看到下面翻页的一些跳转功能。（以下使用的都是<em>Chrome</em>自带的<em>开发者工具</em>）</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%888.10.59.png" alt=""></p><p>因为要实现自动翻页的过程，则我们需要查看有关翻页这个功能按钮的源代码是什么样子。其中涉及到了输入框，然后点击旁边的确定按钮。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%888.15.27.png" alt=""></p><blockquote><p>输入框对应的源代码。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%888.18.39.png" alt=""></p><blockquote><p>确定按钮对应的源代码。</p></blockquote><p>在知道了以上的一些按钮信息之后我们还需要知道翻页之后目前对应的页数在哪，以便在对应的页数正确之后，可以得到对应页面的源代码，这样可直接运用一些相关的模块进行节点锁定爬取即可。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%888.19.13.png" alt=""></p><blockquote><p>确定页数码的源代码。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%887.32.20.png" alt=""></p><blockquote><p>页面上商品信息的html源代码。</p></blockquote><p>为什么要这样分析每一个相关功能的源代码？<strong>因为在selenium模块中可以实现自动化的过程，但是需要指定页面上相关的源代码才行，对于selenium来说等于开放了这个功能的接口一样。</strong></p><p><strong>思路分析：将要用相关模块挖掘源代码信息做为一个函数，将要爬取的页面源代码做为一个函数，其中实现自动翻页功能，即若是大于1，自动跳到其页面并且返回其页源代码，否则返回第一页页面的源代码。最后代入前者挖掘的函数。</strong></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">    函数目标：</span></div><div class="line"><span class="string">    利用selenium的自动翻页进行爬去相关的内容</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    编写时间：</span></div><div class="line"><span class="string">    2018-04-07</span></div><div class="line"><span class="string">'''</span></div><div class="line">    </div><div class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</div><div class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</div><div class="line"><span class="keyword">from</span> selenium.webdriver.support <span class="keyword">import</span> expected_conditions <span class="keyword">as</span> EC</div><div class="line"><span class="keyword">from</span> selenium.webdriver.support.wait <span class="keyword">import</span> WebDriverWait</div><div class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</div><div class="line"><span class="keyword">from</span> pyquery <span class="keyword">import</span> PyQuery <span class="keyword">as</span> pq</div><div class="line"> </div><div class="line">browser = webdriver.Chrome(<span class="string">'/Users/junjieliu/Downloads/小插件/chromedriver'</span>)</div><div class="line">wait = WebDriverWait(browser, <span class="number">10</span>)</div><div class="line">keys = <span class="string">'macbookpro'</span></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">    函数说明：实现自动化翻页。</span></div><div class="line"><span class="string">    仅仅当需要时进行翻页的选项</span></div><div class="line"><span class="string">    '''</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">index_source</span><span class="params">(page)</span>:</span></div><div class="line">    print(<span class="string">'正在爬取第'</span> + str(page) + <span class="string">'页内容..'</span> + <span class="string">'\n'</span> + <span class="string">'.'</span> * <span class="number">15</span>)</div><div class="line">    url = <span class="string">'https://s.taobao.com/search?q='</span> + quote(keys)</div><div class="line">    browser.get(url)</div><div class="line">    </div><div class="line">    <span class="comment"># 果然页数大于1则自动翻页功能启动</span></div><div class="line">    <span class="keyword">if</span> page &gt; <span class="number">1</span>:</div><div class="line">        <span class="comment"># 输入框定位</span></div><div class="line">        input = wait.until(</div><div class="line">            EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">'#mainsrp-pager div.form &gt; input.input.J_Input'</span>)))</div><div class="line">        </div><div class="line">        <span class="comment"># 确定按钮定位</span></div><div class="line">        button = wait.until(</div><div class="line">            EC.element_to_be_clickable((By.CSS_SELECTOR, <span class="string">'#mainsrp-pager div.form &gt; span.btn.J_Submit'</span>)))</div><div class="line">        <span class="comment"># 清理，输入，点击一体化</span></div><div class="line">        input.clear()</div><div class="line">        input.send_keys(page)</div><div class="line">        button.click()</div><div class="line">        </div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    获取源代码，传入爬取数据的函数</span></div><div class="line"><span class="string">    获取源代码过程：</span></div><div class="line"><span class="string">    第一步确定为在那一页</span></div><div class="line"><span class="string">    第二步确定爬取内容</span></div><div class="line"><span class="string">    '''</span></div><div class="line">    wait.until(</div><div class="line">        EC.text_to_be_present_in_element((By.CSS_SELECTOR, <span class="string">'#mainsrp-pager li.item.active &gt; span.num'</span>), str(page)))</div><div class="line">    wait.until(</div><div class="line">        EC.presence_of_element_located((By.CSS_SELECTOR, <span class="string">'.m-itemlist .items .item'</span>)))</div><div class="line">    </div><div class="line">    print(<span class="string">'获取本页源码成功，以下为相关的信息：'</span> + <span class="string">'\n'</span>)</div><div class="line">    get_product()</div><div class="line">    </div><div class="line"></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">    函数说明：</span></div><div class="line"><span class="string">    用pyquery爬取其中的商品内容</span></div><div class="line"><span class="string">    '''</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_product</span><span class="params">()</span>:</span></div><div class="line">    html_source = browser.page_source</div><div class="line">    doc = pq(html_source)</div><div class="line">    items = doc(<span class="string">'#mainsrp-itemlist .items .item'</span>).items()</div><div class="line">    </div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">        以下匹配内容可查看网页源代码可知</span></div><div class="line"><span class="string">        '''</span></div><div class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> items:</div><div class="line">        product_infos = &#123;</div><div class="line">            <span class="string">'img_url'</span>:<span class="string">'https:'</span> + item.find(<span class="string">'.pic .img'</span>).attr(<span class="string">'data-src'</span>),  <span class="comment"># 店铺主图片地址</span></div><div class="line">            <span class="string">'product_desc'</span>:item.find(<span class="string">'.pic .img'</span>).attr(<span class="string">'alt'</span>),  <span class="comment"># 商品描述</span></div><div class="line">            <span class="string">'price'</span>:item.find(<span class="string">'.price'</span>).text().replace(<span class="string">'\n'</span>, <span class="string">''</span>),  <span class="comment"># 价格</span></div><div class="line">            <span class="string">'people'</span>:item.find(<span class="string">'.deal-cnt'</span>).text(),  <span class="comment"># 购买人数</span></div><div class="line">            <span class="string">'shop_url'</span>:<span class="string">'https:'</span> + item.find(<span class="string">'.shop .shopname'</span>).attr(<span class="string">'href'</span>),  <span class="comment"># 店铺信息</span></div><div class="line">            <span class="string">'shop_name'</span>:item.find(<span class="string">'.shop'</span>).text(),  <span class="comment"># 店铺名称</span></div><div class="line">            <span class="string">'shop_location'</span>:item.find(<span class="string">'.location'</span>).text()  <span class="comment"># 店铺所在地</span></div><div class="line">            &#125;</div><div class="line">        </div><div class="line">        print(product_infos)</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">pages = <span class="number">100</span>  <span class="comment"># 根据页面分析可知总共有100页的信息</span></div><div class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, pages + <span class="number">1</span>):</div><div class="line">        index_source(num)</div></pre></td></tr></table></figure><blockquote><p>当然还可以进行正则表达式的匹配来完成爬取，因为需要时间来测试相关的表达式，所以推荐用<em>pyquery</em>这个库来完成爬取工作，相比于使用过的<em>beautiful</em>模块以及正则表达式，我感觉轻松了不少。</p></blockquote><h2 id="抓包爬取"><a href="#抓包爬取" class="headerlink" title="抓包爬取"></a>抓包爬取</h2><p>以下的抓包是利用的<em>Chrome</em>浏览器完成的，在这之前说了，因为时间关系，关于抓包是什么就不在此做详细介绍了…相信你看了我下面的分析过程会隐约明白一点。</p><h3 id="分析过程-1"><a href="#分析过程-1" class="headerlink" title="分析过程"></a>分析过程</h3><p>打开淘宝主页，输入关键词，在第一页上打开<em>Chrome</em>自带的<em>开发者工具</em>，这样就可以看到第一页的源代码信息了。以下图过程可以看到我们在第一页抓到的相关的<em>淘宝API</em>的数据包。里面有相关的商品信息，均为<em>json</em>格式。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%887.55.32.png" alt=""></p><hr><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%887.56.39.png" alt=""></p><blockquote><p>其中的<em>XHR格式</em>不懂可参考此篇文章：<a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest</a></p></blockquote><p>浏览器新建一个标签页，打开上面的那个地址看看有什么。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%888.24.11.png" alt=""></p><p><strong>经过一系列的测试发现了其中的那个参数<em>bcoffset=</em>是跳转的决定点，更改其值可得到不同的信息。</strong>这样我们进行思路分析就一目了然了。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-08%20%E4%B8%8B%E5%8D%888.21.47.png" alt=""></p><p><strong>思路分析：传入上面的说的API的URL，根据上面的那个参数的值更改，返回其中的文档信息，即可爬取到商品信息。</strong></p><h3 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    函数说明：</span></div><div class="line"><span class="string">    利用抓包返回的信息直接爬取商品信息</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    编写时间：</span></div><div class="line"><span class="string">    2018-04-08</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">'''</span></div><div class="line">    </div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    </div><div class="line">    <span class="comment"># 设定爬取100页，实际上还要多...</span></div><div class="line">    pages = <span class="number">100</span></div><div class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, pages + <span class="number">1</span>):</div><div class="line">        </div><div class="line">        print(<span class="string">'开始爬取第'</span> + str(num) + <span class="string">'页内容...'</span> + <span class="string">'\n'</span> + <span class="string">'.'</span> * <span class="number">10</span>)</div><div class="line">        url = <span class="string">'https://s.taobao.com/api?_ksTS=1523191565870_226&amp;callback=jsonp227&amp;ajax=true&amp;m=customized&amp;stats_click=search_radio_all:1&amp;q=macbookpro&amp;p4ppushleft=1,48&amp;ntoffset=4&amp;s=36&amp;imgfile=&amp;initiative_id=staobaoz_20180408&amp;bcoffset='</span> + str(num) + <span class="string">'&amp;js=1&amp;ie=utf8&amp;rn=5bd3f39c2ca57f21abe4db8ca60ee49f'</span></div><div class="line">        <span class="comment"># 代理信息</span></div><div class="line">        header = &#123;</div><div class="line">                <span class="string">'cookie'</span>: <span class="string">'t=da97f7b09403e3340cd6d50780a9385e; cna=PoshExqPgw0CAQG9KdLV29qM; hng=CN%7Czh-CN%7CCNY%7C156; thw=cn; enc=MuF%2FWOzFnau5EcbgcPck31M%2FMhER8txA4ZnjdZI2Dt8xzHdAr%2FN4f0OsOD%2FUcrNpOZWIfEG0GSbPQ8C4U%2BU70A%3D%3D; mt=ci%3D-1_1; cookie2=1f17bf1dfa8b6cf01c17d0fe7306c672; v=0; _tb_token_=eaefe3a15f0bf; JSESSIONID=0BC0D7637EFFD50CA56F8A8F4E451813; isg=BD09zFTCO5bo0p_z6P-VaFHGTJ_3cnEiA2cTwf-D2RRsNl5oySop_Xqg5Wpwlonk'</span>,</div><div class="line">                <span class="string">'referer'</span>: <span class="string">'https://s.taobao.com/search?q=macbookpro&amp;imgfile=&amp;js=1&amp;stats_click=search_radio_all%3A1&amp;initiative_id=staobaoz_20180408&amp;ie=utf8&amp;bcoffset=4&amp;p4ppushleft=1%2C48&amp;ntoffset=4&amp;s=0'</span>,</div><div class="line">                <span class="string">'user-agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'</span>,</div><div class="line">                <span class="string">'x-requested-with'</span>: <span class="string">'XMLHttpRequest'</span>&#125;</div><div class="line">        </div><div class="line">        responed = requests.get(url=url, headers=header)</div><div class="line">        <span class="comment"># 指定编码格式</span></div><div class="line">        responed.encoding = <span class="string">'utf-8'</span></div><div class="line">        </div><div class="line">        re_text = responed.text</div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">            进入数据清洗与筛选阶段</span></div><div class="line"><span class="string">            因为转化json格式始终失败...所以改用正则表达式来进行匹配</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        print(<span class="string">'获取源代码成功，以下为相关商品的信息：'</span>)</div><div class="line">        target = re.findall(<span class="string">r'"raw_title":"(.*?)".*?"pic_url":"(.*?)".*?"view_price":"(.*?)".*?"item_loc":"(.*?)".*?"view_sales":"(.*?)".*?"user_id":"(.*?)".*?"nick":"(.*?)"'</span>, re_text, re.S)  <span class="comment"># @UndefinedVariable</span></div><div class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> target:</div><div class="line">            product = &#123;</div><div class="line">                <span class="string">'shop_title'</span>:each[<span class="number">0</span>],  <span class="comment"># 店铺主题</span></div><div class="line">                <span class="string">'pic_url'</span>:<span class="string">'https:'</span> + each[<span class="number">1</span>],  <span class="comment"># 店铺图片地址</span></div><div class="line">                <span class="string">'price'</span>:each[<span class="number">2</span>],  <span class="comment"># 价格</span></div><div class="line">                <span class="string">'sales_people'</span>:each[<span class="number">4</span>],  <span class="comment"># 购买人数</span></div><div class="line">                <span class="string">'shop_name'</span>:each[<span class="number">6</span>],  <span class="comment"># 店铺名称</span></div><div class="line">                <span class="string">'loc'</span>:each[<span class="number">3</span>],  <span class="comment"># 店铺所在地</span></div><div class="line">                <span class="string">'shop_url'</span>:<span class="string">'https://store.taobao.com/shop/view_shop.htm?user_number_id='</span> + each[<span class="number">5</span>]  <span class="comment"># 店铺URL地址</span></div><div class="line">                    &#125;</div><div class="line">            print(product)</div></pre></td></tr></table></figure><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>第二种方法期间原本以为可以先转化为<em>json格式</em>来进行处理，没想到发生了<strong>json.decoder.JSONDecodeError:</strong>的错误，结果改用正则表达式进行文本的挖掘，效率也是无形中得到了提升…在此我推荐用正则表达式来处理<em>json格式</em>的文档，这样在绝大多数情况下可能会有更高的效率！</p><p>爬取到的数据可用来进行一些数据分析等等。有时想尝试用各种方法去爬取，但是因为学的东西真的多，所以就不一一尝试了，尽量使用简便的方法…不懂的朋友还需要多多学习，利用好搜索引擎！当然看书也是必须的。</p><h1 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h1><p>经网友反馈，第二种用后门链接抓包爬取淘宝商品信息的方法已经失效了…在此很遗憾未能尽力帮助到需要的人。</p><p>如果以后用得到，我会在此补上新的方法。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于记录Chromedriver的selenium.common.exceptions.WebDriverException: Message: &#39;chromedriver &#39; executable needs to be in PATH. Please see https://sites.google.com/a/chromium.org/chromedriver/home</title>
      <link href="/2018/04/05/%E5%85%B3%E4%BA%8E%E8%AE%B0%E5%BD%95Chromedriver%E7%9A%84selenium-common-exceptions-WebDriverException-Message-chromedriver-executable-needs-to-be-in-PATH-Please-see-https-sites-google-com-a-chromium-org-chromedriver-home/"/>
      <url>/2018/04/05/%E5%85%B3%E4%BA%8E%E8%AE%B0%E5%BD%95Chromedriver%E7%9A%84selenium-common-exceptions-WebDriverException-Message-chromedriver-executable-needs-to-be-in-PATH-Please-see-https-sites-google-com-a-chromium-org-chromedriver-home/</url>
      
        <content type="html"><![CDATA[<p>最近学习一些<em>python</em>爬虫的框架，用<em>selenium</em>与<em>Chromedriver</em>插件结合<em>Chrome浏览器</em>来爬去网页源数据。</p><p>发现了如题的错误信息：</p><blockquote><p>selenium.common.exceptions.WebDriverException: Message:<br>  ‘chromedriver ‘ executable needs to be in PATH. Please see<br>  <a href="https://sites.google.com/a/chromium.org/chromedriver/home" target="_blank" rel="external">https://sites.google.com/a/chromium.org/chromedriver/home</a></p></blockquote><p>在已配置好系统环境的前提下，用如下代码指定位置，或者是将<em>Chromedriver</em>插件放在工程文件下，均得到了如上的错误信息。</p><pre><code>from selenium import webdriverbrowser = webdriver.Chrome(&apos;/Users/junjieliu/Downloads/小插件/chromedriver&apos;)</code></pre><hr><a id="more"></a><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>如下操作，先将插件打开（即表示打开运行了，<strong>在需要使用时应当一直开着</strong>），跳出来了其所在位置，将其位置复制再运行上面的代码，发现跳出来了一个<em>Chrome浏览器</em>的空白页面，这表示已经成功了！</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4%E6%9C%88-05-2018%2019-56-36.gif" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-05%20%E4%B8%8B%E5%8D%888.00.03.png" alt=""></p><blockquote><p>成功的页面。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> 网络爬虫 </tag>
            
            <tag> Chromedriver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3爬取豆瓣Top250电影信息</title>
      <link href="/2018/04/03/python3%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3Top250%E7%94%B5%E5%BD%B1%E4%BF%A1%E6%81%AF/"/>
      <url>/2018/04/03/python3%E7%88%AC%E5%8F%96%E8%B1%86%E7%93%A3Top250%E7%94%B5%E5%BD%B1%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<p>以下是通过正则表达式爬取的<em>猫眼电影</em>以及<em>豆瓣电影</em>的相关的电影信息的代码过程。</p><hr><a id="more"></a><h2 id="爬取猫眼电影"><a href="#爬取猫眼电影" class="headerlink" title="爬取猫眼电影"></a>爬取猫眼电影</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>打开<em>Chrome</em>的调试工具，可发现相关的信息都在，并且以翻页的形式来得到更多的电影信息。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-04%20%E4%B8%8A%E5%8D%8810.17.59.png" alt=""></p><blockquote><p>我们可通过其爬取需要的信息，利用正则表达式来进行文本的挖掘。</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">    函数目标：</span></div><div class="line"><span class="string">    爬取猫眼电影的top100信息</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    编写时间：</span></div><div class="line"><span class="string">    2018-03-28</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">import requests</span></div><div class="line"><span class="string">import re</span></div><div class="line"><span class="string">import json</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">if __name__ == '__main__':</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">   print('猫眼电影Top100信息如下：')</span></div><div class="line"><span class="string">   #循环10次，得出页面上的Top100的电影信息</span></div><div class="line"><span class="string">   for i in range(0, 10):</span></div><div class="line"><span class="string">       </span></div><div class="line"><span class="string">       url = "http://maoyan.com/board/4?"</span></div><div class="line"><span class="string">       header = &#123;</span></div><div class="line"><span class="string">               'Host':'maoyan.com',</span></div><div class="line"><span class="string">               'Referer':'http://maoyan.com/board/4?offset=20',</span></div><div class="line"><span class="string">               'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'&#125;</span></div><div class="line"><span class="string">       </span></div><div class="line"><span class="string">       paramters = &#123;</span></div><div class="line"><span class="string">               'offset': i * 10&#125;</span></div><div class="line"><span class="string">       request_tasget = requests.get(url=url, headers=header, params=paramters)</span></div><div class="line"><span class="string">       request_tasget.encoding = 'utf-8'</span></div><div class="line"><span class="string">       </span></div><div class="line"><span class="string">       # 实际上应该考虑考虑网的问题...连不上就一般没有数据返回了，找一个字符作为接口之后利用万能表达式即可</span></div><div class="line"><span class="string">       infos_list = re.findall(</span></div><div class="line"><span class="string">       r'&lt;dd&gt;.*?board-index.*?&gt;(.*?)&lt;/i&gt;.*?alt.*?src="(.*?)".*?&lt;a.*?&gt;(.*?)&lt;/a&gt;.*?"star"&gt;(.*?)&lt;/p&gt;.*?"releasetime"&gt;(.*?)&lt;/p&gt;.*?"integer"&gt;(.*?)&lt;/i&gt;.*?"fraction"&gt;(.*?)&lt;/i&gt;',</span></div><div class="line"><span class="string">       request_tasget.text, re.S)  # @UndefinedVariable</span></div><div class="line"><span class="string">       </span></div><div class="line"><span class="string">       #建立存储信息的字典</span></div><div class="line"><span class="string">       for each in infos_list:</span></div><div class="line"><span class="string">           yields = &#123;</span></div><div class="line"><span class="string">                   'index':each[0],</span></div><div class="line"><span class="string">                   'image_info':each[1],</span></div><div class="line"><span class="string">                   'name':each[2],</span></div><div class="line"><span class="string">                   'actor':each[3].strip(),</span></div><div class="line"><span class="string">                   'time':each[4],</span></div><div class="line"><span class="string">                   'score':each[5] + each[6]</span></div><div class="line"><span class="string">                   &#125;</span></div><div class="line"><span class="string">           print(yields)</span></div></pre></td></tr></table></figure><h2 id="爬取豆瓣电影"><a href="#爬取豆瓣电影" class="headerlink" title="爬取豆瓣电影"></a>爬取豆瓣电影</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>与爬取猫眼电影信息一样，都是一样的，具体的差距还是在豆瓣上爬取信息需要<em>cookie</em>，具体可参考下面的代码。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-04%20%E4%B8%8A%E5%8D%8810.18.27.png" alt=""></p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><pre><code class="python"><span class="string">'''</span><span class="string">    函数目标：</span><span class="string">    爬取豆瓣Top250的电影信息</span><span class="string"></span><span class="string">    编写时间：</span><span class="string">    2018-04-01</span><span class="string">'''</span><span class="keyword">import</span> requests<span class="keyword">import</span> re <span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:print(<span class="string">'以下为豆瓣Top250的电影信息：'</span>)<span class="comment"># 从页面可看到一共有十页，每页上有25个电影的信息</span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">10</span>):    url = <span class="string">"https://movie.douban.com/top250?"</span>    header = {            <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,            <span class="string">'Cookie'</span>: <span class="string">'bid=x9ipkoKiQgw; _pk_ses.100001.4cf6=*; __utma=30149280.2001666009.1522587991.1522587991.1522587991.1; __utmb=30149280.0.10.1522587991; __utmc=30149280; __utmz=30149280.1522587991.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); __utma=223695111.1530785565.1522587991.1522587991.1522587991.1; __utmb=223695111.0.10.1522587991; __utmc=223695111; __utmz=223695111.1522587991.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); ll="118146"; _vwo_uuid_v2=D575771A914BC38B3B7D081C0A0296FDC|939d8f7fdff1f383a97d572dab39fa1a; _pk_id.100001.4cf6=1de732c7ac4dc22b.1522587990.1.1522588516.1522587990.; ct=y'</span>,            <span class="string">'Host'</span>: <span class="string">'movie.douban.com'</span>,            <span class="string">'Referer'</span>: <span class="string">'https://movie.douban.com/top250?start=25&amp;filter='</span>,            <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36}'</span>             }    paramters = {             <span class="string">'start'</span>: i * <span class="number">25</span>,             <span class="string">'filter'</span>:<span class="string">''</span>              }    tasget = requests.get(url=url, headers=header, params=paramters)    tasget.encoding = <span class="string">'utf-8'</span>    <span class="comment"># 匹配正则表达式</span>    infos = re.findall(<span class="string">r'&lt;li&gt;.*?&lt;em class=""&gt;(.*?)&lt;/em&gt;.*?alt=.*?src="(.*?)".*?"title"&gt;(.*?)&lt;/span&gt;.*?class="title"&gt;&amp;nbsp;/&amp;nbsp;(.*?)&lt;/span&gt;.*?"other"&gt;&amp;nbsp;/&amp;nbsp;(.*?)&lt;/span&gt;.*?&lt;p class=""&gt;(.*?)&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;br&gt;(.*?)&amp;nbsp;/&amp;nbsp(.*?)&amp;nbsp;/&amp;nbsp(.*?)&lt;/p&gt;.*?average"&gt;(.*?)&lt;/span&gt;'</span>, tasget.text, re.S)  <span class="comment"># @UndefinedVariable</span>    <span class="comment"># 建立一个空字典用于存储相关的信息</span>    <span class="keyword">for</span> each <span class="keyword">in</span> infos:        yields = {            <span class="string">'index'</span>:each[<span class="number">0</span>],  <span class="comment"># 排名</span>            <span class="string">'img_info'</span>:each[<span class="number">1</span>],  <span class="comment"># 照片地址</span>            <span class="string">'name'</span>:each[<span class="number">2</span>].strip() + <span class="string">"/"</span> + each[<span class="number">3</span>].strip() + <span class="string">"/"</span> + each[<span class="number">4</span>].strip(),  <span class="comment"># 影片名称</span>            <span class="string">'director'</span>:each[<span class="number">5</span>].strip(),  <span class="comment"># 导演</span>            <span class="string">'actor'</span>:each[<span class="number">6</span>],  <span class="comment"># 演员</span>            <span class="string">'time_cy'</span>:each[<span class="number">7</span>].strip() + each[<span class="number">8</span>],  <span class="comment"># 上演时间及地区</span>            <span class="string">'type'</span>:each[<span class="number">9</span>].strip(),  <span class="comment"># 影片类型</span>            <span class="string">'score'</span>:each[<span class="number">10</span>]  <span class="comment"># 评分</span>            }        print(yields)</code></pre><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>简单说说其中的含义，表达式<code>.*?</code>是一个万能的匹配式，<code>(.*?)</code>是匹配想要爬取的内容，并且每一次伴随着一个索引号，每一个索引号对应着的信息不同。利用正则表达式可方便的进行文本与代码的分开挖掘，一般在写正则表达式时用<em>html</em>代码中的一些词来进行过渡就可以方便的写出来了。</p><blockquote><p>多说无益，还是需要自己来进行代码的测试了解的。</p></blockquote><ul><li>参考的博客：<a href="https://cuiqingcai.com" target="_blank" rel="external">https://cuiqingcai.com</a></li></ul><blockquote><p>可根据此博客来学习更多的爬虫知识。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下的mysql安装以及相关的问题解决</title>
      <link href="/2018/04/03/Mac%E4%B8%8B%E7%9A%84mysql%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
      <url>/2018/04/03/Mac%E4%B8%8B%E7%9A%84mysql%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/</url>
      
        <content type="html"><![CDATA[<p>最近因为学习到了爬虫的原因，存储数据需要<em>mysql</em>了，因为以前学习过其命令行，所以在之前安装过了，太久没用了，怎么开都不懂了，搞了几十分钟不想搞了，重新安装。下面记录下遇到的一些问题。</p><hr><a id="more"></a><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><h3 id="第一种方法"><a href="#第一种方法" class="headerlink" title="第一种方法"></a>第一种方法</h3><p>进入官网下载对应<em>Mac</em>的<em>mysql</em>。</p><blockquote><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">官网地址</a></p></blockquote><h3 id="第二种方法"><a href="#第二种方法" class="headerlink" title="第二种方法"></a>第二种方法</h3><p>直接用命令行<code>brew Install mysql</code>。</p><blockquote><p>前提是必须安装了<em>homebrew</em>。</p></blockquote><h2 id="配置以及开启过程"><a href="#配置以及开启过程" class="headerlink" title="配置以及开启过程"></a>配置以及开启过程</h2><h3 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h3><p>在手动安装正后一步记下默认的密码（如下图）。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-03%20%E4%B8%8B%E5%8D%888.34.15.png" alt=""></p><blockquote><p>即<strong>QeV.a&gt;zGa1m3</strong>为默认密码。</p></blockquote><p>在<em>偏好系统</em>中手动打开<em>mysql</em>应用。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-03%20%E4%B8%8B%E5%8D%888.34.36.png" alt=""></p><p>之后打开终端，为其配置。（命令行如下依次）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">` vi ~/bash_profile `</div></pre></td></tr></table></figure><p>进入按字母<em>i</em>进入编辑模式，输入：</p><p><code>export PATH=&quot;$PATH:/usr/local/mysql/bin&quot;</code></p><blockquote><p>在此可能有疑惑，为什么可以直接<code>mysql/bin</code>？因为在我们手动下载<br><em>mysql</em>之后系统已经自动的复制了一遍，并且将其名为<em>mysql</em>，如图在<em>/usr/local/</em>可找到。</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-03%20%E4%B8%8B%E5%8D%888.18.02.png" alt=""></p><hr><p>接着输入相关的命令…这时已经配置好了，按下<em>esc</em>健进入命令行模式，输入<code>：wq</code>,推出。之后为了快速见效输入<code>source ~/bash_profile</code></p><h3 id="启动过程"><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h3><p>输入命令行<code>mysql -uroot -p</code>,提示输入刚刚的默认密码，进入到了<em>mysql</em>的编译界面之后，我们修改默认密码，输入代码<code>set PASSWORD =PASSWORD(&#39;123456&#39;);</code></p><blockquote><p><strong>其中的<em>123456</em>为新的密码。</strong></p></blockquote><p>之后为测试是否已经修改成功，输入<code>exit();</code>推出界面，输入命令行<code>mysql -uroot -p</code>,提示输入刚刚的新密码，成功进入编译界面。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-03%20%E4%B8%8B%E5%8D%888.32.00.png" alt=""></p><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><p>可参考：<a href="https://www.jianshu.com/p/b02be6026a2a" target="_blank" rel="external">https://www.jianshu.com/p/b02be6026a2a</a></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p><strong>解决问题：ERROR 1045 (28000): Access denied for user ‘root’@’localhost’ (using password: YES)</strong></p><p>可参考：<a href="https://www.digitalocean.com/community/questions/setup-mysql-on-ubuntu-droplet-getting-error-error-1045-28000-access-denied-for-user-root-localhost-using-password-yes" target="_blank" rel="external">https://www.digitalocean.com/community/questions/setup-mysql-on-ubuntu-droplet-getting-error-error-1045-28000-access-denied-for-user-root-localhost-using-password-yes</a></p><p><strong>解决进程问题</strong></p><p>可参考：<a href="https://blog.csdn.net/liumaolincycle/article/details/51896592" target="_blank" rel="external">https://blog.csdn.net/liumaolincycle/article/details/51896592</a></p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>有时下载完之后也会出现上面的那个问题，我是通过重新启动电脑之后获得了解决。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> MySQL </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于解决python中UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xe8 in position 67986: ordinal not in range(128)的问题</title>
      <link href="/2018/03/28/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3python%E4%B8%ADUnicodeDecodeError-ascii-codec-can-t-decode-byte-0xe8-in-position-67986-ordinal-not-in-range-128-%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2018/03/28/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3python%E4%B8%ADUnicodeDecodeError-ascii-codec-can-t-decode-byte-0xe8-in-position-67986-ordinal-not-in-range-128-%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在学习爬虫的过程中，在运行编者的代码时出现了<em>UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe8 in position 67986: ordinal not in range(128)</em>的编码问题。</p><p>具体原因是因为程序默认的解析编码格式发生了冲突造成的，简单来说就是需要解析的内容与<em>API</em>程序默认的解析编码格式不同，所以才会出现如上的错误。</p><a id="more"></a><p>因为是打算用<em>python</em>解析<em>JS</em>文件，所以我就贴上我的解决方案了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ctx = node.compile(open(file, encoding=<span class="string">'utf-8'</span>).read())</div></pre></td></tr></table></figure><blockquote><p>加上自行规定的解码格式即可。</p></blockquote><p><strong>解决来源于GitHub论坛…</strong></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于homebrew下载出现&quot;Error/go/version missing for  gotools resource!&quot;错误的解决方案</title>
      <link href="/2018/03/28/%E5%85%B3%E4%BA%8Ehomebrew%E4%B8%8B%E8%BD%BD%E5%87%BA%E7%8E%B0Error:go:version%20missing%20for%20%20gotools%20resource!%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2018/03/28/%E5%85%B3%E4%BA%8Ehomebrew%E4%B8%8B%E8%BD%BD%E5%87%BA%E7%8E%B0Error:go:version%20missing%20for%20%20gotools%20resource!%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>最近用<em>homebrew</em>下载<em>mongodb</em>，发现出现了<em>Error: go: version missing for “gotools” resource!</em>的错误，试了几次都不行，最后在谷歌用英文搜索关键词在<em>GitHub</em>的一个论坛用相关的解决方案。</p><a id="more"></a><p><strong>使用命令行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git -C <span class="string">"<span class="variable">$(brew --repo)</span>"</span> fetch --tags</div></pre></td></tr></table></figure><p>之后再次输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew update --force</div></pre></td></tr></table></figure><p>最后再次用命令行<em>brew install mongodb</em>，发现已经能够正确成功下载了。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 数据库 </category>
          
          <category> Homebrew </category>
          
          <category> Mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Homebrew </tag>
            
            <tag> Mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构与算法：线性表</title>
      <link href="/2018/03/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%EF%BC%9A%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
      <url>/2018/03/26/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%EF%BC%9A%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<p>打算重新好好系统的学习数据结构了。这是开始。</p><p>因为概念已经是烂大街了，在此只记录下我用<em>java</em>或者是<em>python</em>实现相关功能的代码。</p><hr><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><h3 id="java实现"><a href="#java实现" class="headerlink" title="java实现"></a>java实现</h3><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机基础知识：认识计算机</title>
      <link href="/2018/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%9A%E8%AE%A4%E8%AF%86%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
      <url>/2018/03/26/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%9A%E8%AE%A4%E8%AF%86%E8%AE%A1%E7%AE%97%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>计算机发展到了如今这样的一个地步实在让人感兴趣…</p><p>于是看了一些书和文章，想了解了解一个计算机是如何跑起来的。</p><hr><a id="more"></a><h2 id="机器本质"><a href="#机器本质" class="headerlink" title="机器本质"></a>机器本质</h2><blockquote><p><strong>计算机的本质</strong></p></blockquote><ul><li>计算机的本质<strong>：（电脑）计算机 = 计算机器</strong></li></ul><p>没错，如今<strong>我们使用的计算机就是和我们小学时按的那个只会加减乘除计算器的本质毫无区别</strong>。使用计算机时，我们会先通过键盘或者是语音输入想要了解的信息，之后计算机会通过内部一系列的运算之后，输出相关的界面信息到我们的屏幕上。那我们可理解计算机就是一通过我们输入，然后自己默默运算完输出结果的机器。电脑电脑，正所谓脑子就是人类的<strong>计算机器</strong>，电脑不过是插上电源才能运行的计算机器。</p><p><img src="" alt=""></p><p>什么图画啊，文档内容等等均是先转化为相关的数字信息（如我们学过的二进制，十六进制等）后才在显示器上呈现出来的，所以在此可理解为什么还会有那么多各式各样的字符编码了吧。如中文编码常见的<em>GB2312</em>等。</p><blockquote><p><strong>计算机上的1与0</strong></p></blockquote><ul><li><strong>计算机是电子产品，其构造是由一些硬件组成。</strong></li></ul><p>再继续说说烂大街的绝大部分地球人都知道的事实：<strong>计算机只认识1和0</strong>。因为计算机是集成电路（IC）组成,运行起来接上电源之后需要传输数据了（即属于电子数字电路），而在数字电路中，二进制（binary）数是指用二进制记数系统，即以2为基数的记数系统表示的数字。这一系统中，通常用两个不同的符号0（代表零）和1（代表一）来表示。以2为基数代表系统是二进位制的。数字电子电路中，逻辑门的实现直接应用了二进制，因此现代的计算机和依赖计算机的设备里都用到二进制。每个数字称为一个位元（二进制位）或比特（Bit，Binary digit的缩写）。补充：<strong>比特是信息的最小单位， 字节是信息的基本单位。</strong></p><p>结合上面的说明，可知道数据都是在计算机中以1和0组成的，一是因为计算机本身的结构所致，二是因为这样可方便的转化为其他的数字类型（包括十进制之类的）。<strong>对于计算机来说，什么都是数字。只是数字的组成不同而已。</strong></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><p>维基百科：<a href="https://zh.wikipedia.org/wiki/二进制" target="_blank" rel="external">https://zh.wikipedia.org/wiki/二进制</a></p></li><li><p>书籍：《计算机是怎么跑起来的》 矢泽久雄 著</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 计算机基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下安装Redis以及其可视化客户端</title>
      <link href="/2018/03/22/Mac%E4%B8%8B%E5%AE%89%E8%A3%85Redis%E4%BB%A5%E5%8F%8A%E5%85%B6%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
      <url>/2018/03/22/Mac%E4%B8%8B%E5%AE%89%E8%A3%85Redis%E4%BB%A5%E5%8F%8A%E5%85%B6%E5%8F%AF%E8%A7%86%E5%8C%96%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<p>最近想要用<em>Nosql</em>结合做一些小项目，用的是<em>Mac</em>，看到网上的教程有点乱七八糟的了，就打算记录下来了。</p><p>关于这个数据库就不在此介绍了。</p><a id="more"></a><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><blockquote><p>来到官网页面下载：<a href="https://redis.io/download" target="_blank" rel="external">https://redis.io/download</a></p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-22%20%E4%B8%8B%E5%8D%889.35.10.png" alt=""></p><hr><p>下载好之后解压，并且要知道目录文件在哪。现在打开终端，用命令 <code>cd 文件目录地址</code>，如我的是 <code>cd /Users/junjieliu/Documents/编程文件/redis-4.0.8</code>，之后使用命令 <code>sudo make</code> 成功之后出现如下图1所示，之后再使用命令 <code>make test</code>,成功之后出现如图2所示。</p><ul><li>图1:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-22%20%E4%B8%8B%E5%8D%888.53.59.png" alt=""></p><ul><li>图2:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-22%20%E4%B8%8B%E5%8D%888.57.13.png" alt=""></p><p>之后，编译安装：在终端中输入命令：<code>sudo make install</code></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-22%20%E4%B8%8B%E5%8D%888.57.56.png" alt=""></p><p>启动Redis,输入命令<code>redis-server</code></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-22%20%E4%B8%8B%E5%8D%888.58.33.png" alt=""></p><blockquote><p>至此就安装成功了，以上命令有时可能会有出现错误的结果，多试试。</p></blockquote><h2 id="安装Redis-Desktop-Manager"><a href="#安装Redis-Desktop-Manager" class="headerlink" title="安装Redis Desktop Manager"></a>安装Redis Desktop Manager</h2><p>到此网站下载即可：<a href="https://sourceforge.net/projects/redis-desktop-manager.mirror/" target="_blank" rel="external">https://sourceforge.net/projects/redis-desktop-manager.mirror/</a></p><blockquote><p>当然可见我的云盘分享：<a href="https://pan.baidu.com/s/1Bvc7_tZ5yUnnwfnH2bDocg" target="_blank" rel="external">https://pan.baidu.com/s/1Bvc7_tZ5yUnnwfnH2bDocg</a></p></blockquote><p>下载完之后将软件移植系统<em>应用程序</em>一栏，打开：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-22%20%E4%B8%8B%E5%8D%889.10.11.png" alt=""></p><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>介绍好评高的一本电子书《Redis实战》：</p><p><a href="http://www.java1234.com/a/javabook/database/2017/0625/8356.html" target="_blank" rel="external">http://www.java1234.com/a/javabook/database/2017/0625/8356.html</a></p><blockquote><p>进入网站即有相关的资源。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Redis </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python/R数据分析可视化汽车使用燃料情况</title>
      <link href="/2018/03/21/%E7%94%A8python:R%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%8F%AF%E8%A7%86%E5%8C%96%E6%B1%BD%E8%BD%A6%E4%BD%BF%E7%94%A8%E7%87%83%E6%96%99%E6%83%85%E5%86%B5/"/>
      <url>/2018/03/21/%E7%94%A8python:R%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%8F%AF%E8%A7%86%E5%8C%96%E6%B1%BD%E8%BD%A6%E4%BD%BF%E7%94%A8%E7%87%83%E6%96%99%E6%83%85%E5%86%B5/</url>
      
        <content type="html"><![CDATA[<p>分析的是美国一个网站统计的多年汽车使用燃料情况的数据，需要从网上下载，在此利用好<em>python爬虫</em>大有裨益，可作为实战运行分析。</p><blockquote><p>此篇文章案例来源于：<img src="" alt=""></p><p>本书文章中用<em>R语言</em>实现的数据可视化，是从网上直接下的文件然后分析，我打算在此用<em>python</em>实现爬取相关文件，并且运用<em>python</em>进行可视化分析。</p></blockquote><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>进入主页，得到了下载文件的主链接：</p><p><img src="" alt=""></p><p>在此可见资源的下载地址：</p><p><img src="" alt=""></p><hr><blockquote><p>接下来就是运用爬虫知识实现此文件的下载了。</p></blockquote><h2 id="爬虫代码"><a href="#爬虫代码" class="headerlink" title="爬虫代码"></a>爬虫代码</h2><p>我们可有这样的思路：<strong>从主页出发 –&gt; 爬取到下载文件页面的链接 –&gt; 再从此爬取到下载地址链接 –&gt; 之后运用相关的函数下载至本目录即可。</strong>以下是实现过程。</p><pre><code class="python"><span class="string">'''</span><span class="string"></span><span class="string">    函数目标：</span><span class="string">    用python爬取相关的下载文件</span><span class="string"></span><span class="string">    编写时间：</span><span class="string">    2018-03-21</span><span class="string"></span><span class="string">'''</span><span class="keyword">import</span> requests<span class="keyword">import</span> re<span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup<span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve<span class="string">'''</span><span class="string">    first_url方法获取进入下载页面的地址</span><span class="string">    运用了正则表达式的匹配方法</span><span class="string">                                        '''</span><span class="function"><span class="keyword">def</span> <span class="title">first_url</span><span class="params">()</span>:</span>    url = <span class="string">'https://www.fueleconomy.gov/'</span>    <span class="comment"># 添加代理</span>    header = {<span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,            <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh'</span>,            <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,            <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,            <span class="string">'Host'</span>: <span class="string">'www.fueleconomy.gov'</span>,            <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36}'</span>            }    request = requests.get(url=url, headers=header)    <span class="comment"># 指定编码格式</span>    request.encoding = <span class="string">'utf-8'</span>    <span class="string">'''</span><span class="string">        发现不用指定re.S亦可以完成匹配，用了反而会报错...</span><span class="string">        注意每次匹配到的数据之后还有索引要记得标明</span><span class="string">    '''</span>    link = re.findall(<span class="string">r'&lt;a href="(.*?)"&gt;Developer Tools&lt;/a&gt;'</span>, request.text)[<span class="number">0</span>]    <span class="keyword">return</span> link<span class="string">'''</span><span class="string">    second_url方法是用来获取下载文件的地址</span><span class="string">    方法也是运用了正则表达式</span><span class="string">                                            '''</span><span class="function"><span class="keyword">def</span> <span class="title">second_url</span><span class="params">()</span>:</span>    <span class="comment"># 进入下载资源的页面</span>    se_url = <span class="string">'https://www.fueleconomy.gov'</span> + first_url()    <span class="comment"># 添加代理,基本上的代理信息没什么变化</span>    header_2 = {            <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,            <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, br'</span>,            <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh'</span>,            <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,            <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>,            <span class="string">'Host'</span>: <span class="string">'www.fueleconomy.gov'</span>,            <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36}'</span>            }    request_2 = requests.get(url=se_url, headers=header_2)    request_2.encoding = <span class="string">'utf-8'</span>    <span class="comment"># 匹配正则表达式</span>    link_2 = re.findall(<span class="string">r'&lt;a href="(.*?)"&gt;CSV&lt;/a&gt;'</span>, request_2.text)[<span class="number">0</span>]    <span class="keyword">return</span> link_2<span class="string">'''</span><span class="string">    已经得到了资源下载地址，在主函数中进行下载并且进行解压</span><span class="string">                                                    '''</span><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:    <span class="comment"># 获取下载文件的资源地址</span>    down_url = <span class="string">'https://www.fueleconomy.gov'</span> + second_url()    print(<span class="string">'数据采集完成...'</span>)    print(<span class="string">'开始下载文件...'</span>)    <span class="comment"># 文件名称是：vehicles.csv.zip，格式也是非常的重要！</span>    urlretrieve(url=down_url, filename=<span class="string">'vehicles.csv.zip'</span>)    print(<span class="string">'下载完成！可在本工程目录查收！'</span>)</code></pre><p>至此可在本目录下查看到下载好的压缩文件：</p><p><img src="" alt=""></p><blockquote><p>当然也可加上运用<em>python</em>解压这一部分的模块，有兴趣的朋友可自行学习运用。</p></blockquote><h2 id="代码可视化分析阶段"><a href="#代码可视化分析阶段" class="headerlink" title="代码可视化分析阶段"></a>代码可视化分析阶段</h2><p>在解压之后可先用<em>excel</em>打开来看看（会发现有<strong>39000+行</strong>数据），在此只需要知道其中的参数<code>year</code>与<code>com08</code>，前者为年份，后者为燃料的使用情况相关的数值。</p><p>可视化实现代码在下：</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这是一个平时做的小项目，适合新手入门。</p><blockquote><p>另外，以上代码中不懂的模块知识，我建议你利用好搜索引擎，查看相关的文档或者是找本书看看。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 数据分析 </category>
          
          <category> 数据可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 数据分析 </tag>
            
            <tag> 数据可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于anaconda2与anaconda3两个版本的共存问题</title>
      <link href="/2018/03/21/%E5%85%B3%E4%BA%8Eanaconda2%E4%B8%8Eanaconda3%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E5%85%B1%E5%AD%98%E9%97%AE%E9%A2%98/"/>
      <url>/2018/03/21/%E5%85%B3%E4%BA%8Eanaconda2%E4%B8%8Eanaconda3%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E5%85%B1%E5%AD%98%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>最近因为用<em>anaconda</em>的关系，下载的包导致了冲突，编译器总是识别不了，就把以前<em>Mac</em>上的<em>anaconda</em>都卸载了。打算重新来过一遍解决两者（即<em>anaconda2</em>与<em>anaconda3</em>）的共存问题。</p><blockquote><p>简单说明一下<em>anaconda3</em>对应<em>python3</em>，<em>anaconda2</em>对应<em>python2</em></p></blockquote><hr><a id="more"></a><p>马上开始吧。</p><p>先是在<a href="https://www.anaconda.com/download/#macos" target="_blank" rel="external">官网上</a>下载了两个版本，如下：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-21%20%E4%B8%8A%E5%8D%8811.25.39.png" alt=""></p><blockquote><p>一路确定，直到安装完成为止。<strong>不过要说明一下，安装应该分好顺序，最后安装好的即为系统默认的了（即当我们在终端输入命令：<code>python</code> 时会出现最后安装好的那个目录中的<em>python</em>版本，我是最后安装的anaconda3）。</strong>如下图所示：</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-21%20%E4%B8%8A%E5%8D%8811.29.20.png" alt=""></p><blockquote><p>Python 3.6.4 |Anaconda, Inc.| <strong>即为anaconda3为系统默认的了。</strong></p></blockquote><p>当我们再输入命令：<code>python2</code> 时与输入命令： <code>python3</code> 时，如下图所示均成为了系统默认的两个版本了。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-21%20%E4%B8%8A%E5%8D%8811.33.55.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-21%20%E4%B8%8A%E5%8D%8811.34.06.png" alt=""></p><blockquote><p>这样在下载包时就能方便多了，<strong>可以直接在终端输入命令：<code>pip install ..</code> 就可以达到anaconda3对应的python3版本的包下载问题了（经过测试，已通过！）。</strong>可能有朋友疑惑，<em>python3</em>不是对应着命令<em>pip3</em>吗，实际上经过我的发现，<em>anaconda</em>的<em>python2</em>与<em>python3</em>对应的都是命令<em>pip</em>。</p></blockquote><p>虽然解决了<em>anaconda3</em>下的<em>python3</em>的问题，<strong>那么我们必须记得我们的目标是：anaconda3与anaconda2的切换使用问题。不过遗憾的是没有找到解决方案。不过倒是有一个能在同一个版本内（即anaconda3/anaconda2）同时安装两个python版本（2/3）的方案。</strong></p><p>在<a href="https://conda.io/docs/user-guide/getting-started.html#managing-envs" target="_blank" rel="external">此官网教程中</a>说明了命令。</p><ul><li>详细的命令过程可参考此篇文章：<a href="https://foofish.net/compatible-py2-and-py3.html" target="_blank" rel="external">https://foofish.net/compatible-py2-and-py3.html</a></li></ul><blockquote><p>当然参考官网亦可。</p></blockquote><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>虽然在同一版本中解决了两个<em>python</em>版本的虚拟环境的问题（可在对应的目录中找到，并且此虚拟环境均可正常使用），但是我们的问题依旧没有得到解决（即anaconda3与anaconda2如何切换使用问题），我试想用指定目录的方法运行命令，但是一无所获。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-21%20%E4%B8%8B%E5%8D%8812.43.20.png" alt=""></p><blockquote><p>Anaconda2 includes Python 2.7 and Anaconda3 includes Python 3.6. However, it does not matter which one you download, because you can create new environments that include any version of Python packaged with conda.</p><p>官网的解释已经说明了，建立虚拟环境只是解决在同一个<em>anaconda</em>版本下使用不同版本的<em>python</em>而已。所以我们想的关于anaconda2与anaconda3两个版本的共存切换问题目前或许没有办法实现。</p></blockquote><hr><p><strong>已经知道了解决方案：那就是打开各个的客户端进行下载即可！！！太简单了！！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Anaconda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决python文件读取时的UnicodeDecodeError: &#39;ascii&#39; codec can&#39;t decode byte 0xd4 in position 904: ordinal not in range(128)问题</title>
      <link href="/2018/03/20/%E8%A7%A3%E5%86%B3python%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%97%B6%E7%9A%84UnicodeDecodeError-ascii-codec-can-t-decode-byte-0xd4-in-position-904-ordinal-not-in-range-128-%E9%97%AE%E9%A2%98/"/>
      <url>/2018/03/20/%E8%A7%A3%E5%86%B3python%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%97%B6%E7%9A%84UnicodeDecodeError-ascii-codec-can-t-decode-byte-0xd4-in-position-904-ordinal-not-in-range-128-%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>最近在处理一个<em>csv格式</em>的数据时，出现了<em>UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xd4 in<br>  position 904: ordinal not in range(128)</em>的错误告知。</p>  <a id="more"></a><p>查了一下，发现只要指定<strong><em>encoding=’iso-8859-1’</em></strong>即可解决此问题了。</p><p>代码演示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.....</div><div class="line"><span class="keyword">with</span> open(filename, encoding=<span class="string">'iso-8859-1'</span>) <span class="keyword">as</span> f:</div><div class="line">......</div></pre></td></tr></table></figure><hr><p>简单说明一下为何如此指定编码格式：</p><p><strong>ISO 8859-1，正式编号为ISO/IEC 8859-1:1998，又称Latin-1或“西欧语言”，是国际标准化组织内ISO/IEC 8859的第一个8位字符集。它以ASCII为基础，在空置的0xA0-0xFF的范围内，即解决0xA0-0xFF的范围内的编码错误问题，如上我们的0xd4在此范围之内。</strong></p><blockquote><p>详细可见维基百科地址：<a href="https://zh.wikipedia.org/wiki/ISO/IEC_8859-1" target="_blank" rel="external">https://zh.wikipedia.org/wiki/ISO/IEC_8859-1</a></p></blockquote><ul><li>参考：<a href="http://blog.csdn.net/programmer_wei/article/details/50994318" target="_blank" rel="external">http://blog.csdn.net/programmer_wei/article/details/50994318</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>理解多线程编程</title>
      <link href="/2018/03/20/%E7%90%86%E8%A7%A3%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/"/>
      <url>/2018/03/20/%E7%90%86%E8%A7%A3%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>最近想研究研究什么是<em>多线程编程</em>的问题。简单了解了一下之后发现原来我对其的理解都错了…把<em>面对对象编程</em>活生生的说成了<em>多线程</em>…唉，从前文中的”口误“就…</p><a id="more"></a><h2 id="多线程与多进程"><a href="#多线程与多进程" class="headerlink" title="多线程与多进程"></a>多线程与多进程</h2><p>简单理解这两个一下：</p><ul><li><p><strong>多进程：可先理解为一个应用程序，如我们的上网用的浏览器。</strong></p></li><li><p><strong>多线程：多线程就是我们浏览器中的各种小工具，如刷新功能与新开一个标签页的功能就是两个在其中的线程。</strong></p></li></ul><blockquote><p><strong>多个进程是分开的两个应用程序，就像QQ和微信两者就是毫不相干的两个应用程序。多线程就是两个应用程序之中的多个可同时运用的小工具。</strong></p></blockquote><h2 id="多线程编程"><a href="#多线程编程" class="headerlink" title="多线程编程"></a>多线程编程</h2><p>再来看看<em>多线程编程</em>。</p><p>平时我们写程序，会将整个代码构建出各种方法函数，各有各的实现意图，以便在主类当中直接调用，最终实现目标整体意愿。</p><blockquote><p><strong>而多线程编程就是可同时在主类中调用两个或者是多个实现意图不同的方法函数，并且一同被编译器/解释器运行出结果。就成了一个多线程的问题…多线程多线程，就是能将两个或者是多个不同的方法同时运行出结果。</strong>至于是编译器还是解释器得分是什么语言了。</p></blockquote><ul><li>可另外参考：</li></ul><ol><li><p><a href="https://wangdashuaihenshuai.github.io/2015/10/17/编程中的进程、线程、协程、同步、异步、回调/" target="_blank" rel="external">编程中的进程、线程、协程、同步、异步、回调</a></p></li><li><p><a href="https://www.jianshu.com/p/2c55ebec37fe" target="_blank" rel="external">同步编程 vs 异步编程</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python/R可视化GitHub上的java热门开源项目</title>
      <link href="/2018/03/19/%E7%94%A8python%E5%8F%AF%E8%A7%86%E5%8C%96GitHub%E4%B8%8A%E7%9A%84java%E7%83%AD%E9%97%A8%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/"/>
      <url>/2018/03/19/%E7%94%A8python%E5%8F%AF%E8%A7%86%E5%8C%96GitHub%E4%B8%8A%E7%9A%84java%E7%83%AD%E9%97%A8%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>直接开始这个小项目吧。</p><ul><li>网页地址：<a href="https://api.github.com/search/repositories?q=language:java&amp;sort=stars" target="_blank" rel="external">https://api.github.com/search/repositories?q=language:java&amp;sort=stars</a></li></ul><blockquote><p>在这个网页中有相关的目前比较热门的开源项目（以<em>star</em>的数目来衡量），打开发现这是典型的<em>json</em>格式啊。</p></blockquote><a id="more"></a><h2 id="简单分析"><a href="#简单分析" class="headerlink" title="简单分析"></a>简单分析</h2><p>经过抓包可发现：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-19%20%E4%B8%8B%E5%8D%889.31.32.png" alt=""></p><p>即：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-19%20%E4%B8%8B%E5%8D%889.29.37.png" alt=""></p><blockquote><p>换一换就可知道所有编程语言目前比较热门的开源项目了。</p></blockquote><h2 id="python代码实现"><a href="#python代码实现" class="headerlink" title="python代码实现"></a>python代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    函数目标：</span></div><div class="line"><span class="string">    将GitHub上的java热门的开源项目可视化</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    编写时间：</span></div><div class="line"><span class="string">    2018-3-19</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt</div><div class="line"><span class="keyword">import</span> pygal</div><div class="line"><span class="keyword">from</span> pygal.style <span class="keyword">import</span> LightColorizedStyle <span class="keyword">as</span> lcs, LightenStyle <span class="keyword">as</span> ls</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"><span class="comment">#添加代理配置</span></div><div class="line">    url = <span class="string">'https://api.github.com/search/repositories'</span></div><div class="line">    header = &#123;<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36'</span>,</div><div class="line">              <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">        </div><div class="line">    paramter = &#123;<span class="string">'q'</span>: <span class="string">'language:java'</span>,</div><div class="line">              <span class="string">'sort'</span>: <span class="string">'stars'</span>&#125;</div><div class="line">    re = requests.get(url=url, params=paramter, headers=header)</div><div class="line">    <span class="comment"># 将网页转化为python字典即用json()函数方法才可显示与网页内容一致！</span></div><div class="line">    re.encoding = <span class="string">'utf-8'</span></div><div class="line">    js_cont = re.json()</div><div class="line">    item = js_cont[<span class="string">'items'</span>]</div><div class="line">    star_count = []</div><div class="line">    names = []</div><div class="line">    full_names = []</div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> item:</div><div class="line">    star_count.append(each[<span class="string">'stargazers_count'</span>])</div><div class="line">            names.append(each[<span class="string">'name'</span>])</div><div class="line">            full_names.append(each[<span class="string">'full_name'</span>])</div><div class="line">    <span class="comment"># 添加高亮颜色</span></div><div class="line">    my_style = ls(<span class="string">'#333366'</span>, base_style=lcs)</div><div class="line">    </div><div class="line">    <span class="comment"># 添加相关的设置</span></div><div class="line">    my_config = pygal.Config()</div><div class="line">    my_config.label_font_size = <span class="number">28</span></div><div class="line">    </div><div class="line">    bar_chart = pygal.Bar(config=my_config, style=my_style, x_label_rotation=<span class="number">60</span>, show_legend=<span class="keyword">False</span>)</div><div class="line">    bar_chart.add(<span class="string">''</span>, star_count)</div><div class="line">    bar_chart.title = <span class="string">'Java  projects stars on Github'</span></div><div class="line">    bar_chart.x_labels = names</div><div class="line">    <span class="comment"># 保存至目录下的文件中</span></div><div class="line">    bar_chart.render_to_file(<span class="string">'Java stars in Github.svg'</span>)</div></pre></td></tr></table></figure><blockquote><p>之中不懂的可利用好搜索引擎。有一些爬虫的知识。</p></blockquote><p>运行得到：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-03%20%E4%B8%8B%E5%8D%888.36.33.png" alt=""></p><blockquote><p>简单说说用<em>python</em>可视化的感受，比较喜欢用<em>python</em>，用的比较多，意味发现<em>pygal</em>这个库做的图很漂亮。</p></blockquote><h2 id="R代码实现"><a href="#R代码实现" class="headerlink" title="R代码实现"></a>R代码实现</h2><ul><li>说明：因为<em>R</em>的爬虫没怎么看，先用可视化…日后有时间爬虫写上…</li></ul><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li>参考：《python入门与实践》【美】Eric Matthes著</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 数据分析 </category>
          
          <category> 数据可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Java </tag>
            
            <tag> 数据分析 </tag>
            
            <tag> 数据可视化 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机基础知识（三）：带宽单位换算与存储单位换算</title>
      <link href="/2018/03/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%B8%A6%E5%AE%BD%E5%8D%95%E4%BD%8D%E6%8D%A2%E7%AE%97%E4%B8%8E%E5%AD%98%E5%82%A8%E5%8D%95%E4%BD%8D%E6%8D%A2%E7%AE%97/"/>
      <url>/2018/03/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%B8%A6%E5%AE%BD%E5%8D%95%E4%BD%8D%E6%8D%A2%E7%AE%97%E4%B8%8E%E5%AD%98%E5%82%A8%E5%8D%95%E4%BD%8D%E6%8D%A2%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>位/比特（bit/b）：内存中最小的单位，二进制数序列中的一个0或一个1就是一比比特.</p><blockquote><p>1比特 = 一个二进制位，只有0和1两种状态<br>  1字节 = 8 比特</p></blockquote><p>1 Byte(B)＝8bit（位）<br>1KB＝1024Byte（字节）</p><a id="more"></a><ul><li>再来看看平时常见的下载参数：</li></ul><p><strong>Mbps：</strong>带宽单位，在 Mbps 单位中的“b”是指“Bit（位）</p><p><strong>MB/s：</strong>速度单位，其中的 B 是指“Byte（字节）</p><blockquote><p>其中1MB/s=8Mbps，下载工具一般以Bps计算，所以它们之间有8bit=1Byte的换算关系，一个字节，是由八位二进制位组成的，所以可解释一个200M的网，换算为字节，实际上仅仅极限速度能达到200/8=25M的速度。</p></blockquote><h2 id="存储单位的换算"><a href="#存储单位的换算" class="headerlink" title="存储单位的换算"></a>存储单位的换算</h2><p>计算机存储单位一般用bit、B、KB、MB、GB、TB、PB、EB、ZB、YB、BB、NB、DB……来表示，它们之间的关系是：<br>位 bit (比特)(Binary Digits)：存放一位二进制数，即 0 或 1，最小的存储单位。</p><p><strong>换算：</strong></p><p>字节byte：8个二进制位为一个字节(B)，最常用的单位。</p><p>1 Byte（B） = 8 bit</p><p>1 Kilo Byte（KB） = 1024B</p><p>1 Mega Byte（MB） = 1024 KB</p><p>1 Giga Byte （GB）= 1024 MB</p><p>1 Tera Byte（TB）= 1024 GB</p><p>1 Peta Byte（PB） = 1024 TB</p><p>1 Exa Byte（EB） = 1024 PB</p><p>1 Zetta Byte（ZB） = 1024 EB</p><p>1Yotta Byte（YB）= 1024 ZB</p><p>1 Bronto Byte（BB） = 1024 YB</p><p>1Nona Byte（NB）=1024 BB</p><p>1 Dogga Byte（DB）=1024 NB</p><p>1 Corydon Byte（CB）=1024DB</p><p>1 Xero Byte （XB）=1024CB</p><blockquote><p>进制单位全称及译音：</p><p>yotta，[尧]它， Y. 10^24，</p><p>zetta，[泽]它， Z. 10^21，</p><p>exa，[艾]可萨， E. 10^18，</p><p>peta，[拍]它， P. 10^15，</p><p>tera，[太]拉， T. 10^12，</p><p>giga，[吉]咖， G. 10^9，</p><p>mega，[兆]，M. 10^6</p></blockquote><ul><li><strong>b(bit)与B的认识</strong></li></ul><p>字节(B)是电脑中表示信息含义的最小单位，通常情况下一个ACSII码就是一个字节的空间来存放。而事实上电脑中还有比字节更小的单位，因为一个字节是由八个二进制位组成的，换一句话说，每个二进制位所占的空间才是电脑中最小的单位，我们把它称为位，也称比特（bit）。一个字节等于八位。人们之所以把字节称为电脑中表示信息含义的最小单位，是因为一位并不能表示我们现实生活中的一个相对完整的信息。</p><ul><li><strong>计算机储存单位的进率是1024而不是1000？</strong></li></ul><p>目前计算机都是二进制的，让它们计算单位，只有2的整数幂时才能非常方便计算机计算，因为电脑内部的电路工作有高电平和低电平两种状态.所以就用二进制来表示信号，(控制信号和数据)，以便计算机识别。而人习惯于使用10进制，所以存储器厂商们才用1000作进率。这样导致的后果就是实际容量要比标称容量少，不过这是合法的。1024是2的10次方，因为如果取大了，不接近10的整数次方，不方便人们计算；取小了，进率太低，单位要更多才能满足需求，所以取2的10次方正好。<br>计算实例：标称100GB的硬盘，其实际容量为100×1000×1000×1000字节/1024×1024×1024≈93.1GB<br>可见产品容量缩水只要满足计算的实际容量结果（上下误差应该在10%内）。</p><ul><li>参考：</li></ul><p><a href="https://baike.baidu.com/item/存储单位/3943356?fromtitle=计算机存储单位&amp;fromid=795305" target="_blank" rel="external">https://baike.baidu.com/item/存储单位/3943356?fromtitle=计算机存储单位&amp;fromid=795305</a></p><p><a href="https://www.jianshu.com/p/2b57116c27de" target="_blank" rel="external">https://www.jianshu.com/p/2b57116c27de</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 计算机基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机基础知识（二）：单核处理器、多核处理器、多处理器与多线程编程</title>
      <link href="/2018/03/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%8D%95%E6%A0%B8%E5%A4%84%E7%90%86%E5%99%A8%E3%80%81%E5%A4%9A%E6%A0%B8%E5%A4%84%E7%90%86%E5%99%A8%E3%80%81%E5%A4%9A%E5%A4%84%E7%90%86%E5%99%A8%E4%B8%8E%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/"/>
      <url>/2018/03/15/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E5%8D%95%E6%A0%B8%E5%A4%84%E7%90%86%E5%99%A8%E3%80%81%E5%A4%9A%E6%A0%B8%E5%A4%84%E7%90%86%E5%99%A8%E3%80%81%E5%A4%9A%E5%A4%84%E7%90%86%E5%99%A8%E4%B8%8E%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<blockquote><p>转载自：<a href="http://blog.csdn.net/zolalad/article/details/28393209" target="_blank" rel="external">http://blog.csdn.net/zolalad/article/details/28393209</a></p></blockquote><p><strong>一．进程、线程、单核处理器</strong></p><p>进程和线程都是操作系统的概念。进程是应用程序的执行实例，每个进程是由私有的虚拟地址空间、代码、数据和其它各种系统资源组成，即进程是操作系统进行资源分配的最小单元。进程在运行过程中创建的资源随着进程的终止而被销毁，所使用的系统资源在进程终止时被释放或关闭。</p><a id="more"></a><p>线程是进程内部的一个执行单元。系统创建好进程后，实际上就启动执行了该进程的主执行线程，主执行线程以函数地址形式，比如说main或WinMain函数，将程序的启动点提供给Windows系统。主执行线程终止了，进程也就随之终止。</p><p>每一个进程至少有一个主执行线程，它无需由用户去主动创建，是由系统自动创建的。用户根据需要在应用程序中创建其它线程，多个线程并发地运行于同一个进程中。一个进程中的所有线程都在该进程的虚拟地址空间中，共同使用这些虚拟地址空间、全局变量和系统资源，所以线程间的通讯非常方便，多线程技术的应用也较为广泛。</p><p>多线程可以实现并行处理，避免了某项任务长时间占用CPU时间。要说明的一点是，目前大多数的操作系统教材中的单处理器都是指的单核处理器。对于单核单处理器（CPU）的，为了运行所有这些线程，操作系统为每个独立线程安排一些CPU时间，操作系统以轮换方式向线程提供时间片，这就给人一种假象，好象这些线程都在同时运行。由此可见，如果两个非常活跃的线程为了抢夺对CPU的控制权，在线程切换时会消耗很多的CPU资源，反而会降低系统的性能。</p><p>最开始，线程只是用于分配单个处理器的处理时间的一种工具。但假如操作系统本身支持多个处理器，那么每个线程都可分配给一个不同的处理器，真正进入“并行运算”状态。从程序设计语言的角度看，多线程操作最有价值的特性之一就是程序员不必关心到底使用了多少个处理器，程序员只需将程序编写成多线程模式即可。程序在逻辑意义上被分割为数个线程；假如机器本身安装了多个处理器，那么程序会运行得更快，毋需作出任何特殊的调校。根据前面的论述，大家可能感觉线程处理非常简单。但必须注意一个问题：共享资源！如果有多个线程同时运行，而且它们试图访问相同的资源，就会遇到一个问题。举个例子来说，两个线程不能将信息同时发送给一台打印机。为解决这个问题，对那些可共享的资源来说（比如打印机），它们在使用期间必须进入锁定状态。所以一个线程可将资源锁定，在完成了它的任务后，再解开（释放）这个锁，使其他线程可以接着使用同样的资源。</p><p><strong>多线程是为了同步完成多项任务，不是为了提高运行效率，而是为了提高资源使用效率来提高系统的效率。线程是在同一时间需要完成多项任务的时候实现的。</strong></p><p>最简单的比喻多线程就像火车的每一节车厢，而进程则是火车。车厢离开火车是无法跑动的，同理火车也不可能只有一节车厢。多线程的出现就是为了提高效率。同时它的出现也带来了一些问题。</p><p><strong>注</strong>：单核处理器并不是一个长久以来存在的概念，在近年来多核心处理器逐步普及之后，单核心的处理器为了与双核和四核对应而提出。顾名思义处理器只有一个逻辑核心。</p><p><strong>二、多核处理器和多处理器的区别</strong></p><p>多核是指一个CPU有多个核心处理器，处理器之间通过CPU内部总线进行通讯。而多CPU是指简单的多个CPU工作在同一个系统上，多个CPU之间的通讯是通过主板上的总线进行的。从以上原理可知，N个核的CPU，要比N个CPU在一起的工作效率要高（单核性能一致的情况下）。</p><p><strong>三、 处理器结构对并发程序的影响</strong></p><p>对称多处理器是最主要的多核处理器架构。在这种架构中所有的CPU共享一条系统总线（BUS）来连接主存。而每一个核又有自己的一级缓存，相对于BUS对称分布[2]，如下图：</p><p><img src="http://smartjpa.com/20140509162415500.jpeg" alt=""></p><p>这种架构在并发程序设计中，大致会引来两个问题，一个是内存可见性，一个是Cache一致性流量。内存可见性属于并发安全的问题，Cache一致性流量引起的是性能上的问题。</p><p><strong>内存可见性</strong>：内存可见性在单处理器或单线程情况下是不会发生的。在一个单线程环境中，一个变量选写入值，然后在没有干涉的情况下读取这个变量，得到的值应该是修改过的值。但是在读和写不在同一个线程中的时候，情况却是不可以预料的。Core1和Core2可能会同时把主存中某个位置的值Load到自己的一级缓存中，而Core1修改了自己一级缓存中的值后，却不更新主存中的值，这样对于Core2来讲，永远看不到Core1对值的修改。在Java程序设计中，用锁，关键字volatile，CAS原子操作可以保证内存可见。</p><p><strong>Cache一致性问题</strong>：指的是在SMP结构中，Core1和Core2同时下载了主存中的值到自己的一级缓存中，Core1修改了值后，会通过总线让Core2中的值失效，Core2发现自己存的值失效后，会再通过总线从主存中得到新值。总线的通信能力是固定的，通过总线使各CPU的一级缓存值数据同步的流量过大，那么总线就会成瓶颈。这种影响属于性能上的影响，减小同步竞争就能减少一致性流量。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 计算机基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python3爬取QQ音乐列表音乐</title>
      <link href="/2018/03/14/%E7%94%A8python3%E7%88%AC%E5%8F%96QQ%E9%9F%B3%E4%B9%90%E5%88%97%E8%A1%A8%E9%9F%B3%E4%B9%90/"/>
      <url>/2018/03/14/%E7%94%A8python3%E7%88%AC%E5%8F%96QQ%E9%9F%B3%E4%B9%90%E5%88%97%E8%A1%A8%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<p>最近想爬取一些音乐来实战一下，选择了<em>qq音乐</em>。</p><p><em>qq音乐</em>明显的就是一个动态网页，所以需要抓包了。</p><blockquote><p>不懂的关键词可利用好搜索引擎。</p></blockquote><a id="more"></a><h2 id="分析过程"><a href="#分析过程" class="headerlink" title="分析过程"></a>分析过程</h2><p>在此就说说分析的大致过程吧。</p><p>先看看主页：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8A%E5%8D%8811.08.29.png" alt=""></p><p>我们随便点开一个主题列表：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8A%E5%8D%8811.09.44.png" alt=""></p><p>因为是动态网页，所以就在这里抓包吧，因为<em>qq音乐</em>是动态网页，需要相关的参数信息才能得到想要的音乐地址，随便以播放一首歌曲为例，如下图1中的歌曲<em>ID</em>，点进去这个看看，即点击播放按钮，发现来到了播放页面，打开我用的<em>Chrome</em>中的开发者工具，里面有我们想要的音乐地址（如下图2所示），图3展示得到列表歌曲的所有信息，需要编程清洗之后才能得到我们想要，在此会在下面的代码中标明。</p><ul><li>图1:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8A%E5%8D%8811.37.52.png" alt=""></p><ul><li>图2:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8A%E5%8D%8811.41.18.png" alt=""></p><ul><li>图3:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8A%E5%8D%8811.51.03.png" alt=""></p><p>其中的<em>URL</em>地址，代码中会用到：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8B%E5%8D%8812.48.57.png" alt=""></p><blockquote><p>现在我们可能就会有思路出现了：抓包爬取列表的所有歌曲的<em>ID号</em>以及歌曲信息 <strong>–&gt;</strong> 整合到以<em>ID</em>为基的<em>html</em>地址 <strong>–&gt;</strong> 到播放页面利用<em>beautiful模块</em>爬取相关的音乐地址即可！so easy~</p></blockquote><p><strong>但经过我的测试说明，爬取播放页面的<em>html</em>信息是没有相关的音乐地址的，所以在得到歌曲<em>ID</em>信息，整合到以<em>ID</em>为基的<em>html</em>地址之后，我们还需要对播放页面进行抓包。下面说说如何在播放页面抓包。</strong></p><p>先播放一首歌曲，再进行抓包，发现了这些信息（如下图1），再结合上面的音乐地址分析一下，发现了<em>vkey</em>信息的存在，即每一首歌的<em>vkey</em>信息是不同的，并且经过测试即便是同一个<em>ID</em>，<em>vkey</em>也是一直不断自动变换着的，不过在测试之后可得出结论：<strong>只要得到<em>vkey</em>信息，再整合上面的音乐地址就能抓到音乐信息，并且经过代码编译之后下载下来。</strong></p><blockquote><p>特别说明一下，<strong>下载歌曲的地址以及我们抓包时的<em>URL</em>之中，仅仅有如<em>vkey</em>的不同，或者是一些<em>ID</em>的不同，其他的参数是相同的！</strong>所以我们才能仅仅抓到<em>vkey</em>信息就能方便的下载歌曲，就是这么个意思。不理解的朋友可细心观察一下。</p></blockquote><ul><li>图1:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8A%E5%8D%8811.55.11.png" alt=""></p><ul><li>图2:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8A%E5%8D%8811.58.13.png" alt=""></p><p>其中的<em>URL</em>地址：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8B%E5%8D%8812.49.29.png" alt=""></p><hr><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">   函数目标：</span></div><div class="line"><span class="string">   爬取QQ音乐列表音乐</span></div><div class="line"><span class="string">   </span></div><div class="line"><span class="string">   编写时间：</span></div><div class="line"><span class="string">   2018-3-15</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> os </div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">import</span> json </div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">   </div><div class="line">    <span class="comment"># 建立目录用于装爬取的音乐</span></div><div class="line">    <span class="keyword">if</span> <span class="string">'QQ音乐列表音乐'</span> <span class="keyword">not</span> <span class="keyword">in</span> os.listdir():</div><div class="line">        os.makedirs(<span class="string">'QQ音乐列表音乐'</span>)</div><div class="line">    </div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">        从URL中添加代理记忆必要的相关的参数以获取歌曲的ID以及歌曲名</span></div><div class="line"><span class="string">                                                            '''</span></div><div class="line">    playlist_url = <span class="string">'https://c.y.qq.com/qzone/fcg-bin/fcg_ucc_getcdinfo_byids_cp.fcg'</span></div><div class="line">    <span class="comment"># 添加页面中的代理信息</span></div><div class="line">    header = &#123;<span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'</span>,</div><div class="line">            <span class="string">'cookie'</span>:<span class="string">'tvfe_boss_uuid=1770396a4ed2d111; pgv_info=ssid=s4189101616; pgv_pvid=7344469728; uin=; pgv_pvi=8737627136; pgv_si=s9378960384; _tucao_userinfo=ZU1hSHhlWVNPSnRoNWgwTjMzc2c4OVYzYjBuTkNjcDNHNjcyVkkzWm9WUkJZMWhxWDJ5SmpTSURFWDhVTk9TYkczU3JWc09EeEsrMEVnQ2RpK2FVNWh4M0x0Y21aOG5Vcms5MW9odmt6ZXNxRWlmeE9PZzM0SlQ1YmVuM0xhRVpUaWh5d2REV2FZcHdQdWdNL0daWE9rTTM0MlFjc1VoaHhNVkh4bkNqbnBOMDN2MG1sOEkxc0dYNFZRa24rd0RY--FeceGG8ErqgRGZz7WWwpsg%3D%3D; _tucao_session=WUVSc2RVVk95Y0ViU2NoNndsWmVlbzZoSG1WaFdpcEk4Q1M5bXZSTG9qanV3OEpuNVNQT3dBc0tBRERUY1NCRDZJek14Y2xYeFdmMWhiaWdkZ282UjdPdXVyT1ZYQnpCeG9BcklQUFBEMU5LQ3F3ajdmd3VWRmZ5QTJoN1ViS1krcEx0aUdUb3plckVNVGc3K0t2Z3pUeFJDcFZMNnU3dEpLUXZ5Zyt4dUpJdU5Hb3ZwZUhpTHM0OEhNQk0vcHJKN2tEOXVZay95WkFpZlFuSVBQZDhoSzlMVUMrVDQxN0llRzJuNkVWUGdTVjdyaVl2WVdscFlyVDJPald4MG9BWA%3D%3D--dDBBK5gXjLaGccOBzx4EBA%3D%3D; ts_refer=www.google.com/; ts_uid=3146042580; qqmusic_fromtag=66; yq_playdata=s; yqq_stat=0; yplayer_open=1; yq_index=0; yq_playschange=0; player_exist=1'</span>,</div><div class="line">            <span class="string">'referer'</span>:<span class="string">'https://y.qq.com/n/yqq/playlist/3766176211.html'</span>&#125;</div><div class="line">    </div><div class="line">    <span class="comment"># 添加参数信息,有些是非必须的，待研究，有兴趣的可以自己测试</span></div><div class="line">    paramter = &#123;</div><div class="line">                <span class="string">'type'</span>:<span class="string">'1'</span>,</div><div class="line">                <span class="string">'json'</span>:<span class="string">'1'</span>,</div><div class="line">                <span class="string">'utf8'</span>:<span class="string">'1'</span>,</div><div class="line">                <span class="string">'onlysong'</span>:<span class="string">'0'</span>,</div><div class="line">                <span class="string">'disstid'</span>:<span class="string">'3766176211'</span>,</div><div class="line">                <span class="string">'format'</span>:<span class="string">'jsonp'</span>,</div><div class="line">                <span class="string">'g_tk'</span>:<span class="string">'5381'</span>,  <span class="comment"># 非必须</span></div><div class="line">                <span class="string">'jsonpCallback'</span>:<span class="string">'playlistinfoCallback'</span>,  <span class="comment"># 值可更改</span></div><div class="line">                <span class="string">'loginUin'</span>:<span class="string">'0'</span>,</div><div class="line">                <span class="string">'hostUin'</span>:<span class="string">'0'</span>,</div><div class="line">                <span class="string">'format'</span>:<span class="string">'jsonp'</span>,</div><div class="line">                <span class="string">"inCharset"</span>:<span class="string">'utf8'</span>,</div><div class="line">                <span class="string">'outCharset'</span>:<span class="string">'utf-8'</span>,</div><div class="line">                <span class="string">'notice'</span>:<span class="string">'0'</span>,</div><div class="line">                <span class="string">'platform'</span>:<span class="string">'yqq'</span>,</div><div class="line">                <span class="string">'needNewCode'</span>:<span class="string">'0'</span>,</div><div class="line">                &#125;</div><div class="line">    </div><div class="line">    playlist_re = requests.get(url=playlist_url, params=paramter, headers=header)</div><div class="line">    <span class="comment"># 指定编码格式</span></div><div class="line">    playlist_re.encoding = <span class="string">'utf-8'</span></div><div class="line">    <span class="comment"># 改变为python可识别的json格式,进行必要的数据清洗,去掉前面的'jsonpCallback'部分</span></div><div class="line">    playlist_info = json.loads(playlist_re.text.lstrip(<span class="string">'playlistinfoCallback('</span>).rstrip(<span class="string">')'</span>))</div><div class="line">    <span class="comment"># 指定整体索引</span></div><div class="line">    playlist_info1 = playlist_info[<span class="string">'cdlist'</span>][<span class="number">0</span>]</div><div class="line">    </div><div class="line">    <span class="comment"># 先存储歌手的姓名,观察可知，一共有19个索引,因为歌曲本身仅仅有20首，取前20个歌手名</span></div><div class="line">    singer_name = []</div><div class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">17</span>):</div><div class="line">        singer_eainfo = playlist_info1[<span class="string">'songlist'</span>][num]</div><div class="line">        <span class="keyword">for</span> each_info <span class="keyword">in</span> singer_eainfo[<span class="string">'singer'</span>]:</div><div class="line">            singer_name.append(each_info[<span class="string">'name'</span>])</div><div class="line">    </div><div class="line">    num = <span class="number">0</span></div><div class="line">    <span class="comment"># 在循环体系中进行下一步的编写</span></div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> playlist_info1[<span class="string">'songlist'</span>]:</div><div class="line">        </div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">            在获取歌曲vkey的主URL传入相关的参数得到相关的数据之后进行挖掘，得到vkey信息</span></div><div class="line"><span class="string">            其中的参数有些是不必要的，可自由修改，有些是必要的</span></div><div class="line"><span class="string">                                                               '''</span></div><div class="line">        </div><div class="line">        key_url = <span class="string">'https://c.y.qq.com/base/fcgi-bin/fcg_music_express_mobile3.fcg'</span></div><div class="line">        <span class="comment"># 传入相关的代理以及参数</span></div><div class="line">        header_1 = &#123;<span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'</span>,</div><div class="line">                  <span class="string">'referer'</span>:<span class="string">'https://y.qq.com/portal/player.html'</span>,</div><div class="line">                  <span class="string">'cookie'</span>:<span class="string">'tvfe_boss_uuid=1770396a4ed2d111; pgv_info=ssid=s4189101616; pgv_pvid=7344469728; uin=; pgv_pvi=8737627136; pgv_si=s9378960384; _tucao_userinfo=ZU1hSHhlWVNPSnRoNWgwTjMzc2c4OVYzYjBuTkNjcDNHNjcyVkkzWm9WUkJZMWhxWDJ5SmpTSURFWDhVTk9TYkczU3JWc09EeEsrMEVnQ2RpK2FVNWh4M0x0Y21aOG5Vcms5MW9odmt6ZXNxRWlmeE9PZzM0SlQ1YmVuM0xhRVpUaWh5d2REV2FZcHdQdWdNL0daWE9rTTM0MlFjc1VoaHhNVkh4bkNqbnBOMDN2MG1sOEkxc0dYNFZRa24rd0RY--FeceGG8ErqgRGZz7WWwpsg%3D%3D; _tucao_session=WUVSc2RVVk95Y0ViU2NoNndsWmVlbzZoSG1WaFdpcEk4Q1M5bXZSTG9qanV3OEpuNVNQT3dBc0tBRERUY1NCRDZJek14Y2xYeFdmMWhiaWdkZ282UjdPdXVyT1ZYQnpCeG9BcklQUFBEMU5LQ3F3ajdmd3VWRmZ5QTJoN1ViS1krcEx0aUdUb3plckVNVGc3K0t2Z3pUeFJDcFZMNnU3dEpLUXZ5Zyt4dUpJdU5Hb3ZwZUhpTHM0OEhNQk0vcHJKN2tEOXVZay95WkFpZlFuSVBQZDhoSzlMVUMrVDQxN0llRzJuNkVWUGdTVjdyaVl2WVdscFlyVDJPald4MG9BWA%3D%3D--dDBBK5gXjLaGccOBzx4EBA%3D%3D; ts_refer=www.google.com/; ts_uid=3146042580; qqmusic_fromtag=66; yq_playdata=s; yqq_stat=0; yq_index=0; yq_playschange=0; player_exist=1; ts_last=y.qq.com/n/yqq/playlist/3766176211.html; yplayer_open=1'</span>&#125;    </div><div class="line">        </div><div class="line">        paramter_1 = &#123;</div><div class="line">                    <span class="string">'g_tk'</span>:<span class="string">'5381'</span>,  <span class="comment"># 非必须</span></div><div class="line">                    <span class="string">'jsonpCallback'</span>:<span class="string">'MusicJsonCallback'</span>,  <span class="comment"># 非必须，可更改</span></div><div class="line">                    <span class="string">"loginUin"</span>:<span class="string">'0'</span>,</div><div class="line">                    <span class="string">'hostUin'</span>:<span class="string">'0'</span>,</div><div class="line">                    <span class="string">'format'</span>:<span class="string">'json'</span>,</div><div class="line">                    <span class="string">'inCharset'</span>:<span class="string">'utf8'</span>,</div><div class="line">                    <span class="string">'outCharset'</span>:<span class="string">'utf-8'</span>,</div><div class="line">                    <span class="string">'notice'</span>:<span class="string">'0'</span>,</div><div class="line">                    <span class="string">'platform'</span>:<span class="string">"yqq"</span>,</div><div class="line">                    <span class="string">'needNewCode'</span>:<span class="string">'0'</span>,</div><div class="line">                    <span class="string">'cid'</span>:<span class="string">'205361747'</span>,  <span class="comment"># 一致必须</span></div><div class="line">                    <span class="string">'callback'</span>:<span class="string">'MusicJsonCallback'</span>,  <span class="comment"># 非必须，可更改</span></div><div class="line">                    <span class="string">'uin'</span>:<span class="string">'0'</span>,</div><div class="line">                    <span class="comment"># 传入获取的信息</span></div><div class="line">                    <span class="string">'songmid'</span>:each[<span class="string">'songmid'</span>],</div><div class="line">                    <span class="string">'filename'</span>:<span class="string">'C400'</span> + each[<span class="string">'songmid'</span>] + <span class="string">'.m4a'</span>,</div><div class="line">                    <span class="string">'guid'</span>:<span class="string">'7344469728'</span>   </div><div class="line">                    &#125;</div><div class="line">        </div><div class="line">        <span class="comment"># 解析得到含有vkey的数据信息，然后进行清洗得到想要的信息</span></div><div class="line">        key_re = requests.get(url=key_url, params=paramter_1, headers=header_1)</div><div class="line">        <span class="comment"># 指定编码格式</span></div><div class="line">        key_re.encoding = <span class="string">'utf-8'</span></div><div class="line">        <span class="comment"># 转换为python的json格式，进行简单的清洗</span></div><div class="line">        key_info = json.loads(key_re.text.lstrip(<span class="string">'MusicJsonCallback('</span>).rstrip(<span class="string">')'</span>))</div><div class="line">        <span class="comment"># 进一步的清洗</span></div><div class="line">        data_info = key_info[<span class="string">'data'</span>]</div><div class="line">        items_info = data_info[<span class="string">'items'</span>][<span class="number">0</span>]</div><div class="line">        </div><div class="line">        print(<span class="string">'数据采集完成，开始下载任务...'</span>)</div><div class="line">        <span class="comment"># 接下来就是可以下载了</span></div><div class="line">        urlretrieve(url=<span class="string">'http://dl.stream.qqmusic.qq.com/C4000041FwTv0Ai3Ku.m4a?vkey='</span> + items_info[<span class="string">'vkey'</span>] + <span class="string">'&amp;guid=7344469728&amp;uin=0&amp;fromtag=66.mp3'</span>, filename=<span class="string">'QQ音乐列表音乐/'</span> + singer_name[num] + <span class="string">'-'</span> + each[<span class="string">'songname'</span>] + <span class="string">'.mp3'</span>)</div><div class="line">        </div><div class="line">        print(<span class="string">'正在下载:'</span> + singer_name[num] + <span class="string">'的'</span> + each[<span class="string">'songname'</span>] + <span class="string">'!'</span>)</div><div class="line">        print(<span class="string">'下载中....'</span>)</div><div class="line">        print(<span class="string">'下载此歌曲完成！'</span>)</div><div class="line">        <span class="comment"># 跳传到下一个歌手名</span></div><div class="line">        num = num + <span class="number">1</span></div><div class="line">        time.sleep(<span class="number">1</span>)</div><div class="line">        </div><div class="line">    print(<span class="string">'全部下载完成，请在本过程目录下查收！'</span>)</div></pre></td></tr></table></figure><blockquote><p><strong>在使用urlretrieve函数时，其中的url参数输入时应当加上格式，如下载视频时加上.mp4,下载音乐时加上.mp3,否则会易出现HTTP 403 错误 – 禁止访问 (Forbidden)</strong></p></blockquote><ul><li>链接：<a href="http://www.checkupdown.com/status/E403_zh.html" target="_blank" rel="external">认识HTTP 403 错误 – 禁止访问 (Forbidden)</a></li></ul><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>运行：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8B%E5%8D%884.08.01.png" alt=""></p><p>到目录查看：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-15%20%E4%B8%8B%E5%8D%884.09.17.png" alt=""></p><blockquote><p>一切还算是顺利。前段时间想爬取腾讯视频，研究了挺久，没有成功，还需要学习，腾讯的资源都在腾讯云上，我想方式都差不多。</p></blockquote><ul><li>参考：<a href="http://blog.csdn.net/lht_okk/article/details/77206510" target="_blank" rel="external">http://blog.csdn.net/lht_okk/article/details/77206510</a></li></ul><h2 id="后续说明"><a href="#后续说明" class="headerlink" title="后续说明"></a>后续说明</h2><p><strong>经过后来的测试，本代码爬取的思路还是正确的，但是爬取的信息流只能是同一个了…即便是不同的ID…</strong></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用python3爬取新加坡联合早报新闻小视频</title>
      <link href="/2018/03/14/%E7%94%A8python3%E7%88%AC%E5%8F%96%E6%96%B0%E5%8A%A0%E5%9D%A1%E8%81%94%E5%90%88%E6%97%A9%E6%8A%A5%E6%96%B0%E9%97%BB%E5%B0%8F%E8%A7%86%E9%A2%91/"/>
      <url>/2018/03/14/%E7%94%A8python3%E7%88%AC%E5%8F%96%E6%96%B0%E5%8A%A0%E5%9D%A1%E8%81%94%E5%90%88%E6%97%A9%E6%8A%A5%E6%96%B0%E9%97%BB%E5%B0%8F%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<p>位于新加坡的<a href="http://www.zaobao.com" target="_blank" rel="external">联合早报</a>是我几乎每天都会看的新闻网址，标题清晰明了，思路严谨踏实，是个好的新闻网站，值得推荐。不过却是被墙了…</p><a id="more"></a><p>今天看了这一篇文章：<a href="http://www.zaobao.com/realtime/china/story20180313-842407" target="_blank" rel="external">女记者提问冗长 人民大会堂部长通道出现“飙戏”一幕</a></p><blockquote><p>非常有意思，想收藏其中的视频，于是想到了用<em>python</em>爬取好了。</p></blockquote><p>这个新闻网站明显是一个动态网站啊，两种方式：</p><ul><li>第一种：通过抓包，如下可得知相关的<em>video</em>信息</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-14%20%E4%B8%8B%E5%8D%887.03.30.png" alt=""></p><ul><li>第二种：网站自带的连接</li></ul><p>如下操作，点击视频中<em>share</em>，可发现资源地址</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-14%20%E4%B8%8B%E5%8D%887.03.57.png" alt=""></p><blockquote><p>右上角的<em>share</em>。</p></blockquote><p>其中有地址信息。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-14%20%E4%B8%8B%E5%8D%887.04.10.png" alt=""></p><p>在获取的地址前加上<em>http:</em>简单测试一下:</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-14%20%E4%B8%8B%E5%8D%887.07.10.png" alt=""></p><blockquote><p>是正确的，网站真的很贴心呢～</p></blockquote><p>以刚刚的地址输入爬取下来的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">print(<span class="string">'开始下载...'</span>)</div><div class="line">    urlretrieve(url=<span class="string">'http://players.brightcove.net/4802324430001/H1dr7zTWz_default/index.html?videoId=5750255765001.mp4'</span>, filename=<span class="string">'两会小视频.mp4'</span>)</div><div class="line">    print(<span class="string">'下载完成！'</span>)</div></pre></td></tr></table></figure><p><strong>结果：发现可在网上播放的视频下载之后却不能播放…占用的内存才几百kb…这一看就知道地址是错的…</strong></p><hr><p>经过上面网址播放的连接，再次进行抓包，打开相关的网页意外发现了<em>mp4格式</em>的连接：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-14%20%E4%B8%8B%E5%8D%887.28.05.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-14%20%E4%B8%8B%E5%8D%887.30.37.png" alt=""></p><hr><p><strong>将此链接替换掉上面代码中的URL地址，发现可以了（如下图），完工。</strong></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-14%20%E4%B8%8B%E5%8D%887.31.51.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3爬取动态网页图片</title>
      <link href="/2018/03/12/python3%E7%88%AC%E5%8F%96%E5%8A%A8%E6%80%81%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87/"/>
      <url>/2018/03/12/python3%E7%88%AC%E5%8F%96%E5%8A%A8%E6%80%81%E7%BD%91%E9%A1%B5%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>爬取的<em>URL地址</em>:<a href="https://unsplash.com/" target="_blank" rel="external">https://unsplash.com/</a></p><blockquote><p>这是一个优美图片地址，往下拉就可以出来更多的图片，这显然是一个动态网页呀…</p></blockquote><a id="more"></a><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>关于详细分析以及我的参考可见：<a href="http://blog.csdn.net/c406495762/article/details/78123502" target="_blank" rel="external">http://blog.csdn.net/c406495762/article/details/78123502</a></p><blockquote><p><strong>因为分析方向一致，我就不在此说了，我跟这位博主的工具有一些出入，实际上用<em>Chrome</em>分析已经足够了。</strong></p></blockquote><p>##代码</p><p>这是我后来自己写的代码，比上面博主的简短一些，亦可参考参考。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">    函数目标：</span></div><div class="line"><span class="string">    爬取动态网页的图片</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">'''</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> json</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> time</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    url = <span class="string">'https://unsplash.com/napi/feeds/home'</span></div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    添加需要的代理:</span></div><div class="line"><span class="string">    authorization证书配置,有时网站需要此类的代理html信息才会出来...</span></div><div class="line"><span class="string">    json格式分析js页面的利器，有时用js渲染出来的页面，要注意观察其URL及相对准确的信息</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    '''</span></div><div class="line">    header = &#123;<span class="string">'user-agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'</span>,</div><div class="line">            <span class="string">'authorization'</span>:<span class="string">'Client-ID c94869b36aa272dd62dfaeefed769d4115fb3189a9xxxxxxxxxxx'</span>&#125;</div><div class="line">    re = requests.get(url=url, headers=header)</div><div class="line">    re.encoding = <span class="string">'utf-8'</span></div><div class="line">    <span class="comment"># 通过分析易知一页有包括多张图片的ID链接，可用python的json格式处理解析</span></div><div class="line">    json_info = json.loads(re.text)</div><div class="line">    </div><div class="line">    <span class="comment"># 建立一个空的列表用于装ID信息</span></div><div class="line">    list_id = []</div><div class="line">    <span class="keyword">if</span> <span class="string">'优美图片集'</span> <span class="keyword">not</span> <span class="keyword">in</span> os.listdir():</div><div class="line">        os.makedirs(<span class="string">'优美图片集'</span>)</div><div class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> json_info[<span class="string">'photos'</span>]:</div><div class="line">        list_id.append(each[<span class="string">'id'</span>])</div><div class="line">        </div><div class="line">    <span class="comment"># 利用urlretrieve函数一一下载，设置延迟</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, len(list_id)):</div><div class="line">        print(<span class="string">'开始下载指定页面中的第%d张'</span> % (i + <span class="number">1</span>))</div><div class="line">        urlretrieve(url=<span class="string">'https://unsplash.com/photos/'</span> + list_id[i] + <span class="string">'/download?force=true.jpg'</span>, filename=<span class="string">'优美图片集/'</span> + <span class="string">'系列%d.jpg'</span> % i)</div><div class="line">        </div><div class="line">    print(<span class="string">'下载完成！请查收...'</span>)</div></pre></td></tr></table></figure><blockquote><p>虽然说我的代码简短一点，不过我还是支持面对对象模式编程的，方便以后的学习，也是对自己的一种考验。</p></blockquote><p>运行之后在本工程目录可见：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-12%20%E4%B8%8B%E5%8D%888.16.51.png" alt=""></p><p>最后再补充说明一下：</p><p>每一次的拉取新的图片时，进行抓包，得知新的图片ID以及一个页面，通过分析此页面便可得到图片相关的信息，进而进行下载保存了（如下图）。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-12%20%E4%B8%8B%E5%8D%888.12.58.png" alt=""></p><hr><p>简单说说当时的情况，在参考了上面博主的分析过程后，利用了<em>Chrome下载器</em>的下载发现了图片的信息，然后我用<em>urlretrieve函数</em>单张下载的测试，发现成功了…附上代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line"></div><div class="line">urlretrieve(<span class="string">'https://unsplash.com/photos/NrflUuJJK0I/download?force=true.jpg'</span>, <span class="string">'tu.jpg'</span>)</div><div class="line">     print(<span class="string">'下载完成！'</span>)</div></pre></td></tr></table></figure><blockquote><p>不过从来都没有见过这种<em>src信息</em>…算是开了眼界，长了知识啦。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习python3网络爬虫的总结</title>
      <link href="/2018/03/12/%E5%AD%A6%E4%B9%A0python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%9A%84%E6%80%BB%E7%BB%93/"/>
      <url>/2018/03/12/%E5%AD%A6%E4%B9%A0python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%9A%84%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<ul><li>有时在爬取的过程中很慢，以至于没有什么反应，第一应当先检查网络连接的情况，网络带宽突然变得很慢亦是一个问题，遇到了好几次，以为程序出了问题，不想却是网络带宽问题…</li></ul><a id="more"></a><ul><li>在爬取动态网页中，学会利用抓包进行解决，分析每一个点以及对可以达到目的的每一点进行抓包分析，挖掘其中的信息。另外，在爬取网页信息中，有一些反爬虫的或者是必须加入一些参数代理才可得到需要的信息等，俊需要一个点一个步骤的去分析。</li></ul><ul><li><p>在爬取网页的过程中，编写代码时，检查代码的函数方法的准确性，少一个‘s’与多一个‘s’，都是让人头疼的问题。</p></li><li><p>在编写代码的过程中，追求最好的解决方案，习惯于用面向对象来编写代码，便于以后的学习。</p></li><li><p>编写爬虫代码，要让其像是一个浏览器一般的去爬取数据，所以代理之类的应当要严谨使用。</p></li><li><p>分析html信息，善于用<strong>正则表达式</strong>解决一些代码与文字的混合信息。</p></li><li><p>对URL的分析到位亦然很重要。</p></li><li><p>学会快速判断是否为动态网页。</p></li><li><p><em>python</em> 编程缩进很重要！！！！</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac触摸板小问题记录</title>
      <link href="/2018/03/12/Mac%E8%A7%A6%E6%91%B8%E6%9D%BF%E5%B0%8F%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/03/12/Mac%E8%A7%A6%E6%91%B8%E6%9D%BF%E5%B0%8F%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>今早<em>触摸板</em>的<em>三指点击</em>功能不灵了，有点急…</p><p>解决：<strong>重启。</strong></p><blockquote><p>一般电脑上的小问题重启之后可能就会得到解决了。</p></blockquote><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用python3网络爬虫爬取成绩</title>
      <link href="/2018/03/10/%E5%88%A9%E7%94%A8python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E6%88%90%E7%BB%A9/"/>
      <url>/2018/03/10/%E5%88%A9%E7%94%A8python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E6%88%90%E7%BB%A9/</url>
      
        <content type="html"><![CDATA[<p>因为最近在学习<em>python3网络爬虫</em>，想自己写一些小程序来实战一下。爬的是<em>URP教务网</em>。</p><p>一开始的思路是利用<em>beautiful</em>模块来进行爬取相关的<em>html信息</em>，直接来得到需要的信息。结果发现程序运行不通…</p><p>后来查了一下，发现用<em><a href="https://docs.python.org/3/library/re.html" target="_blank" rel="external">re模块</a></em>好啊…配合<em><a href="https://cuiqingcai.com/977.html" target="_blank" rel="external">python正则表达式</a></em>那是相当简单…</p><p>下面开始分析，代码编写阶段。</p><a id="more"></a><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><h2 id="学习模拟登陆"><a href="#学习模拟登陆" class="headerlink" title="学习模拟登陆"></a>学习模拟登陆</h2><p>这是第一步，有两种简单的方法，可直接参考的链接：<a href="http://blog.csdn.net/JoeHF/article/details/48424335" target="_blank" rel="external">参考链接在此</a></p><p>一种是查看抓的包中的：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-11%20%E4%B8%8A%E5%8D%889.44.02.png" alt=""></p><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line">f __name__ == <span class="string">'__main__'</span>:</div><div class="line">    </div><div class="line">    <span class="comment"># 登陆页面的URL,此处的URL为登陆页面的URL以及在登陆之后的header中的request均可</span></div><div class="line">    url = <span class="string">'http://60.219.165.24/loginAction.do'</span></div><div class="line">    <span class="comment"># 设置相关的代理以及在登陆之后的fordate信息</span></div><div class="line">        <span class="comment"># 'Connection': 'keep-alive' ：保证持续连接</span></div><div class="line">    header = &#123;<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'</span>,</div><div class="line">              <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span>&#125;</div><div class="line">    login_fordate = &#123;<span class="string">'zjh'</span>:<span class="string">'20160xxxxx'</span>,</div><div class="line">                    <span class="string">'mm'</span>:<span class="string">'x'</span>&#125;</div><div class="line">    </div><div class="line">    <span class="comment"># 利用session方法爬取请求</span></div><div class="line">    s = requests.session()</div><div class="line">    response = s.post(url, data=login_fordate, headers=header)</div><div class="line">    </div><div class="line">     <span class="comment"># 验证登陆状态</span></div><div class="line">     <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</div><div class="line">    print(<span class="string">'模拟登陆成功！'</span>)</div></pre></td></tr></table></figure><blockquote><p>不懂可查看文档：<br><a href="http://docs.python-requests.org/zh_CN/latest/" target="_blank" rel="external">requests文档</a></p></blockquote><hr><p>第二种是查看包中的<em>cookie信息：</em></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-11%20%E4%B8%8A%E5%8D%889.44.21.png" alt=""></p><p>对应的实现模拟代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    </div><div class="line">    <span class="comment"># 登陆页面url</span></div><div class="line">    url = <span class="string">'hhttp://60.219.165.24/loginAction.do'</span></div><div class="line">    <span class="comment"># 设置代理相关</span></div><div class="line">    headers = &#123;</div><div class="line">            <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'</span>,</div><div class="line">            <span class="string">'Cookie'</span>:<span class="string">'JSExxxxxx=hxxxx-9Ixxxxxxx_xxxxxxxx'</span>,</div><div class="line">            <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span></div><div class="line">             &#125;</div><div class="line">    </div><div class="line">    <span class="comment"># 利用session爬取请求,之后可方便的get与post</span></div><div class="line">    s = requests.session()</div><div class="line">    response = s.post(url=url, headers=headers）</div><div class="line"></div><div class="line"><span class="comment"># 验证登陆状态</span></div><div class="line"> <span class="keyword">if</span> response.status_code == <span class="number">200</span>:</div><div class="line">     print(<span class="string">'模拟登陆成功！'</span>)</div></pre></td></tr></table></figure><blockquote><p>相关的信息我用<em>x</em>换掉了。不懂的朋友可以看文档，查资料咯。再次说明一下，<em>URL部分**</em>可以是登陆界面的，也可以是登陆之后的URL，经过测试两者均可。**</p></blockquote><h2 id="分析网页"><a href="#分析网页" class="headerlink" title="分析网页"></a>分析网页</h2><p>到了分析阶段了。</p><p>打开我的<em>Chrome浏览器</em>，开始分析每个链接的<em>html信息</em>，看看有没有我想要的信息。</p><p>根据下面的操作得到了<em>本学期的成绩查询</em>的相关的超链接。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/3%E6%9C%88-11-2018%2009-48-17.gif" alt=""></p><p>再结合下面两张图的分析易知：<em>本学期成绩查询</em>的超链接为：<strong><a href="http://60.219.165.24//bxqcjcxAction.do" target="_blank" rel="external">http://60.219.165.24//bxqcjcxAction.do</a></strong></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-11%20%E4%B8%8A%E5%8D%889.52.01.png" alt=""></p><blockquote><p>超链接部分。</p></blockquote><hr><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-11%20%E4%B8%8A%E5%8D%889.52.25.png" alt=""></p><blockquote><p>主URL部分。</p></blockquote><p>为了保证准确性，再向某成绩采取相应的操作（如下图所示），再往上看看，就发现它是<em>本学期成绩查询</em>的一部分。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/3%E6%9C%88-11-2018%2009-49-16.gif" alt=""></p><hr><blockquote><p>接下来就是编写代码了，以上若是有不懂的地方，还需要利用搜索引擎多多查询哟。</p></blockquote><h2 id="测试代码部分"><a href="#测试代码部分" class="headerlink" title="测试代码部分"></a>测试代码部分</h2><p>编写测试代码，爬取网页<em>html信息</em>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    </div><div class="line">    <span class="comment"># 登陆页面url</span></div><div class="line">    url = <span class="string">'http://60.219.165.24//bxqcjcxAction.do'</span></div><div class="line">    <span class="comment"># 设置代理相关</span></div><div class="line">    headers = &#123;</div><div class="line">            <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'</span>,</div><div class="line">            <span class="string">'Cookie'</span>:<span class="string">'JSExxxxxx=hxxxx-9Ixxxxxxx_xxxxxxxx'</span>,</div><div class="line">            <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span></div><div class="line">             &#125;</div><div class="line">    </div><div class="line">    <span class="comment"># 利用session爬取请求,之后可方便的get与post</span></div><div class="line">    s = requests.session()</div><div class="line">    response = s.post(url=url, headers=headers）</div><div class="line"></div><div class="line"><span class="comment"># 设置成网页对应的编码格式</span></div><div class="line">response.encoding = <span class="string">'GB2312'</span></div><div class="line"></div><div class="line"><span class="comment"># 查看相关的网页内容</span></div><div class="line">print(response.text)</div></pre></td></tr></table></figure><p>运行查看效果：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-11%20%E4%B8%8A%E5%8D%8810.05.02.png" alt=""></p><blockquote><p>成功得到了想要的<em>html信息</em>，接下来利用<em>正则表达式</em>选想要的部分即可。<strong>在这里要说明一下，不可用<em>ForDate</em>的那个模拟登陆，经过测试发现返回的是错误信息…所以以后老老实实用<em>cookie</em>模拟更为靠谱一点…</strong></p></blockquote><h2 id="完整代码部分"><a href="#完整代码部分" class="headerlink" title="完整代码部分"></a>完整代码部分</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> re </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    </div><div class="line">    <span class="comment"># 登陆页面url</span></div><div class="line">    url = <span class="string">'http://60.219.165.24//bxqcjcxAction.do'</span></div><div class="line">    <span class="comment"># 设置代理相关</span></div><div class="line">    headers = &#123;</div><div class="line">            <span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'</span>,</div><div class="line">            <span class="string">'Cookie'</span>:<span class="string">'JSESSIONID=xxxxxxxxxxx_gUJ4aiw'</span>,</div><div class="line">            <span class="string">'Connection'</span>: <span class="string">'keep-alive'</span></div><div class="line">             &#125;</div><div class="line">    </div><div class="line">    <span class="comment"># 利用session爬取请求,之后可方便的get与post</span></div><div class="line">    s = requests.session()</div><div class="line">    response = s.post(url=url, headers=headers)</div><div class="line">    <span class="comment"># 设置成网页对应的编码格式</span></div><div class="line">    response.encoding = <span class="string">'GB2312'</span></div><div class="line">    </div><div class="line">    <span class="comment"># 设置成为符合需要的表达式以及模式为'任意匹配模式'</span></div><div class="line">    pattern = re.compile(<span class="string">'&lt;tr.*?class="even".*?&lt;/td&gt;.*?&lt;/td&gt;.*?&lt;td align="center"&gt;(.*?)&lt;/td&gt;.*?&amp;npsb;.*?&lt;/td&gt;.*?&lt;/td&gt;.*?&lt;/td&gt;.*?&lt;td&gt;align="center"&gt;(.*?)&amp;npsb;&lt;/P&gt;&lt;/td&gt;.*?&amp;npsb;&lt;/P&gt;'</span>,                         re.S)</div><div class="line">    <span class="comment"># 成绩信息采集</span></div><div class="line">    grades = re.findall(pattern, response.text)</div><div class="line">      </div><div class="line">    <span class="comment"># 输出对应的课程信息</span></div><div class="line">    <span class="keyword">for</span> each_grades <span class="keyword">in</span> grades:</div><div class="line">        print(<span class="string">'课程名称：'</span> + each_grades[<span class="number">0</span>] + <span class="string">'分数：'</span> + each_grades[<span class="number">1</span>])</div></pre></td></tr></table></figure><p>关于<em>正则表达式</em>的解说可结合<a href="https://cuiqingcai.com/977.html" target="_blank" rel="external">python正则表达式</a>此篇文章学习。</p><p>简单解说一下，先贴出来<em>html信息</em>是怎么样的。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-11%20%E4%B8%8A%E5%8D%8810.12.41.png" alt=""></p><blockquote><p>只截取了一部分，可自行了解。</p></blockquote><p>解说：</p><ol><li><p>.<em>? 是一个固定的搭配，.和</em>代表可以匹配任意无限多个字符，加上？表示使用非贪婪模式进行匹配，也就是我们会尽可能短地做匹配，以后我们还会大量用到 .*? 的搭配。</p></li><li><p>(.<em>?)代表一个分组，在这个正则表达式中我们匹配了两个分组，在后面的遍历grades中，grade[0]就代表第一个(.</em>?)所指代的内容，grade[1]就代表第二个(.*?)所指代的内容，以此类推。</p></li><li><p>re.S 标志代表在匹配时为点任意匹配模式，点 . 也可以代表换行符。</p></li></ol><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li>参考文章列表：</li></ul><ol><li><p><a href="http://zihaolucky.github.io/using-python-to-build-zhihu-cralwer/" target="_blank" rel="external">参考一</a></p></li><li><p><a href="http://blog.csdn.net/c406495762/article/details/69817490" target="_blank" rel="external">参考二</a></p></li><li><p><a href="http://www.cnblogs.com/greenteemo/p/6629126.html" target="_blank" rel="external">参考三</a></p></li></ol><blockquote><p>还有一些文档，均可在官网上看到，利用搜索引擎即可。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于计算机基础知识（一）</title>
      <link href="/2018/03/08/%E5%85%B3%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2018/03/08/%E5%85%B3%E4%BA%8E%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<blockquote><p>平时有些兴趣想要了解一些关于<em>计算机</em>的基础知识，我就想着为何不将其作为一个笔记记录在博客上呢？以后想从事与<em>计算机</em>相关的工作，了解基本的<em>计算机知识</em>必不可少，因为时间，精力的有限，我会将一些认为重要的或者是必要的基础知识记录在此，打算作为一个系列在此展示了，希望能帮助更多的人。</p></blockquote><a id="more"></a><h2 id="编程语言知识：关于强类型语言与弱类型语言，语言的动静态区分以及解释性语言与编译性语言的理解"><a href="#编程语言知识：关于强类型语言与弱类型语言，语言的动静态区分以及解释性语言与编译性语言的理解" class="headerlink" title="编程语言知识：关于强类型语言与弱类型语言，语言的动静态区分以及解释性语言与编译性语言的理解"></a>编程语言知识：关于<em>强类型语言</em>与<em>弱类型语言</em>，语言的<em>动静态</em>区分以及<em>解释性语言</em>与<em>编译性语言</em>的理解</h2><blockquote><p>可以一张图大概的简单理解一下关于<em>强类型语言</em>与<em>弱类型语言</em>，语言的<em>动静态</em>（下图来源于参考一链接）</p></blockquote><p><img src="http://smartjpa.com/1283539-31968e5f19abed4b.jpg" alt=""></p><blockquote><p>那么我们常见的语言分类：</p></blockquote><p><img src="http://smartjpa.com/1283539-1820df734cf34260.png" alt=""></p><hr><ul><li>简单总结<em>强类型语言</em>与<em>弱类型语言</em>：</li></ul><ol><li><p>编译时前者需要赋予变量对应的数据类型，后者可不必必须。（如<em>c语言</em>与<em>python</em>的编译时）</p></li><li><p>前者需要改变数据类型时需要相关的函数方法强制改变，后者可忽略。（如在<em>c语言</em>强制要求更改类型时的<strong>（double）变量</strong>）</p></li></ol><ul><li>简单总结语言的<em>动静态</em>区别：</li></ul><ol><li><p><em>动态性语言</em>在编译器上编译时不提供代码数据类型的指错，仅仅是在运行时指出，而静态则是在编译器上编译时就提供代码数据类型的指错。（如<strong><em>int a=’a’;</em></strong>时编译器马上会在一旁提示错误时的便可理解为静态语言，如<em>c语言</em>）</p></li><li><p><em>动态性</em>较于<em>静态性</em>更具有严谨性，可读性。</p></li></ol><ul><li><em>解释性语言</em>与<em>编译性语言</em>的理解（因为在参考4的说明较为详细了，我就直接复制相关的内容好了…）</li></ul><p>首先，我们编程都是用的高级语言(写汇编和机器语言的大牛们除外)，计算机不能直接理解高级语言，只能理解和运行机器语言，所以必须要把高级语言翻译成机器语言，计算机才能运行高级语言所编写的程序。</p><p>说到翻译，其实翻译的方式有两种，一个是编译，一个是解释。两种方式只是翻译的时间不同。</p><p>用编译型语言写的程序执行之前，需要一个专门的编译过程，通过编译系统（不仅仅只是通过编译器，编译器只是编译系统的一部分）把高级语言翻译成机器语言（具体翻译过程可以参看下图），把源高级程序编译成为机器语言文件，比如windows下的exe文件。以后就可以直接运行而不需要编译了，因为翻译只做了一次，运行时不需要翻译，所以编译型语言的程序执行效率高，但也不能一概而论，部分解释型语言的解释器通过在运行时动态优化代码，甚至能够使解释型语言的性能超过编译型语言。<br><img src="http://smartjpa.com/20131124170842718.png" alt=""></p><blockquote><p>一个完整的编译系统与 一个用C编写的程序hello.c的编译过程 </p></blockquote><p>解释则不同，解释型语言编写的程序不需要编译。解释型语言在运行的时候才翻译，比如VB语言，在执行的时候，专门有一个解释器能够将VB语言翻译成机器语言，每个语句都是执行的时候才翻译。这样解释型语言每执行一次就要翻译一次，效率比较低。</p><p>编译型与解释型，两者各有利弊。前者由于程序执行速度快，同等条件下对系统要求较低，因此像开发操作系统、大型应用程序、数据库系统等时都采用它，像C/C++、Pascal/Object Pascal（Delphi）等都是编译语言，而一些网页脚本、服务器脚本及辅助开发接口这样的对速度要求不高、对不同系统平台间的兼容性有一定要求的程序则通常使用解释性语言，如JavaScript、VBScript、Perl、Python、Ruby、MATLAB 等等。</p><p>但随着硬件的升级和设计思想的变革，编译型和解释型语言越来越笼统，主要体现在一些新兴的高级语言上，而解释型语言的自身特点也使得编译器厂商愿意花费更多成本来优化解释器，解释型语言性能超过编译型语言也是必然的。</p><blockquote><p>我认为这篇文章解释的不错：<a href="https://www.cnblogs.com/dzhanjie/archive/2011/07/07/2100340.html" target="_blank" rel="external">https://www.cnblogs.com/dzhanjie/archive/2011/07/07/2100340.html</a></p></blockquote><ul><li><strong>以下更为详细的参考：</strong></li></ul><p><a href="https://www.jianshu.com/p/336f19772046" target="_blank" rel="external">参考1</a></p><p><a href="https://www.zhihu.com/question/19918532" target="_blank" rel="external">参考2</a></p><p><a href="https://zh.wikipedia.org/wiki/強弱型別" target="_blank" rel="external">参考3</a></p><p><a href="http://blog.csdn.net/zhu_xun/article/details/16921413" target="_blank" rel="external">参考4</a></p><h2 id="计算机基础知识推荐图书"><a href="#计算机基础知识推荐图书" class="headerlink" title="计算机基础知识推荐图书"></a>计算机基础知识推荐图书</h2><blockquote><p>一个日本相关行业人员的书籍系列，通俗易懂。在此分享。</p></blockquote><p><a href="https://pan.baidu.com/s/13OUBV9zvmBAY3eTMI6DlFg" target="_blank" rel="external">网络是怎样链接的</a></p><p><a href="https://pan.baidu.com/s/1XYR5uJasnrbBXY43hupA0w" target="_blank" rel="external">计算机是怎么跑起来的</a></p><p><a href="https://pan.baidu.com/s/1k9KAxONC5pd1qQAHRoEnAg" target="_blank" rel="external">程序是怎么跑起来的</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> 计算机基础知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> 计算机基础知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在学习python3网络爬虫模块时的易模糊点</title>
      <link href="/2018/03/06/%E5%85%B3%E4%BA%8E%E5%9C%A8%E5%AD%A6%E4%B9%A0python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E6%A8%A1%E5%9D%97%E6%97%B6%E7%9A%84%E6%98%93%E6%A8%A1%E7%B3%8A%E7%82%B9/"/>
      <url>/2018/03/06/%E5%85%B3%E4%BA%8E%E5%9C%A8%E5%AD%A6%E4%B9%A0python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E6%A8%A1%E5%9D%97%E6%97%B6%E7%9A%84%E6%98%93%E6%A8%A1%E7%B3%8A%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<ul><li>两种代理格式</li></ul><p>在学习<em>urlretrieve</em>函数方法时，尝试了与<em>BeautifulSoup</em>模块的结合编码。</p><a id="more"></a><p>在<em>request.bulid_opener()</em>的一类函数方法中，如：</p><pre><code>headers = (&apos;User-Agent&apos;,&apos;Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.94 Safari/537.36&apos;)# 安装openeropener = request.build_opener()# 添加代理opener.addheaders = [headers]# 使用临时的&apos;urlopen&apos;request.install_opener(opener)</code></pre><hr><p>而在有<em>requests.get(url=url,headers=headers…)</em>一类函数方法中，如：</p><pre><code>headers = {&apos;User-Agent&apos;:           &apos;Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.94 Safari/537.36&apos;}    # 利用requests模块中的方法获取URL信息，加上我们的代理re = requests.get(url=url, headers=headers)</code></pre><blockquote><p><strong>比较两者易知，两者的代理规定与是否为字典形式有偏差。</strong></p></blockquote><ul><li><p>在利用<em>requests.get()</em>下载图片时</p><pre><code>re = requests.get(url=url)        #应当加上二进制的格式规定，避免不必要的错误麻烦   with open(&apos;美女图片.jpg&apos;,&apos;wb&apos;) as mntu:       for chunk in re.iter_content(chunk_size = 1024):            if chunk:                mntu.write(chunk)                mntu.flush()</code></pre></li></ul><blockquote><p>在查询相关的资料时，有<em>Stream=True</em>的参数说明要加入，但是加入之后却是错误显示。在<em>with</em>下面的<em>for chunk…</em>在下载图片时应当加入。<a href="https://stackoverflow.com/questions/16694907/how-to-download-large-file-in-python-with-requests-py" target="_blank" rel="external">为何要加入，在此可易知</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Charle的简单抓包操作</title>
      <link href="/2018/03/06/%E5%85%B3%E4%BA%8ECharle%E7%9A%84%E7%AE%80%E5%8D%95%E6%8A%93%E5%8C%85%E6%93%8D%E4%BD%9C/"/>
      <url>/2018/03/06/%E5%85%B3%E4%BA%8ECharle%E7%9A%84%E7%AE%80%E5%8D%95%E6%8A%93%E5%8C%85%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近在看他人的博客学习<em>python3网络爬虫</em>的实战，看到了“抓包”的这个词，以前不知道…</p></blockquote><p>用的是<em>Macbook</em>，在网上搜索了一下，<em>Charle</em>好评多多，急忙到网上找了破解教程…（关于如何找到，可利用百度谷歌搜索关键词）</p><p>第一次用这个，啥都不会，基本操作也不会，摸索了一下，打算记录下来帮助需要的人。</p><a id="more"></a><h2 id="抓包的操作"><a href="#抓包的操作" class="headerlink" title="抓包的操作"></a>抓包的操作</h2><p>进入主界面先看看快捷键也是个不错的选择。如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-06%20%E4%B8%8B%E5%8D%8812.02.02.png" alt=""></p><blockquote><p>可以知道，与<em>Mac本机浏览器</em>的快捷键相似。</p></blockquote><p><em>New Session</em>即为打开一个新的界面。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-06%20%E4%B8%8B%E5%8D%8812.02.46.png" alt=""></p><p>点击<em>钢笔</em>图标，输入<em>URL</em>，自动开始抓包了。</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-06%20%E4%B8%8B%E5%8D%8812.09.56.png" alt=""></p><hr><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-06%20%E4%B8%8B%E5%8D%8812.02.58.png" alt=""></p><p>查看相关的快捷键，定向查找<em>html</em>中格式，如<em>json</em>格式</p><ul><li><em>Find</em></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-06%20%E4%B8%8B%E5%8D%8812.03.49.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-06%20%E4%B8%8B%E5%8D%8812.03.59.png" alt=""></p><h2 id="系统代理配置"><a href="#系统代理配置" class="headerlink" title="系统代理配置"></a>系统代理配置</h2><ul><li>可以自动对目前系统中的一些<em>URL</em>进行抓包。</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-06%20%E4%B8%8B%E5%8D%8812.02.17.png" alt=""></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li>继续摸索中..听说功能很强大，网上的教程非常多，暂时用不到太多，简单的操作说明到处结束了。</li></ul><ul><li>一些可参考的教程：</li></ul><p><a href="https://www.jianshu.com/p/9822e3f28f0a" target="_blank" rel="external">可参考一</a></p><p><a href="http://blog.csdn.net/liulanghk/article/details/46342205" target="_blank" rel="external">可参考二</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Charle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3爬取网络图片的小程序项目</title>
      <link href="/2018/03/05/python3%E7%88%AC%E5%8F%96%E7%BD%91%E7%BB%9C%E5%9B%BE%E7%89%87%E7%9A%84%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE/"/>
      <url>/2018/03/05/python3%E7%88%AC%E5%8F%96%E7%BD%91%E7%BB%9C%E5%9B%BE%E7%89%87%E7%9A%84%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p> 最近在学习<em>python3网络爬虫</em>，看的是<a href="http://blog.csdn.net/c406495762/article/details/72597755" target="_blank" rel="external">这位学长的博客</a>。</p><blockquote><p>因为刚刚开始接触，想通过实战来一步步学习，所以先记录下我的学习心得，然后再记录下自己实战的成果以及相关的代码程序。</p></blockquote><a id="more"></a><ul><li><strong>先声明，以下是学习心得，代码原搬，链接在上。</strong></li></ul><p>##开始爬取的图片的下载代码的演示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div></pre></td><td class="code"><pre><div class="line">     <span class="string">'''    </span></div><div class="line"><span class="string">        #开始爬取的图片的下载代码的演示</span></div><div class="line"><span class="string">     '''</span></div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve </div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> os</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="comment"># 指定页面图片的多少数量</span></div><div class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">5</span>):</div><div class="line">        <span class="keyword">if</span> num == <span class="number">1</span>:</div><div class="line">            url = <span class="string">'http://www.shuaia.net/index.html'</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            url = <span class="string">'http://www.shuaia.net/index_%d.html'</span> % num</div><div class="line">        <span class="comment"># 因为是下载多个页面的图片，所以之后的图片名称与其相应的图片地址的代码抒写在for循环下编写</span></div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">          #在此需要设置代理，避免爬取失败几率</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        headers = &#123;<span class="string">'User-Agent'</span>:</div><div class="line">                <span class="string">'* Mozilla/5.0 (Windows NT 6.2; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/27.0.1453.94 Safari/537.36'</span>&#125;</div><div class="line">        <span class="comment"># 利用requests模块中的方法获取URL信息，加上我们的代理</span></div><div class="line">        re = requests.get(url=url, headers=headers)</div><div class="line">        <span class="comment"># 指定编码，避免中文乱码</span></div><div class="line">        re.encoding = <span class="string">'utf-8'</span></div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">            # 利用beautifulsoup模块来进行处理</span></div><div class="line"><span class="string">            #re.text : 转换成规定的字符格式</span></div><div class="line"><span class="string">            #'lxml' : 利用lxml解析器进行解析</span></div><div class="line"><span class="string">        '''</span></div><div class="line">        bf = BeautifulSoup(re.text, <span class="string">'lxml'</span>)</div><div class="line">        <span class="comment"># 解析完成之后，需要对页面的html信息进行分析了，指定相关的节点</span></div><div class="line">        <span class="string">'''</span></div><div class="line"><span class="string">            #class_是为了避免错误混淆，所以不可"原班人马"</span></div><div class="line"><span class="string">            </span></div><div class="line"><span class="string">        '''</span></div><div class="line">        tasges_html = bf.find_all(class_=<span class="string">'item-img'</span>)</div><div class="line">        <span class="comment"># 指定空的列表，装下相关的需要的信息</span></div><div class="line">        list = []</div><div class="line">        <span class="comment"># 利用循环，一一导入</span></div><div class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> tasges_html:</div><div class="line">            <span class="string">'''</span></div><div class="line"><span class="string">                #加上img是因为'alt'在以下的子节点中，所以需要相关的指明，即一个节点（父，子）一个指明</span></div><div class="line"><span class="string">                 </span></div><div class="line"><span class="string">            '''</span></div><div class="line">            list.append(each.img.get(<span class="string">'alt'</span>) + <span class="string">'='</span> + each.get(<span class="string">'href'</span>))</div><div class="line">        <span class="comment"># 至此，相关的信息就采集完成了</span></div><div class="line">        print(<span class="string">'采集over，开始下载：'</span>)</div><div class="line">    <span class="string">'''</span></div><div class="line"><span class="string">        #开始将采集好的信息一一下载</span></div><div class="line"><span class="string">    '''</span></div><div class="line">    <span class="keyword">for</span> each_img <span class="keyword">in</span> list:</div><div class="line">        <span class="comment"># 以=分割图片地址与图片名称</span></div><div class="line">        img_info = each_img.split(<span class="string">'='</span>)</div><div class="line">        target_url = img_info[<span class="number">1</span>]</div><div class="line">        filename = img_info[<span class="number">0</span>] + <span class="string">'.jpg'</span></div><div class="line">        print(<span class="string">'下载：'</span> + filename)</div><div class="line">        headers = &#123;</div><div class="line">            <span class="string">"User-Agent"</span>:</div><div class="line">          <span class="string">"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36"</span></div><div class="line">        &#125;</div><div class="line">        img_req = requests.get(url=target_url, headers=headers)</div><div class="line">        img_req.encoding = <span class="string">'utf-8'</span></div><div class="line">        img_html = img_req.text</div><div class="line">        img_bf_1 = BeautifulSoup(img_html, <span class="string">'lxml'</span>)</div><div class="line">        img_url = img_bf_1.find_all(<span class="string">'div'</span>, class_=<span class="string">'wr-single-content-list'</span>)</div><div class="line">        img_bf_2 = BeautifulSoup(str(img_url), <span class="string">'lxml'</span>)</div><div class="line">        img_url = <span class="string">'http://www.shuaia.net'</span> + img_bf_2.div.img.get(<span class="string">'src'</span>)</div><div class="line">        <span class="comment">#若是指定的目录不存在则建立一个</span></div><div class="line">        <span class="keyword">if</span> <span class="string">'images'</span> <span class="keyword">not</span> <span class="keyword">in</span> os.listdir():</div><div class="line">            os.makedirs(<span class="string">'images'</span>)</div><div class="line">        <span class="comment"># 即指定URL地址下载</span></div><div class="line">        urlretrieve(url=img_url, filename=<span class="string">'images/'</span> + filename)</div><div class="line">        time.sleep(<span class="number">1</span>)</div><div class="line"></div><div class="line">    print(<span class="string">'下载完成！'</span>)</div><div class="line">``` </div><div class="line">     </div><div class="line"></div><div class="line">&gt; **以上是通过学习[此篇博客文章](http://blog.csdn.net/c406495762/article/details/<span class="number">72597755</span>)的学习心得，相关的加上图片解说可以看这篇博客文章。**</div><div class="line"></div><div class="line">* **附上用得到的知识链接：**</div><div class="line"></div><div class="line">[Python中time模块详解](http://qinxuye.me/article/details-about-time-module-<span class="keyword">in</span>-python/)</div><div class="line"></div><div class="line">[python3中的urlretrieve() 函数使用](http://blog.csdn.net/vevenlcf/article/details/<span class="number">46777023</span>)</div><div class="line"></div><div class="line">[urllib.request文档](https://docs.python.org/<span class="number">3</span>/library/urllib.request.html)</div><div class="line"></div><div class="line">[Requests文档](http://docs.python-requests.org/zh_CN/latest/user/quickstart.html)</div><div class="line"></div><div class="line">[Python3 os模块文件/目录方法](http://www.runoob.com/python3/python3-os-file-methods.html)</div><div class="line"></div><div class="line">[Beautiful Soup <span class="number">4.2</span><span class="number">.0</span> 文档](https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.zh.html)</div><div class="line"></div><div class="line">[Python 文件I/O模块文档](http://www.runoob.com/python/python-files-io.html)</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## 实战部分:批量爬取美女图片</span></div><div class="line"></div><div class="line">&gt; 在这里收藏上[这一篇python3爬取图片的快速入门地址](http://www.bijishequ.com/detail/424024?p=)，有相关的模块方法介绍，有助于快速入门，再从一系列模块入手，之后再实战，一步步掌握。</div><div class="line"></div><div class="line">* 通过另外一个网站的分析，爬取其图片并且下载。（下载的图片均可在本工程目录可找到）</div><div class="line"></div><div class="line">**网址：http://www<span class="number">.27270</span>.com/ent/meinvtupian/<span class="number">2017</span>/<span class="number">223643.</span>html**</div><div class="line"></div><div class="line">&gt; 搜索的美女图片关键词，随便点开的一个...</div><div class="line"></div><div class="line">现在我们打开网址，利用*Chrome*浏览器的抓包，看看此网址的*html*信息（如下）</div><div class="line"></div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/%E5%B1%<span class="number">8</span>F%E5%B9%<span class="number">95</span>%E5%BF%AB%E7%<span class="number">85</span>%A7%<span class="number">202018</span><span class="number">-03</span><span class="number">-08</span>%<span class="number">20</span>%E4%B8%<span class="number">8</span>B%E5%<span class="number">8</span>D%<span class="number">888.02</span><span class="number">.32</span>.png)</div><div class="line"></div><div class="line">* ****</div><div class="line"></div><div class="line">在此有一个特别好用的方法，即为点击下方指出的图标，当我们把鼠标移到网页上的异常时，对应的*html*信息就会自动对齐。</div><div class="line"></div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/<span class="number">3</span>%E6%<span class="number">9</span>C%<span class="number">88</span><span class="number">-08</span><span class="number">-2018</span>%<span class="number">2020</span><span class="number">-10</span><span class="number">-20.</span>gif)</div><div class="line"></div><div class="line">&gt; 现在开始分析代码，这个网址是专题式的...点开一个专题就会有一个类型的图片...就网页看来一个页面仅仅一张图片。</div><div class="line"></div><div class="line">**在我们将鼠标移到图片处时，对应的代码也就自动对齐了（图<span class="number">1</span>），还有它在的那个节点（图<span class="number">2</span>），再点击下一张看看，查看*html*信息（图<span class="number">3</span>），发现它们的节点信息一致，不同的仅仅为对应的标题以及图片的目录地址了（图<span class="number">4</span>），我们可以从这里下手一步步来**</div><div class="line"></div><div class="line">* 图<span class="number">1</span></div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/%E5%B1%<span class="number">8</span>F%E5%B9%<span class="number">95</span>%E5%BF%AB%E7%<span class="number">85</span>%A7%<span class="number">202018</span><span class="number">-03</span><span class="number">-08</span>%<span class="number">20</span>%E4%B8%<span class="number">8</span>B%E5%<span class="number">8</span>D%<span class="number">888.14</span><span class="number">.53</span>.png)</div><div class="line"></div><div class="line">* 图<span class="number">2</span></div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/%E5%B1%<span class="number">8</span>F%E5%B9%<span class="number">95</span>%E5%BF%AB%E7%<span class="number">85</span>%A7%<span class="number">202018</span><span class="number">-03</span><span class="number">-08</span>%<span class="number">20</span>%E4%B8%<span class="number">8</span>B%E5%<span class="number">8</span>D%<span class="number">888.14</span><span class="number">.35</span>.png)</div><div class="line"></div><div class="line">* 图<span class="number">3</span></div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/%E5%B1%<span class="number">8</span>F%E5%B9%<span class="number">95</span>%E5%BF%AB%E7%<span class="number">85</span>%A7%<span class="number">202018</span><span class="number">-03</span><span class="number">-08</span>%<span class="number">20</span>%E4%B8%<span class="number">8</span>B%E5%<span class="number">8</span>D%<span class="number">888.14</span><span class="number">.14</span>.png)</div><div class="line"></div><div class="line">* 图<span class="number">4</span></div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/%E5%B1%<span class="number">8</span>F%E5%B9%<span class="number">95</span>%E5%BF%AB%E7%<span class="number">85</span>%A7%<span class="number">202018</span><span class="number">-03</span><span class="number">-08</span>%<span class="number">20</span>%E4%B8%<span class="number">8</span>B%E5%<span class="number">8</span>D%<span class="number">888.15</span><span class="number">.00</span>.png)</div><div class="line"></div><div class="line">&gt; 关于*html*的基础知识，只需要知道它们的结构以及节点，一些变量等的基础知识就够了，不需要太深入。可以在网上搜索关键词‘html基础知识’查看。这绝对是一劳永逸的。</div><div class="line"></div><div class="line">在分析之后写个测试代码：</div><div class="line"></div><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">    爬取美女图片实战代码</span></div><div class="line"><span class="string">'''</span>        </div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    url = <span class="string">'http://www.27270.com/ent/meinvtupian/2017/223643.html'</span></div><div class="line">    re = requests.get(url=url)</div><div class="line">    <span class="comment"># 编译解码格式，避免乱码出现</span></div><div class="line">    re.encoding = <span class="string">'utf-8'</span></div><div class="line">    <span class="comment"># 用beautiful模块进行解析</span></div><div class="line">    bf = BeautifulSoup(re.text, <span class="string">'lxml'</span>)</div><div class="line">    <span class="comment">#在此注意find_all与find方法的使用，因为一个页面仅仅有一张图片，用前者会出错</span></div><div class="line">    bf_html = bf.find(<span class="string">'div'</span>, class_=<span class="string">'articleV4Body'</span>)</div><div class="line">    list_html = []</div><div class="line">    list_html.append(bf_html.img.get(<span class="string">'alt'</span>) + <span class="string">'  :  '</span> + bf_html.img.get(<span class="string">'src'</span>))</div><div class="line">    print(list_html)</div><div class="line"></div><div class="line">运行，发现出现了乱码的情况：</div><div class="line"></div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/%E5%B1%<span class="number">8</span>F%E5%B9%<span class="number">95</span>%E5%BF%AB%E7%<span class="number">85</span>%A7%<span class="number">202018</span><span class="number">-03</span><span class="number">-08</span>%<span class="number">20</span>%E4%B8%<span class="number">8</span>B%E5%<span class="number">8</span>D%<span class="number">888.30</span><span class="number">.29</span>.png)</div><div class="line"></div><div class="line">将<span class="string">'utf-8'</span>格式换成了<span class="string">'GB2312'</span>，发现乱码问题得到解决：</div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/%E5%B1%<span class="number">8</span>F%E5%B9%<span class="number">95</span>%E5%BF%AB%E7%<span class="number">85</span>%A7%<span class="number">202018</span><span class="number">-03</span><span class="number">-08</span>%<span class="number">20</span>%E4%B8%<span class="number">8</span>B%E5%<span class="number">8</span>D%<span class="number">888.35</span><span class="number">.17</span>.png)</div><div class="line"></div><div class="line">* ****</div><div class="line"></div><div class="line">查看了一下*html*信息，发现<span class="string">'utf-8'</span>格式是不可取的，对于这个网站来说。</div><div class="line">![](https://liu<span class="number">-1258031152.</span>cos.ap-beijing.myqcloud.com/%E5%B1%<span class="number">8</span>F%E5%B9%<span class="number">95</span>%E5%BF%AB%E7%<span class="number">85</span>%A7%<span class="number">202018</span><span class="number">-03</span><span class="number">-08</span>%<span class="number">20</span>%E4%B8%<span class="number">8</span>B%E5%<span class="number">8</span>D%<span class="number">888.34</span><span class="number">.26</span>.png)</div><div class="line"></div><div class="line">还可以用以下这段代码得出网址的编码方式。</div><div class="line"></div><div class="line">```python</div><div class="line"><span class="comment">#关于输出网页编码方式的判断</span></div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">import</span> chardet</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</div><div class="line">    response = request.urlopen(<span class="string">"http://www.27270.com/ent/meinvtupian/2017/223643.html"</span>)</div><div class="line">    html = response.read()</div><div class="line">    charset = chardet.detect(html)</div><div class="line">    print(charset)</div></pre></td></tr></table></figure><p>运行看看：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-08%20%E4%B8%8B%E5%8D%888.44.21.png" alt=""></p><ul><li>可参考：<a href="http://blog.csdn.net/qq_21460525/article/details/78217697" target="_blank" rel="external">chardet模块简单认识</a></li></ul><blockquote><p>得到了图片的目录信息以及相关的信息之后，就好办了。</p></blockquote><hr><p>为什么这么说？实际上我们爬取图片时仅仅需要图片的目录地址就可以利用一两行<em>python爬虫</em>代码下载下来了，代码利用<em>urllib.requests模块中的urlretrieve() 函数</em>就能轻而易举的办到。代码在下，也可以查看相关的文档来学习。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span>  urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"><span class="keyword">import</span> time</div><div class="line"><span class="comment"># 简单爬取一张图片，或者是需要代理的测试</span></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    print(<span class="string">'开始下载：'</span>)</div><div class="line">    urlretrieve(url=<span class="string">'html上的图片src信息'</span>, filename=<span class="string">'xx照片'</span>+<span class="string">'.jpg'</span>)</div><div class="line">    time.sleep(<span class="number">1</span>)</div><div class="line">    print(<span class="string">'下载完成！'</span>)</div></pre></td></tr></table></figure><blockquote><p>可以自己试试。</p></blockquote><hr><p>因为我们是为了爬取多张图片…所以可以分析一下每一页<em>URL</em>的不同或者是相似点。看图1，2发现了有索引<strong>_2</strong>出现，那再点击下一页会有<strong>_3</strong>…<br>每一页有不同的照片，因为是一个专题…那么照片地址也不一样了（如图3，4）。</p><ul><li><p>图1<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-08%20%E4%B8%8B%E5%8D%888.57.34.png" alt=""></p></li><li><p>图2<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-08%20%E4%B8%8B%E5%8D%888.57.47.png" alt=""></p></li></ul><hr><ul><li>图3</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-08%20%E4%B8%8B%E5%8D%889.01.44.png" alt=""></p><ul><li>图4<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-08%20%E4%B8%8B%E5%8D%889.01.53.png" alt=""></li></ul><blockquote><p>可以轻而易举的发现问题的所在了，接下来直接贴上完整的下载代码，不懂的朋友应当找相关的文档来自己查看，多写多实战！</p></blockquote><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><ul><li><strong>代码编译步骤：查看信息到分析整合最后是代码实现。</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="string">'''</span></div><div class="line"><span class="string">    函数目标：</span></div><div class="line"><span class="string">    爬取美女图片完整代码</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">    编写开始时间：</span></div><div class="line"><span class="string">    2018-3-08</span></div><div class="line"><span class="string">    </span></div><div class="line"><span class="string">'''</span></div><div class="line">    </div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"><span class="keyword">import</span> os </div><div class="line"><span class="keyword">import</span> time </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="comment"># 一个专题8页..</span></div><div class="line">    <span class="keyword">for</span>  num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">9</span>):</div><div class="line">        <span class="keyword">if</span> num == <span class="number">1</span>:</div><div class="line">            url = <span class="string">'http://www.27270.com/ent/meinvtupian/2017/223643.html'</span>  </div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            url = <span class="string">'http://www.27270.com/ent/meinvtupian/2017/223643_%d.html'</span> % num</div><div class="line">            </div><div class="line">        <span class="comment"># 在此就不添加代理部分的了，添加可起到隐蔽的效果，在需要的场合应当添加上</span></div><div class="line">        re = requests.get(url=url)</div><div class="line">        <span class="comment"># 之指定编码格式</span></div><div class="line">        re.encoding = <span class="string">'GB2312'</span></div><div class="line">        <span class="comment"># 用beautiful模块解析,具体可查看文档内容</span></div><div class="line">        bf = BeautifulSoup(re.text, <span class="string">'lxml'</span>)</div><div class="line">        <span class="comment"># 一页一张，用find方法</span></div><div class="line">        bf_html = bf.find(<span class="string">'div'</span>, class_=<span class="string">'articleV4Body'</span>)</div><div class="line"></div><div class="line">        <span class="comment"># 在创建的目录下保存！</span></div><div class="line">        urlretrieve(url=bf_html.img.get(<span class="string">'src'</span>), filename=bf_html.img.get(<span class="string">'alt'</span>) + <span class="string">'系列之%d.jpg'</span> % num)</div><div class="line">        <span class="comment"># 一秒一个步骤实行代码</span></div><div class="line">        time.sleep(<span class="number">1</span>)</div><div class="line">        print(<span class="string">'开始下载第%d张'</span> % num)</div><div class="line">          </div><div class="line">    print(<span class="string">'下载完成，请查收...'</span>)</div></pre></td></tr></table></figure><p>运行，查看效果：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-09%20%E4%B8%8B%E5%8D%889.47.25.png" alt=""></p><p>在本工程目录夹可查收…</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-09%20%E4%B8%8B%E5%8D%889.50.25.png" alt=""></p><hr><h2 id="最后总结"><a href="#最后总结" class="headerlink" title="最后总结"></a>最后总结</h2><p>代码还可以完善，比如可创建一个目录专门便于我们查收…</p><p>总之，还需要多多学习。</p><h2 id="修改添加目录程序"><a href="#修改添加目录程序" class="headerlink" title="修改添加目录程序"></a>修改添加目录程序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlretrieve</div><div class="line"><span class="keyword">import</span> os </div><div class="line"><span class="keyword">import</span> time </div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    </div><div class="line">    <span class="comment">#可先建立一个专门存放图片的目录文件夹</span></div><div class="line">    <span class="keyword">if</span> <span class="string">'images'</span> <span class="keyword">not</span> <span class="keyword">in</span> os.listdir():</div><div class="line">        os.makedirs(<span class="string">'images'</span>)</div><div class="line"></div><div class="line">    print(<span class="string">'建立目录夹完成，开始下载图片！'</span>)</div><div class="line">    </div><div class="line">    <span class="comment"># 一个专题8页..</span></div><div class="line">    <span class="keyword">for</span>  num <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">9</span>):</div><div class="line">        <span class="keyword">if</span> num == <span class="number">1</span>:</div><div class="line">            url = <span class="string">'http://www.27270.com/ent/meinvtupian/2017/223643.html'</span>  </div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            url = <span class="string">'http://www.27270.com/ent/meinvtupian/2017/223643_%d.html'</span> % num</div><div class="line">            </div><div class="line">        <span class="comment"># 在此就不添加代理部分的了，添加可起到隐蔽的效果，在需要的场合应当添加上</span></div><div class="line">        re = requests.get(url=url)</div><div class="line">        <span class="comment"># 之指定编码格式</span></div><div class="line">        re.encoding = <span class="string">'GB2312'</span></div><div class="line">        <span class="comment"># 用beautiful模块解析,具体可查看文档内容</span></div><div class="line">        bf = BeautifulSoup(re.text, <span class="string">'lxml'</span>)</div><div class="line">        <span class="comment"># 一页一张，用find方法</span></div><div class="line">        bf_html = bf.find(<span class="string">'div'</span>, class_=<span class="string">'articleV4Body'</span>)</div><div class="line"></div><div class="line">        <span class="comment"># 在创建的目录下保存！</span></div><div class="line">        urlretrieve(url=bf_html.img.get(<span class="string">'src'</span>), filename=<span class="string">'images/'</span>+bf_html.img.get(<span class="string">'alt'</span>) + <span class="string">'系列之%d.jpg'</span> % num)</div><div class="line">        <span class="comment"># 一秒一个步骤实行代码</span></div><div class="line">        time.sleep(<span class="number">1</span>)</div><div class="line">        print(<span class="string">'开始下载第%d张'</span> % num)</div><div class="line">           </div><div class="line">    print(<span class="string">'下载完成，请查收...'</span>)</div></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>麻木</title>
      <link href="/2018/03/03/%E9%BA%BB%E6%9C%A8/"/>
      <url>/2018/03/03/%E9%BA%BB%E6%9C%A8/</url>
      
        <content type="html"><![CDATA[<p>新的学期开始了。</p><p>当我反思了自己在之前的一些所做所言，我开始了一股深深的愧疚感，我的理想到了哪里去了？我不愿做一个“偏激”的代言人之一，但是麻木亦然不可取。但我应该谨记在心里，不能忘记，更不能因为这现实的种种而丧失了我的初心，忘了我的理想，那我曾经认为的美好。</p><a id="more"></a><p>我是慢慢的变得麻木了，开始想要得安稳与胸无理想，开始想要的安于现状，这是多么的可怕。</p><p>人在一种环境当中总是或多或少的被影响一些的。如今的我想要一种平静，但那是一种可以应对自如的一种理性，而不是慢慢的陷于麻木的颓废。可能是我太舒服了，变得安于现状了，慢慢的麻木了，开始变得曾经的那些“不喜欢”了。</p><p>写着写着，突然想起来一句话：生于忧患，死于安乐。此时此刻的我对于这句话有了自己的更为深刻的认识。一个人活着应该是为了这个人类社会的忧患做出应有的努力。至少我是认同这样的一种观点的。我有些怀疑过这些许观点的必要性，为什么这样的一种观点会得到我的或者是说为什么会得到如今大部分人类的认同从而占据人类社会的主流思想呢？我认为这与人类道德中的“善”是相挂钩的，这与大部分人的期许相对应符合，大多数的人们都渴望有“平和”（“和谐”）的生活状态与“有教养”的人文社会。而我或许也是其中的一份子。</p><p>我曾经有过的一种强烈的理想：通过发明一种技术，从而造福整个人类，让人们生活的更好。</p><p>我也应当时时刻刻的记得自己的期许，有着自己的见解，有着自己的看法，而不是跟着“世俗”走，以免再一次变得“麻木”，我所认为的麻木。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>假期小记</title>
      <link href="/2018/01/22/%E5%81%87%E6%9C%9F%E5%B0%8F%E8%AE%B0/"/>
      <url>/2018/01/22/%E5%81%87%E6%9C%9F%E5%B0%8F%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>最近总是想记一些东西，不过总是因为太懒就搁下了。</p><p>我谈恋爱了，是我喜欢的女孩。但是让我感觉有一些不靠谱，让我感觉到一场恋爱的开始是如此的容易…这是我没有想到的。她也喜欢我，我也喜欢她，一场恋爱就这样的开始了。我想开始一场恋爱也就如此而已，哈哈。</p><p>刚刚因为<em>iCloud</em>的一些事搁写了一下，现在继续。说到底<em>Apple</em>关于对于<em>iCloud</em>的宣布是对我有一些影响的，我对于自己的东西总是会有一些担心呢，哈哈。</p><a id="more"></a><p>我好久没怎么看三毛的书了，我以为我看了一本她的《三毛全集》就以为已将她的书都看完了，我发现还有一本她的书《送你一匹马》，依旧是从前的感觉，不过看的时候我的心情却是比从前平静的多了，但是，在其中带给我的感动总是满满的。</p><p>我如今觉得读书人读太多的书，或许是一种悲哀，一种赤裸裸的悲哀。难道不是吗，很多时候的可笑都是这一群自以为是的读书人做出来的。人都是矛盾的，这一点在读书人身上我却是更加的容易看到。读书人读书人，可笑的就是现在的我呢，哈哈。</p><p>这次放假的生活，也就像在学校一样的，吃喝拉玩睡等，不过玩和睡的比例却是大大的增加的了，哈哈。</p><p>突然的写着写着发现其实也没什么好写的了，不过是生活中的一些小小的记录。生活中的每一次清醒，我都会有一种极端的感觉，既然人生一场本来就是一无所有，我们现在做的却也不过是一场徒劳。不过有意义的总是在生活中的处处场景可以看到，我也一直相信，人生一场，意义是绝对存在的。</p><p>如今我更加的看重生活中的每一处，因为那是生活。我不过也就是一个学习者，我还要多多的学习，向生活学习。我自称学习者，刚刚写完这句话我又想笑了，哈哈。</p><p>算了算了。我发现如今的自己没有从前的那般的“热情记录”了，我变得不想说话在很多时候，其实说到底可能就是一种心态的体现而已。我不见得就是所谓的成长，有些东西随着时间的流逝有得有失，过着过着就变成今天这个样子了。</p><p>有时候总是想记一些东西，总是想写一些东西，有一种不写不舒服的感觉，有时候我觉得有一些欲望总是好的，特别是在这个无所事事的假期，我想我真的是懒得过分了过分了。</p><p>这一篇小记在此就结束了，想写的时候我会再来。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在学习python爬虫时的学习记录</title>
      <link href="/2017/12/08/%E5%85%B3%E4%BA%8E%E5%9C%A8%E5%AD%A6%E4%B9%A0python%E7%88%AC%E8%99%AB%E6%97%B6%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/12/08/%E5%85%B3%E4%BA%8E%E5%9C%A8%E5%AD%A6%E4%B9%A0python%E7%88%AC%E8%99%AB%E6%97%B6%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>最近学习<em>python3爬虫</em>，看的是<a href="http://blog.csdn.net/c406495762/article/details/78123502" target="_blank" rel="external">这位博主的博客</a>，不得不说，是真的厉害，通俗易懂^ _ ^</p><p><strong>我要学习的还有很多…从基本的<em>python</em>知识，我就被难倒了…</strong></p><p>哎，记录下我的盲点…</p><a id="more"></a><p>花了近一个钟头测试出来的结果。</p><ul><li>在爬取相关的<em>html</em>时，<strong>text ≠ text[0]</strong></li></ul><blockquote><p>后者是正确的。我一直以为不加的效果也是一样的结果，在我理解看来就是从头开始的，即<strong>从0到尾的所有相关的内容</strong>，实际上我的理解与相关的<em>python</em>基础不谋而和，可能是爬虫就需要如此的？我就默认好了…</p></blockquote><ul><li>在<em>python</em>中的方法后面的<strong><em>（）</em></strong>是不可省去的</li></ul><blockquote><p>在我学过一些其他的语言，在方法后面可不加括号，如<em>Scala</em>，曾经我在其他的<em>python</em>编程中是行得通的…但是在处理爬虫的代码时就报错了，我也默认了…</p></blockquote><ul><li>在<em>class</em>括号中的<em>object</em>是可有可无的</li></ul><blockquote><p> 这无疑是<em>python</em>的基本知识…</p></blockquote><ul><li>关于在<em>python</em>中类似<em>C</em>中的<em>printf</em>函数的使用</li></ul><blockquote><p>基本上是与<em>C</em>中的用法一致的，但是在爬虫中需要将爬取的内容输出，就需要<em>%%</em>来表示了…参考了<a href="http://www.169it.com/article/11773602545120851576.html" target="_blank" rel="external">这篇文章</a>，其中的有句这样解释道：<strong>用进行转义一样，这里用%作为格式标记的标识，也有一个%本身应该如何输出的问题。如果要在”格式标记字符串“中输出%本身，可以用%%来表示。</strong></p></blockquote><p>在用文件的<em>io</em>与<em>requests模块</em>的结合（<strong>x.content()</strong>）,可达到与<em>urlretrieve函数</em>同样的效果（只需输入URL地址即可）。</p><p>总结：还需要更多的学习。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今后的打算</title>
      <link href="/2017/12/07/%E4%BB%8A%E5%90%8E%E7%9A%84%E6%89%93%E7%AE%97/"/>
      <url>/2017/12/07/%E4%BB%8A%E5%90%8E%E7%9A%84%E6%89%93%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>恍然大悟，等我看到还有保研一说的政策时，我如今已是一名大二的学生了，保研的机会我基本上已是错过了。在我参考了一些相关的资料时，我又一次看到了人与人之间的差距…</p><a id="more"></a><p><strong>眼界对于一个人真的是太重要了，一个人不应该总是停留在现在，应该时时思考自己未来的方向。</strong></p><p>在如今的科技浪潮上，更高的学历当然是我所向往的，而我不喜欢考试，我深深的感觉到了自己不擅长考试，不管是小的还是大的，我对于考试已是到了难以忍耐的地步了，我能从内心感觉的到。</p><p>在我的这个时代，人工智能的浪潮早已是滚滚而来了。如今的我们身处在这个看似大好的“时代”，我也想分一杯羹，我也想通过这一次浪潮发挥自己的效用，借此实现自己的理想，为世界带来更多的福利，为世界人民带来更好的生活。</p><p>而在如今的现实是，高学历的普遍存在…这无疑会成为我的短板…而我可能也会因此而做出退让，放弃自己的技术选项…这真的是我的悲剧啊,会是我人生最大的悲剧吗？</p><p>如今的我需要突出自己的优势了，一定要突出自己的优势。更高的学历意味着无疑拥有更大的机会会得到更好的资源与更加广阔的眼界，不得不说，一个人的学习应该是终生的…</p><p>目前的我太过于浮躁与无定向的迷乱了…<strong>我还需要更多的学习与实践，突出自己的优势，必将是我应当做的，就在不远的今后。</strong></p><p><strong>摆正心态，不断实践，突出优势！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于利用python爬虫爬取小说的实战例子</title>
      <link href="/2017/12/04/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8python%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E7%9A%84%E5%AE%9E%E6%88%98%E4%BE%8B%E5%AD%90/"/>
      <url>/2017/12/04/%E5%85%B3%E4%BA%8E%E5%88%A9%E7%94%A8python%E7%88%AC%E8%99%AB%E7%88%AC%E5%8F%96%E5%B0%8F%E8%AF%B4%E7%9A%84%E5%AE%9E%E6%88%98%E4%BE%8B%E5%AD%90/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近对<strong><em>python爬虫</em></strong>很感兴趣，就花了一些时间来学习，学习了近一周的时间，终于在看了一些其他博客的大神写的教程之后，学会了利用<strong><em>beautifulsoup</em></strong>的方法爬取了一些网站的小说。在此分享我学习的成果。</p><ul><li><strong>关于详细的<em>python3爬虫</em>的学习教程以及参考：</strong><a href="http://blog.csdn.net/column/details/15321.html" target="_blank" rel="external">学习教程</a></li></ul><ul><li>本文参考并且学习了：<a href="http://blog.csdn.net/c406495762/article/details/71158264" target="_blank" rel="external">这篇文章</a></li></ul><ul><li>在以下的文中主要介绍<strong>爬小说的技巧</strong>。</li></ul><a id="more"></a><h1 id="爬取的过程"><a href="#爬取的过程" class="headerlink" title="爬取的过程"></a>爬取的过程</h1><h2 id="素材"><a href="#素材" class="headerlink" title="素材"></a>素材</h2><ul><li><p><a href="http://www.biqukan.com/38_38278/17032848.html" target="_blank" rel="external">笔趣阁小说网</a></p></li><li><p><a href="https://www.readnovel.com/chapter/7943133504728103/21429716840455516" target="_blank" rel="external">小说阅读网</a></p></li></ul><hr><h2 id="技巧分析"><a href="#技巧分析" class="headerlink" title="技巧分析"></a>技巧分析</h2><p>在编写代码前应先在浏览器中（推荐<em>Chrome</em>，我用的<em>Safari</em>）查看在网页抓包中的相关的内容信息，一般查看其中的：</p><ul><li><p><code>charset</code>（<strong>即其中的编码类型，在后面的程序中需要</strong>）</p></li><li><p><code>在文章开始阶段的前的那一小段html编码</code></p></li></ul><p>如下图所示的（等下将要用到）：</p><ul><li><code>charset</code>所示：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-05%20%E4%B8%8B%E5%8D%8812.50.43.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-05%20%E4%B8%8B%E5%8D%8812.49.48.png" alt=""></p><blockquote><p>一般在最前头可以看到。</p></blockquote><hr><ul><li><code>主要的一小段html</code>(即为<code>div</code>的标签，后面为相应的属性值，即一个<code>html</code>中有多个标签，每一个标签用不同的属性值来进行标记以表示不同的标签，从而在一个页面中可以有多个不同的内容展示出来)所示：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-05%20%E4%B8%8B%E5%8D%8812.50.55.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-05%20%E4%B8%8B%E5%8D%8812.50.09.png" alt=""></p><blockquote><p>如上在文章的前边的那一小段的<em>html代码</em>。</p></blockquote><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><ul><li>可先用相关的代码查看相关的网页字符属于那种编码类型</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># 用beautifulsoup爬取小说的例子</span></div><div class="line"><span class="comment">#     可先将网页编码的字符先行得知</span></div><div class="line"> <span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"> <span class="keyword">import</span> chardet</div><div class="line"> </div><div class="line"> re=request.urlopen(<span class="string">'http://www.biqukan.com/1_1094/5403177.html'</span>)</div><div class="line"> charset=chardet.detect(re.read())</div><div class="line"> print(<span class="string">'we can see the cahrset about the html:'</span>,charset)</div></pre></td></tr></table></figure><blockquote><p>具体的学习可以参考<a href="http://blog.csdn.net/c406495762/article/details/58716886" target="_blank" rel="external">这篇文章</a>。</p></blockquote><hr><ul><li>开始编写爬取相关内容的代码。<strong>将其中的<em>URL</em>地址以及相关的<em>charset所属字符</em>在以下的代码中修改一下均可达到在下方效果的显示</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#开始爬取相关的内容</span></div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> error</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    <span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">        <span class="comment">#相关的URL的输入以及代理</span></div><div class="line">        re=request.Request(url=<span class="string">'http://www.biqukan.com/1_1094/5403177.html'</span>,headers=&#123;<span class="string">'User-Agent'</span>:<span class="string">'* Mozilla/5.0 (Linux; U; Android 4.0.4; en-gb; GT-I9300 Build/IMM76D) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30'</span>&#125;)</div><div class="line">         <span class="comment">#打开,并且以相关的解码方式，此处应当对应上方的charset</span></div><div class="line">             html=request.urlopen(re).read().decode(<span class="string">'gbk'</span>,<span class="string">'ignore'</span>)</div><div class="line">        <span class="comment">#接下来创建beautifulsoup对象,找到相关的参数以便爬取内容</span></div><div class="line">        soup_text=BeautifulSoup(html,<span class="string">'lxml'</span>)</div><div class="line">        <span class="comment">#在html中若是有class注意将其中的class改为class_（因为python中有个class关键字的存在了),在此应当对应上方说明的html的一小段的编码</span></div><div class="line">        texts=soup_text.find_all(id=<span class="string">"content"</span> ，class_=<span class="string">"showtxt"</span>)</div><div class="line">        soup_texts=BeautifulSoup(str(texts),<span class="string">'lxml'</span>)</div><div class="line">        <span class="comment">#输出时将删除相关的不符合要求的字符,将其替换为空白</span></div><div class="line">        print(soup_texts.div.text.replace(<span class="string">'\xa0'</span>,<span class="string">''</span>))</div><div class="line"><span class="keyword">except</span> error.URLError <span class="keyword">as</span> e:</div><div class="line">    <span class="keyword">if</span> hasattr(e, <span class="string">'code'</span>):</div><div class="line">        print(<span class="string">'httperroe:'</span>)</div><div class="line">        print(e.cond)</div><div class="line">    <span class="keyword">if</span> hasattr(e, <span class="string">'reason'</span>):</div><div class="line">        print(<span class="string">'urlerror'</span>)</div><div class="line">        print(e.reason)</div></pre></td></tr></table></figure><blockquote><p>详细可参考：<a href="http://blog.csdn.net/c406495762/article/details/71158264" target="_blank" rel="external">这篇文章</a></p></blockquote><hr><h2 id="结果查看"><a href="#结果查看" class="headerlink" title="结果查看"></a>结果查看</h2><ul><li>关于在第一段的实战效果：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-05%20%E4%B8%8B%E5%8D%883.25.11.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-05%20%E4%B8%8B%E5%8D%883.25.26.png" alt=""></p><hr><ul><li>关于在第二段的实战效果：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-05%20%E4%B8%8B%E5%8D%883.27.06.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-05%20%E4%B8%8B%E5%8D%883.27.17.png" alt=""></p><hr><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><blockquote><p><strong>在网页中爬取的小说内容都是可以直接下载至本地的，具体的可以参考以上的那个学习教程。</strong></p></blockquote><ul><li><p>可学习的参考网站：</p><p>  <a href="http://blog.csdn.net/column/details/15321.html" target="_blank" rel="external"><em>python3爬虫教程</em></a></p><p>  <a href="http://beautifulsoup.readthedocs.io/zh_CN/latest/" target="_blank" rel="external">beautifulsoup官网教程</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Mac关机与iCloud的打不开的问题记录</title>
      <link href="/2017/12/03/%E5%85%B3%E4%BA%8EMac%E5%85%B3%E6%9C%BA%E4%B8%8EiCloud%E7%9A%84%E6%89%93%E4%B8%8D%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/12/03/%E5%85%B3%E4%BA%8EMac%E5%85%B3%E6%9C%BA%E4%B8%8EiCloud%E7%9A%84%E6%89%93%E4%B8%8D%E5%BC%80%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>这一段时间因为开的网页比较重要，<em>Mac</em>一直没有关机，晚上睡觉也是合上就这样了，没想到才3天这样，<em>Mac</em>好像支撑不了了…变得有些卡了，在未关机前的硬盘空间大小与关机后打开之后的硬盘空间大小相差了<strong>5个G</strong>，在重启开机时出现了一段绿屏…，由此可知，一段有规律的关机保养还是很有必要的…</p><a id="more"></a><p>关于<em>iCloud</em>的一些打开错误，如打开查看存储信息时的错误问题等等，一般的解决方法为：换一个网络连接即可解决。</p><blockquote><p>此时换<em>DNS</em>的地址是不管用的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> iCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Mac网速慢的原因记录</title>
      <link href="/2017/12/01/%E5%85%B3%E4%BA%8EMac%E7%BD%91%E9%80%9F%E6%85%A2%E7%9A%84%E5%8E%9F%E5%9B%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/12/01/%E5%85%B3%E4%BA%8EMac%E7%BD%91%E9%80%9F%E6%85%A2%E7%9A%84%E5%8E%9F%E5%9B%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>最近<em>Mac</em>突然变得很慢，明明网速很快的。</p><p>在网上看了一下，发现可能是<em>DNS</em>的问题，果然换了一下（以前用的都是<em>8.8.8.8</em>估计用的人多了就卡了），把号删除了，发现网速飞的快起…</p><p>不过在平时中下载<em>app</em>失败时可以考虑换回来就好使了。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于python下载scrapy失败的问题记录</title>
      <link href="/2017/12/01/%E5%85%B3%E4%BA%8Epython%E4%B8%8B%E8%BD%BDscrapy%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/12/01/%E5%85%B3%E4%BA%8Epython%E4%B8%8B%E8%BD%BDscrapy%E5%A4%B1%E8%B4%A5%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>用的<em>anaconda</em>的<em>python3</em>，下载<em>scrapy</em>出现以下情况：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-01%20%E4%B8%8B%E5%8D%881.09.17.png" alt=""></p><a id="more"></a><blockquote><p>即表示下载失败。</p></blockquote><hr><p><strong>看到网上大部分说的太复杂的解决方案，其实太过于小题大做了。</strong></p><p><strong>解决方法：重新下载一次。</strong></p><ul><li>图1</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-01%20%E4%B8%8B%E5%8D%881.09.23.png" alt=""></p><hr><ul><li>用命令行<em>conda list</em>查看</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-12-01%20%E4%B8%8B%E5%8D%881.09.36.png" alt=""></p><blockquote><p>下载成功了。</p></blockquote><hr><ul><li><strong>若是失败了，多下载几次大多即可解决。</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Scrapy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于用java编译的mapreduce与用Scala编译的spark的对比（单词统计的例子说明）</title>
      <link href="/2017/11/29/%E5%85%B3%E4%BA%8E%E7%94%A8java%E7%BC%96%E8%AF%91%E7%9A%84mapreduce%E4%B8%8E%E7%94%A8Scala%E7%BC%96%E8%AF%91%E7%9A%84spark%E7%9A%84%E5%AF%B9%E6%AF%94%EF%BC%88%E5%8D%95%E8%AF%8D%E7%BB%9F%E8%AE%A1%E7%9A%84%E4%BE%8B%E5%AD%90%E8%AF%B4%E6%98%8E%EF%BC%89/"/>
      <url>/2017/11/29/%E5%85%B3%E4%BA%8E%E7%94%A8java%E7%BC%96%E8%AF%91%E7%9A%84mapreduce%E4%B8%8E%E7%94%A8Scala%E7%BC%96%E8%AF%91%E7%9A%84spark%E7%9A%84%E5%AF%B9%E6%AF%94%EF%BC%88%E5%8D%95%E8%AF%8D%E7%BB%9F%E8%AE%A1%E7%9A%84%E4%BE%8B%E5%AD%90%E8%AF%B4%E6%98%8E%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>最近在学习<em>spark</em>，顺便也学习了<em>Scala</em>的在其间的使用。我发现与用<em>java</em>编译的<em>mapreduce</em>相比，用<em>Scala</em>编译的<em>spark</em>更加的容易让人被其折服…</p><a id="more"></a><p>直接看图说话吧，感受<em>spark</em>的强大！以统计单词为例。</p><ul><li>以下为<em>java</em>编译的<em>mapreduce</em></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-29%20%E4%B8%8B%E5%8D%8810.00.19.png" alt=""></p><blockquote><p>70+行的代码。</p></blockquote><hr><ul><li><em>Scala</em>编译的<em>spark</em></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-29%20%E4%B8%8B%E5%8D%8810.00.32.png" alt=""></p><blockquote><p>仅仅为6行代码….</p></blockquote><hr><ul><li>同样的结果如下：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-29%20%E4%B8%8B%E5%8D%8810.01.11.png" alt=""></p><hr><ul><li>最后，据说官方会考虑将<em>mapreduce</em>优化,拭目以待吧…相比如今的<em>spark</em>的威力…</li></ul><p><strong>记录此文章仅仅是为了表达我心中的兴奋，因为遇到了<em>spark</em>…</strong></p>]]></content>
      
      
      <categories>
          
          <category> Hadoop </category>
          
          <category> Java </category>
          
          <category> Mapreduce </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> Java </tag>
            
            <tag> Mapreduce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在用Scala编译spark中的reduce方法计算的问题疑惑记录</title>
      <link href="/2017/11/28/%E5%85%B3%E4%BA%8E%E5%9C%A8%E7%94%A8Scala%E7%BC%96%E8%AF%91spark%E4%B8%AD%E7%9A%84reduce%E6%96%B9%E6%B3%95%E8%AE%A1%E7%AE%97%E7%9A%84%E9%97%AE%E9%A2%98%E7%96%91%E6%83%91%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/28/%E5%85%B3%E4%BA%8E%E5%9C%A8%E7%94%A8Scala%E7%BC%96%E8%AF%91spark%E4%B8%AD%E7%9A%84reduce%E6%96%B9%E6%B3%95%E8%AE%A1%E7%AE%97%E7%9A%84%E9%97%AE%E9%A2%98%E7%96%91%E6%83%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>在学习<em>spark</em>中，<em>reduce</em>方法是绕不开的。但是我在测试时发现与从前的规则好像有一点冲突了…</p><a id="more"></a><p>如下分析：</p><ul><li>输入代码   </li></ul><blockquote><p>1, <strong>val a=sc.parallelize(1 to 10)</strong>//理论上理解为0～9的数字放在一个分区</p><p>2, <strong>a.reduce((x,y) =&gt; x+y)</strong></p></blockquote><ul><li>输出</li></ul><blockquote><p><strong>55</strong>//即意味着从0（0可省亦可）到10(包括10在内了，与上方的<em>to</em>方法冲突了)都被相加了…</p></blockquote><p>这测试我想了老半天了…没想到是这种结果…<em>bug</em>???</p>]]></content>
      
      
      <categories>
          
          <category> Scala </category>
          
          <category> Spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Scala </tag>
            
            <tag> Spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>名人效应</title>
      <link href="/2017/11/28/%E5%90%8D%E4%BA%BA%E6%95%88%E5%BA%94/"/>
      <url>/2017/11/28/%E5%90%8D%E4%BA%BA%E6%95%88%E5%BA%94/</url>
      
        <content type="html"><![CDATA[<p>“名人效应”在我们的生活中屡见不鲜，当我们在遇到一些挂有所谓的“名气”的人，比如“名校”出来的人，或者是一些本身就是所谓的“名人”的人时，心中大多会不由自主的产生一种敬畏与向往，有时竟然会产生自卑的感觉…我感觉这好似一种“阴差阳错”，又不得不感慨这种“名人效应”对我们的这种“潜移默化”教化的感觉。</p><a id="more"></a><p>那么这种效应究竟是从何而来？为何又产生这种貌似人与生就有的“天性”？我想可以在我们的生活中可以找到答案。</p><p>因为我们从小到大的生活环境都是如此“教育”我们的，所以在我们身边大部分的人的这种相关的“感觉”会伴随我们成长，久而久之我们也是这般如此了。简要分析可知这一类的大部分人在我们成长的过程中好似又是不可或缺的，又好似是不可避免的，哈哈，难道不是吗，我们身边的大多数父母即是如此，最简单的理解，“考上一个好的大学”。在此我们就知道了，原来世界上有一些“有名”的大学，从身边的一些“名人”的崇拜者，我们与之交流亦或者是道听途说，听多了看多了自然也就易被“名化”了…</p><p>那么“自卑感”又从何而来？…我想这是一种错误的，被“名化”扭曲了的心理活动吧，至少我是这么认为的。这里的“名化”可以理解为被“名”影响化了的意思，这样的人往往不由自主的随波逐流，被“名”波及到。当然，可能也与所谓的“好强心”，所谓的“羡慕嫉妒”也会有一定的挂钩吧。</p><p>不管怎么说，我感觉这就是一种“不应该”，带“名”的东西亦然有其的优势，但是如果一味“随波逐流”的因此把自己搞得扭曲，那真的是得不偿失，对不起自己了…与我而言，真的是一种非常蠢的心理活动呢…</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在eclipse中编译Scala自动补全的添加设置</title>
      <link href="/2017/11/27/%E5%85%B3%E4%BA%8E%E5%9C%A8eclipse%E4%B8%AD%E7%BC%96%E8%AF%91Scala%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%E7%9A%84%E6%B7%BB%E5%8A%A0%E8%AE%BE%E7%BD%AE/"/>
      <url>/2017/11/27/%E5%85%B3%E4%BA%8E%E5%9C%A8eclipse%E4%B8%AD%E7%BC%96%E8%AF%91Scala%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8%E7%9A%84%E6%B7%BB%E5%8A%A0%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<ul><li>如下图</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-27%20%E4%B8%8B%E5%8D%887.39.14.png" alt=""></p><blockquote><p>全部打勾上，还犹豫个啥子？编译过程中会发现比之前轻松不少。</p></blockquote><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> Eclispe </category>
          
          <category> Scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclispe </tag>
            
            <tag> Scala </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在简要学习Scala中的疑惑记录</title>
      <link href="/2017/11/27/%E5%85%B3%E4%BA%8E%E5%9C%A8%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0Scala%E4%B8%AD%E7%9A%84%E7%96%91%E6%83%91%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/27/%E5%85%B3%E4%BA%8E%E5%9C%A8%E7%AE%80%E8%A6%81%E5%AD%A6%E4%B9%A0Scala%E4%B8%AD%E7%9A%84%E7%96%91%E6%83%91%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>在简要学习<em>Scala</em>的一些基本的使用，有一些学习上的感到疑惑的问题记录在此。</p><a id="more"></a><ul><li><p><strong>调用方法时不加<em>“.”</em>一样可以，在方法最后不加<em>“return”</em>亦可，不过为了可读性，一般都是加的。</strong></p></li><li><p><strong>在语句时常出现的“-”</strong></p></li></ul><p>其实这就是一种变量的简写。打个比方：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">val a = Array(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</div><div class="line">val b = a.map(_ * <span class="number">2</span>)</div></pre></td></tr></table></figure><p><em>输出变量b：</em><code>（2，4，6，8）</code></p><blockquote><p>则易可知其中的语句<strong>val b = a.map(_ * 2)</strong>就相当于<strong>val b = a.map(a * 2)</strong></p></blockquote><ul><li><strong>关于其中的lazy</strong></li></ul><blockquote><p>详细可以参考此<a href="https://segmentfault.com/a/1190000006126119" target="_blank" rel="external">文章</a></p></blockquote><p><em>如下打个比方：</em></p><p><strong>lazy val property = initProperty()</strong></p><p>使用lazy关键字修饰变量后，只有在使用该变量时，才会调用其实例化方法。也就是说在定义property=initProperty()时并不会调用initProperty()方法，只有在后面的代码中使用变量property时才会调用initProperty()方法。</p><blockquote><p>如果不使用lazy关键字对变量修饰，那么变量property是立即实例化的</p></blockquote><p><em>可以再看看下面的利于理解：</em></p> <figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"> object LazyOps &#123;</div><div class="line"></div><div class="line"><span class="function">def <span class="title">init</span><span class="params">()</span>: String </span>= &#123;</div><div class="line">    println(<span class="string">"call init()"</span>)</div><div class="line">    <span class="keyword">return</span> <span class="string">""</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">def <span class="title">main</span><span class="params">(args: Array[String])</span> </span>&#123;</div><div class="line">    val property = init();<span class="comment">//没有使用lazy修饰</span></div><div class="line">    println(<span class="string">"after init()"</span>)</div><div class="line">    println(property)</div><div class="line">&#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure><p>上面的property没有使用lazy关键字进行修饰，所以property是立即实例化的，如果观察程序的输出:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function">call i <span class="title">nit</span><span class="params">()</span></span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function">after <span class="title">init</span><span class="params">()</span></span></div></pre></td></tr></table></figure><p>可以发现，property声明时，立即进行实例化,调用了init()`实例化方法</p><p>而如果使用lazy关键字进行修饰：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> object LazyOps &#123;</div><div class="line"></div><div class="line"><span class="function">def <span class="title">init</span><span class="params">()</span>: String </span>= &#123;</div><div class="line">    println(<span class="string">"call init()"</span>)</div><div class="line">    <span class="keyword">return</span> <span class="string">""</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">def <span class="title">main</span><span class="params">(args: Array[String])</span> </span>&#123;</div><div class="line">    lazy val property = init();<span class="comment">//使用lazy修饰</span></div><div class="line">    println(<span class="string">"after init()"</span>)</div><div class="line">    println(property)</div><div class="line">    println(property)</div><div class="line">&#125;</div><div class="line"></div><div class="line"> &#125;</div></pre></td></tr></table></figure><p>观察输出:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function">after <span class="title">init</span><span class="params">()</span></span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function">call <span class="title">init</span><span class="params">()</span></span></div></pre></td></tr></table></figure><p>在声明property时，并没有立即调用实例化方法intit(),而是在使用property时，才会调用实例化方法,并且无论缩少次调用，实例化方法只会执行一次。</p><ul><li>在<em>Scala</em>中的<em>break</em>可用<em>return</em>替代。</li></ul><blockquote><p>暂时这么多，以后再补充。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Scala </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Scala </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用eclipse搭建Spark的运行环境(单机)</title>
      <link href="/2017/11/26/%E7%94%A8eclipse%E6%90%AD%E5%BB%BASpark%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83(%E5%8D%95%E6%9C%BA)/"/>
      <url>/2017/11/26/%E7%94%A8eclipse%E6%90%AD%E5%BB%BASpark%E7%9A%84%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83(%E5%8D%95%E6%9C%BA)/</url>
      
        <content type="html"><![CDATA[<p>学习<em>Spark</em>用的<em>eclipse</em>习惯了，看了<a href="http://kevin12.iteye.com/blog/2274179" target="_blank" rel="external">这一篇文章</a>搭建了一个单机环境，不过这个单机环境搭建起来了，以后的集群环境我相信也容易了…</p><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li><p><em>本地下载Scala</em></p></li><li><p><em>本地有下载Spark</em></p></li><li><p><em>本地有下载eclipse以及Scala的插件</em></p></li></ul><blockquote><p>以上过程在网上已经有一大堆教程了。</p></blockquote><hr><a id="more"></a><h1 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h1><blockquote><p>我的搭建过程与上方的文章有一些差距，毕竟年代久远了…</p></blockquote><ul><li><p>第一步：以上的环境都搭建好以后，建一个<em>Scala</em>工程。</p></li><li><p>第二步：在此工程下建一个<em>Scala Object</em>，在<em>Scala</em>中是以建立一个<em>Object</em>为准的，意思就是相当于<em>python</em>的一个方法工程。<em>Scala</em>一向诡异，看它的语法就知道了…</p></li><li><p>第三步：导入<em>spark</em>中的相关的包（如图），为了避免什么问题反正我是全部导入了</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-26%20%E4%B8%8B%E5%8D%886.53.28.png" alt=""></p><hr><blockquote><p>如果在建立之后，工程的下边出现有一个小叉叉，右键<em>Scala Library container</em>,选择<em>Properties</em>,选择上一代一版本的<em>Scala</em>（如图）即可解决小叉叉的问题，如果不行可以尝试其他的版本试试。(我的默认是2.12,换下面的2.11小叉叉消失,<em>spark2.2.0</em>建立和分发默认使用<em>Scala 2.11</em>)</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-26%20%E4%B8%8B%E5%8D%886.58.06.png" alt=""></p><hr><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ul><li>环境搭建就是那么的简单，在此测试一下。在刚刚建好的工程下输入以下代码，<strong>注意其中的提示</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> org.apache.spark.SparkConf</div><div class="line"><span class="keyword">import</span> org.apache.spark.SparkContext</div><div class="line">      <span class="comment">//以下主类名为工程名</span></div><div class="line">object First_Spark &#123;</div><div class="line">  <span class="function">def <span class="title">main</span><span class="params">(args: Array[String])</span>: Unit </span>= &#123;</div><div class="line">    val conf = <span class="keyword">new</span> SparkConf()</div><div class="line">    conf.setAppName(<span class="string">"Frist Spark"</span>)</div><div class="line">    conf.setMaster(<span class="string">"local"</span>)</div><div class="line">    val sc = <span class="keyword">new</span> SparkContext(conf)</div><div class="line">                             <span class="comment">//以下为文件的所在地</span></div><div class="line">    val lines = sc.textFile(<span class="string">"/Users/junjieliu/Downloads/README.md"</span>, <span class="number">1</span>)</div><div class="line">    val words = lines.flatMap &#123; (lines =&gt; lines.split(<span class="string">" "</span>)) &#125;</div><div class="line">    val pairs = words.map &#123; word =&gt; (word, <span class="number">1</span>) &#125;</div><div class="line">    val wordcount = pairs.reduceByKey(_ + _)</div><div class="line">    wordcount.foreach(pair =&gt; println(pair._1 + <span class="string">":"</span> + pair._2))</div><div class="line">    sc.stop()</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><ul><li>运行，点击<em>run</em>（如图）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-26%20%E4%B8%8B%E5%8D%887.01.52.png" alt=""></p><hr><ul><li>测试效果：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-26%20%E4%B8%8B%E5%8D%886.35.33.png" alt=""></p><blockquote><p>看起来是不是比<em>Hadoop</em>的<em>mapreduce</em>简单多了，哈哈。</p></blockquote><ul><li><strong>补充：</strong></li></ul><p><strong>在<em>eclipse</em>中编译<em>spark</em>代码时，应当加上<em>println</em>之类的方法在最后以保结果可以正确输出，为何要强调这一点呢？因为在终端运行代码时，我们通常是不需要输入<em>println</em>之类的方法就可输出相关的结果的，这一点应该记住，不然易导致在<em>eclipse</em>中运行代码时容易出错，并且大部分人我相信也会像从前的我一样没有什么头绪，而现在就有了…</strong></p><ul><li>如图：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-29%20%E4%B8%8B%E5%8D%889.43.20.png" alt=""></p><hr><blockquote><p>这些真的都需要自己去实践发现的，我也是在参考了一些资料之后才发现的这个问题…因为网上关于用<em>eclipse</em>像我这样编译<em>spark</em>的教程并不多，据我所看到的，大多用<em>maven</em>来搭建<em>spark</em>的编译环境的。</p><p><strong>最为重要的一点是在<em>eclipse</em>中编译相关的代码时，输出的结果是无法判断是否是正确的…即使我们在平时的编译中是有一定的错误提示的，但是对于初学者来说还是有一点不友好的感觉…</strong></p></blockquote><p><strong>另外的补充：在<em>eclipse</em>中运行结果时，有一定的会在右下角显示的缓冲时间，细心一点的朋友可能会发现了，由此说来结果是需要一点时间来输出的（不如说是正确的结果）。所以在<em>eclipse</em>运行时需要多运行几次（因为需要在第一次运行之后缓冲才会开始，所以一般运行两次这样就可得之正确的相关的结果了），若是结果还不对，最大的问题可能就是在代码上了…</strong></p>]]></content>
      
      
      <categories>
          
          <category> Eclispe </category>
          
          <category> Spark </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Eclispe </tag>
            
            <tag> Spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在《用python写网络爬虫》一书中的补充</title>
      <link href="/2017/11/23/%E5%85%B3%E4%BA%8E%E5%9C%A8%E3%80%8A%E7%94%A8python%E5%86%99%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E3%80%8B%E4%B8%80%E4%B9%A6%E4%B8%AD%E7%9A%84%E8%A1%A5%E5%85%85/"/>
      <url>/2017/11/23/%E5%85%B3%E4%BA%8E%E5%9C%A8%E3%80%8A%E7%94%A8python%E5%86%99%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E3%80%8B%E4%B8%80%E4%B9%A6%E4%B8%AD%E7%9A%84%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<p>最近学习爬虫，感觉挺有意思，在看《用python写网络爬虫》以及《python网络数据采集》，前者使用<em>python2</em>为主，后者则是以<em>python3</em>为主，各有千秋，对我来说都不错。</p><a id="more"></a><p>不过在前者的书中的一些方法代码却是有时运行容易出错，解决的方法是将书中的方法裁开，用非方法的方式写出相应的代码即可正确。关于此可以参考<a href="http://cuiqingcai.com/1052.html" target="_blank" rel="external">这位大神的博客</a>。博客以<em>python2</em>写的爬虫，有一些实战，与书搭配着看效果非常不错。</p><blockquote><p>另外的一些问题，在我之后在补充。目前问题并没有发现太多。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Vi/Vim的基本使用的记录</title>
      <link href="/2017/11/22/%E5%85%B3%E4%BA%8EVi-Vim%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/22/%E5%85%B3%E4%BA%8EVi-Vim%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>关于vi / vim命令的记录</strong></li></ul><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">*其中的命令的快捷键均对应Mac的“control”键*</div><div class="line"></div><div class="line">一般模式到编辑模式：i,o,a,r(可大写)  按下ESC推回</div><div class="line">↑↑</div><div class="line">   编译模式与命令模式两者不可切换</div><div class="line">↓↓</div><div class="line">一般模式到命令模式：：，/，？进入 按下ESC推回</div><div class="line"></div><div class="line">vi /vim （文件）//编译一个文件</div><div class="line"></div><div class="line">在一般模式中输入“：wq” 保存之后离开vi（输入“：wq!”可强行写入，即在权限可改的前提下）</div><div class="line">另外用“：w”可获得文件的相关的基本信息，利用“：q”可直接推出编译</div><div class="line"></div><div class="line"><span class="built_in">alias</span> 的使用得知一些命令行名字的改变</div><div class="line"></div><div class="line">vim 与 vi的区别：</div><div class="line">最为简单的一点为两者在打开文件的显示亦然不同，前者的功能亦然是相比后者多多的。</div><div class="line"></div><div class="line">即在一般模式下的关于文件内容的选择相关的操作（亦称为所谓的Visual Block，即块选择）：</div><div class="line">在需要的地方按下Ctrl+v —&gt; 移动到需求的地方，开始发白…此时即可进行相关的操作了（y:复制，p:粘贴，d:删除）</div><div class="line"></div><div class="line">vim的多文本的编译：</div><div class="line">多个文件的打开：vim (文件名1） （文件名2）</div><div class="line">多个文本编译的按键</div><div class="line">:n编译下一个文件</div><div class="line">:N编译上一个文件</div><div class="line">:fiel目前所有的文件展示</div><div class="line">其中的快捷键记录：“G:到最后一行”，“u:还原数据”，“q:推出”</div><div class="line"></div><div class="line">vim多个窗口的实现：</div><div class="line">:sp在目前的窗口中按下得出同一个文件的另一个新的窗口</div><div class="line">:sp (文件名)在目前的窗口打开新的文件的一个新的窗口</div><div class="line">Ctrl+w+j / ↓换窗口操作，按ctrl不放，在按下w放开所有的键按下最后的键即可</div><div class="line">Ctrl+w+k / ↑ 如上操作</div><div class="line">Ctrl +w+q等于在一个窗口中按下“:q”推出现在的窗口</div><div class="line"></div><div class="line">关于在vim之中的一些环境设置可参考其他的材料。</div></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Linux与win的基本命令的简要记录</title>
      <link href="/2017/11/22/%E5%85%B3%E4%BA%8ELinux%E4%B8%8Ewin%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E7%9A%84%E7%AE%80%E8%A6%81%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/22/%E5%85%B3%E4%BA%8ELinux%E4%B8%8Ewin%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E7%9A%84%E7%AE%80%E8%A6%81%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>基本命令</p><p>实际上的命令通过man /info /—help即可快速掌握命令的使用</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div></pre></td><td class="code"><pre><div class="line">Centos                    Windons</div><div class="line"></div><div class="line">ls （目录名）dir//查看其中的内容</div><div class="line">ls —<span class="built_in">help</span> / man ls /info ls       //查看命令帮助</div><div class="line">clearcls//清屏</div><div class="line"><span class="built_in">cd</span> .<span class="built_in">cd</span>  .//进入当前目录</div><div class="line"><span class="built_in">cd</span> . .<span class="built_in">cd</span> . . //进入上级目录</div><div class="line"><span class="built_in">cd</span> /xxx/xx</div><div class="line"><span class="built_in">cd</span> / / <span class="built_in">cd</span> ~//根目录</div><div class="line"><span class="built_in">cd</span> - //返回上一级目录</div><div class="line"><span class="built_in">pwd</span>//显示当前目录</div><div class="line">whoami/ who//查看当前名与版本号等等...</div><div class="line">lsb_release -a//查看系统信息</div><div class="line">rmdir//删除一个空的目录</div><div class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span>//查看用户的配置情况</div><div class="line"></div><div class="line">～表示自己的主文件夹,即为root根目录</div><div class="line"></div><div class="line">date （可加相关的对应符号得出对应的理想的日期） //日前</div><div class="line">cal（可指名时间）//日历</div><div class="line">bc （quit推出）//系统计算器的进入</div><div class="line"></div><div class="line">shutdown  //关机 </div><div class="line">reboot//重启</div><div class="line">有时会因为权限问题导致命令执行失败，即为root与本人的切换可以解决</div><div class="line"></div><div class="line">chgrp//改变文件所属用户组</div><div class="line">chown//改变文件所有者</div><div class="line">chmod//改变文件的权限，r:4 ; w:2; x:1 </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">su (root)//切换用户</div><div class="line"><span class="built_in">exit</span>//推出当前的用户</div><div class="line">chown （用户）(文件目录)    //以给予文件到一个没有权限的用户</div><div class="line"></div><div class="line"></div><div class="line">passwd//当前用户密码更改</div><div class="line">以上两者一并使用</div><div class="line"></div><div class="line">ifconfigipconfig//查看IP地址</div><div class="line"></div><div class="line">ping (域名地址 / localhost)     //网络延迟</div><div class="line">有一些需要在有网的情况下ping…</div><div class="line"></div><div class="line">ll //别名, 即为ls -l的命令行罢了</div><div class="line"><span class="built_in">alias</span>//查看所有别名</div><div class="line">ls -a -l -h//查看当前目录 -h , 人性化 -l ,列表 -a,显示，开头</div><div class="line">mkdir ~/xxx/x//创建目录文件夹</div><div class="line">touch ~/xxx/x/x.txt//创建文件，亦可结合相关的参数更改文件的日期</div><div class="line"><span class="built_in">echo</span> (内容）&gt; x.txt//重定向输出，即为输入内容到此中</div><div class="line"><span class="built_in">echo</span> (内容) &gt;&gt; x.txt//追加内容入文件</div><div class="line">cat x.txt / more x.txt<span class="built_in">type</span> x.txt//查看文件</div><div class="line">tac x.txt//以最后的行数输出，即与cat的命令功能相反</div><div class="line">nl （参数）（文件）//将文件内容添加行数打印出来</div><div class="line">more / less //翻页参考文件内容</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">cp x.txt （可有多个一同）x1.txt//复制文件</div><div class="line"></div><div class="line">rm x.txt//删除文件</div><div class="line"></div><div class="line">cp *.txt（可有多个一同） tmp/（可不加 / ）//复制文件入某个文件夹</div><div class="line"></div><div class="line">rm *//删除当下文件夹全部文件</div><div class="line">rm x.txt//删除文件</div><div class="line">rm -rf tmp//强制删除</div><div class="line">mv x.txt tmp///强行删除文件夹</div><div class="line">以上的目录应当清晰自己在哪…</div><div class="line"></div><div class="line">centos 切换模式:</div><div class="line">若是在Mac系统的虚拟机运行的系统，则ctrl对应control, alt对应option，按fn显示F键盘</div><div class="line">ctrl + alt +f6//切换到文本模式</div><div class="line">Ctrl + alt //切换鼠标</div><div class="line">Ctrl + alt +f1//切换到桌面模式</div><div class="line">Ctrl + alt +f5//切换到新的文本模式</div><div class="line"></div><div class="line"></div><div class="line"> </div><div class="line">Nano文本编译器命令行</div><div class="line">若是在Mac系统的虚拟机运行的系统，则ctrl对应control, alt对应option，按fn显示F键盘</div><div class="line"></div><div class="line">nano x.txt//打开nano编译器，编译对应的文件</div><div class="line">在nano的文本编译器中注意本人与root的区别</div><div class="line"></div><div class="line">ctrl + o //保存文件，之后直接回车保存</div><div class="line">Ctrl + x //提出文件</div><div class="line">Ctrl + k //cut文件</div><div class="line">Ctrl + u //uncut / 复制相关的内容到当前文件</div><div class="line"></div><div class="line">more  （（可加）-5（数字，表示显示多少行））x.txt //分屏显示</div><div class="line">在当前的目录下直接使用more亦可</div><div class="line"></div><div class="line">tail x.txt//最后10行</div><div class="line">find . | more// | 是管道符，前面的命令的输出作为后面命令输入</div><div class="line">find ~ </div><div class="line">ls </div><div class="line">head  -(数字）x.txt//取出前几行的文件内容</div><div class="line">tail-（数字）x.txt//取出后面几行的额文件内容</div><div class="line">od //改为进制表的形式来输出相关的文件内容</div><div class="line"></div><div class="line"><span class="built_in">umask</span> (-S)//文件默认权限的查看</div><div class="line">chattr//设置文件的隐藏属性，如不能被删除等..</div><div class="line">lsattr//显示文件的隐藏属性</div><div class="line">file//查看一个文件的基本信息</div><div class="line"><span class="built_in">which</span>//查找“执行文件”，一般的“执行文件”可以理解为可以<span class="built_in">cd</span>到的文件</div><div class="line">whereis//查找文件地址，或者是说查找包含有相关的字词的文件</div><div class="line">locate//查找相关的字词的文件位置</div><div class="line">find//强大的查找命令，包括有关于日期的，本人的限定条件查找等..</div><div class="line">还有一些SGID的特殊权限在书中查找即可..</div></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无言</title>
      <link href="/2017/11/22/%E6%97%A0%E8%A8%80/"/>
      <url>/2017/11/22/%E6%97%A0%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<ul><li>搞海外民运的所谓的核心人员，像是无头无脑的庸人似的，毫无表现出应有的政治才能，除了一味的附和大众，一味的解脱自己，依然也做不成什么气候，那为何要这般折腾呢。这不像是所谓的民运，不像是所谓的要解放华夏人民，这像是一番闹剧，给多数的明智的人们看来就像是一出笑话。在我看来，民运可以得到支持，但是前提是需要一个靠谱的领导人来领导前行，现在的一些所谓的天天喊着要搞民运的却是没有什么才能没有什么实干的人不适合当这个角色。</li></ul><a id="more"></a><ul><li><p>中国大陆历史以来都是一代又一代的专制者的舞台，如今的中共也不过是铺了前人的后台，不过历史告诉人们，灭亡的一天终将会到来。</p></li><li><p>人们不应麻木，应当时时保持清醒，保持自我的理智，迎接好不确定的未来明天。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于python爬虫代码的运行</title>
      <link href="/2017/11/20/%E5%85%B3%E4%BA%8Epython%E7%88%AC%E8%99%AB%E4%BB%A3%E7%A0%81%E7%9A%84%E8%BF%90%E8%A1%8C/"/>
      <url>/2017/11/20/%E5%85%B3%E4%BA%8Epython%E7%88%AC%E8%99%AB%E4%BB%A3%E7%A0%81%E7%9A%84%E8%BF%90%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>关于<em>python爬虫</em>的关键几点简单在此记录下好了。</p><a id="more"></a><ul><li><p>下载<em>Scrap</em>库。</p></li><li><p>在每一个基于<em>python2</em>工程中的第一行加上<code># -*- coding: UTF-8 -*-</code>，否则运行时出现会不必要的错误。</p></li><li><p>在<em>eclipse</em>中运行代码。实际上以上的要求达到后，直接在<em>eclipse</em>中创建工程，编写好了一步在<em>eclipse</em>中运行即可得知结果。</p></li><li><p>在终端中运行代码。在其中打开<em>python</em>编译环境，之后对向工程的所在目录，一般是<em>eclipse</em>的<em>workspace</em>之中的子目录（即指向工程的上一级目录处），用命令行<code>python XXX.py</code>直接运行即可得知结果。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac上关于路欧词典的破解问题记录...</title>
      <link href="/2017/11/20/Mac%E4%B8%8A%E5%85%B3%E4%BA%8E%E8%B7%AF%E6%AC%A7%E8%AF%8D%E5%85%B8%E7%9A%84%E7%A0%B4%E8%A7%A3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/20/Mac%E4%B8%8A%E5%85%B3%E4%BA%8E%E8%B7%AF%E6%AC%A7%E8%AF%8D%E5%85%B8%E7%9A%84%E7%A0%B4%E8%A7%A3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>因为在<em>iPad</em>上用了<em>路欧词典</em>，感觉还不错，想在<em>Mac上也用用</em>，发现要不少的钱…在网上看了一下也糊里糊涂摸索了一下，今天一打开发现已经是破解状态了…在此记录下。</p><ul><li><strong>希望有钱的还是支持正版，学生没钱才这样的…</strong></li></ul><blockquote><p><strong>链接</strong>：<a href="https://www.eudic.net/v4/en/home/dictionaryresource" target="_blank" rel="external">路欧词典官网</a></p></blockquote><hr><ul><li>第一步，找到相关的文件</li></ul><a id="more"></a><p><em>图1</em></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-20%20%E4%B8%8B%E5%8D%882.35.51.png" alt=""></p><p><em>图2</em></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-20%20%E4%B8%8B%E5%8D%882.35.35.png" alt=""></p><blockquote><p>点击打开如上的相关的文件，我用的<em>Xcode</em></p></blockquote><hr><ul><li>第二步，添加相关的内容</li></ul><p><em>图1</em></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-20%20%E4%B8%8B%E5%8D%882.39.57.png" alt=""></p><blockquote><p>以上的没有，所以要自己添加，<em>ID</em>不一定要一致</p></blockquote><p><em>图2</em></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-20%20%E4%B8%8B%E5%8D%882.40.07.png" alt=""></p><blockquote><p>改为<em>820711</em>，据说只有这个才是<em>专业版</em>的代号…据说改这个数字可以延长免费期限…</p></blockquote><hr><ul><li>第三步，锁定文件，避免自动文件修改</li></ul><p><em>图1</em></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-20%20%E4%B8%8B%E5%8D%882.44.08.png" alt=""></p><p><em>图2</em></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-20%20%E4%B8%8B%E5%8D%882.44.19.png" alt=""></p><hr><blockquote><p><strong>接下来就需要重新打开词典等待结果了，可能一下就得到破解了…</strong></p></blockquote><hr><ul><li>关于下载相关的扩展到<em><a href="https://www.eudic.net/v4/en/home/dictionaryresource" target="_blank" rel="external">官网下载</a></em>：</li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li>其实<em>Mac</em>自带的也不错，但是<em>路欧词典</em>还要简单一些。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> 路欧词典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Mac自带语音时而快捷键不灵时的问题</title>
      <link href="/2017/11/19/%E5%85%B3%E4%BA%8EMac%E8%87%AA%E5%B8%A6%E8%AF%AD%E9%9F%B3%E6%97%B6%E8%80%8C%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%B8%8D%E7%81%B5%E6%97%B6%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2017/11/19/%E5%85%B3%E4%BA%8EMac%E8%87%AA%E5%B8%A6%E8%AF%AD%E9%9F%B3%E6%97%B6%E8%80%8C%E5%BF%AB%E6%8D%B7%E9%94%AE%E4%B8%8D%E7%81%B5%E6%97%B6%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>有时关机了又开机发现想要利用<em>Mac</em>自带的语音按下快捷键发声时怎么也不好使了。</p><ul><li>解决：先对选中的字词右键 –&gt; <em>语音</em> –&gt; <em>开始朗读</em>  –&gt; 在这之后会发现用快捷键就好使了。</li></ul><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python2.7爬虫使用一些方法问题记录</title>
      <link href="/2017/11/18/Python2.7%E7%88%AC%E8%99%AB%E4%BD%BF%E7%94%A8%E4%B8%80%E4%BA%9B%E6%96%B9%E6%B3%95%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/18/Python2.7%E7%88%AC%E8%99%AB%E4%BD%BF%E7%94%A8%E4%B8%80%E4%BA%9B%E6%96%B9%E6%B3%95%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>在学习基本的网站技术查看就遇到了问题…在此记录一下。</p><p>我是在<em>eclipse</em>中编的<em>python</em>，用的是<em>anaconda python2.7</em>。</p><p>在<em>eclipse</em>使用<em>builtwith</em>的方法提示需要工程名以<em>builtwith</em>为名的前提下，但是也是失败了（提示<em>builtwith.parse</em>方法找不到…）</p><a id="more"></a><ul><li><strong>解决</strong>：</li></ul><p>在以后遇到了这类情况可以直接到<em>终端</em>运行就好了，可能第一次运行会出现<em>(‘Error:’, URLError(error(65, ‘No route to host’),))</em>的错误问题，不过再重新运行一次就能解决了。如下图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-18%20%E4%B8%8B%E5%8D%888.42.42.png" alt=""></p><blockquote><p>完美解决。</p></blockquote><p><strong>包括有<em>whois.whois</em>的之类的方法，在终端运行都可得到好的解决</strong></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Python </category>
          
          <category> 网络爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Anaconda python两个版本共存时的包的下载问题</title>
      <link href="/2017/11/18/%E5%85%B3%E4%BA%8EAnaconda-python%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC%E5%85%B1%E5%AD%98%E6%97%B6%E7%9A%84%E5%8C%85%E7%9A%84%E4%B8%8B%E8%BD%BD%E9%97%AE%E9%A2%98/"/>
      <url>/2017/11/18/%E5%85%B3%E4%BA%8EAnaconda-python%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%AC%E5%85%B1%E5%AD%98%E6%97%B6%E7%9A%84%E5%8C%85%E7%9A%84%E4%B8%8B%E8%BD%BD%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>关于<em>Anaconda</em>下载的问题就不在此多说了，去官网下载好即可，环境也会随着下载好之后自动配置好了。</p><p>如现在我已经安装有了<em>Anaconda python2.7</em>与<em>anaconda python3.6</em>。</p><a id="more"></a><h1 id="下载包过程"><a href="#下载包过程" class="headerlink" title="下载包过程"></a>下载包过程</h1><p><strong>先创建两个<em>基于anaconda的python虚拟环境</em>，后面下载包需要那个版本即切换到那个版本再利用<em>pip install</em>即可完成下载</strong></p><ul><li>关于相关的虚拟环境创建步骤可以参考：<a href="https://foofish.net/compatible-py2-and-py3.html" target="_blank" rel="external">此处</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Anaconda </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Anaconda </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>焦虑</title>
      <link href="/2017/11/17/%E7%84%A6%E8%99%91/"/>
      <url>/2017/11/17/%E7%84%A6%E8%99%91/</url>
      
        <content type="html"><![CDATA[<p>今天对于自己未来发展的焦虑有如洪水一般滚滚而来…</p><p>我看好这个时代的潮流趋势，但是大量的社会事例不得不让我低下头去思考这社会潜在的需求。即学历。学历无疑是我心中的一道坎，然而我是从内心厌倦着这所谓的升学考试的。</p><a id="more"></a><p>这东西与我想要发展，想要生存的一方面却是成了相对面。</p><p>社会的需求与我不合，我的能力如今配不上我的野心。这才是我真正的焦虑。</p><p>我没有亲历过，我的焦虑多是因为道听途说，然而，人们的经验给予的借鉴亦然必不可少。</p><p>这社会普遍的价值观与我格格不入。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于在iOS系统上快速下载YouTube上的视频以及音乐</title>
      <link href="/2017/11/15/%E5%85%B3%E4%BA%8E%E5%9C%A8iOS%E7%B3%BB%E7%BB%9F%E4%B8%8A%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BDYouTube%E4%B8%8A%E7%9A%84%E8%A7%86%E9%A2%91%E4%BB%A5%E5%8F%8A%E9%9F%B3%E4%B9%90/"/>
      <url>/2017/11/15/%E5%85%B3%E4%BA%8E%E5%9C%A8iOS%E7%B3%BB%E7%BB%9F%E4%B8%8A%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BDYouTube%E4%B8%8A%E7%9A%84%E8%A7%86%E9%A2%91%E4%BB%A5%E5%8F%8A%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<p>因为买了一个<em>iPad</em>，所以从网上研究了一下如何从<em>iOS系统</em>从<em>YouTube</em>上下载视频与音乐。</p><h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul><li><strong>先从<em>app store</em>上下载<em>Documents</em>软件，之后均在其软件的浏览器上为基础下载相关的资源。</strong></li></ul><a id="more"></a><h1 id="开始过程"><a href="#开始过程" class="headerlink" title="开始过程"></a>开始过程</h1><p>如果要下载一个视频，为以下地址：</p><p><em><a href="https://www.youtube.com/watch?v=zOivw83p2cw" target="_blank" rel="external">https://www.youtube.com/watch?v=zOivw83p2cw</a></em></p><p><strong>3种方法：</strong></p><ul><li>支持MP4</li></ul><p>在以上的<em>YouTube</em>字样前加上<em>ss</em>,如下：</p><p><em><a href="https://www.ssyoutube.com/watch?v=zOivw83p2cw" target="_blank" rel="external">https://www.ssyoutube.com/watch?v=zOivw83p2cw</a></em></p><blockquote><p>即会跳到相关的网页，选择好格式，点击<em>Download</em>选择文件保存处即可完成下载。</p></blockquote><ul><li>支持MP3，MP4</li></ul><p>在以上的<em>YouTube</em>字样后加上<em>to</em>,如下：</p><p><em><a href="https://www.youtubeto.com/watch?v=zOivw83p2cw" target="_blank" rel="external">https://www.youtubeto.com/watch?v=zOivw83p2cw</a></em></p><blockquote><p>即会跳到相关的网页，选择好格式，点击<em>Download</em>选择文件保存处即可完成下载（其中有时会需要重新输入URL）。</p></blockquote><ul><li>（推荐）支持MP3，MP4</li></ul><p>在以上的<em>YouTube</em>字样后加上<em>pp</em>,如下：</p><p><em><a href="https://www.youtubepp.com/watch?v=zOivw83p2cw" target="_blank" rel="external">https://www.youtubepp.com/watch?v=zOivw83p2cw</a></em></p><blockquote><p>即会跳到相关的网页，选择好格式，点击<em>Download</em>选择文件保存处即可完成下载。其中有多种格式可选择。很好，很方便。</p></blockquote><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li>关于在<em>Mac</em>上下载<em>YouTube</em>的<em>MP3</em>，<em>MP4</em>的资源，一个软件足以了，在我的博客中有相关的资源文章。</li></ul><blockquote><p>文章到此结束了。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> IOS </tag>
            
            <tag> Youtube </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用YamDispalyFree免费实现Mac与iPad的屏幕扩展</title>
      <link href="/2017/11/14/%E5%88%A9%E7%94%A8YamDispalyFree%E5%85%8D%E8%B4%B9%E5%AE%9E%E7%8E%B0Mac%E4%B8%8EiPad%E7%9A%84%E5%B1%8F%E5%B9%95%E6%89%A9%E5%B1%95/"/>
      <url>/2017/11/14/%E5%88%A9%E7%94%A8YamDispalyFree%E5%85%8D%E8%B4%B9%E5%AE%9E%E7%8E%B0Mac%E4%B8%8EiPad%E7%9A%84%E5%B1%8F%E5%B9%95%E6%89%A9%E5%B1%95/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>是的，再也没有比现在更为激动人心的时刻了，我为了实现我的<em>Mac</em>与我的<em>iPad</em>的屏幕扩展，找了许多的资料，也参考了不少的软件，发现基本上都是需要钱的，经过我几个小时的折腾终于发现了一款免费的软件可以实现我的需求了。</strong></p><blockquote><p><strong>此文章绝对是我本人原创，但是软件是属于国外的大佬的，翻了这么久的谷歌（百度直接忽略），也没有发现这一款免费的并且超级好用的软件，是我本人抱着试一试的心态以及足够的运气才找到的，国外的朋友估计早就知道了…</strong></p></blockquote><p><strong>废话不多说，赶快开始我的介绍吧。</strong></p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><ul><li><p>在<em>iPad</em>上直接搜索<code>YamDispalyFree</code>，<strong>注意是<em>Free</em>的</strong>，里面有介绍<strong>每7分钟一次掉线一次，但是我们只要每7分钟重新花上2秒钟连接就可以实现免费永久使用！而且掉线回来后，我们的桌面不会被初始化！</strong></p></li><li><p>在<em>Mac</em>或者是对应的<em>pc</em>的浏览器上搜索<code>yamdisplay.com</code>下载免费的客户端，<strong>注意，里面有关于Mac的新系统<code>MacOS High Sierre</code>的配合使用介绍，注意看就可知了</strong></p></li></ul><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ul><li>因为是<em>USB</em>的前提下，所以需要一条数据线了。在<em>iPad</em>端与<em>Mac</em>端打开下载好的客户端，插入数据线即可实现屏幕的另一扩展！</li></ul><h1 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h1><ul><li><p><strong>如我上面说的，每7分钟重新连接，即每7分钟会自动掉线，点击在<em>iPad</em>弹出来的窗口下的<code>Not Now</code>（每一次掉线均如此），就可以永久免费使用了。</strong></p></li><li><p><strong>在此我建议使用的人不要轻易更新…因为这可能是一个BUG。</strong></p></li><li><p>软件可以实现电脑的<em>映像投射</em>与<em>桌面扩展</em>,<strong>其中的桌面扩展通过触摸板或者是鼠标可以跨界工作，也支持手势点击触摸！</strong></p></li><li><p>软件的扩展的清晰度很好，<strong>可调换</strong>。</p></li><li><p>软件的流畅度一般，有时又非常好。</p></li><li><p>对于电脑的<em>CPU</em>有要求，易发热。</p></li><li><p>软件支持<em>带Bar</em>。</p></li><li><p><strong>软件的大小占有内存仅仅为几M…，由此可见，大佬是真的大佬…</strong></p></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>如上我说的，实现免费的扩展是轻而易举的。</p><ul><li><strong>并且在开启扩展之前最好先是新开一个Mac桌面</strong></li></ul><blockquote><p><strong>此文章属于本人原创，希望能帮助需要的人。</strong></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> iPad </tag>
            
            <tag> YamDispaly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iCould的简单理解...</title>
      <link href="/2017/11/11/iCould%E7%9A%84%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3/"/>
      <url>/2017/11/11/iCould%E7%9A%84%E7%AE%80%E5%8D%95%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<p>对于<em>iCould</em>的理解可能会有一些模糊。</p><p>在此简单记录下好了。</p><a id="more"></a><ul><li><p><strong>特性：</strong>在<em>Apple</em>设备之间数据同步；</p></li><li><p>在本地上传之后，在<em>iCould</em>之间的文件也是占本地的内存的，很简单，因为在云上一般数据是需要下载的，而在本地上传之后是已经存在的了，在<em>Apple</em>的其他设备上即就与其他网盘没什么区别了，均需要下载其中的数据才可在设备中查看的；</p></li><li><p>在考虑要升级存储时应该要理解这个区别…</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> iCould </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Hadoop在连接eclipse中开发出现的问题</title>
      <link href="/2017/11/10/%E5%85%B3%E4%BA%8EHadoop%E5%9C%A8%E8%BF%9E%E6%8E%A5eclipse%E4%B8%AD%E5%BC%80%E5%8F%91%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2017/11/10/%E5%85%B3%E4%BA%8EHadoop%E5%9C%A8%E8%BF%9E%E6%8E%A5eclipse%E4%B8%AD%E5%BC%80%E5%8F%91%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>在我学习了一段时间的<em>Hadoop</em>之后开始了简单的实践，也开始了处理百万级的数据了（几百MB），结果发现用我的<em>MacBook Pro</em>跑的效果还不错（即伪分布式连接<em>eclipse</em>的前提下，其教程可以在我博客中可以找到）。</p><a id="more"></a><p>下面简单说说一些问题。</p><ul><li><p><strong>突然连接不上了</strong></p><p><strong>解决：</strong>  </p></li></ul><p><em>查看配置文件的填写是否正确，特别是一个字母的是否缺失的检查；</em></p><p><em>连接信息的准确性；</em></p><p><em>将eclipse，Hadoop都关闭重启；</em></p><p><em>电脑整个重启；</em></p><blockquote><p>一般大多数都可以解决了</p></blockquote><hr><ul><li><strong>文件导入<code>input</code>发现均为0KB</strong></li></ul><p><strong>解决：</strong></p><p><em>全部关闭重启，不行则电脑重启；</em></p><hr><ul><li><strong>导入的文件过大，导致在<code>output</code>端的输出查看不了，即一般情况出现<code>Editor could not be initialized.</code>的字样</strong></li></ul><p><strong>解决：</strong></p><p><em>在终端利用命令行查询输出文件（不推荐，文件过大易卡死）；</em></p><p><em>简单的方法，将其从HDFS下载至本地即可轻松查看（如下图）；</em></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-10%20%E4%B8%8B%E5%8D%888.32.26.png" alt=""></p><hr><blockquote><p>以后有问题再在此补充。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Hadoop </category>
          
          <category> Eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些问题记录</title>
      <link href="/2017/11/07/%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/07/%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<ul><li>升级了<code>MacOS High Sierra</code>之后发现java版本不兼容了。</li></ul><p><strong>解决：先卸载之前的版本，再下载<code>JDK1.5</code>以上就可以解决了。</strong></p><a id="more"></a><blockquote><p>发现了<code>eclipse</code>自动识别添加的强大功能🤩</p></blockquote><ul><li><code>iPad</code>上用<code>iBook</code>结合<code>百度网盘</code>查看文件</li></ul><p>先在<code>App商店</code>下载<code>百度网盘HD</code>，比如我想要看一本书，先将其保存在<code>百度网盘</code>，打开点击刚刚保存的书籍就会开始自动缓存，完了之后点击<code>拷贝到iBook</code>，发现文件已经自动保存在<code>iBook</code>中了。</p><p>真的是挺方便的合作。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
          <category> Eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> Eclipse </tag>
            
            <tag> iPad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习Hadoop的书籍引荐</title>
      <link href="/2017/11/06/%E5%AD%A6%E4%B9%A0Hadoop%E7%9A%84%E4%B9%A6%E7%B1%8D%E5%BC%95%E8%8D%90/"/>
      <url>/2017/11/06/%E5%AD%A6%E4%B9%A0Hadoop%E7%9A%84%E4%B9%A6%E7%B1%8D%E5%BC%95%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<p>学习了一段时间的Hadoop，有几本不错的书籍在此分享。</p><a id="more"></a><p>如下的链接中的书籍为：</p><ul><li><p>Hadoop实战（陆版本）：<a href="https://pan.baidu.com/s/1dEMJGh7" target="_blank" rel="external">百度网盘下载</a></p></li><li><p>Hadoop实战（国外中文版）：<a href="https://pan.baidu.com/s/1cjky9S" target="_blank" rel="external">百度网盘下载</a></p></li><li><p>Hadoop权威指南3（中文版）：<a href="https://pan.baidu.com/s/1skAPVx7" target="_blank" rel="external">百度网盘下载</a></p></li><li><p>Hadoop技术内幕 深入解析Hadoop Common和HDFS架构技术:<a href="https://pan.baidu.com/s/1dFhI0et" target="_blank" rel="external">百度网盘下载</a></p></li><li><p>Hadoop技术内幕 深入理解MapReduce架构设计与实现原理：<a href="https://pan.baidu.com/s/1qYLX6hA" target="_blank" rel="external">百度网盘下载</a></p></li><li><p>Hadoop技术内幕：深入解析YARN架构设计与实现原理：<a href="https://pan.baidu.com/s/1cHa1iu" target="_blank" rel="external">百度网盘下载</a></p></li></ul><hr><p>另外我的网盘还有许多传闻不错的相关的书籍，等我一一看完并且验证是否名副其实再在此上传吧🤓</p><ul><li>最后声明：资源来自互联网，感想默默分享的人们🙏</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hadoop </category>
          
          <category> 资源分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
            <tag> 资源分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于MacOS High Sierra中Outlook不可用的问题</title>
      <link href="/2017/11/04/%E5%85%B3%E4%BA%8EMacOS-High-Sierra%E4%B8%ADOutlook%E4%B8%8D%E5%8F%AF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2017/11/04/%E5%85%B3%E4%BA%8EMacOS-High-Sierra%E4%B8%ADOutlook%E4%B8%8D%E5%8F%AF%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>升级了<code>MacOS High Sierra</code>系统之后发现<code>Outlook</code>不能用了。升级一下就能解决了，但是自动更新实在是太慢了，找到了一些<code>15.39</code>的<code>office</code>资源。</p><a id="more"></a><blockquote><p>下面的<strong>百度云资源</strong>加了破解的资源在内。下载好之后安装,不急打开应用，先再打开钥匙破解即可达成破解。</p></blockquote><ul><li><p><a href="https://pan.baidu.com/s/1c2Cm2bA" target="_blank" rel="external">百度云下载</a></p></li><li><p>百度云下载太慢，不用它用这个下<code>office</code>就快了：<a href="https://www.xia1ge.com/microsoft-office-2016-for-mac-15-39-vl.html" target="_blank" rel="external">直接网页下载</a></p></li></ul><blockquote><p>以上资源来自网络…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iPad 上的代理问题记录</title>
      <link href="/2017/11/04/iPad-%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%90%86%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2017/11/04/iPad-%E4%B8%8A%E7%9A%84%E4%BB%A3%E7%90%86%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>其实应该看看自己的VPN或者是ss之类的路线问题，iPad本身都是一样使用的。<strong>如果路线改变了（iPad上一般都是全局的）就会导致在国内看不了国内视频的版权问题…</strong></p><p>真的是太傻了…</p><a id="more"></a><p>对了。在<code>iOS</code>系统上面可以用<em>app商店</em>直接搜索<code>SsconnectPro</code>来用来ss的代理翻墙。</p><p><strong>低调使用🤥</strong></p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> iPad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacBookPro上的Multi-Touch Bar缩放问题</title>
      <link href="/2017/11/01/MacBookPro%E4%B8%8A%E7%9A%84Multi-Touch-Bar%E7%BC%A9%E6%94%BE%E9%97%AE%E9%A2%98/"/>
      <url>/2017/11/01/MacBookPro%E4%B8%8A%E7%9A%84Multi-Touch-Bar%E7%BC%A9%E6%94%BE%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>最近发现自己的电脑在触摸调试Bar上的声音键时，会将Bar的影像投射到屏幕上（如图1的最下方），并且竟然会延迟…有点不习惯了。在调试声音时，发现了在<code>系统偏好设置</code>中的<code>铺助功能</code>的选项<code>缩放</code>的相关的设置（如图2），即为其中的<code>启用Multi-Touch Bar缩放</code>被打勾了，但是之前我一点印象也没有…我一直以为是我升级了系统的缘故，另一方面其实系统根本也没有升级成功过…所以一直让我困惑不已。</p><a id="more"></a><p><strong>解决方法就是把那个勾取消就可以恢复回来了。</strong></p><ul><li>图1</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-01%20%E4%B8%8B%E5%8D%886.46.46.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-11-01%20%E4%B8%8B%E5%8D%886.46.51.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MacBookPro连接Wi-Fi异常问题</title>
      <link href="/2017/10/31/MacBookPro%E8%BF%9E%E6%8E%A5Wi-Fi%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/"/>
      <url>/2017/10/31/MacBookPro%E8%BF%9E%E6%8E%A5Wi-Fi%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>主要的原因：因为插了外接的U盘，拔了就可以恢复正常的Wi-Fi连接了。</p><a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老人与海</title>
      <link href="/2017/10/31/%E8%80%81%E4%BA%BA%E4%B8%8E%E6%B5%B7/"/>
      <url>/2017/10/31/%E8%80%81%E4%BA%BA%E4%B8%8E%E6%B5%B7/</url>
      
        <content type="html"><![CDATA[<p>20岁的那一天他在自己的博客上写下了“要让这个世界的人们生活得更好”…</p><a id="more"></a><p>…</p><p>老人睁开眼，眼里习惯性的带着泪水，他在梦里又回到了曾经自己的故乡，有亲人，有兄弟，有母亲做的好吃的一大桌子菜，他清晰的看到那是自己20岁的时候，他还年轻，有理想，也有自己的欲望，他在自己的电脑上轻轻的敲下要让这个世界更加美好,直到醒来他还隐隐约约的听到敲键盘的声响…</p><p>地球已经因为一些野心家的欲望奄奄一息了，贪婪，战争，违背自然…如今的地球已是一片汪洋，一眼望去就只有一片汪洋，只剩下一片汪洋。什么也没有。老人突然的发现自己早已已经不在地球上了，但是他隐约的记得刚刚自己明明还在笑，明明那么那么的开心，有母亲的美食，有兄弟的陪衬，有在心里默默爱着的女孩…</p><p>在这个星球上的“人”对他都还不错。“他们”在地球的一次考察发现了唯一的也是奄奄一息的他。从那以后到如今，曾经的美好都只能活在老人的梦里，他失去了一切，除了一副无用的皮囊，除了无时无刻不曾经断的关于曾经在地球上的幻想，而如今只有在梦里可以看到。这些年，从青年变成了老年，这些年，他的梦也绵绵不绝…</p><p>这一天，老人的梦回到了小时候，与自己的小伙伴们在田间的玩耍，自己骑着爹爹从二手市场带回来的小单车从后湾头一直骑到了公路边，他清晰的看到他那时犹意未尽，只想好好的“接待”这位新的单车兄。他看到小时候与小伙伴们一齐骑着单车一起上下学的时候，路过的时候还听到后面有村里的老人在后议论着：你看，那是谁谁谁的儿子…</p><p>怎么的，老人醒来发现自己又已是泪流满面，从梦里的青年到儿时，他隐约的意识到自己生时不多了，但是他还有牵挂，他想他得回去地球，他想他要落叶归根。一瞬间他又想起了在20岁的时候自己写下的“要让这个世界的人们生活得更加美好”。他痛哭得不能自已，他怨恨，他在那时是多么的无能，他伤心，当时的理想早已支离破碎…他在这些年依旧有着“美好人间”的想法，在地球上的各位情同手足，这是一个大家庭，人人都愿意无私的分享与奉献，但如今一切的一切都不可能再现。所以他也痛苦，所以他只有痛哭，也只剩下痛哭…</p><p>…</p><p>今晚的“异乡”星球格外的安静…老人…儿时的自己与小伙伴们在骑着单车玩闹…村里的老人们打牌消磨时光…大家脸上都带着欢笑…他也好开心好开心的在上头看着…突然的，整个地面开始变得摇摇晃晃，有火山爆发了，有枪林弹雨过来了…他看到在下面的儿时的自己与小伙伴们，还有村里的老人们四处逃窜，叫喊着…他也叫喊着，他也哭喊着，但是一切无济于事，那边比任何山都要高的洪水过来了，还带着炮弹的火花…过来了过来了，近了近了，眼看所有的“幻想”都要被埋没…他又想起了20岁的自己在电脑上敲下…他叫喊着：让我下去，让我下去，不想自己真的在猛然下落…他来到了儿时的自己的身边，他牵着“他”的手跑啊跑啊，没有时间的多少，只是感觉自己与自己一直在跑…不知有了多久，他慢慢的发现“自己”的小手早就不在自己手上了…前面是无尽的黑暗，后面是无尽的汪洋,他犹豫了，但是又立马回过身来，“不是吗？这不就是我无时无刻不在梦想的故乡吗？”他跑向身后的汪洋，拼了命的跑，他突然想起自己在20岁时在美好的大学时光的体测，自己在跑一千米的时候，那时的自己是个什么狼狈的模样？他清晰的记得，他也永远的记得。他这次没有哭，没有像从前一样像个懦夫一样的只会哭，只会喊…他在开心的笑，发至内心的笑，因为他来到了自己每天日日夜夜的地球，因为他将不再孤独，回到兄弟亲人的身旁，所以他在笑，他一边跑一边的在哈哈大笑。但是怎么的又突然猛的想到了20岁自己写下的“要让这个世界的人们生活得更加美好”。他以为自己又会将停下早已飞跑的脚步，然后独自的走到一旁默默的悲伤，嗯，像从前一样的像个懦夫一样的在暗角流泪悲伤，就像20岁的自己体测的时候，因为感觉太累了停下脚步一样的…去他妈的吧，去你妈的吧，悲伤你妈个逼！很快的，洪水将要他埋没，他停下来，展开双臂，他在想，我去，这次怎么一点也不感觉累了？很快的，洪水将他埋没…</p><p>第二天，照顾他的异乡人发现这个老不死的老头在开着嘴巴睡觉。他叫喊着老头起来吃饭了，无论异乡人如何推他，拍打他，他却是无动于衷，但是哈哈大笑的嘴角没有一丝变化…</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>这是我在食堂吃饭的时候冒出来的“多情”的幻想，有一种强烈的想要记录下的感觉…</p><p>我想这种幻想不应该在以后多有…去他妈的幻想吧！</p>]]></content>
      
      
      <categories>
          
          <category> 幻想故事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 幻想故事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这段时间</title>
      <link href="/2017/10/30/%E8%BF%99%E6%AE%B5%E6%97%B6%E9%97%B4/"/>
      <url>/2017/10/30/%E8%BF%99%E6%AE%B5%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<p>不知不觉发现这个博客已经开了有一个月了…最近这段时间没怎么写生活记录了，不过有一些问题我想记录一下。</p><a id="more"></a><ul><li>关于苹果的新系统 <code>MacOS High Sierra</code> </li></ul><p>这个系统的改变主要还是在Apple文件系统的加入更新及视频格式的更新改变上。再者其他的如同照片的一体编辑等等更新个人感觉用处不是很大。在其中有的什么 <code>safari</code> 浏览器的阅读器的自动打开及什么屏蔽视频自动播放等等，其实在我现在的 <code>Mac OS 10.12.6</code> 系统就有了，平时喜欢研究的人应该也早就发现了，或许是更加智能化了，不过对于新的东西人们总是容易有一种错觉的…所以说这一次的更新主要还是像我上面说的这个系统的改变主要还是在Apple文件系统的加入更新及视频格式的更新改变上。</p><p>看了介绍这主要的两样改变挺好的，对于我这种经常需要移动文件夹的人来说。我在上周末因此有了想要升级的欲望，不过下载了几次不成功，又怕会有什么bug，毕竟新系统还不是怎么稳定。在之后看看情况再决定吧，至少等bug少一些再说…</p><ul><li>关于这所学校</li></ul><p>这所学校有着 <code>百年名校</code> 的所谓的伟大目标…距离它的所谓的 <code>百年</code> 还有30年了…我想任重道远，这真的可能这会是一个梦想罢了。这所学校的风气太差，无论是老师，还是学生，还是这学校的制度，就连图书馆也是一个鸟样。为人师表在这里能有？至少我现在不确信。</p><p>我们一直的成长都是为了适应各种不适应罢了，没什么好说的了。</p><ul><li>关于花呗</li></ul><p>不得不说，花呗真的是我感觉比较做的好的一项目了，当然也包括他们的业务。公信力有，宣传到位，有阿里的支付宝做支柱平台等等。近来因为为了让学习生活体验更好一些，想着以后工作生活之中也会用到，萌生了想要一台iPad的想法，就马上向几个朋友借了一些钱（没想到朋友借钱效率挺高…），也就在昨天我想要卖一台iPad没钱，但是通过花呗我现实了“提前享受，后期付款”的念想。因为我第一次用，不知道分期付款是需要利息的，这对于一向不怎么愿意花钱的我来说有点不能接受，因为利息加卖家的手续费已经达到了几百元，完完全全超过了我的预期…如果我早一些知道，或许我会犹豫，但是可信的是iPad我迟早要入手的…</p><p>在今天早上，我发现了花呗真正的“机灵”之处。那就是抓住了人们“花大钱，不拘小钱”的心理作用，通过我对于我的一系列心理变化我真真切切的发觉这是一件还算得上挺可怕的事。这件事与人们的消费心理有关。平时我们在有强烈欲望时，脑子是会失去理智的，这本身容易导致损失…如果一旦克制不住（明确的说一旦说服不了自己放弃，或者是压不住欲望），就会像我一样出现想要“提前享受，后期付款”的思想…如果在人们又是因为额度不足或者是现钱不够萌生了“分期”的想法，那么噩梦也就开始了，噩梦就是<strong>人们会习惯性的，理所当然似的忽略掉了分期需要的手续费或者是利息费，这一点在小额费用上看不出来什么区别，但是在久而久之，额度不断的扩大就会惊奇的发现，分期的利息，那一些在从前我们习惯性忽略的利息会多得出乎我们的意料。到那时候我们可能才会发现，可以想象，我们的这种心理作用的驱使是一种具有扭曲人性质的作用的，这真的是一种挺可怕的事情。</strong></p><p>因为第一次玩花呗，意外“惊醒”的比较早，仔细想一想，真的是一种让人感觉到可怕的事，我们的思维理智在因为有了花呗的“撑腰”下可以变得毫无节制，为所欲为…还好我的理智在此时还算得是强大，不然真的会有一种心理扭曲的意向，不过也可能与我一向不喜欢花钱的性格有关吧。</p><p>我想这应该会是我最后一次主动性的去动用花呗的“提前消费，后期付款”的信念了。理性消费，真的是我们每一个人需要重视的问题，不容小视的问题。并且无论何时均不可失自我的理智。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（Mac下）docker搭建Hadoop集群</title>
      <link href="/2017/10/26/%EF%BC%88Mac%E4%B8%8B%EF%BC%89docker%E6%90%AD%E5%BB%BAHadoop%E9%9B%86%E7%BE%A4/"/>
      <url>/2017/10/26/%EF%BC%88Mac%E4%B8%8B%EF%BC%89docker%E6%90%AD%E5%BB%BAHadoop%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h1><ul><li><strong>转来自<code>KiwenLau</code>大神的教程：<a href="https://kiwenlau.com/2016/06/12/160612-hadoop-cluster-docker-update/" target="_blank" rel="external">教程链接</a>，在以下的一切版权，劳动成果属于他本人。</strong></li></ul><hr><a id="more"></a><h1 id="基于Docker搭建Hadoop集群之升级版"><a href="#基于Docker搭建Hadoop集群之升级版" class="headerlink" title="基于Docker搭建Hadoop集群之升级版"></a>基于Docker搭建Hadoop集群之升级版</h1><blockquote><p>摘要: kiwenlau/hadoop-cluster-docker是去年参加Docker巨好玩比赛开发的，得了二等奖并赢了一块苹果手表，目前这个项目已经在GitHub上获得了236个Star，DockerHub的镜像下载次数2000+。总之，项目还算很受欢迎吧，这篇博客将介绍项目的升级版。</p></blockquote><ul><li>作者: KiwenLau</li><li>日期: 2016-06-12</li></ul><h2 id="一-项目介绍"><a href="#一-项目介绍" class="headerlink" title="一. 项目介绍"></a>一. 项目介绍</h2><blockquote><p>将Hadoop打包到Docker镜像中，就可以快速地在单个机器上搭建Hadoop集群，这样可以方便新手测试和学习。</p></blockquote><p>如下图所示<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/hadoop-cluster-docker.png" alt=""></p><hr><blockquote><p>Hadoop的master和slave分别运行在不同的Docker容器中，其中hadoop-master容器中运行NameNode和ResourceManager，hadoop-slave容器中运行DataNode和NodeManager。NameNode和DataNode是Hadoop分布式文件系统HDFS的组件，负责储存输入以及输出数据，而ResourceManager和NodeManager是Hadoop集群资源管理系统YARN的组件，负责CPU和内存资源的调度。</p></blockquote><p><strong>之前的版本使用serf/dnsmasq为Hadoop集群提供DNS服务，由于Docker网络功能更新，现在并不需要了。更新的版本中，使用以下命令为Hadoop集群创建单独的网络:</strong></p><p><code>sudo docker network create --driver=bridge hadoop</code></p><p>然后在运行Hadoop容器时，使用<code>–net=hadoop</code>选项，这时所有容器将运行在hadoop网络中，它们可以通过容器名称进行通信。</p><hr><ul><li>项目更新要点：<br>去除<code>serf/dnsmasq</code><br>合并Master和Slave镜像<br>使用kiwenlau/compile-hadoop项目编译的Hadoo进行安装<br>优化Hadoop配置二. <strong>3节点Hadoop集群搭建步骤</strong>:</li></ul><ol><li>下载Docker镜像<br><code>sudo docker pull kiwenlau/hadoop:1.0</code></li><li>下载GitHub仓库<br><code>git clone https://github.com/kiwenlau/hadoop-cluster-docker</code></li><li>创建Hadoop网络<br><code>sudo docker network create --driver=bridge hadoop</code></li></ol><ul><li>运行Docker容器<br><strong>指向目录</strong>：<code>cd hadoop-cluster-docker</code><br><code>./start-container.sh</code><blockquote><p>运行结果<br>start hadoop-master container…<br>start hadoop-slave1 container…<br>start hadoop-slave2 container…<br>root@hadoop-master:~#</p></blockquote></li></ul><hr><blockquote><p>启动了3个容器，1个master, 2个slave<br>运行后就进入了hadoop-master容器的/root目录</p></blockquote><ul><li>启动hadoop<br><code>./start-hadoop.sh</code></li></ul><ul><li>运行wordcount<br><code>./run-wordcount.sh</code></li></ul><blockquote><p>运行结果<br>input file1.txt:<br>Hello Hadoop<br>input file2.txt:<br>Hello Docker<br>wordcount output:<br>Docker    1<br>Hadoop    1<br>Hello    2</p></blockquote><hr><blockquote><p>Hadoop网页管理地址:<br>NameNode: <a href="http://192.168.59.1:50070/" target="_blank" rel="external">http://192.168.59.1:50070/</a><br>ResourceManager: <a href="http://192.168.59.1:8088/" target="_blank" rel="external">http://192.168.59.1:8088/</a><br>其中192.168.59.1为运行容器的主机的IP。</p></blockquote><h2 id="N节点Hadoop集群搭建步骤"><a href="#N节点Hadoop集群搭建步骤" class="headerlink" title="N节点Hadoop集群搭建步骤"></a>N节点Hadoop集群搭建步骤</h2><ul><li>准备</li></ul><p><strong>参考第二部分1~3：下载Docker镜像，下载GitHub仓库，以及创建Hadoop网络</strong></p><ul><li>重新构建Docker镜像，在<code>cd</code>其目录之下<br><code>./resize-cluster.sh 5</code></li></ul><blockquote><p>可以指定任意N(N&gt;1)</p></blockquote><ul><li>启动Docker容器<br><code>./start-container.sh 5</code></li></ul><blockquote><p>与第2步中的N保持一致。</p></blockquote><ul><li>运行Hadoop</li></ul><blockquote><p>参考第二部分5~6：启动Hadoop，并运行wordcount。</p></blockquote><hr><p><strong>本文本身链接参考：</strong></p><ul><li><p>参考地址1:<a href="https://kiwenlau.com/2015/06/08/150608-hadoop-cluster-docker/" target="_blank" rel="external">参考地址1</a></p></li><li><p>参考地址2:<a href="https://www.digitalocean.com/community/tutorials/how-to-install-hadoop-on-ubuntu-13-10" target="_blank" rel="external">参考地址2</a></p></li></ul><hr>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
          <category> Hadoop </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac自带字典的扩展与语音设置</title>
      <link href="/2017/10/26/Mac%E8%87%AA%E5%B8%A6%E5%AD%97%E5%85%B8%E7%9A%84%E6%89%A9%E5%B1%95%E4%B8%8E%E8%AF%AD%E9%9F%B3%E8%AE%BE%E7%BD%AE/"/>
      <url>/2017/10/26/Mac%E8%87%AA%E5%B8%A6%E5%AD%97%E5%85%B8%E7%9A%84%E6%89%A9%E5%B1%95%E4%B8%8E%E8%AF%AD%E9%9F%B3%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><p>在Mac上自带的词典是非常强大的。</p></li><li><p>缺点是词典不可带语音功能，不过系统本身是有语音读取功能的，两者结合就天衣无缝了。</p></li><li><p>最大的优点：离线操作，加上Mac自带的语音，都是离线的。</p></li><li><p>很强大..</p></li></ul><hr><a id="more"></a><h1 id="扩展词典"><a href="#扩展词典" class="headerlink" title="扩展词典"></a>扩展词典</h1><ul><li>扩展辞典的资源：<a href="https://pan.baidu.com/s/1jInDiq6" target="_blank" rel="external">Mac词典扩展下载</a></li></ul><blockquote><p>以上的资源是我在网上找到的，我有一个毛病，就是打开找好资源后就保存关闭网页了..所以资源的来源我也记不得了..总之非常感谢那一些分享资源的人们，谢谢🙏</p></blockquote><hr><ul><li><p>下载好之后，解压文件（图1） –&gt; 打开自带的<code>词典</code>软件，并且点击上方的<code>文件</code>选择<code>打开词典文件夹</code>（图2） –&gt; 将下载好的词典插件移到其中（图3） –&gt; 关闭<code>词典</code>，重新打开 –&gt; 选择<code>偏好设置</code>，勾上插件选项即可完成词典扩展（图4，5）</p></li><li><p>图1</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.09.47.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.08.24.png" alt=""></p><ul><li>图3</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/10%E6%9C%88-26-2017%2008-10-25.gif" alt=""></p><ul><li>图4</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.11.34.png" alt=""></p><ul><li>图5</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.12.06.png" alt=""></p><hr><h1 id="设置语音"><a href="#设置语音" class="headerlink" title="设置语音"></a>设置语音</h1><blockquote><p>设置语音的声音中，有一个默认的“国产”声音，这是读中文的时候用的，如果读英文就非常别扭了，我们就需要将声音换成一个美国或者是英国的声音，读出来的英文就非常的好听了…</p></blockquote><ul><li><p>设置语音步骤：先打开<code>系统偏好设置</code> –&gt; <code>铺助功能</code> –&gt; <code>语音</code> （图1）–&gt; 会看到了系统声音的选项，其中的先看到的<code>Ting-Ting</code>是默认的中国小妹声音。可以选择自定义，选择相关的美国的或者是英国的声音（图2） –&gt; 下载好喜欢的声音之后，将其选择为系统默认,将下方的语音快捷键勾上，也可以像我一样设置快捷键(图3),即可完成语音设置 </p></li><li><p>图1</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.02.16.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.02.34.png" alt=""></p><ul><li>图3</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.03.24.png" alt=""></p><hr><h1 id="触摸板设置及语音快捷键设置"><a href="#触摸板设置及语音快捷键设置" class="headerlink" title="触摸板设置及语音快捷键设置"></a>触摸板设置及语音快捷键设置</h1><blockquote><p>触摸板设置可以离线快速的查找我们需要了解的单词的意思，通过快捷键我们也可以离线快速的得知其怎么读。</p></blockquote><ul><li><p>打开<code>系统偏好设置</code> –&gt; 选择<code>触摸板</code>，之后选择习惯的查看设置（图1) –&gt;即可完成触摸板的查看设置</p></li><li><p>图1</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%889.55.35.png" alt=""></p><hr><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ul><li>选择一个想要了解的单词，用刚刚选择的手势查看</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.03.06.png" alt=""></p><ul><li>语音读出，可以如下，亦或者直接使用快捷键即可</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-26%20%E4%B8%8A%E5%8D%888.13.06.png" alt=""></p><ul><li>测试完成</li></ul><hr><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li>发布一个Mac迅雷破解版，亲测有效..</li></ul><blockquote><p>下载：<a href="https://pan.baidu.com/s/1TwYANVQscOv-vkhi-kLTKg" target="_blank" rel="external">下载</a></p><p>资源来自网络..再次感谢分享的人们🙏</p></blockquote><p>（需要先登录）使用破解：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-25%20%E4%B8%8B%E5%8D%887.30.26.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-25%20%E4%B8%8B%E5%8D%887.29.58.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(Mac下）eclipse开发Hadoop时文件的中文乱码问题</title>
      <link href="/2017/10/25/%EF%BC%88Mac%E4%B8%8B%EF%BC%89eclipse%E5%BC%80%E5%8F%91Hadoop%E6%97%B6%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/"/>
      <url>/2017/10/25/%EF%BC%88Mac%E4%B8%8B%EF%BC%89eclipse%E5%BC%80%E5%8F%91Hadoop%E6%97%B6%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<ul><li>参考：<a href="http://blog.csdn.net/u014677702/article/details/53303857" target="_blank" rel="external">参考地址</a></li></ul><hr><blockquote><p>刚刚在eclipse中学习Hadoop时将 <code>txt</code> 格式的文件导入 <code>input</code> 文件夹时发现了中文乱码的问题。在此记录下，希望可以帮助更多需要的朋友。</p></blockquote><ul><li>Mac下可以用 <code>文本编辑</code> 这个自带的软件编译好 <code>txt</code> 格式的文件</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-25%20%E4%B8%8B%E5%8D%884.48.14.png" alt=""></p><a id="more"></a><p><strong>编译步骤加其中的设置</strong>：打开软件 –&gt; 设置偏好设置选择 <code>纯文本</code>模式（如图1） –&gt; 编译好内容 –&gt; 选择格式 <code>UTF-8</code>保存即可（如图2）</p><ul><li><p>图1<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-25%20%E4%B8%8B%E5%8D%884.39.45.png" alt=""></p></li><li><p>图2</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-25%20%E4%B8%8B%E5%8D%884.39.12.png" alt=""></p><ul><li>设置保证eclipse里的格式也是<code>UTF-8</code>的格式</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-25%20%E4%B8%8B%E5%8D%884.45.01.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-25%20%E4%B8%8B%E5%8D%884.45.22.png" alt=""></p><ul><li>在这之后添加文件入<code>input</code>文件夹查看发现乱码已经解决</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-25%20%E4%B8%8B%E5%8D%884.38.51.png" alt=""></p><ul><li>OK，goodJ.That’s all,thanks.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac上解决Mackeeper的流氓作为，以及与其导致的CPU异常</title>
      <link href="/2017/10/24/Mac%E4%B8%8A%E8%A7%A3%E5%86%B3Mackeeper%E7%9A%84%E6%B5%81%E6%B0%93%E4%BD%9C%E4%B8%BA%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%85%B6%E5%AF%BC%E8%87%B4%E7%9A%84CPU%E5%BC%82%E5%B8%B8/"/>
      <url>/2017/10/24/Mac%E4%B8%8A%E8%A7%A3%E5%86%B3Mackeeper%E7%9A%84%E6%B5%81%E6%B0%93%E4%BD%9C%E4%B8%BA%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%8E%E5%85%B6%E5%AF%BC%E8%87%B4%E7%9A%84CPU%E5%BC%82%E5%B8%B8/</url>
      
        <content type="html"><![CDATA[<h1 id="铲除原因"><a href="#铲除原因" class="headerlink" title="铲除原因"></a>铲除原因</h1><p>最近因为下载一个软件插件导致万恶的Mackeeper进入了我的Mac，在Safari的网页上也是自己为所欲为经常弹出来，搞笑的是它竟然说扫描出来了3个病毒，然后叫我下载它，否则如何如何..真的是毒喊捉毒，毫无廉耻啊…关键是因为这个东西，还把我的CPU严重拉下了，导致我的电池使用量缩水了一大半，电脑也是烫的怀疑人生，我一度以为我的Mac要玩完了..毕竟才刚刚买了几个月啊..</p><p>不能容忍啊..</p><p>只想一心把它搞了..去网上查了一下，发现这东西早已是臭名远扬了，最后花了一些时间在<a href="https://www.zhihu.com/question/24850356" target="_blank" rel="external">知乎</a>上面找到了答案。</p><a id="more"></a><h1 id="铲除过程"><a href="#铲除过程" class="headerlink" title="铲除过程"></a>铲除过程</h1><p>去网上搜索 <code>AdwareMedic</code> 这个软件，这真的是一个神器啊，帮助我解决掉了Mackeeper，也修复了CPU异常，现在也是终于正常了，前几天只是打开一个预览就掉电像水似的..</p><ul><li><p>推荐用谷歌搜索啦，当然百度也是可以的。</p></li><li><p>我的百度云也已经收藏了：<a href="http://pan.baidu.com/s/1nvKGUEl" target="_blank" rel="external">点击下载神器</a></p></li><li><p>此神器是需要付费的，不过可以免费30天使用，不过我倒是在完成任务后马上卸载了..以后有需要再下载吧。</p></li></ul><blockquote><p>以上的资源来自官网，<strong>下载完以后打开神器，点击在界面上的 <code>scan for Adware</code> 按钮，将扫描出来的文件全部删除，建议多扫描几遍，然后再重启Mac。然后在重启之后再扫描几遍，有时候开机还有一些相关的东西残留的，然后再重启看看。会发现CPU正常了，电脑也回到了正常水平</strong>,一切都好了，感觉这个世界是多么的美好呀～</p></blockquote><p>在这里说一下，我们的Mac上有自带的防火墙，建议打开，可以为我们的Mac加上一层保护层，可以过滤掉一些可能带有病毒木马的应用程序，在打开之后从网上下载东西的时候如果被防火墙阻止，可以将其先关闭，然后在完成之后在打开防火墙即可。打开防火墙的能耗几乎没有的，但是安全还是要的，right？</p><ul><li>打开防火墙步骤：<code>系统偏好设置</code> –&gt; <code>安全性与隐私</code> –&gt; <code>防火墙</code> –&gt; <code>解锁打开即可</code> （当然也可以设置其中的高级设置，根据需求设置即可）</li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><p>Mac并不是安全到我们可以为所欲为的..需要我们平时注意保养..</p></li><li><p>记录下的这一篇文章，一是为了记录这次经历，以后可能会再次遇到。二是为了帮助一些类似经历的人。</p></li><li><p>到此为止吧，goodluck.</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> Mackeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（Mac下）Ummy Video Downloader pro下载以及用其插件配合下载YouTube视频</title>
      <link href="/2017/10/22/%EF%BC%88Mac%E4%B8%8B%EF%BC%89Ummy%20Video%20Downloader%20pro%E4%B8%8B%E8%BD%BD%E4%BB%A5%E5%8F%8A%E7%94%A8%E5%85%B6%E6%8F%92%E4%BB%B6%E9%85%8D%E5%90%88%E4%B8%8B%E8%BD%BDYouTube%E8%A7%86%E9%A2%91%20/"/>
      <url>/2017/10/22/%EF%BC%88Mac%E4%B8%8B%EF%BC%89Ummy%20Video%20Downloader%20pro%E4%B8%8B%E8%BD%BD%E4%BB%A5%E5%8F%8A%E7%94%A8%E5%85%B6%E6%8F%92%E4%BB%B6%E9%85%8D%E5%90%88%E4%B8%8B%E8%BD%BDYouTube%E8%A7%86%E9%A2%91%20/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>最近想要下载一些好听的好看的在YouTube上面的资源，找到了一个软件，用起来清爽，很舒服。在这里记录下，并且发放一些资源，以帮助一些需要的朋友。</p></blockquote><ul><li><p>Mac系统</p></li><li><p>Ummy Video Downloader破解版</p></li></ul><blockquote><p>因为需要钱的..所以找到一些资源在此分享，有钱的各位还是要支持正版啊！</p><p>Ummy Video Downloader官网：<a href="http://en.savefrom.net/1-how-to-download-youtube-video/" target="_blank" rel="external">官网在此</a></p></blockquote><ul><li>Ummy Video Downloader 网页插件</li></ul><a id="more"></a><h1 id="过程介绍"><a href="#过程介绍" class="headerlink" title="过程介绍"></a>过程介绍</h1><h3 id="下载Ummy-Video-Downloader"><a href="#下载Ummy-Video-Downloader" class="headerlink" title="下载Ummy Video Downloader"></a>下载Ummy Video Downloader</h3><ul><li><p>介绍一下Ummy Video Downloader，以下两张图片足以，功能不错，平常下载够用了。</p></li><li><p>one<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-22%20%E4%B8%8B%E5%8D%883.09.12.png" alt=""></p></li></ul><hr><ul><li>two</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-22%20%E4%B8%8B%E5%8D%883.31.19.png" alt=""></p><blockquote><p>可以看到功能还是非常不错的，关键是还可以下载mp3格式哦。再次提醒一下有钱的还是要多多支持正版，学生没钱才这么干的…</p><p>更加详细的介绍见上面的官网咯</p></blockquote><hr><ul><li><p>见我的百度云：<a href="https://pan.baidu.com/s/1bpHD1EZ" target="_blank" rel="external">Ummy Video Downloader破解版<br>下载</a></p></li><li><p>下完之后查看：</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-22%20%E4%B8%8B%E5%8D%882.56.25.png" alt=""></p><blockquote><p>没有骗人的哦..</p></blockquote><hr><h3 id="使用Ummy-Video-Downloader"><a href="#使用Ummy-Video-Downloader" class="headerlink" title="使用Ummy Video Downloader"></a>使用Ummy Video Downloader</h3><ul><li>打开一个你看中的YouTube的网页，复制链接，如下</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/10%E6%9C%88-22-2017%2015-42-28.gif" alt=""></p><blockquote><p>解析时间几秒就OK了，然后选择自己的格式下载就好了。</p></blockquote><h3 id="下载使用Ummy-Video-Downloader插件"><a href="#下载使用Ummy-Video-Downloader插件" class="headerlink" title="下载使用Ummy Video Downloader插件"></a>下载使用Ummy Video Downloader插件</h3><ul><li>插件给我们省去了打开软件的步骤，直接一步呵成。</li></ul><p>插件下载：<a href="http://en.savefrom.net/user.php?vid=308#download" target="_blank" rel="external">下载地址</a></p><hr><ul><li>其中有多个浏览器插件都是可以支持的，如下下载，我以我的浏览器<code>Safari</code> 做个示范</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/10%E6%9C%88-22-2017%2015-01-59.gif" alt=""></p><hr><ul><li><p>下载完之后打开浏览器，进入一个YouTube网页可以发现以下的出现</p></li><li><p>one</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-22%20%E4%B8%8B%E5%8D%883.11.25.png" alt=""></p><hr><ul><li>two</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-22%20%E4%B8%8B%E5%8D%883.11.36.png" alt=""></p><hr><ul><li>示范用插件下载</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/10%E6%9C%88-22-2017%2015-13-02.gif" alt=""></p><blockquote><p>OK，过程都已经完成了。</p></blockquote><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li>关于上传hexo博客的相关的动态图片，直接可以利用语法 <code>![]()</code> 插入链接就好了。当然前提下是得要有类似七云牛之类的云。</li></ul><blockquote><p>具体可以参考我的其他相关的已写的博客。点击 <code>归档</code> 查找即可</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/10%E6%9C%88-22-2017%2016-02-10.gif" alt=""></p><hr><ul><li>Mac上的动态图片的软件，免费的哦，非常好用，如下</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-22%20%E4%B8%8B%E5%8D%883.13.34.png" alt=""></p><blockquote><p>直接在苹果商店APP搜索下载即可。</p></blockquote><hr><ul><li>那么到此文章就结束了。BYE.</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> Ummy Video Downloader pro </tag>
            
            <tag> YouTube </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂思记</title>
      <link href="/2017/10/19/%E6%9D%82%E6%80%9D%E8%AE%B0/"/>
      <url>/2017/10/19/%E6%9D%82%E6%80%9D%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<ul><li>读书的意义</li></ul><p>读书的意义不过是为了更好的接受，平静的接受，开怀的接受这世间的种种不合意罢了。我所认为的读书的意义，是为了在一个“度”中保持“中立”，是为了让我的灵魂保持理智与宁静，从而更不容易被世间的种种影响，更不容易被导致内心的波动，没有了波动，才没有偏向，没有偏向于“度”的左右的任何一方，才可以保持内心的平静，在这最后，在平静下接受曾经所有的不甘心，所有的不甘愿，所有的不合意，也从此可以理智的去看待这一些所有，也不再有对于其中的偏向。</p><a id="more"></a><p>内心平静理智下的快乐才是真正的快乐。读书也就是为了在这喧闹人世间寻得一份内心的宁静，寻得一分保持与灵魂对话的理智，唯有真正的理智与内心的平静，我们才能接近所谓的”幸福“。不能把为了追求财富，名利的读书理解为”读书“。</p><p>读书是为了我们能够生活的更好，也是为了更好的生活。如果说读书真的是要有目的的话，那么这个目的将是平静与理智。</p><ul><li>友谊</li></ul><p>友谊是”利益“的附属品吗？现在的我不完全这么认为，至少是现在。</p><ul><li>”神“是”大自然“</li></ul><p>”神“与”上帝“即是如今无边无际，完美无缺的”大自然“。”大自然“包揽了所有的一切，无论是我们看到的，还是看不到的，无论是我们曾经看到的，还是从未看到的，但是他们（它们）都是因为”大自然“而存在的。”大自然“有着自己的原则，有着自己的规矩，管理这存在的一切。</p><p>但是如果我们把一切包括我们存在的意义与实际上的人生全部寄予”大自然“，无疑是愚蠢的。我们每一个人的出现存在，必然有要出现存在的意义，这需要我们自己去寻找，去实现的。</p><p>而由此可知，”大自然“那无边无际的胸怀。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无题</title>
      <link href="/2017/10/17/%E6%97%A0%E9%A2%98/"/>
      <url>/2017/10/17/%E6%97%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>最近在经过一番浮躁之后，现如今算是回归了一些平静了。人浮于事，在这世间的人都是免不了的吧。</p><p>对于前一段时间的浮躁，我认为与我前段时间期间所认为的一些字词的相关的理解的偏差是有直接关系的。前段时间，我与一个所谓的”愤青“又有何区别呢？现在想想，真的是形容的我分毫不差。一个”愤青“在中国或许常常是给人一种”无知“的印象相挂钩的，即是可能多为”书呆子“的意寓吧。然而，在中国这样的”愤青“却是常常的在形容一个有”有抱负“，”爱国“等等相关的字词挂钩的年轻人或者是青年人。人们总是在毫无关系的去嘲笑他，总是在毫不犹豫的去批判他。但是现在的我所认为的”愤青“是有理想，有理性，有抱负的，然而也有时的免不了戴上”偏激“的帽子，因为我们总是急切的想要表达我们内心的想法，急切的想要让人们听到我们内心的声音。</p><a id="more"></a><p>在中国，在现在的中国，人们普遍的不尊重”爱国青年“。还却是将挂有”爱国“的人批判到了”偏激“”无知“的行列了。我们对于“文化知识”的认识是退步的，真的是又是苦了一些好老师，更是苦了一些好学生啊，然而现在的我们，他们却也只能是相互同情着。现在的许多的”有良知“的人们普遍的也得不到共鸣，在之后的社会生活中自然的也随着人潮渐渐的”沉默“下去。可悲啊！现在的中国容不下真正的”知识分子“亦或是”爱国分子“了吗？现在的中国人民子弟们，中华民族的后人们大部分却是从未有过”愤青“的丝毫感觉，国人们无论是对于什么说法，依然如前一样的会有一番的我所认为的“狡辩”。中国人，爱面子，有时也是因为一个“面子”可以摒弃一切。</p><p>以上的言辞充分的反映了我现在的状态，所谓的“偏激”罢。</p><p>现在还是开始切入正题吧，也是该要回归主题了。我为何在前一段时间中容易陷入“沉沦”与“偏激”？恰恰是因为我对于一些字词的错误的，混淆的认知吧，至少现在此刻的我是这样认为的。我所认为的“沉沦”在当初是与我所认为的“血性”相冲突的，其中的“血性”又是通常与我所认为的“爱国”相挂钩的，而这以上的却又是与我所认为的“自然之道”相冲突的，说到底，我是在这些个字词的认知中迷失了自己了，所以才导致了我的理智一度的陷入不可自制的状态。这一些的之所以如此，只是因为我不够清楚的，亦或者是认知错误的所导致的罢了。我是对于国家的一些现象有一些担忧的，也常常的思考国家的所谓的未来，我是可以以“爱国”来称呼自己的吧？明目张胆的？至少在我前一段时间中我是这么认为的。而在前一段时间里，我所认为的“爱国”是要求与“血性”相挂钩的，因为我看到了如今的绝大多数中国人的“沉默”亦或者是我曾经以为的“麻木不仁”，“行尸走肉”的，那些个即便是在“暴政”之下，然而这么多的中国人却是“无动于衷”，甘愿成任人宰割的牛羊，也是自然的激起了我对于“血性”的渴望。然而，这恰恰是又引起了所谓的“偏激”，不如说是容易陷入“偏激”，至少在于我前一段时间间的表现，我可以充分的判断，那就是所谓的“偏激”。而我又不愿“沉沦”的，不如说是我将“沉沦”与曾经我所认为的“自然”理解成一致的意思了。这是我“迷失”的主要原因。</p><p>但是，以上的种种不过都是属于“自然”中的一小部分罢了。我在如今现在，我更加选择趋向于“自然”，即顺其自然而流。在曾经我也因为“血性”与“自然”作出过抉择，但我选择了“血性”，继而导致了我一系列的迷失所在。而“自然”可以带给我更多的“理智”与“宁静”。但是今天我在这里写下，我所选择的“自然”是与所谓的“沉沦”是两不相干的，更是与所谓的“麻木”，“行尸走肉”毫不相干的，尽管“自然”都已经包括了它们的所有。我所选择的“自然”，是不失“善良”，“正义”与“爱”的，是有“沉沦”的，是有“血性”的，也是有“爱国”的，也是有种种种种的。这就是我所谓的“大自然之道”。</p><p>“自然”真的是一完美，博大之词。</p><p>本来想是取一个题目名字的，也是因为不过是我所谓的“偏激式”的“诉苦”与我回归一些许“理性”的乱七八糟之文罢了，谈不上什么文章，更加谈不上什么“取题目”。到此为止吧。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(Mac下)Folx5 Pro破解版下载以及用其下载百度云资源</title>
      <link href="/2017/10/16/%EF%BC%88Mac%E4%B8%8B%EF%BC%89Folx5%20Pro%E7%A0%B4%E8%A7%A3%E7%89%88%E4%B8%8B%E8%BD%BD%E4%BB%A5%E5%8F%8A%E7%94%A8%E5%85%B6%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E4%BA%91%E8%B5%84%E6%BA%90/"/>
      <url>/2017/10/16/%EF%BC%88Mac%E4%B8%8B%EF%BC%89Folx5%20Pro%E7%A0%B4%E8%A7%A3%E7%89%88%E4%B8%8B%E8%BD%BD%E4%BB%A5%E5%8F%8A%E7%94%A8%E5%85%B6%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E4%BA%91%E8%B5%84%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>以前用的都是迅雷，因为其稳定性不怎么好，最近想换换下载软件体验体验其它的了。</p><p>选择的是Folx5 Pro 。<br>因为下的是破解版，也可以说是盗版..希望各位有钱的还是尽量支持正版。</p></blockquote><ul><li><p>Mac系统</p></li><li><p>Folx5 Pro破解版</p></li><li><p>百度云</p></li></ul><a id="more"></a><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><ul><li><p>下载Folx5 Pro破解版资源:<a href="http://pan.baidu.com/s/1eSw8rSY" target="_blank" rel="external">进我的百度云</a></p></li><li><p><strong>声明</strong></p></li></ul><blockquote><p> 来源于：<a href="http://xclient.info/s/folx-pro.html?_=449ce9ee692b567577b0c8318982962f" target="_blank" rel="external">地址</a></p><p>一路安装就好了。</p></blockquote><ul><li>下载完成后可以查看版本，如下图</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-16%20%E4%B8%8B%E5%8D%882.54.58.png" alt=""></p><h1 id="用Folx下载百度云资源"><a href="#用Folx下载百度云资源" class="headerlink" title="用Folx下载百度云资源"></a>用Folx下载百度云资源</h1><blockquote><p>实际上，只要是个下载软件都可以如下下载百度云资源。</p></blockquote><ul><li><p>假设你已经有了想要下载的东西，进入了百度云下载资源的页面，如下图<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-16%20%E4%B8%8B%E5%8D%882.51.33.png" alt=""></p></li><li><p><code>Safari</code> –&gt; <code>开发</code> –&gt; <code>用户代理</code> –&gt; <code>Microsoft Edge</code> ，之后点击页面上的 <code>下载</code></p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-16%20%E4%B8%8B%E5%8D%882.51.45.png" alt=""></p><ul><li>发现浏览器已经自动下载了，无需开启百度云客户端的过程了。接下来拷贝下载地址，如下</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-16%20%E4%B8%8B%E5%8D%882.52.16.png" alt=""></p><ul><li>打开刚刚下载好的Folx软件，新建一个下载窗口，<strong>之后要注意，不需要复制地址进去了，如果你这样做了，那肯定会出错导致下载错误，因为软件已经自动读取地址了，接下来只需点击“好”即可下载在百度云上的资源了</strong></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-16%20%E4%B8%8B%E5%8D%882.52.27.png" alt=""></p><ul><li>如下图</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-16%20%E4%B8%8B%E5%8D%882.52.36.png" alt=""></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li>Folx5 Pro 还有很多的功能呢，还需要多多的去了解，自行搜索吧。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> Folx5 Pro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>想致国家体育局的一封信</title>
      <link href="/2017/10/15/%E6%83%B3%E8%87%B4%E5%9B%BD%E5%AE%B6%E4%BD%93%E8%82%B2%E5%B1%80%E7%9A%84%E4%B8%80%E5%B0%81%E4%BF%A1/"/>
      <url>/2017/10/15/%E6%83%B3%E8%87%B4%E5%9B%BD%E5%AE%B6%E4%BD%93%E8%82%B2%E5%B1%80%E7%9A%84%E4%B8%80%E5%B0%81%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<p>致尊敬的中华人民共和国（简称中国）国家体育局：</p><p>   尊敬的国家体育局的各位，您们好。</p><p>   我是来自黑龙江省哈尔滨市黑龙江科技大学的一名大二生，此次来信我想跟您们反映一下关于您们制定的学生体测中的一项目 – 1000米跑步的一些我的建议。</p>   <a id="more"></a><p>   从历史的进程可以观之，我国在一届又一届的奥运会中的取得奖牌数量的与届渐增直到如今的奖牌数量名列世界前列，我深深的感觉到这是一件多么不容易的事。可以看到我国在奥运会上的佳绩次次更上一层楼，我备感荣幸自己身为一名中国人，奥运健儿们的身姿曾经无数次在我的脑海里回放，我也曾经无数次幻想自己有朝一日能够为国家出力，在奥运会上的身姿飞扬着，在胜利之后接受世界人民接受国人们的喝彩，更是憧憬着为我挚爱的祖国而战好似成为了那时的我唯一的梦想。我如今再次反观历史，这样的感觉更是强烈。</p><p>   但是，在奥运会上带回来的奖牌的数量并不能代表我国已经走进来了世界体育强国的行列，如果一味的认为可以将奖牌数量与体育强国相挂钩的话，那可真的是一名名副其实的大昏蛋。如果说要一味的要将我国建设成为体育强国的话，曾经的“全民健身”的口号早已可以验证之。这根本就是一种强迫性的无人性的东西罢，以强迫性手段让人们接受并且附与行动“证明”之，还是可以打着“为国家人民好，为人民服务”的口号啊，要求人们一味的要为了“建设体育强国”奉献一份力，并且是拉着人们的“爱国”热情一并奉行。然而最终的目的却只是为了凸显领导人们的“伟光正”与“爱国亲民”“一切为国家为人民”的虚伪形象，可以为后世所传颂罢了，政治家们都是一番如此。</p><p>   但是以上均不是我这次来信的真正的目的…我想说的是关于这个因为为了“强国”所衍生出来的这个学生体测中的项目 – 1000千米的见解。</p><p>   “全民健身”固然挺好。但是由于本人从小体弱多病，并且由于…</p><p>刚刚上了个厕所回来，感觉已是索然无味了，这篇文章到此为止吧。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“读”历史</title>
      <link href="/2017/10/15/%E2%80%9C%E8%AF%BB%E2%80%9D%E5%8E%86%E5%8F%B2/"/>
      <url>/2017/10/15/%E2%80%9C%E8%AF%BB%E2%80%9D%E5%8E%86%E5%8F%B2/</url>
      
        <content type="html"><![CDATA[<p>最近“迷”上了读历史。说是“读”，但是对我来说有一多半用“查证”来形容我的所谓的”读“历史更为恰当不过。我的初衷确实是以”查证“来附以行动的，我总是对”真相“”实情“的未知感到不可抗拒，在此面前，我总是能够比做其他的事情更具主动性，更具”侵略性“。</p><p>还得”感想“林思云先生写的《真实的汪精卫》一文，真正的带动了我想了解历史，读历史的”热情“啊。</p><a id="more"></a><p>在最近的对于”读“历史的一番冲动，我特别的热衷于去互联网上查找一些评价比较好的相关的书籍来下载并用以”查证“。事实证明，其中给我的收获是有不少的。我还热衷于下载一些我感觉好的一些历史”查证“书籍，当然，这些必须是我在有意无意之中看到的，之后产生的一系列想要下载的欲望，事实证明，给我的收获也是让我感到一丝欣慰的。</p><p>通过简单的读历史／查证历史，让我看到了不少所谓的“历史哲学”，即为附于历史中的哲学。确确实实的，这对我来说不如说是通过历史上的“史事”更多的给我的是现实上的“社会经验”与行走在人世间的种种“人生警示”。如果真的要称之为“哲学”的话，我想也是不为过，有一番道理所在的。</p><p>历史是需要“尽量“的求实的。我们心知肚明的是，因为种种原因，历史或许真的是没有绝对的事实的，所以需要我们去读更多的历史以来判断求证历史的是否曲解与是否真实，不可否认，现在我们所读到的历史，有一不少的部分是根据先人前辈们的经过查证之后所得出的个人主观的判断罢了，为何可以”流芳百世“？或许是易得到或亦得到了许多的”同志“们的认可吧。所以才能在我们这一群想要或需要探索所谓的历史的实情的人中得以传播，毕竟历史是要求严肃严谨的，我想每一个身同感受的无论是读还是写的人都会有这么一个责任，对历史负责的责任。</p><p>我如今所谓的”读“历史，更多的用以”探索未知“来形容真的是再也恰当不过的了，而在不断的探索未知中的兴奋热情给予我的才是那所谓的”动力“吧。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>拜读林思云先生之文章有感</title>
      <link href="/2017/10/13/%E6%8B%9C%E8%AF%BB%E6%9E%97%E6%80%9D%E4%BA%91%E5%85%88%E7%94%9F%E4%B9%8B%E6%96%87%E7%AB%A0%E6%9C%89%E6%84%9F/"/>
      <url>/2017/10/13/%E6%8B%9C%E8%AF%BB%E6%9E%97%E6%80%9D%E4%BA%91%E5%85%88%E7%94%9F%E4%B9%8B%E6%96%87%E7%AB%A0%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>昨天在想了解汪精卫这个历史人物的过程中，“认识”到了林思云先生。并且在今日终于将先生的《真实的汪精卫》一文一口气读完，感觉甚是快哉！我有个小毛病，在读一个人的文章前必先要了解其作者的情况才决定是否读下去。</p><a id="more"></a><p>可幸的是，我由此认识了一位针对现象敢于说实话，有大胆识，有大见识的老先生。我在初读先生的文章时，便是被先生的文笔流畅，博识广知，通俗易懂的写作风格所吸引。在我得知先生的《真实的汪精卫》这一篇文章在中国有巨大争议的背景下，我特意又去搜索了先生写的的多篇文章，并且有选择性地拜读了其中的几篇，也包括了其中的争议比较大的几篇。但是在我看完之后更是萌生了要将先生的《真实的汪精卫》这一篇文章“加速”看完的想法。</p><p>从先生的文章中我可以看出来对于历史方面都是经过先生查证之后再精心编译成文的，先生的这一种对于历史的严格严谨态度有使我发至内心的产生一股敬仰之情的，在如今的中国对于历史的不严谨的态度现象简直是太层出不穷，不仅仅是统治阶级为自身利益的蓄意更改，为自己添光添彩，曲解历史的作为之外，再加上如今的历史老师的各种偏见与偏激，直接使得我民族后来人成为灌输错误历史毒瘤的“牺牲品”，历史的实情更是难以在对于后来人的教育上的扶上基本的台面。</p><p>在了解先生一些基本的情况后，发现有国人把把“汉奸”的帽子戴在他的头上，并称先生为“四大汉奸”之一。甚至在对先生的<a href="https://baike.baidu.com/item/林思云" target="_blank" rel="external">百度百科</a>介绍上，更是有“其观点通常是明确反对中国，为侵华日军及日本的南京大屠杀暴行进行狡辩“此类明目张胆”污蔑“先生文章思想的句词。在我拜读先生的多篇文章以来（其中也包括有争议性较大的那几篇），那一些人们冠以”汉奸“之名于先生又是何种看法与目的？他们所理解的所谓的”汉奸“就是针对那些谈及于在国家社会中的一些现象作了一些开明客观并且正确有针对性的评价，说出来了在国内大多数人看不到的，又或者是不敢说的大实话的华人又或者是华裔华侨吗？这真的是足以凸显一个人恶毒无知的心态的。试问，你们那一些因为看不得有人说自己国家的不好，亦或者是揭露出的缺点将此整天对着那个人这个人喊着冠以”汉奸“之名的人们有几人真正的了解历史呢？又有几个真正的去查证过？最基本的，又有几人真正的拜读过先生的文章？还是像从前许多个时候一样，跟风耍性，毫无主见的，毫无辩解能力的去”开心“地区诋毁？不要不承认，并且在承认也并不可耻的情况下，你们这一群中国人真的只是一群行尸走肉罢了。放下你们那可怜的那一点点无聊的所谓的自尊心吧，显得多么的无知幼稚呢？只怕有人不但不知还一味的引以为豪，真的是可悲又可笑，让人可笑两难呀。而这也不可避免的，是如今绝大多数中国人的”通病“。</p><p>以上一段我写这么多，是有一番为先生鸣不平的意思的，在我拜读先生的文章以来，先生真的只不过是客观的说出来了自己的看法想法罢了，何以用”汉奸“之名来冠之？真的是一件荒唐之事。我也是发至内心的敬佩先生的胆识与勇气的，然而，在中国，这恰恰是绝大多数国人难有的品质，当然我也不否认其中绝有可能有统治阶级的蓄意压迫。并且我也不否认，我本身在有时也是缺乏这种品质精神的。</p><p>先生的《真实的汪精卫》一文，更是让我感到一些震撼的，因为从前的我确实对于”汪精卫“这个历史人物除了用大众的”汉奸“来形容之外也绝无其他的的见闻事迹。其中文章讲解历史之详细，引用历史时间之精确是确确实实有一些震撼到我的，不得不在此再一次向先生对于历史的严谨态度品质致敬。在最后的附上其中林思云先生的一段话：</p><blockquote><p>在中国历史上，每当发生对外战争时，那些坚持对外寸步不让的主战派，总是被尊为民族<br>英雄，而那些主张对外让步和解的主和派，总是被打入民族败类的汉奸行列。</p></blockquote><p>绝大多数的政治家们在位之时总是想着“利”与“名”，并且在退位之后还想着要把自己的“名”可以流芳百世，留得个“好归宿”以此好为后人所赞叹。不得不说，这真的是这一些政治家们最为悲哀且最为愚昧之处了。但是在拜读完《真实的汪精卫》整篇文章之后，关于对于汪精卫先生，除了一句“汪主席”之外，我也无从表达。生得伟大，死得亦伟大。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（转自林思云先生）真实的汪精卫</title>
      <link href="/2017/10/12/%EF%BC%88%E8%BD%AC%E8%87%AA%E6%9E%97%E6%80%9D%E4%BA%91%E5%85%88%E7%94%9F%EF%BC%89%E7%9C%9F%E5%AE%9E%E7%9A%84%E6%B1%AA%E7%B2%BE%E5%8D%AB/"/>
      <url>/2017/10/12/%EF%BC%88%E8%BD%AC%E8%87%AA%E6%9E%97%E6%80%9D%E4%BA%91%E5%85%88%E7%94%9F%EF%BC%89%E7%9C%9F%E5%AE%9E%E7%9A%84%E6%B1%AA%E7%B2%BE%E5%8D%AB/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>一篇备受争议的谈及历史人物汪精卫的文章。我的看法是，历史没有绝对的真相，历史更需要自己动手去查证。不可否认，历史从来都是为统治阶级服务的，可信与不可信，都需要我们在查证之后加以判断。</p></blockquote><ul><li>以下是这篇文章中的所有内容。</li></ul><a id="more"></a><h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>《二闲堂文库》   </p><p><img src="http://owudg3xs2.bkt.clouddn.com/images1.jpeg" alt=""><br>　<br>真实的汪精卫</p><p>作者：林思云</p><p>中国经常有这样一种怪现象，提到某个人的名字是妇孺皆知，但问起该人的生平和事迹时，<br>却又是鲜为人知。汪精卫就是这样一个特殊的人物。汪精卫在中国可以说是家喻户晓的大<br>汉奸，可是大家对汪精卫的“卖国事迹”却是一问三不知。这也是中国历史教育的一大特<br>色；只告诉大家他是坏人，却又不告诉大家他作过什么坏事。好在中国学生头脑比较简单，<br>不喜欢刨根究底，所以历史老师还不至遇到太大的麻烦。</p><p>汪精卫在中国是一个完全被否定的人物，甚至被认为是中国人的耻辱。因此现在的中国历<br>史教科书中，把汪精卫从辛亥革命和国民党的历史中完全抹杀，只是抗日战争的历史中实<br>在无法抹杀汪精卫的存在，才简单地提到了汪精卫和他的维新政府。这种出于主观愿望而<br>随意修改历史的作法，使中国人对历史产生了错误和虚假的理解，实在有碍于中国的发展<br>与进步。</p><p>历史上真实的汪精卫，曾是近代中国有数的叱吒风云的历史人物，对中国的历史走向有举<br>足轻重的影响。在历史走到２１世纪的今天，应该考虑还汪精卫的本来面目，重新认识历<br>史上真实的汪精卫。</p><p>要为汪精卫写一个比较真实客观的小传还有不少困难，最大的困难就是有关汪精卫的资料<br>十分匮乏，人们似乎都极力避开这样一个敏感人物，怕给自己惹来各种麻烦。１９８０年<br>代后期，中国开始出现一些关于汪精卫的书籍，比如蔡德金的《汪精卫评传》，黄美真的<br>《汪精卫传》，秦亢宗的《走向深渊》等。但中国出版的书都有一个共同的问题，就是有<br>意识地贬低丑化汪精卫，写书的重点放在猎奇和艳史方面，不是严肃的人物传记而近似于<br>野史小说，真实性有很大的疑问。日本也有不少关于汪精卫的书籍，比如上板冬子的《汪<br>兆铭的真实》，杉森久英的《汪兆铭传》，今井武夫的《支那事变的回想》，特别是亲身<br>参加过汪精卫和平运动的松本重治写的回忆录《近卫时代》和《上海时代》，犬养健的《<br>扬子江仍在奔流》，披露了不少鲜为人知的事情。与中国的资料相比，日本有关汪精卫的<br>书籍比较严肃，基本没有凭信性很低的猎奇艳史部份。因此这篇《真实的汪精卫》以日文<br>资料为主，中文资料为辅，力争做到求实客观。</p><p>汪精卫的一生大致可以分为三个阶段，所以本文也分为三大部份来写：第一部份：为了革<br>命奉献一切；第二部份：打倒独裁者蒋介石；第三部份：和平运动曲线救国。</p><p>第一部份：《为了革命奉献一切》</p><p>１８９３年５月４日，广东省番禹县（今广州），来自浙江的客商汪椒家里，又新添的一<br>个男孩。这个男孩是汪椒的第４个男孩，也是第１０个孩子，汪椒给这个男孩龋蝴叫汪兆<br>铭。</p><p>汪兆铭是汪椒的填房吴氏所生，生汪兆铭那年汪椒已经６２岁了。汪椒是个落第秀才，后<br>来弃文从商。汪椒见这个小儿子异常聪明，就特别注重教汪兆铭读书，在汪兆铭５岁时就<br>开始教他认字。在父亲的严格教导下，汪兆铭８、９岁时，就基本可以读书了。汪椒晚年<br>由于年老眼花，无法看清书上的小字，就让汪兆铭每天为他朗读诗书。汪椒特别喜欢王阳<br>明和陆游，每天让汪兆铭为他朗读王阳明的文章和陆游的诗。每天在父亲面前朗读，不仅<br>无形中培养了汪兆铭演讲的口才，还使幼小的汪兆铭接受了王阳明的哲学思想和陆游的豪<br>放文风，这些对汪兆铭后来的政治生涯起到了非常重要的作用。</p><p>汪椒家里并不富裕，汪兆铭童年时代的生活相当清苦。汪兆铭１３岁时，母亲病逝，１４<br>岁时，父亲又病逝。从此汪兆铭就依靠比自己大２２岁的大哥汪兆镛抚养生活。由于家境<br>所迫，汪兆铭１７岁时就开始到私塾去教书。１９０１年汪兆铭１８岁时参加了科举考试<br>，以广州府县第一名的优异成绩考取秀才。</p><p>１９００年义和团事件以后，清政府开始搞“新政”，开始大量选派公费留学生到外国留<br>学，并给予归国留学生举人或进士的待遇，授予高级官职。这在当时的中国青年中引起了<br>极大的反响，有识青年纷纷前往外国留学。</p><p>当时公费留学生的主要派遣国家是日本，大量留学生前往日本的原因主要有三：一是日本<br>地理位置近，留学费用便宜；二是日本明治维新后，日本的强国经验对中国特别有现实意<br>义；三是日文中大量使用汉字，所以对于中国人来说，学日文要比学欧洲文字省力很多。<br>特别是日本还专门为中国留学生设置了一些学校，在日本教师讲课时，旁边配有中文翻译<br>，以便让不懂日文的中国留学生也能听懂讲课的内容。当时日本比较有名的专门招收中国<br>留学生的院校有：政法大学速成科（汪兆铭母校）、宏文学院、同文书院和振武学堂（蒋<br>介石母校）。</p><p>１９０４年，两广总督岑春□在广州招考前往日本政法大学速成科的公费留学生，录取人<br>数为５０名。清政府为每位公费留学生每月资助３０日元，这比现在公派留学生的资助金<br>高多了，可以在日本生活得比较宽裕。汪兆铭考上了这次的公费留学生，和汪兆铭同时录<br>取的还有胡汉民，朱执信等人，他们后来都成为同盟会的骨干。１９０４年９月，汪兆铭<br>挤杂在三等舱的乘客当中，首次踏上了日本的土地。当时汪兆铭万万没有想到三十多年后<br>，他以“国家元首”之尊乘专机访问日本，更没有想到他会客死在这片土地上，人的命运<br>真是不可预测的事。到日本后，汪兆铭住在东京神田区神保町名叫春水馆的留学生宿舍，<br>离政法大学很近。政法大学以教授西方的政治法律为主，汪兆铭在那里学习卢梭的《民约<br>论》、孟德斯鸠的《万法精神》，斯宾塞的《政治进化论》，这些西方的民主政治思想使<br>汪兆铭的世界观发生了根本的转变，树立起推翻专制的封建王朝，建立西方式民主共和国<br>的信念。</p><p>１９０４年底正好是日俄战争最激烈的时候，日本全国都处于极度兴奋的状态。即使在课<br>堂上，发表最新战况的号外新闻一到，教授就停止讲课，和学生一起朗读新闻。日本这种<br>举国上下的爱国热忱，不仅使汪兆铭十分感动，也唤起了很多中国留学生的爱国心，激发<br>他们投身于救国救民的革命运动之中。</p><p>到１９０５年，仅仅在东京一地，就有中国留学生１万余名，这在当时是一个非常空前的<br>规模。中国的革命家们纷纷在留学生最多的日本建立革命党派，使日本成为中国革命的大<br>本营。当时在日本主要有主张君主立宪的保皇党，和主张推翻异族皇帝的革命党。保皇党<br>的代表人物是康有为和梁启超，他们反对进行流血的暴力革命，主张承认清政府统治的合<br>法性，在清政府的主导下进行渐进的立宪改革。保皇党在海外华侨中有不小的势力，但在<br>日本的血气方刚的年青留学生们，并不喜欢保皇党的渐进稳健主张，大多数都支持革命党<br>激进的暴力革命方案。</p><p>在海外一时有很多革命党成立，由于中国历史上就有同乡结党的倾向，这些革命党都建立<br>在同乡会的基础上。有孙中山的广东派“兴中会”，黄兴、宋仁教的湖南派“华兴会”，<br>章炳麟的浙江派“光复会”等等。其中以孙中山的“兴中会”和黄兴的“华兴会”势力最<br>大。黄兴身材魁梧，仪表堂堂，性格豪放，很有革命家的“气派”，很为年青的留学生们<br>所倾倒敬仰。而孙中山则身材矮小，说话慎重，在留学生中间的人气不如黄兴高。但孙中<br>山提出了一套“三民主义”的革命理论，比黄兴派的单纯革命相比，在海外华人中有更大<br>的感召力。</p><p>１９０５年７月孙中山从美国再次来到日本，汪兆铭和胡汉民，朱执信等广东同乡一起拜<br>访孙中山，加入了孙中山的广东派“兴中会”。汪兆铭文思敏捷，擅长演讲，有很大的组<br>织力和号召力，很快脱颖而出得到孙中山的赏识并委以重用。由于当时的革命党都是各自<br>为政，力量很分散，这次孙中山来日的主要目的就是联合各派的革命党，组成一个统一的<br>革命党。１９０５年７月３０日，孙中山前往黄兴的住所拜访。孙中山和黄兴都是当时非<br>常有名的大革命家，但以前两人一直在各自的平行线上，出来没有见过面。</p><p>黄兴对孙中山的来访大喜过望，黄兴紧紧握著孙中山的手，半晌说不出话来。当时黄兴３<br>２岁，孙中山４０岁。可是孙中山和黄兴交谈不久，气氛就开始紧张起来，两人语气强硬<br>，各持己见，甚至到了拍桌子瞪眼睛的地步。最后黄兴破颜一笑说：“孙先生，我服你了<br>”，两位革命巨星终于达成了联合。１９０５年８月２０日，各革命党派的大联合“中国<br>同盟会”在日本东京成立，孙中山被选为总理，汪兆铭作为同盟会的发起人之一，被选为<br>评议部部长。新建的同盟会最初设有三个部：执行部、评议部、司法部。汪兆铭当选重要<br>职务的评议部部长，说明汪兆铭在革命党中有相当的影响力，那时汪兆铭才２２岁。</p><p>同盟会最初的主要任务是搞宣传和制造舆论，１９０５年１１月，同盟会的机关报《民报<br>》正式创刊。《民报》特邀章炳麟担任主编，主要编辑则为汪兆铭、胡汉民、吴稚晖等人<br>。汪兆铭从《民报》的创刊号开始，一直是《民报》的主要撰稿人，汪兆铭以“精卫”的<br>笔名在《民报》上发表文章。汪兆铭使用“精卫”的笔名，源自《山海经》里精卫填海的<br>故事，含有对革命锲而不舍之义。汪精卫的文章逻辑严密，笔锋锐利，有很大的影响力。<br>当时《民报》的主要对手是梁启超等保守派主办的《新民丛报》，汪精卫的文章以与保守<br>派的改良主张论战为主，宣扬暴力革命的必要性。１９０６年６月，汪兆铭从政法大学速<br>成科毕业，在２６０余名学生当中，汪兆铭成绩名列第二。本来公费留学生在学成毕业后<br>，有归国服务的义务，同级的大部份同学纷纷归国。但汪兆铭却不准备回国，决定留在日<br>本进行革命活动。由于逾期不归就没有了公费资助，必须自己解决生活问题。幸好汪精卫<br>日语较好，找到了一份翻译工作，每月可得稿酬五、六十元，不仅满足了自己的生活，还<br>可以资助朋友。</p><p>同盟会成立后，革命派的势力大振，引起了清政府的不安。清政府开始向日本政府施加压<br>力，要求取缔中国留学生的反政府活动。尽管日本政府中，对中国留学生的革命行动持同<br>情态度的人很多，但由于考虑到与清政府的外交关系，开始对在日本的中国留学生反政府<br>活动进行限制。１９０５年１１月，日本文部省发布的禁止中国留学生进行反政府活动的<br>规定，但事实上对中国留学生的反政府活动采取睁一只眼闭一只眼的态度。１９０７年初<br>，日本政府迫于清政府的压力，“请”孙中山出国。</p><p>此后汪精卫跟随孙中山出走越南和马来亚等南洋各地，继续从事革命活动，这时汪精卫已<br>成为孙中山最为信赖的亲信之一。１９０８年３月汪精卫在马来亚的槟城结识了华侨巨富<br>陈耕基的女儿陈璧君。陈耕基积极支持孙中山的革命，经常为孙中山捐钱捐物，孙中山则<br>定期向陈耕基赠送《民报》等革命刊物。陈耕基的女儿陈璧君非常爱读《民报》，在孙中<br>山等人的革命思想影响下，陈璧君决心以实际行动投身革命。汪精卫到槟城演讲时，台下<br>听讲的陈璧君对汪精卫的风度和才识十分钦服。汪精卫因为革命的公事不时走访陈耕基家<br>，所以也经常见到陈璧君。但每次陈璧君与汪精卫见面都是在母亲卫月朗的陪伴下，没有<br>单独谈过话。</p><p>１９０８年汪精卫２６岁，陈璧君１７岁，正是男女热恋的年龄。当时虽然两人之间都很<br>有好感，但还只是革命同志的关系，没有发展到恋人的地步。另外阻碍他们成为恋人的还<br>有另外一层原因，那就是汪精卫和陈璧君都已经和别人订婚。根据中国的传统习惯，陈耕<br>基为陈璧君选了一个华侨巨商的儿子订了婚，而且准备在近期内就让陈璧君结婚。陈璧君<br>读了《民报》等宣扬西方个人主义思潮的书报后，思想发生了根本的变化，憧憬西方式自<br>己选择结婚对象的自由结婚。陈璧君和她的未婚夫谈到革命，谈到自己将来准备投身革命<br>。她的未婚夫却思想十分保守，对革命也没有任何兴趣，他对陈璧君说：“革命是男人的<br>事，女人搞革命象什么样子？”。由于两人思想差距太大，陈璧君最后终于选择“退婚”<br>。陈耕基开始不同意“退婚”，但无奈陈璧君态度坚决，只好同意让陈璧君“退婚”。</p><p>汪精卫少年父母双亡，所以长兄汪兆镛在他１５岁时，为他选择了一个同事的女儿刘氏订<br>了婚。汪精卫在日本参加革命后，汪兆镛经常来信训斥汪精卫忘恩负义，拿了朝廷的公费<br>出国，到国外却干背叛朝廷的反叛之事。汪兆镛要汪精卫立即悬崖勒马，放弃革命回国为<br>朝廷尽忠。其实汪兆镛也并非坚决反对汪精卫搞革命，只是怕汪精卫成为朝廷的罪犯后连<br>累他们整个家族。汪精卫也明白长兄的用心，在清政府发出对他的通缉令后，汪精卫写信<br>给汪兆镛，表示断绝与家庭的关系，解除婚约。汪精卫在信中说：“罪人兆铭在日本从事<br>革命之事，已被朝廷发觉，谨自绝于家庭，以免相累……吾为革命流血，志矢不渝，谨请<br>谅鉴。罪人与刘氏由家庭作主，曾有婚约，但既与家庭断绝，则此关系亦当随之断绝。请<br>自今日始，解除婚约”。汪兆镛接到汪精卫的断绝信后，退还了刘家的订婚聘礼，为汪精<br>卫解除了婚约。</p><p>陈璧君退婚后，倔强地要求到日本参加革命，陈耕基只好同意陈璧君去日本。１９０８年<br>７月，陈璧君搭乘荷兰客船来到日本，在孙中山的“特批”下，宣誓加入同盟会，到《民<br>报》编辑部帮忙，和汪精卫在一起工作。陈璧君到《民报》后，编辑部的气氛一下活跃了<br>起来。本来《民报》的编辑们都是些穷书生，生活十分拮据，极少去饭店吃饭。陈璧君却<br>是个阔小姐，口袋里总有花不完的钱，经常请大家去高级饭店聚餐畅饮，使这些编辑们大<br>为开怀。在这些未婚的年青编辑中，陈璧君成了他们追求的对象，然而陈璧君却逐渐倾心<br>于汪精卫。</p><p>陈璧君倾心于汪精卫，不仅因为汪精卫的相貌才能，还因为他严肃的生活作风。在这些年<br>青的革命家中，不少人嫖妓赌博酗酒，而汪精卫却象清教徒一样生活，被人称为“道学先<br>生”。最让陈璧君感动的是汪精卫“革命家不结婚”的信念。汪精卫对陈璧君说：革命家<br>生活无著落，生命无保证，革命家结婚必然陷妻子于不幸之中，让自己所爱之人一生不幸<br>是最大的罪过。汪精卫发誓说：“革命不成功就不结婚”。汪精卫越说不结婚，陈璧君反<br>而越爱汪精卫，但汪精卫却从来没有碰过陈璧君一个指头。后来汪精卫说：正因为他太爱<br>陈璧君，他才没有碰陈璧君一下，他不想毁了陈璧君一生的幸福。</p><p>汪精卫后来真的实践了他的诺言，在辛亥革命成功后，和革命同志陈璧君结婚，举行了盛<br>大的婚礼。汪陈的革命婚姻在当时一时传为佳话。汪精卫婚后也一直严守一夫一妻的准则<br>，从来没有外遇和桃色新闻，汪精卫的道德人品在当时的革命家中无人可比。</p><p>到１９０８年冬，革命进入最困难的时刻。六次武装起义相继失败，大量革命志士倒在血<br>迫之中。此时梁启超等保皇党乘机攻击革命党的暴力革命，批评革命党领袖是唆使别人送<br>死而自己谋取名利的“远距离革命家”。梁启超在《新民丛报》上撰文批评革命党领袖们<br>：“徒骗人于死，己则安享高楼华屋，不过‘远距离革命家’而已”。梁启超的批评反响<br>很大，一时在海外华人中掀起批评了革命党领袖的风潮。</p><p>不久这场批评的矛头就开始指向孙中山，有人写了《孙文十四大罪状》一文，揭露孙中山<br>贪污革命经费２万元自用。当时孙中山独揽同盟会中的经费大权，从不公开经费的使用情<br>况，所以人们怀疑孙中山贪污也不是无中生有。虽然孙中山到底有没有贪污的问题一直没<br>有搞清楚，但这场批评对孙中山在党内的威信影响极大，同盟会中出现也了反孙运动。章<br>炳麟的浙江派公开反对孙中山，宣布脱离同盟会，恢复他们以前的“光复会”。黄兴的湖<br>南派持中间态度，对革命灰心和怀疑的人大量出现，一时间革命陷入失败的边缘。</p><p>在此情况下，汪精卫站了出来，主动提出自己去北京刺杀清政府高官，用鲜血来证明同盟<br>会的领袖不是贪生怕死的“远距离革命家”。</p><p>第一部份之二：玉石共焚</p><p>１９０５年孙中山联合海外各派革命党组成同盟会，主张用暴力的方式来推翻清王朝。到<br>１９０８年冬，同盟会已经发动了六次武装起义，但都相继失败，大量革命青年为此失去<br>宝贵的生命，梁启超等保皇党则乘机批评革命党的暴力革命。</p><p>梁启超特别批评革命党领袖们，自己躲在安全的海外，却唆使别人在国内搞送死的暴力革<br>命。１９０８年冬，梁启超在《新民丛报》上撰文批评革命党领袖们：“徒骗人于死，己<br>则安享高楼华屋，不过‘远距离革命家’而已”。梁启超批评革命党领袖的“远距离革命<br>家”作风，批评他们唆使别人送死而为自己谋取名利的作法，一时在海外华人中引起了很<br>大的反响，掀起了一股批评革命党领袖的风潮。</p><p>同盟会内部也出现了反孙中山的运动，一些人主张“革命之前必须先革革命党之命”。反<br>孙派攻击孙中山主要在两个方面：第一是批评孙中山近似于独裁的领导作风，说孙中山“<br>办事近于专横，常令人难堪”，第二是批评孙中山不公开革命经费的使用情况，不少人怀<br>疑孙中山将革命经费挪作私用。</p><p>１９０７年日本政府“请”孙中山出国时，日本朋友公开赠送孙中山的赠款就有２０００<br>０余日元（当时普通日本工薪阶层的月薪不过二、三十日元），而孙中山只给《民报》留<br>下２０００元经费，其余自己全部带走，使《民报》经常陷于经费拮据的苦境。１９０８<br>年冬，《民报》主编章炳麟和孙中山诀别，章炳麟说：日本人向孙中山赠送的赠款，本来<br>是赠送给革命党的革命经费，孙中山却把这些钱当作赠送给他个人的私人赠款使用。章炳<br>麟批评孙中山这种作法“实在有损我同盟会之威信，而使日人启其轻侮之心”。</p><p>在“远距离革命家”批判和“倒孙狂潮”的夹攻下，党内党外对革命灰心和怀疑的人士大<br>量出现，同盟会一时间陷入失败的边缘。汪精卫是同盟会中无条件坚决支持孙中山的孙派<br>骨干，为了挽救革命、挽救同盟会，汪精卫主动提出自己去北京刺杀清政府高官，用鲜血<br>来证明同盟会的领袖不是贪生怕死的“远距离革命家”，使党内党外的怀疑人士重新树立<br>起对革命的信心。</p><p>汪精卫刺杀清政府高官的设想，并不著眼于暗杀计划本身是否成功，而是著眼于用鲜血回<br>击同盟会领袖是“远距离革命家”的讥讽，挽回民众对革命党的信心。汪精卫写给孙中山<br>的《致南洋同志书》中写道：“吾侪同志，结义于港，誓与满酋拼一死，以事实示革命党<br>之决心，使灰心者复归于热，怀疑者复归于信。今者北上赴京，若能唤醒中华睡狮，引导<br>反满革命火种，则吾侪成仁之志已竟。”</p><p>作为同盟会中坚分子的汪精卫，在北京行刺被捕的消息传来后，海内外对孙中山同盟会的<br>看法大为改变，梁启超的“远距离革命家”批判不攻自破，人们重新树立起了对革命党同<br>盟会的信心。可以说当时同盟会的困境，很大程度上是靠汪精卫牺牲自己的烈举挽回的。<br>如果当时汪精卫被清廷处死，汪精卫毫无疑问要作为中国历史上的钦定英雄，永远载入史<br>册。汪精卫在《致南洋同志书》中的一段话，也在当时被流传为佳话：“此行无论事之成<br>败，皆无生还之望。即流血于菜市街头，犹张目以望革命军之入都门也。”</p><p>汪精卫最有名的文章是发表于《民报》２６期上的《革命之决心》一文。汪精卫在文中说<br>：现在四亿人民正如饥泣的赤子，正在盼等吃革命之饭。但烧熟米饭所需要的一是薪，二<br>是釜。薪燃烧自己化为灰烬，把自己的热移给了米，才使生米变成熟饭；釜则默默地忍受<br>水煎火烤。所以革命党人的角色有二，一作为薪，为薪的人需要奉献的毅力，甘心把自己<br>当作柴薪，化自己为灰烬来煮成革命之饭；二作为釜，为釜的人需要坚韧的耐力，愿意把<br>自己当作锅釜，煎熬自己来煮成革命之饭。</p><p>在同盟会中汪精卫最要好的朋友是胡汉民。胡汉民比汪精卫大四岁，不仅是和汪一起来日<br>本留学的同乡，也是长年在《民报》一起工作的同事，汪一直把胡当作大哥看待。胡汉民<br>得知汪精卫要北上行刺时，劝汪说：你是同盟会中举足轻重的人物，你的文才口才和号召<br>力都是无人可以取代的。如果你以一时之激情与虏酋拼命，对革命的损失太大。</p><p>汪精卫则说：梁启超骂我们这些革命党人是“远距离革命家”，章炳麟等人又背叛孙先生<br>和同盟会，已经到了“非口实所可弥缝，非手段所可挽回”的地步。现在我们必须拿出具<br>体的行动来证明我们的革命之决心，才能使梁启超愧对民众，使章炳麟愧对党人，才能促<br>使同盟会内部团结和挽回民众对革命的信心。我以前在《革命之决心》一文中曾经说过，<br>革命党人要为革命作釜作薪，现在正是需要我当革命之薪的时候，若吝薪则何由有饭？但<br>不管汪精卫说什么，胡汉民都坚决反对汪的北上行刺计划。汪精卫临走时不敢向胡汉民告<br>别，怕胡汉民会硬把他留下，于是咬破手指给胡汉民留下血书：“我今为薪，兄当为釜”<br>。胡汉民见到血书时，当场哭得昏了过去。</p><p>孙中山等同盟会领导人并不反对用行刺清廷高官的形式，来挽回和唤醒民众对革命的信心<br>。但考虑到汪精卫是同盟会中非常难得的人才，所以孙中山并没有表示支持汪精卫的北上<br>行刺计划，但也没有表示反对。因为没有孙中山等同盟会领导人的明确支持，汪精卫不得<br>不自己寻找愿意和自己一起北上行刺，作革命之薪的人。汪精卫首先想到的是黄复生。</p><p>黄复生是四川人，和汪精卫一样也是发起同盟会的元老，担任同盟会的高层干部。黄复生<br>读了汪精卫《革命之决心》一文后非常感动，对汪精卫说：“我也愿意作革命之薪”。汪<br>精卫把自己北上行刺的计划告诉黄复生，汪精卫还没有讲完，黄复生就大笑道：“铭兄，<br>有话何不直说。我和你一起去北京”。汪精卫说：“去北京行刺可是九死一生，毫无生还<br>的可能……”黄复生豪爽地说：“我参加革命时早已立志为革命而死，还谈什么生还的问<br>题，这次就让我们一起作革命之薪吧。”</p><p>汪精卫再找到同盟会中会作炸弹的喻培伦，请他帮助作炸弹，喻培伦也爽快地答应了，愿<br>意和汪精卫一同北上。当然最坚决和汪精卫一起北上的是陈璧君，有人半开玩笑地说：“<br>你有一张英国臣民的护照，当然不怕死。到关键时刻，你把英国护照一抛，英国领事馆自<br>会来救你。”陈璧君听完二话不说，拿出英国护照当场撕成碎片，满座皆惊，也让那位说<br>风凉话的人羞得恨不得钻入地缝。可惜现在再也看不到陈璧君那样有志气撕毁自己外国护<br>照的烈女了。</p><p>汪精卫计划他和黄复生先到北京作好准备，然后喻培伦、陈璧君等人再携带炸弹到北京。<br>１９０９年１０月，汪精卫、黄复生两人先乘英国船到天津，同盟会的郑毓秀迎接他们。<br>郑毓秀的父亲是天津有名的实业家，她本人精通外文，是天津有名的交际花。郑毓秀经廖<br>仲恺介绍加入同盟会，这次廖仲恺特别写信给郑毓秀，要求她全力帮助汪精卫等人的暗杀<br>行动。汪精卫平日接触的都是陈璧君那样的革命烈女，见到郑毓秀这样风姿绰约的美人交<br>际花，觉得十分不自然。</p><p>汪精卫说：“听说最近北京的火车站盘查得很严。我们这些男人携带炸弹容易引起怀疑，<br>想请你帮我们把炸弹带入北京。不过这是一件非常危险的事，炸弹在路上一不小心就有可<br>能爆炸……”郑毓秀当即答应：“如果不会爆炸，还叫什么炸弹？这事就交给我了。”汪<br>精卫是个相貌英俊的美少年，又精通诗词文章，郑毓秀对汪很是倾心，多次以教她作诗为<br>借口和汪精卫接近，汪却极力避开和郑毓秀的单独接触。汪精卫此时已经下定决心象柴薪<br>那样为革命献身，早把男女私情置之度外，和郑毓秀的关系从来没有越过同志的关系。后<br>来郑毓秀感叹说：“汪精卫真是少见的道学先生”。</p><p>汪精卫和黄复生到北京的琉璃厂租了一栋房子，挂上“守真照相馆”的招牌，因为照相馆<br>的暗室最适合搞炸弹的组装，照相馆里飘出化学药品的味道也不会引人怀疑。不久喻培伦<br>传来话：正月十五（１９１０年２月１０日）将带铁西瓜入京，请汪等人去前门车站接站<br>。汪精卫和黄复生赶到前门站，见郑毓秀挽著一位白人绅士的手悠然走出车站，白人绅士<br>的手里提著一个沉重的皮箱，里面装著炸弹，车站的警官看也没看就让他们走出了车站。<br>原来当时外国人在中国有治外法权，因此没有人敢随便检查外国人的行李。这个白人是法<br>国大使馆的职员，曾一直追求郑毓秀，这次郑毓秀请他帮忙，那人当然一口答应。</p><p>炸弹运到北京后，喻培伦和陈璧君也赶到北京，他们一起商量暗杀的具体计划。第一次暗<br>杀行动是刺杀摄政王载沣的弟弟载洵贝子和载涛贝勒（贝子和贝勒为清王室的爵位名，亲<br>王之下为贝子，贝子之下为贝勒）。２月底载洵和载涛从欧洲访问返京，汪精卫等人准备<br>在载洵和载涛走出前门车站时，投掷炸弹炸死载洵和载涛。当天汪精卫、黄复生、陈璧君<br>三人雇一辆骡车前往前门站，汪精卫和黄复生携带装有炸弹的皮箱在车站门口等候，陈璧<br>君则在骡车上接应。但没有想到当时清廷正搞廉政运动，载洵和载涛不摆架子，混杂在一<br>般民众中一起出站。由于出站的人群中戴红顶子官帽的人极多，汪精卫和黄复生无法识别<br>目标，只好终止暗杀计划。</p><p>这次刺杀失败后，汪精卫等人把暗杀的目标定为清廷的最高领导人摄政王载沣。他们吸取<br>了上次计划不周而失败的教训，开始详细调查载沣的行踪。醇亲王载沣的醇王府在什刹海<br>附近，载沣每天早上８点出王府，经过鼓楼大街从景山后门进入皇宫。汪精卫等人本准备<br>在鼓楼大街的矮墙后投炸弹，但正赶上鼓楼大街修扩马路，闲杂人太多，无法行动。他们<br>后来注意到什刹海和后海分界处的一座小桥银锭桥，环境非常僻静，而小桥附近又有一条<br>阴沟可容藏身。于是汪精卫决定事先将炸弹埋在小桥下，汪精卫自己藏身于阴沟里，待载<br>沣过桥时用电线引爆炸弹，和载沣同归于尽。</p><p>１９１０年３月３１日深夜，黄复生和喻培伦前往银锭桥埋炸弹，留下汪精卫和陈璧君两<br>人。陈璧君知道汪精卫明天将在爆炸中和载沣同归于尽，这将是他们两人最后的一夜。陈<br>璧君拉著汪精卫的手轻声地哭泣，汪精卫本想找一些话安慰她，可是却不知道该说什么才<br>好。汪精卫内心是深爱陈璧君的，他也知道陈璧君同样深爱著他，但汪精卫越爱陈璧君，<br>就越不愿看到陈璧君为了他而失去一生的幸福。汪精卫努力压下和自己心爱之人的生死离<br>别之情，只是拉著陈璧君的手默默无语，让时间一分一秒地过去。</p><p>突然喻培伦匆匆跑进来说：“大事不好，有人看见我们埋炸弹了”，不久黄复生也跑回来<br>说：“警察已经发现我们的炸弹了”。</p><p>本来他们以为在寒冬的夜晚人迹稀少，在寒冷的深夜行事不会有人发现。可是天公不作美<br>，银锭桥附近一家人的妻子突然和别人私奔，男人晚上妒气得睡不著觉，深夜走出家门去<br>散气。该人走到银锭桥附近，忽然看到有人影在桥下挖土，他立即联想到人们埋藏财宝的<br>故事，于是潜伏在一旁偷看，想事后取走财宝。可是看到黄复生和喻培伦，埋好炸弹后又<br>开始拉电线埋电线时，该人感觉到情况不对，这不是埋财宝，而是一个重大的阴谋，于是<br>从藏身之处跑出来前去报警。</p><p>黄复生和喻培伦刚埋好炸弹，忽然看到从附近闪出一个黑影跑走，立刻意识到他们的行动<br>被人偷看到了。于是喻培伦先跑回去向汪精卫报告，黄复生则在附近监视。不一会儿那个<br>男人带著两个巡警前来，黄复生意识到他们的计划已彻底暴露，也跑回去向汪精卫等人报<br>警。喻培伦建议他们现在立即离开北京，还来得及逃过清廷的追捕。但汪精卫说虽然发现<br>了炸弹，但警察未必就能查出来是他们干的，所以不用著急，看看风头再说。</p><p>第二天北京各大报纸都登出了银锭桥下发现炸弹，有人想行刺摄政王的新闻，不过报纸上<br>的分析却都认为这是清廷内部的势力斗争。有人说炸弹中包炸药的报纸写有伦敦字样，而<br>载洵贝子和载涛贝勒正好刚从伦敦回来，很可能是他们搞的暗杀阴谋；也有人分析认为是<br>庆亲王想篡权的阴谋，但没有一篇新闻怀疑到革命党，使汪精卫等人大为安心。三天后又<br>有报纸登出新闻，说银锭桥炸弹案的凶犯已经抓获，汪精卫等人更为安心，于是开始策划<br>下一次行动，让喻培伦去东京买炸药，陈璧君去南洋筹款，汪精卫和黄复生继续潜伏在北<br>京进行下一次暗杀的策划。</p><p>然而汪精卫等人却中了清廷的计谋。清廷警察发现炸弹后，立即明白是革命党所为。为了<br>防止暗杀者们逃跑，清廷故意向新闻界放出朝廷内部暗斗和凶手已经捕获的小道消息，使<br>暗杀者们安心留在北京。清廷警察发现炸弹中的炸药是外国制，但几颗螺丝钉却是新近制<br>作的。警探到北京市内各个铜铁店调查，骡马市大街的鸿太永铁铺认出螺丝为该店所作，<br>是琉璃厂“守真照相馆”的老板要求他们作的。警探开始监视“守真照相馆”，正好赶上<br>“守真照相馆”搞装修，一些密探混入装修工人中，从“守真照相馆”中盗出了革命党的<br>机密文件，发现这次暗杀正是革命党所为，首谋就是清廷出１０万两白银悬赏人头的朝廷<br>钦犯汪精卫。１９１０年４月１６日，警察包围了“守真照相馆”，将汪精卫和黄复生一<br>举抓获。</p><p>由于谋刺摄政王是一个大案，民政部尚书肃亲王善耆亲自审理此案。肃亲王是清朝建国元<br>勋八大世袭王室的第一家，是当时清廷中头脑见识过人的少有人才。顺便说几句题外话：<br>辛亥革命成功后肃亲王亡命日本租界旅顺，和日本人川岛浪速结拜兄弟，并将一个王女托<br>川岛浪速收养，这就是后来有名的川岛芳子。肃亲王看到从汪精卫身上搜缴的三篇汪精卫<br>的亲笔手稿《革命之趋势》、《革命之决心》、《告别同志书》之后，感慨万分，非常佩<br>服汪精卫的人品见识，更佩服汪精卫为革命献身的精神。肃亲王对清廷的腐败也感到深恶<br>痛绝，所以对革命党人的反叛行为也十分同情，他后来说：“如果我不是出生在王族，我<br>早就加入革命党反叛朝廷了”。</p><p>由于清廷已经宣布预备立宪，１９１０年４月２５日清廷法部按照文明国家之法，开庭审<br>理汪精卫行刺未遂案。汪精卫在被告席上昂首挺胸，慷慨陈词地宣读了他即时写成的四千<br>余言的供词：“本名汪兆铭，别号精卫。前在东京时为《民报》主笔。生平宗旨，均刊登<br>于《民报》，不再多言。孙中山先生起事兵败后，我决心炸死载沣以振奋天下人之心。。<br>。”。汪精卫和黄复生在法庭上不但没有招供同党，反而争著说自己是行刺的主谋，希望<br>以此来为对方减轻刑罚，令在场人士十分感动。</p><p>看到汪精卫和黄复生视死如归，保护同志的常烘，肃亲王意识到：革命党人行刺的目的就<br>是玉石共焚、杀身成仁，他们早已作好“薪尽饭熟”的献身准备。杀了他们不仅不能吓倒<br>那些不怕死的革命党人，反而会激发民众对清廷的憎恶和反感。本来加害皇族是满门抄斩<br>的死罪，但肃亲王决定从轻发落汪黄二人，以安抚天下人心。摄政王载沣最初主张立斩汪<br>黄二人，但经过肃亲王的反复劝说，同意从轻发落汪黄二人。１９１０年４月２９日，清<br>廷以汪黄二人“误解朝廷政策”为由，免除汪黄二人死罪，判处二人永远监禁。</p><p>汪精卫接到免死的判决时，有捡来一条命的感觉。汪精卫入狱后，肃亲王亲自到狱中看望<br>汪精卫。汪精卫以前以为清廷的官员都是愚钝无能的昏官污吏，没想到肃亲王肯屈身访问<br>他这个囚犯，而且以礼相待，谈吐文雅，让汪精卫十分吃惊，也很佩服肃亲王的见识才干<br>。后来人们问起汪精卫对肃亲王的印象时，汪精卫说：“一位了不起的政治家”。</p><p>肃亲王说：“汪先生在《民报》的篇篇大作，我都拜读过。汪先生主张中国必须自强自立<br>，改革政体，提倡民众参政，效法西方立宪，这些与朝廷的主张都是一致的。目前朝廷正<br>在筹办预备立宪，建立国会让民众参政议政，这些不正是先生所争取的革命目标吗？”</p><p>汪精卫反论说：“我们革命党人所主张的绝不是立宪，而是要推翻封建专制，实行三民主<br>义。亲王既然读过汪某在《民报》上的文章，对汪某的革命主张应有所了解。”</p><p>肃亲王说：“你们革命党的确有很多杰出的主见，但你们也应该认真倾耳听听我们的看法<br>。说实话，我认为‘三民主义’是一种见识偏狭的理论，不能成为今后中国的指导理念。<br>为什么要宣扬灭满兴汉？这样宣扬民族仇视能够使中国实现五族协和吗？为什么要搞平地<br>起风波的流血革命，我们不是已经答应实行宪政，让各种政治主张都有实现的机会。用和<br>平的宪政方式来实现自己的政治主张，不是比用多量人命财产损坏的革命方式来实现自己<br>的政治主张更好吗？邻国日本不正是君主立宪的成功榜样吗？”</p><p>汪精卫反论说：“我们主张革命的时候，很多人用日本君主立宪成功的事例来反对革命。<br>但日本明治维新，是西乡隆盛用武力从幕府手中夺来的政权，绝不是幕府微笑著把政权交<br>出来的。现在中国搞君主立宪，并不能解决长年的腐败弊害，而且把国会作为民权的支柱<br>不过是一种幻想，国会只不过是君主的傀儡走狗而已。只有民主革命才是救中国的唯一道<br>路。”</p><p>肃亲王说：“中国的政治十分复杂，各种民意纷缠不一，改革政体岂能操之过急？螳螂在<br>前，黄雀在后，列强不是在觊觎著我们吗？不忍不谋则乱，还请汪先生三思。”</p><p>汪精卫和肃亲王的辩论总是在两条平行线上，谁也说服不了谁。当年汪精卫正值年青的２<br>８岁，而肃亲王却是初老的４５岁，但两人都对对方的才学见识产生了敬佩之心。肃亲王<br>原想说降汪精卫为清廷效力，但见汪精卫革命志坚，也就没有再为难汪精卫。后来肃亲王<br>不时来狱中看望汪精卫，两人之间的关系似乎不是政敌，倒有些近似朋友的关系了。</p><p>孙中山在纽约得知汪精卫被捕的消息时喟然长叹道：“兆铭是吾党一位大人才，失去他好<br>比断了我一支手臂”。同盟会东京总部和世界各地的支部也发起了营救汪精卫的行动，胡<br>汉民亲自奔走各地为营救汪精卫演讲筹款。通过营救汪精卫的活动，使一度陷于分裂的同<br>盟会内部开始弥合，也使民众重新认识到革命党的决心，对后来辛亥革命的成功起到了十<br>分重要的作用。</p><p>汪精卫在狱中无事，每日作诗。汪精卫狱中诗作最有名的一首是《被逮口占》（又名《慷<br>慨篇》）。</p><p>街石成痴绝，沧波万里愁；<br>孤飞终不倦，羞逐海浪浮。<br>诧紫嫣红色，从知渲染难；<br>他时好花发，认取血痕斑。<br>慷慨歌燕市，从容作楚囚；<br>引刀成一快，不负少年头。<br>留得心魂在，残躯付劫灰；<br>青磷光不灭，夜夜照燕台。</p><p>汪精卫的《慷慨篇》从狱中传出后，立即被许多报纸争相转载，“引刀成一快，不负少年<br>头”也成为当时革命青年们广为传颂的诗句。</p><p>但监狱中的生活毕竟是艰苦的，每日三餐是一碗霉变的陈米和一条咸萝卜，另外每五天可<br>以吃到一次豆腐，逢年过节则每人赏赐肉半斤。一天汪精卫正在苦嚼著黄米饭，忽然一个<br>狱卒给汪精卫塞进十个鸡蛋。这是谁送来的鸡蛋呢？汪精卫拿著鸡蛋仔细端详了半日，在<br>一个鸡蛋上写著一个小小的“璧”字，原来是陈璧君冒死到北京救他来了，是陈璧君买通<br>狱卒给他送来的鸡蛋，汪精卫忍不住热泪流出了眼眶。汪精卫那天晚上抱著鸡蛋睡了一夜<br>。</p><p>第二天狱卒悄悄对汪精卫说：“你有什么话写封信，我会转给送你鸡蛋的那个人”。汪精<br>卫感情激荡，当即写成一首《金缕曲》送给陈璧君。</p><p>别后平安否？便相逢凄凉万事，不堪回首。国破家亡无穷恨，禁得此生消受，又添了离愁<br>万斗。眼底心头如昨日，诉心期夜夜常携手。一腔血，为君剖。泪痕料渍云笺透，倚寒衾<br>循环细读，残灯如豆。留此余生成底事，空令故人潺愁，愧戴却头颅如旧。跋涉关河知不<br>易，愿孤魂缭护车前后。肠已断，歌难又。</p><p>汪精卫在《金缕曲》后面，又用血写了五个字“勿留京贾祸”，让陈璧君赶紧离开危险的<br>北京。过了几天，汪精卫收到狱卒转来的陈璧君的一封信，陈璧君在信中说：“我们两人<br>虽被牢狱的高墙阻挡无法见面，但我感到我们的真心却能穿过厚厚的高墙。我将遵从你的<br>忠告立即离开北京，不过在此之前有一件事想和你商谈。你我两人已不可能举行形式上的<br>结婚仪式，但你我两人从现在起，在心中宣誓结为夫妇，你看好吗？”</p><p>汪精卫为陈璧君的真情所感动：自己是一个被判无期徒刑的囚人，如果不自首叛变的话，<br>根本没有出狱的希望，唯一可以盼望的是革命胜利的那一天，但那一天什么时候才会来呢<br>？是１０年后还是２０年后？也许他见到陈璧君的那一天，双方已是白发苍苍的垂暮之人<br>，也许他永远再也见不到陈璧君了。但又有什么比这种心中的结婚更具有真正的爱情呢？<br>汪精卫咬破手指，用鲜血写下一个大字“诺”。</p><p>陈璧君接到汪精卫的血书哭了三天，但也高兴汪精卫终于明白了自己的真情。于是陈璧君<br>按照汪精卫的话，离开北京前往南方参加革命。</p><p>此后革命的形势发展之快，大大出乎人们的预料。１９１１年１０月１０日武昌起义爆发<br>，在短短十几天内，全国二十多个省纷纷响应宣布独立。清廷为了挽回颓势，急忙宣布开<br>放党禁，释放政治犯，当然最大的政治犯就是汪精卫和黄复生两人。１９１１年１１月６<br>日，清廷宣布释放汪精卫和黄复生，北京各界一千余人前往法部大狱门前欢迎这两位刺杀<br>摄政王的义士。１９１１年１２月，汪精卫乘船到上海，那里陈璧君正等著他。从此这对<br>经过革命生死考验的革命夫妇正式成婚，以后两人再没有分离过，直到汪精卫死去。</p><p>辛亥革命成功后，汪精卫实践了他“革命成功后，一不作官，二不作议员，功成身退”的<br>诺言。汪精卫和陈璧君举办了盛大的结婚仪式后，返回他８年没有回过的故乡拜见兄长。<br>然后于１９１２年９月，携陈璧君一起前往法国留学。</p><p>第二部分：《打倒独裁者蒋介石》</p><p>第二部分之一：起草总理遗嘱的人</p><p>１９１２年１月１日，孙中山在南京宣布中华民国临时政府成立时，北京的满清政府依然<br>存在，满清政府的手中还握有比革命军更为强大的军队。这时中国面临两种选择，一种选<br>择是双方采用武力对决的手段，在中国进行一场大流血的“南北战争”，胜者用武力统一<br>中国。如果双方一时间僵持不下，中国就有南北分裂成两个国家的危险。另一种选择是双<br>方采用和平的议和方法统一中国，当时和平议和的关键掌握在袁世凯手中，“南北战争”<br>能够避免吗？人们把视线聚焦在袁世凯身上。</p><p>现在中国人一提起袁世凯，就条件反射地在头脑中浮现出一个“窃国大盗”的形象，简单<br>地把袁世凯划为开历史倒车的人民公敌，但实际上的袁世凯并非如此简单。由于袁世凯是<br>国民党和共产党共同的敌人，所以国共两党的历史书都对袁世凯大加诋毁，把袁世凯描绘<br>成一个充满权力欲的野心家，一些历史书还误传袁世凯出卖谭嗣同等人的恶迹。其实１９<br>１２年，袁世凯在大部分中国老百姓心中的威信，要远大于孙中山。在清末，袁世凯就象<br>当年苏联的叶利钦一样，是清政府中改革家的代表，清政府后期的诸多改革，多数出自袁<br>世凯之手。在叶利钦上台以前，谁会预测到他会从民主的旗手变成独裁的君王呢？袁世凯<br>也象叶利钦一样，上台前也曾赞美声一片。</p><p>孙中山的民国临时政府向袁世凯提出了两个最基本条件：清帝退位和采用西方式的共和制<br>国体。对于清帝退位，袁世凯等汉族大臣基本全部赞成，可是在打倒清帝后，中国该采用<br>什么国体的问题上，双方意见分歧较大。袁世凯本来是梁启超等人“开明专制”的支持者<br>，也认为中国不适合搞共和制。不过袁世凯还是同意了南方政府采用共和制的方案，但要<br>求中华民国总统有近似于独裁的权力。最后南方政府同意了袁世凯的集权总统方案，南北<br>政府合并，使中国避免了内战和分裂的危险。</p><p>如果说袁世凯有什么“功绩”的话，应该首推“统一中国”。当时革命党人十分激进，不<br>少人提出了分省自治的提案，如果当时没有袁世凯坚持维持一个强权的中央政府，中国很<br>可能就要分成几个国家。另外蒙古和西藏当时是清王朝的藩属国，辛亥革命后，俄国和英<br>国曾设法谋求蒙古和西藏脱离中国，但袁世凯积极与列国交涉，保全了中国对蒙古和西藏<br>的主权。</p><p>袁世凯出任第一任中国民国总统，并非窃取了孙中山的中华民国临时大总统，而是当时的<br>众望所归。袁世凯虽然赞成孙中山“三民主义”中的“民族主义”，但并不赞成孙中山的<br>“民权主义”“民生主义”，而倾向于搞开明专制。孙中山为首的同盟会的革命目标是“<br>民族主义”“民权主义”“民生主义”的三民主义，辛亥革命虽然实现了三民主义中推翻<br>异民族统治的“民族主义”目标，可是在平均地权、男女同权方面等“民权主义”和“民<br>生主义”方面，却几乎没有达成当初的目标。不少同盟会成员批评孙中山不应该放弃同盟<br>会当初的平均地权、男女同权等革命目标，汪精卫也向孙中山进言，希望同盟会不要仅仅<br>满足于打倒满族人政府，但孙中山却以为这样的妥协是必要的。</p><p>１９１２年３月１０日，袁世凯就任中华民国临时大总统，任命了蔡元培、宋教仁等多位<br>南方政府人员组成临时政府。中华民国临时政府，曾邀请汪精卫这位全国著名的反清英雄<br>出任广东省都督，这对于一个还不到３０岁的青年来说，是极有诱惑力的官职，但汪精卫<br>却婉言谢绝，实践了他革命成功后“不作官，不作议员”的承诺，于１９１２年９月携陈<br>璧君一齐前往法国留学。</p><p>为了在议会中对抗袁世凯的总统强权，同盟会联合其他一些党派，在１９１２年８月成立<br>了中国国民党，孙中山出任国民党理事，宋教仁出任理事代理，但国民党的实权基本上掌<br>握在宋教仁手里。随著政局的发展，国民党的三民主义和袁世凯的开明独裁路线的分歧越<br>来越大，最后发展成为公开的斗争。１９１３年３月２０日，国民党的实际领导人宋教仁<br>在上海被暗杀，南方的革命派一齐举起了反袁的旗帜，这就是所谓的“二次革命”。</p><p>“二次革命”开始后，汪精卫应孙中山之招，从留学的法国紧急回国，参加革命。但“二<br>次革命”的革命军在袁世凯的强大政府军面前很快土崩瓦解，１９１３年９月１日的南京<br>陷落，标志著“二次革命”失败。“二次革命”失败后，孙中山亡命日本，汪精卫亡命法<br>国。</p><p>“二次革命”失败后，汪精卫的人生观发生了根本的变化。以前汪精卫以为中国的一切罪<br>恶之源就是满清政府，只要打倒了满清政府，中国就一下会变成一个民主强盛的国家。但<br>是汪精卫万万没有想到自己曾经为之献身的革命事业，竟然得到这样一个结局，革命不但<br>没有使中国民主强盛起来，反而比以前清王朝的时代还要糟糕。一个人对一个事业投入的<br>越多，对事业失败的悲痛和挫折感就越大。汪精卫曾把自己最宝贵的生命都交给了革命，<br>却换来了这样一个残酷的现实，使汪精卫的革命理想消失得无影无踪。汪精卫一下从一个<br>狂热的革命青年，变成一个踌躇多疑的政治家。</p><p>在法国，汪精卫进入法国里昂大学攻读社会学。汪精卫在法国学习很勤奋，似乎想远离政<br>治的漩涡，但中国政局的发展，又把汪精卫带回到了激烈的政治斗争中。１９１４年７月<br>，孙中山在日本成立了中华革命党。１９１５年１２月，袁世凯废除共和制，改中华民国<br>的国号为“中华帝国”，自己宣称为中华帝国皇帝。袁世凯的帝制复辟，在中国引起了新<br>一轮反袁运动，就是所谓的“三次革命”。汪精卫在孙中山的急招之下回国，参加了反袁<br>护国军。袁世凯军队在反袁军面前节节败退，袁世凯不得不在１９１６年３月宣布取消帝<br>制，恢复共和制，并在６月６日急病而死。</p><p>尽管汪精卫一直是反袁先锋，把袁世凯称为“人民公敌”，但袁世凯并不记恨汪精卫，反<br>而非常欣赏汪精卫的胆识和才能。在汪精卫流亡法国期间，袁世凯曾经托蔡元培找汪精卫<br>，请汪精卫回国作总统府的高级顾问，但汪精卫拒绝了袁世凯的邀请。从历史上来看，汪<br>精卫并不是一个特别喜欢追逐权力的野心家。</p><p>“三次革命”表现出中国的老百姓对几千年来延续的帝制已经厌烦，使在中国复辟帝制的<br>企图再也无法得逞。虽然“三次革命”成功地阻止了袁世凯的复辟帝制，但孙中山的国民<br>党并没有得到政权。袁世凯死后，政权依然掌握在握有枪杆子的北洋军阀手中。当时中国<br>之所以形成军阀混战的局面，是由于中国没有征兵制、也没有军官退休制度。当时在中国<br>征召士兵并不是由国家机构统一进行，而是由各路将军私人征召，这就形成了士兵不忠于<br>国家而忠于个人的私家军制度。</p><p>孙中山虽然长年从事革命，在民众中也有较高的威信，但由于没有自己的私家军，所以一<br>直无法走上政坛。这使孙中山痛感枪杆子里面出政权的真理，感到有必要创建一只效忠于<br>自己的军队。但孙中山本人的职业原是医生，自己并不懂军事，也没有带兵打仗的经验。<br>而孙中山周围的忠实追随者汪精卫、廖仲恺、胡汉民等人都是书生，没有会带兵打仗的将<br>军。孙中山开始著重搜罗军事人才，在日本军事学校毕业的蒋介石，很快受到了孙中山的<br>青睐。</p><p>１９１７年苏联成立以后，开始了输出共产主义的革命外交，中国成为苏联革命外交的最<br>重要国家。苏联宣布放弃沙皇时代与中国签订的各种不平等条约，使中国人民对新兴的苏<br>联政权产生了极大的好感。苏联看中了孙中山的国民党，而孙中山也正好急需外国的支援<br>，以前积极支持孙中山的日本在提出苛刻的２１条后，已经遭到中国人民的反感。于是孙<br>中山开始在苏联的援助下筹建一只完全效忠于自己的国民党军队，１９２４年６月创建了<br>黄埔军校，委派蒋介石出任校长。</p><p>由于孙中山接收了苏联援助，苏联要求孙中山和刚成立不久的中国共产党进行合作，孙中<br>山答应了苏联的联共要求。但孙中山的联共政策，特别是允许共产党员以个人身份加入国<br>民党，在国民党内引起了很大的反对之声。很多国民党的高级干部，包括汪精卫和胡汉民<br>，以及刚从苏联考察归来的蒋介石也都反对孙中山的联共政策，只有廖仲恺积极支持联共<br>。所以国民党的联共政策基本上是靠孙中山个人的威信强行实施的，这就为孙中山死后国<br>民党内的清党清共，埋下了伏笔。</p><p>１９２４年１０月，直系军阀冯玉祥在北京发动了政变，北京出现了段祺瑞、冯玉祥、张<br>作霖的临时联合政府。临时联合政府邀请孙中山到北京共商国事，于是孙中山在汪精卫等<br>人的随行下前往北京。孙中山到达北京后立即病倒，送协和医院诊断为肝癌，从此卧床不<br>起。１９２５年２月，孙中山病情加剧，急忙电请孙科、宋子文、孔祥熙等人赴京。汪精<br>卫等人本以为孙中山会主动提出立一个遗嘱，指定自己的接班人。可是一直到２月２４日<br>，仍不见孙中山有立遗嘱的意思，于是汪精卫和宋子文、孔祥熙等人商定，先为孙中山起<br>草一个遗嘱，再根据孙中山的意思修改。</p><p>孙中山的遗嘱由汪精卫起草，汪精卫写好遗嘱后，和宋子文、孔祥熙等人一起来到孙中山<br>的病榻前。汪精卫眼含泪水对孙中山说：“希望总理留下一些话，好让我们去做。我们恳<br>请总理生前留下遗嘱。”宋子文和孔祥熙也说：“汪先生是代表在京的政治委员会提出这<br>个意见的”。</p><p>孙中山问：“你们要我说什么呢？”</p><p>汪精卫说：“我们预备好了几句话，读给总理听。总理如果赞成，便签个字，当作总理的<br>话。如果总理不赞成，便请总理另外说几句话，我可以代笔记下来，也是一样。”</p><p>于是汪精卫掏出写好的遗嘱，大声朗读起来：“余致力于国民革命凡四十年，其目的在求<br>中国之自由平等……”孙中山听完后说：“好呀，我很赞成。”没有一字添改。于是这篇<br>汪精卫写的“总理遗嘱”，就当作孙中山的政治遗嘱公开发表。</p><p>为什么孙中山没有主动提出自己的遗言，为什么孙中山没有指定自己的接班人，仍然是一<br>个不解之谜。由于孙中山没有指定接班人，结果造成了后来国民党内部长期内斗不断，这<br>也是孙中山埋下的不幸之种。也由于孙中山没有指定接班人，国民党内没有人敢接任总理<br>之位，只好宣布取消总理制，把总理这一称呼永远让给孙中山。此后国民党的领导体制开<br>始采用集体领导的委员会制。</p><p>孙中山之后的国民党中，汪精卫是呼声最高的接班人。汪精卫是同盟会中资格最老的一辈<br>，有敢于自我牺牲的英雄光荣史，有革命成功后不谋求当官的君子风度，更有鲜有人比的<br>文才和口才，这在国民党中都是无人可比的。加之汪精卫的个人生活作风也非常为人称道<br>，汪精卫不抽烟、不喝酒、不赌博、不近女色，这在当时的国民党高官中，都是鲜有人能<br>够做到的。</p><p>在１９２５年７月１日，孙中山原来的大元帅府改组，改为国民政府，设国民政府主席为<br>最高领导人。在中央政治会议上，汪精卫以全票当选国民政府主席，成为孙中山以后第一<br>位国民党领导人。但汪精卫却有一个极大的弱点，这就是他没有一只忠于它的私家军，在<br>枪杆子里面出政权的中国社会中，汪精卫这样的文人书生，注定不能在最高领导人的位置<br>上坐得太久。</p><p>第二部分之二：短暂的汪主席时代</p><p>１９２５年３月１２日，国民党总理孙中山逝世。由于孙中山逝世前没有指定自己的接班<br>人，汪精卫以他在党内的资历和声望，被推举为孙中山之后的第一位国民党领导人。１９<br>２５年６月２６日，由汪精卫主持召开了国民党中央政治会议，会上确定了国民党总理的<br>称呼永远留给孙中山，今后国民党采用集体领导的委员会制。会议还决定撤销孙中山生前<br>的大元帅府行政机构，将国民党的最高行政机关改称国民政府。</p><p>１９２５年７月１日，国民政府正式成立，汪精卫被选为国民政府主席，兼任中央军事委<br>员会主席，集党、政、军大权于一身。７月２日，汪精卫在１０万广州军民参加的国民政<br>府成立庆祝仪式上，庄重宣布：“国民政府当前的首要任务是挥师北伐，统一中国”。汪<br>精卫的发言得到了在场军民的热烈欢迎，到处响起“拥护汪主席”的口号，这是汪精卫一<br>生中最为辉煌的日子。</p><p>汪精卫的国民政府遵守孙中山“联俄、联共、辅助工农”的三大政策，积极任命了一批共<br>产党员位居国民政府的要职。比如汪精卫任命共产党员的谭平山为中央党部的组织部长，<br>毛泽东为宣传部长，林伯渠为秘书长，帮助国民党中央常务委员会工作，使共产党的势力<br>在国民党中取得了较大的发展。一时间汪精卫领导的国民政府似乎一切顺利，但一个多月<br>后发生的廖仲恺暗杀事件，一下使汪精卫陷入进退两难的窘境。</p><p>国民党本来就是一个由各种势力混杂而成的政党，党内分有不少派阀。在孙中山生前，各<br>个派系畏于孙中山的威望，没有出现激烈的派系斗争。但孙中山殁后，国民党失去了威振<br>全党的重秤，党内的派系斗争开始表面化和激烈化。当时国民党主要分为左派和右派两派<br>：左派支持孙中山的联共“三大政策”，其代表人物是廖仲恺，右派则反对孙中山的联共<br>政策，其代表人物是胡汉民。汪精卫则是中间偏左的立场。</p><p>胡汉民也是一直在国民党内地位很高的人物，曾多次在孙中山不在时，代理孙中山的大元<br>帅职务。孙中山去世后，胡汉民也是很有希望接任国民党领导人位置的候选人。然而在新<br>成立的国民政府中，胡汉民任外交部长、廖仲恺任财政部长，这使胡汉民非常不满。原来<br>在东京同盟会时代，胡汉民和汪精卫本是生死之交的密友，胡汉民曾为营救汪精卫而披心<br>沥血。但天下没有不散的宴席，在权力面前，他们之间的友谊开始破裂，胡汉民开始支持<br>党内的右派反对汪精卫。这正应验了中国的古话：“可以共患难，不可以共安乐”，权力<br>对人的腐蚀作用实在太大了。</p><p>１９２５年８月１９日，廖仲恺在国民党部大门前，遭５名枪手的枪击身亡。廖仲恺被刺<br>案惊动了刚刚成立的国民政府，汪精卫亲自组成了特别委员会，调查廖仲恺被刺案的凶手<br>。可是汪精卫没有想到调查的结果，却显示出胡汉民是刺杀廖仲恺的幕后策划者。汪精卫<br>念及当年他们两人在东京时代的旧情，没有公开处分胡汉民，只是将胡汉民以国民政府特<br>使的名义派往苏联考察。１９２５年９月２２日胡汉民前往苏联，但汪精卫这个举动被一<br>些国民党左派批评为有徇情枉法之嫌。</p><p>廖仲恺一死，汪精卫就成为国民党左派的代表人物，遭到一批国民党右派的猛烈反对。由<br>于右派的台柱人物胡汉民被迫离职出国，国民党右派在广州政府已无法立足，于是他们跑<br>到北京另立中央。１９２５年１１月２３日，戴季陶、林森等一批国民党中央执行委员和<br>中央监察委员，在北京西山碧云寺孙中山的灵前，召开了自称为“国民党一届四中全会”<br>，这就是所谓的“西山会议”，与会者也被称为西山会议派。西山会议以反对联俄联共、<br>反对汪精卫“左倾”为主要议题，通过了一系列反对联俄联共的决议案，并罗列汪精卫“<br>为共产党护符”的九大罪状，宣布开除汪精卫党籍半年，以观后效。</p><p>虽然右派的反汪气焰十分嚣张，但由于最为重要的军权仍掌握在左派手里，所以西山会议<br>并没有形成很大气候。１９２６年４月１日，广州国民党中央召开了“国民党第二次全国<br>代表大会”，汪精卫在会上重申坚持孙中山的联俄联共三大政策，汪精卫说：“西山会议<br>派打出反对联俄联共的旗帜，就是打出反对孙中山先生的旗帜，所以成为总理的叛徒，革<br>命的蟊贼”。</p><p>汪精卫的左派立场得到了共产党和苏联政府的高度评价，在汪精卫当政期间，共产党的确<br>得到汪精卫很多的关照，要不是汪精卫后来当了“汉奸”，共产党很可能要把汪精卫和张<br>学良并列起来，誉为反蒋英雄。在“国民党二大”上，汪精卫当选执掌最高权力的中央执<br>行委员会主席，但此时蒋介石却以“流星般的速度上升”，成为党内仅次于汪精卫的第二<br>号人物。</p><p>１９２４年１月举行的国民党第一次全国代表大会上，汪精卫、胡汉民、廖仲恺、戴季陶<br>等人均为中央执行委员会委员，而蒋介石不但不是中央委员，连候补委员都不是。但１９<br>２４年５月蒋介石出任黄埔军校校长后，一举成为国民党党军：国民革命军的实际最高领<br>导人。在中国往往是得军队者得天下，蒋介石凭借掌握的军权，在国民党中的地位飞速上<br>升。当然蒋介石的跃升，在相当程度上也得益于汪精卫的大力提拨和重用。１９２５年１<br>０月，汪精卫以国民政府主席的名义，发布了东征陈炯明的命令，汪精卫亲自任命蒋介石<br>为东征军总指挥。汪精卫那时还没有想到这个默默无闻的小字辈蒋介石，居然会在一年后<br>成为掌握国民党的实权人物。蒋介石东征陈炯明取得胜利后，在国民党中名声大振。１９<br>２６年１月国民党第二次全国代表大会上，蒋介石当选中央执行委员会委员，并兼任国民<br>革命军总司令，成为国民党中最有实力的人物。</p><p>不过蒋介石能够飞速掌握国民党的实权，还与汪精卫过于淡泊权力有关。汪精卫在党内的<br>资格最老，和孙中山的关系最近，又有敢于自我牺牲的英雄事迹，所以汪在国民党内的声<br>望首数第一。汪精卫为人诚实、不贪钱财、特别是在个人生活方面，汪精卫不抽烟、不酗<br>酒、不赌博、不近女色，这在当时腐败的中国政界，是一种非常清高的存在，和他周围的<br>污浊形成了极为鲜明的对比。汪精卫在国民党内是类似于“圣人”的偶像，是大家非常尊<br>敬的革命老英雄。但大家总是对汪精卫敬而远之，在国民党内从来没有形成过所谓“汪精<br>卫派”，这是为什么呢？</p><p>中国有句格言说：“水至清则无鱼”，汪精卫品格过于清廉，所以愿意跟随他的人就很少<br>。在中国善于玩弄权术的人总是以“封官许愿”等物质刺激的方法，来召集网罗自己的跟<br>随者。汪精卫不但不搞“封官许愿”，还对自己的部下要求很严，由于跟汪精卫干捞不到<br>什么好处，所以愿意跟随汪精卫的人就很少。另外汪精卫也不会用“结拜兄弟”等方法来<br>拉拢有权势的人，蒋介石曾两次给汪精卫送去兰谱，希望和汪精卫结为“拜把兄弟”，但<br>都被汪精卫婉言谢绝。按照西方的标准，汪精卫这样有出色口才笔才，又有充分政治责任<br>感和生活清廉的人，是非常理想的政治家。可是汪精卫这样西方型的政治家，却不适合于<br>中国污浊的政治土壤，这也是汪精卫一生的悲剧所在。</p><p>对于具有走向权力顶峰野心的蒋介石来说，汪精卫是一个需要排除的障碍。蒋介石刚开始<br>时是以一个积极拥共的左派形像出现，曾发表声明痛斥西山会议派的反共反汪行为，得到<br>了汪精卫的信任和重用。但蒋介石成为国民党内仅次于汪精卫的第二号人物后，就开始向<br>反共的右派靠拢，成为右派的领袖人物。为什么国民党内会出现强大的反对“联俄联共”<br>的右派势力呢？这其实与苏联的中国政策有关。</p><p>１９２３年列宁的秘书马林访问孙中山，表示苏联准备在政治和军事上，积极支持孙中山<br>的国民党。孙中山对苏联也很有好感，两人一拍即合，达成了协议。从此苏联向孙中山提<br>供大量的金钱武器，孙中山靠苏联的支援建立起黄埔军校，创建起一只国民党自己的军队<br>。但孙中山得到苏联支持的代价也不小，孙中山特聘苏联人鲍罗廷为国民党的政治顾问，<br>鲍罗廷在国民党中有极大的发言权，国民党的各项政策行动都要征求苏联代表的同意。孙<br>中山殁后，汪精卫的国民政府决心完成孙中山的遗志，北伐统一中国。但北伐所需的武器<br>军费，全靠苏联人提供，随著苏联对国民党援助力度的加大，苏联派遣了大批军事顾问进<br>入国民革命军的各个师团。</p><p>但苏联顾问们并不懂尊重中国的礼节和习惯，在国民党军队中以傲慢的太上皇身份出现，<br>对国民党军队的内部事物指手画脚，引起了很大一部分国民党军人的反感，也使很多国民<br>党领导人怀疑苏联有在政治军事上控制国民党的野心。蒋介石曾叹息说：“呜呼，赤化也<br>，共产也，俄人掌握政权也。”接替鲍罗廷的苏联顾问季山嘉到任后，对中国人更是非常<br>傲慢，特别是季山嘉与国民党军队最高领导人的蒋介石私人关系极差，季山嘉见到蒋介石<br>，不是冷笑就是挖苦，几乎反对蒋介石的每一项计划，这促成了蒋介石反俄的决心。</p><p>更为糟糕的是，季山嘉改变了以前苏联逐步改造国民党的计划，开始公然帮助中国共产党<br>在国民党中扩充势力，试图让中共从内部颠覆国民党，建立中国共产党的政权。季山嘉向<br>国民军的各个师团派遣共产党员作党代表，当时蒋介石的国民革命军第一军中，８０的党<br>代表都由共产党员担任。然而季山嘉的激进赤化行动，遭到了以蒋介石为代表的国民党右<br>派的强烈反对。１９２６年３月１８日，国民军最精锐的中山舰，在没有接到命令的情况<br>下，忽然驶入黄埔，中山舰除去炮衣摆出战斗阵势，停靠在黄埔军校旁，有搞军事政变的<br>嫌疑。尽管到现在为止，中山舰事件的真相仍然不很清楚，但有不少迹像表明可能是苏联<br>顾问季山嘉策划的。中山舰长李之龙是共产党员，中山舰的行为又让人联想到俄国十月革<br>命时巡洋舰炮击冬宫的历史画面，所以蒋介石认定共产党要搞暴动，于是下令包围苏联顾<br>问公馆，收缴工人纠察队的枪械，将第一军中的党代表全体免职，并逮捕了中山舰长李之<br>龙。</p><p>当时汪精卫是国民政府主席，又是中央军事委员会主席，蒋介石这么大的行动事先不通知<br>汪精卫，显然是以“先斩后奏”的方式和汪精卫对抗。汪精卫对蒋介石无视合法国民党中<br>央政府而擅自行动的行为非常愤怒，准备召集中央委员处置蒋介石的越权行为，但大部分<br>中央委员却都替蒋介石说话，赞同蒋介石的排俄排共行动。汪精卫看到他这个最高领导人<br>已被蒋介石架空，如果他和蒋介石搞直接对抗，势必引起国民党内部的严重分裂。既然国<br>民党中央的大部分人都赞成蒋介石，为了维护国民党的整体利益，汪精卫决定以主动辞职<br>的方式，把政权交给蒋介石。</p><p>１９２６年３月２２日，汪精卫在临时召开的中央政治会议上说：“我是革命政府和党的<br>代表，这件事的发生我也有责任，我只责己不责人，一切均由我不能尽职所造成，我将引<br>咎辞职。此事一切善后工作，均由蒋同志去办。”当时汪精卫之所以轻易把政权让给蒋介<br>石，是因为当时汪精卫以为蒋介石和他的对抗只是出于政治观点的不同，没有想到蒋介石<br>上台后会搞个人独裁。汪精卫本是一个淡泊权位的人，本来并没有和蒋介石争权的野心，<br>但当蒋介石明显在国民党内搞个人独裁后，汪精卫才站出来成为反蒋的核心人物。</p><p>１９２６年５月１１日，汪精卫离开广州前往法国马赛。汪精卫辞职后，广州国民政府于<br>６月６日推选蒋介石为中央军委主席兼北伐军总司令。后来蒋介石又出任国民党中央常委<br>主席，独揽党政军大权于一身。蒋介石的排俄排共政策虽然得到了国民党中相当的支持，<br>但国民党北伐还要依靠苏联的经济军事援助，还没有和苏联摊牌的资本。所以蒋介石在处<br>理中山舰事件时，提出“对人不对俄”的方针，要求俄国撤回顾问季山嘉，重新派鲍罗廷<br>任国民政府顾问。苏联接受了国民党的要求撤回了季山嘉，苏联和国民党的关系一时得到<br>了缓和。</p><p>蒋介石上台后，立即开始著手北伐。１９２６年１１月，北伐军攻占了南昌、武昌，这引<br>起了北方军阀们的震惊。张作霖、孙传芳、张宗昌等人组织起“安国军”和北伐军对抗。<br>安国军司令张作霖开始在北京搜捕共产党员，许多共产党员逃入苏联大使馆避难。由于苏<br>联是北伐军的总后台，张作霖不顾国际法，派军队强行进入苏联大使馆抓捕共产党人，并<br>搜缴出多份机密文件，包括蒋介石和冯玉祥向苏联借款的契约书以及苏联向北伐军提供武<br>器的清单表。张作霖从苏联大使馆抓出的中共最大级人物是李大钊，张作霖是一个头脑简<br>单的武夫，立即判李大钊等二十人死刑，包括李大钊十七岁的女儿。</p><p>北伐军在军事上的进展虽然顺利，但蒋介石的独裁作风却引起了很多国民党人的反感。尽<br>管中山舰事件发生时，大部分国民党领导人站在蒋介石一边，赞成他排俄排共的“敢行”<br>。但是蒋介石当权后表现出来的独裁霸道，又让人们回想起作风民主的汪主席的好处，于<br>是“拥护汪主席，请汪主席回国复职”的呼声四起。１９２７年２月，孙科等人组成“迎<br>汪行动委员会”，以国民党临时中央会议的名义，致电汪精卫，敦促他回国复职。蒋介石<br>后来也挡不住“拥汪”的浪潮，只好也打电报请汪精卫归国复职。在法国的汪精卫收到了<br>雪片般飞来的请求他回国复职的电报，最后蒋介石也打来电报说：“如果先生再不回国的<br>话，我就要出国了”。</p><p>汪精卫看到这些电报后感叹道：“看来我不回去不行了”。１９２７年２月下旬，汪精卫<br>离开法国，乘火车经苏联归国。从此汪精卫开始了他与独裁者蒋介石的斗争。但此时的蒋<br>介石羽毛已经丰满，汪精卫手里又没有军队，已经无法有效地抗衡蒋介石了。</p><p>第二部分之三：从拥共到反共</p><p>中山舰事件后，汪精卫自责辞去国民党主席和中央军委主席出国。蒋介石接任国民党主席<br>和中央军委主席，独揽党政军大权于一身。蒋介石上台后，虽然一改孙中山和汪精卫时代<br>的亲俄政策，但并没有和苏联人摊牌。苏联当时受到其他资本主义国家的孤立，在海外只<br>有中国国民党一个朋友，所以也不愿轻易和国民党把关系搞糟，苏联接受了蒋介石的要求<br>，撤回态度傲慢的顾问季山嘉，重新派态度比较谦虚的鲍罗廷出任国民政府顾问，使苏联<br>和国民党的关系一时得到了缓和。</p><p>蒋介石上台后，１９２６年７月在苏联的支持下开始北伐。据近年的一些研究资料显示，<br>苏联对国民党政府提供了高达数百万美元（当时价格）的军事援助。当时中国是个穷国，<br>各个军阀并没有多少钱购买军火，而资本主义国家“死的商人”军火商，决不会象苏联那<br>样提供无偿的军事装备，所以苏联的援助使各个军阀部队在军事装备上，大大劣于北伐军<br>。比如大军阀之一张宗昌的部队，有三分之一的人没有枪，连军服也长年不更新，士兵们<br>一个个蓬头垢面，还有很多人连鞋都没有。部队里发的一点军饷全被各级军官装入自己的<br>腰包，张宗昌自己也生活非常靡烂，有妻妾４２人，其中２１人是白人。这样的军队没有<br>战斗力也是可想而知的。</p><p>当然苏联的援助也是有条件的，这就是允许共产党人在北伐所到之处发动工农，并在军队<br>中进行帝国主义问题、农民问题的激烈宣传。当时中国人对西方列强的侵略本来就很痛恨<br>，列宁的帝国主义学说又使中国人的仇外情绪火上浇油，使北伐军和外国人造成了严重摩<br>擦。１９２７年１月３日，北伐军不顾中国军队不得进入外国租借的国际条约，强行进入<br>英国在汉口的租界，和英国的海军陆战队发生了交火，双方各有死伤。１月６日，北伐军<br>再次强行进入在九江的英国租借。如果是在一次世界大战前，大英帝国肯定再次纠集八国<br>联军惩罚中国，但一次大战后英国的国力大大衰退，只好默认中国军队武力收回汉口和九<br>江租借。</p><p>可是１９２７年３月２７日北伐军占领南京后，激愤的士兵的狂乱行动，引起了造成很大<br>国际麻烦的“南京事件”。北伐军进入南京后对外国领事馆、教堂、商社等进行了武装袭<br>击，打死英美法意等国６人，打伤数十人。特别是英国领事被北伐军士兵拉到市中心用青<br>龙刀斩首示众，英国领事夫人被２７名北伐军士兵轮奸至重伤，此外还有上百名外国妇女<br>被北伐军士兵强奸。北伐军的“暴行”使列强们十分震惊：义和团又来了！英美在长江上<br>的数艘军舰开始向南京城内炮击报复，打死南京市民２０００余人。不过日本军舰被政府<br>下令不得开炮，日本舰队司令驶回上海后自杀谢罪。他在遗书中说：他奉命不准开炮，以<br>至海军保护侨民不周，无面目以见国人。（据日本报道，日本在“南京事件”中重伤５人<br>，被强奸者３５人）。</p><p>蒋介石对这种情况非常担心：这样下去北伐势必引起各国列强的干涉，就要破灭国民党消<br>灭军阀统一中国的大业。蒋介石认为这一切都是共产党的帝国主义理论煽动所造成的，不<br>和共产党分家，北伐就不能成功。蒋介石下了“分共”的决心。尽管蒋介石的“分共”主<br>张得到大部分国民党高级将领的支持，但当时蒋介石身兼各种要职，培植私人势力，搞军<br>事独裁的倾向也十分明显，所以反对蒋介石独裁，请汪精卫回国重新担任国民党领导人的<br>呼声一浪高过一浪。在这样的情况下，蒋介石也感到众怒难犯，只好请汪精卫回国主持大<br>局，蒋介石给汪精卫拍电报说：“如果先生再不回国的话，我就要出国了”。</p><p>在这种情况下，汪精卫于１９２７年２月下旬离开法国，乘火车经苏联归国。在汪精卫途<br>径莫斯科时，斯大林专门接见了这位国民党左派领袖。斯大林希望汪精卫回国后重用陈公<br>博等左派人士，嘱咐汪精卫说服蒋介石不要赶鲍罗廷回国。原来苏联将最高顾问季山嘉换<br>为态度比较谦虚的鲍罗廷后，仍和蒋介石龌龊很多。一次鲍罗廷对蒋介石说：“你想让众<br>人不说话是不可以的。我告诉你一个故事罢。古时西方有一个国王，极讨厌大臣们说话。<br>有一天，他对大臣们说：‘你们说话太多了，我不喜欢。’大臣们说：‘只有狗是不会说<br>话的，陛下要我们不说话，只有去找狗。”蒋介石认为鲍罗廷有意羞辱他，又要赶鲍罗廷<br>回苏联。汪精卫向斯大林表示回国后要坚持孙中山的联俄联共政策，并做好蒋介石等右派<br>的工作。</p><p>北伐军攻克汉口后，原来在广州的国民政府迁往汉口，而蒋介石的北伐军总司令部却设在<br>南昌。在汉口的国民政府要求蒋介石把北伐军总司令部迁往汉口，而在南昌的蒋介石却要<br>求把国民政府迁往南昌，两方进行了激烈的争论。蒋介石不执行党中央的命令，拒绝把司<br>令部迁往南昌的作法，显然出于私心。在蒋介石看来，驻扎汉口的部队都不是他的嫡系部<br>队，他到南昌必然处于国民政府的控制之下。蒋介石和武汉国民政府的迁都之争，使人们<br>更加感到蒋介石军事独裁的危险。</p><p>１９２７年３月１０日，就在汪精卫回国的途中，国民党中央在武汉召开了二届三中全会<br>。这次会议是一次不折不扣的反蒋会议，与会者们一致认为蒋介石集党政军大权于一身，<br>一意培植私人势力，现在又挟军力与党和政府对抗，制造军事独裁。如果不及早加以抑制<br>，蒋介石必将成为袁世凯第二。二届三中全会通过了一系列议案，“中央军事委员会组织<br>大纲”，“国民革命军总司令部组织条例”等，均意在提高党权，削弱蒋介石的个人权力<br>。会议还通过今后中央军事委员会不设主席，由汪精卫为首的７人集体领导。汪精卫在缺<br>席的情况下，被选为国民政府主席。</p><p>北伐军占领南京后，蒋介石的北伐军司令部迁往南京，这时国民党已形成在汉口的国民政<br>府和在南京的蒋介石派系两大阵营，两个阵营都拉拢汪精卫加入他们的阵营。以当时汪精<br>卫在国民党内的地位和威望，加入哪个阵营就会大大加重该阵营的砝码。７０年前的交通<br>不比现在这样快捷，１９２７年４月１日汪精卫乘坐的邮轮到达上海时，北伐军已经攻占<br>了上海。蒋介石派他的私人代表吴稚晖前往码头迎接汪精卫，在这以前，蒋介石向全军发<br>表欢迎汪精卫回国领导的通电：“自今以后，所有党政、民政、财政、外交等等，均须在<br>汪主席领导之下，完全统一于中央。中正统帅全军而服从之。”４月３日，汪精卫到法租<br>界孙中山的故居，和蒋介石以及在沪的国民党高级军政干部会谈。</p><p>吴稚晖说：“现在共产党以武汉为中心，从城市到农村都在搞暴动，武汉的国民党已被共<br>党所胁持，迟早要被吃掉”。蒋介石说：“目前我党已处于一个危险时期，也是一个转折<br>关头，如果让共党再猖狂下去国民党就要垮台，现在一切党国命运在于汪主席复职。”汪<br>精卫说：“蒋先生要兄弟来究竟要做些什么呢？”蒋介石说：“第一是复职。第二是把苏<br>俄代表鲍罗廷赶走，此人在武汉成了太上皇，非把他赶走不可。第三是分共。这三件事必<br>须坚决做，立即做，请汪主席指示。”</p><p>汪精卫回答说：“联俄容共的政策为总理手定，不可轻言更改。此事事关重大，须召开四<br>中全会做出决定。党的民主制度、组织原则是必须遵守的。”吴稚晖站起来激动地说：“<br>汪兄弟，现在是什么时候，你还要讲什么组织原则，还要对共党心存幻想。”接著李宗仁<br>、李曾石等人纷纷发言，反对汪精卫的意见，要求汪精卫不要偏袒中共。汪精卫一时间成<br>为众矢之的，但他仍然坚持原则，毫不退让。最后汪精卫说：“我是站在工农方面的呀！<br>谁要残害工农，谁就是我的敌人。”</p><p>这时吴稚晖忍不住激动，扑通一声跪倒在汪精卫面前，流著眼泪说：“汪先生，汪主席，<br>看在党国面上，你就放弃袒共立场，留在上海领导吧！”汪精卫被此举搞得不知所措，拔<br>腿逃避上楼，口中连声说道：“稚老，您是老前辈，这样我受不了，我受不了。”最后会<br>议就在这样令人啼笑皆非的气氛中结束。</p><p>汪精卫和蒋介石等人第二天继续开会，这次汪精卫改变了昨天的强硬态度，同蒋介石达成<br>了初步协议。协议规定：一、４月１５日由汪精卫主持召开国民党中央二届四中全会，在<br>二届四中全会上决定一切；二、通告共产党暂停在国民政府内的一切活动，听候中央开会<br>决定；三、工人纠察队等一切武装团体均服从蒋总司令的指挥。汪精卫知道蒋介石是暂时<br>的妥协，为了从政治上压倒蒋介石，汪精卫私下找中共领导人陈独秀，要求陈独秀发表一<br>个不反对国民党的宣言，堵住蒋介石说共产党要搞暴动的口实。</p><p>４月５日，汪陈两人一起联名发表了一份《国共两党领袖汪兆铭、陈独秀联合宣言》，宣<br>言说：“中国共产党坚决承认，中国国民党及国民党的三民主义，在中国革命中毫无疑义<br>的重要。只有不愿意中国革命向前进展的人，才想打倒国民党，才想打倒三民主义。”宣<br>言最后说，国共两党将为中国革命携手到底，绝不受人离间。</p><p>《汪陈联合宣言》发表后，激怒了国民党的右派。本来国民党的右派并不支持蒋介石的独<br>裁，只是赞成蒋介石的反共政策。他们原来寄希望于汪精卫回国后带领他们反共，遏制蒋<br>介石的独裁。可是《汪陈联合宣言》发表后，表明汪精卫坚决容共的态度，使国民党中大<br>部分反共又反蒋的人士，不得不归集于蒋介石之下共同反共，使蒋介石成为反共英雄。如<br>果汪精卫当时打出坚决反共的旗帜，就很可能会得到大部分国民党人的拥戴，就有可能阻<br>止蒋介石后来的军事独裁。可是当时汪精卫并没有看清大部分国民党军政人士要求“分共<br>”的呼声，坚决执行孙中山的容共政策，使汪精卫在国民党内的号召力大为下降，也从反<br>面为蒋介石的独裁铺平了道路。</p><p>《汪陈联合宣言》不仅是汪精卫悲剧的开始，也是陈独秀悲剧的开始。当时共产党内的激<br>进分子，也非常不满国民党的越来越明显的排共政策，要求共产党不再寄人篱下，主动离<br>开国民党单独搞革命。陈独秀发表与国民党联合到底的《汪陈联合宣言》，被大部分共产<br>党人认为是一个右倾投降主义的宣言，此后不久就罢免了陈独秀总书记之职。</p><p>汪精卫在发表了《汪陈联合宣言》之后，就乘船前往汉口。汪精卫到达汉口后，受到大量<br>群众的夹道欢迎，使汪精卫非常感动。在１０万民众参加的“迎汪大会”上，汪精卫说：<br>“中国革命到了一个严重的时期，革命的往左边来，不革命的快走开去！”表明了汪精卫<br>坚决执行孙中山的联共政策。正当汪精卫在汉口高呼“反共即是反革命”的时候，在上海<br>的蒋介石却于１９２７年４月１２日发动了武力清共的命令，这就是所谓的“四一二政变<br>”。蒋介石在“四一二政变”中，关闭了共产党在上海的总工会和党部，解散了工人纠察<br>队，大肆抓捕共产党员，三天之内就处死３００余人，逮捕５００余人，还有数千人失踪<br>。</p><p>蒋介石发动“四一二政变”后，汪精卫发表讲话，痛斥蒋介石的武力清党行为。汪精卫说<br>：“蒋介石的反共，只是一种借口。其反革命之行动，丧心病狂之至，自绝于党，自绝于<br>民众，纪律俱在，难逃大戮。”４月１８日，汪精卫又以国民党中央的名义，发表通电说<br>：“蒋中正屠杀民众，摧残党部，甘为反动，罪恶昭章。已经中央执行委员会决议，开除<br>党籍，免去本人所兼各职。著全国将士及各革命团体拿解中央，按反革命罪条例惩治”。</p><p>为了对抗武汉的正统国民政府，蒋介石干脆在南京也成立一个新的国民政府，以免在名分<br>上输给武汉国民政府。４月１８日，南京的国民政府成立，蒋介石邀请国民党中的老牌反<br>共分子胡汉民出任国民政府主席，蒋介石自己任中央军委主席和国民革命军总司令，国民<br>党公开分裂成“汉”“宁”两个政府。</p><p>尽管汪精卫竭力主张联共，但武汉政府的国民党官员中的反共情绪越来越明显，特别是共<br>产党的农民运动过于激烈，而国民党的中下层军官多为中小地主出身，他们的父母亲友在<br>故乡被共产党农会揪斗，使他们愤愤不已。最后连革命军三十五军军长何健的父亲，也被<br>绑游街示众。何健在一怒之下，指使三十五军三十三团团长许克祥，在湖南长沙发动了“<br>马日事变”，捕杀共产党人和亲共分子数百人。“马日事变”后共产党向国民党武汉政府<br>施加压力，要求惩处“不法军官”，但大部分国民党官员却袒护许克祥，使许克祥安然无<br>恙。</p><p>此时共产国际也感到武汉的国民党靠不住，密令武汉的中共自己组织“工农革命军”，改<br>组国民党武汉政府，没收地主的土地实行公有制。共产国际派印度人鲁易将此密令，即所<br>谓《五月指示》转交武汉的中共中央。１９２７年６月１日鲁易到达武汉后，却在把《五<br>月指示》交给中共以前，先交给了汪精卫。原来鲁易过分相信汪精卫，认为汪精卫铁心站<br>在共产党一边的左派，出示密令以表示对汪精卫的信任，希望汪精卫和共产党共同奋斗。</p><p>汪精卫看到《五月指示》后大吃一惊，密令中写到：一、无视国民党的禁令，实行自下而<br>上的土地革命。二、在湖南湖北组织一只由２万共产党员和５万工农组成的工农革命军。<br>三、改组国民党中央执行委员会，有旧思想的一律驱逐，由各界工农代表取而代之。四、<br>组织革命法庭审判反革命军官。</p><p>汪精卫看完《五月指示》后冷汗直冒：原来共产党加入国民党是为了从内部颠覆瓦解国民<br>党，根本没有和国民党一心合作的诚意。于是汪精卫由拥共一百八十度转为反共，成为一<br>个坚决的反共人士。</p><p>汪精卫随后找苏联最高顾问鲍罗廷，汪精卫说：“玩火者必自焚，我们要使火烧向敌人而<br>不是烧向自己。”鲍罗廷不解地问道：“汪先生，你所说的敌人是指谁？”汪精卫拿出《<br>五月指示》的抄件说：“鲍罗廷先生大概已经看过这个指示了吧？如果共产党执行你们共<br>产国际的指示，我们国民党就完了。可以警告你们，你们打错主意了！”鲍罗廷不知道汪<br>精卫怎么会得到这个密件，他急忙解释说：“我不是共产国际的代表，但这个指示我知道<br>。如果中共要执行这个指示，国共合作必将破裂，这是我极不愿意看到的。我将说服陈独<br>秀，希望不会发生这种令人痛心的事态”。</p><p>鲍罗廷本人的确也不赞成共产国际的这个极左指示，《五月指示》传达到中共后，很多领<br>导人也十分恼怒。１９２７年７月４日，在鲍罗廷的主持下，中共在汉口三教街紧急召开<br>了政治局扩大会议。总书记陈独秀首先发言说：“由于蒋介石发动了‘四一二政变’，革<br>命的形势已转入严重的阶段，资产阶级已经叛变。而武汉的国民党中央和国民政府的领袖<br>汪精卫，乃是中国小资产阶级的代表，其政府即是工农小资产阶级的联盟。虽然汪精卫对<br>工农革命中的过火行动比较反感，对鲍罗廷同志的态度也不十分友好，但这是小资产阶级<br>在革命中动摇性的表现。”</p><p>鲍罗廷接著说了汪精卫找他谈话的经过，然后说：“我十分遗憾地接到汪精卫签署的通知<br>我回国的命令，看来他是不想和我们合作了，但我们还是要争取他，希望他能坚持三大政<br>策，扭转当前的局势。”陈独秀又说：“汪精卫的思想我很了解。他从法国回来后就找我<br>发表共同革命的宣言，说明他是主张三大政策的，昨日如此，今日也如此。至于土地革命<br>，我在五大开会时讲过，政策是正确的，但必须防止过火行动，不要使武汉国民政府走上<br>蒋介石的道路，不要逼汪精卫走分共的道路。”</p><p>陈独秀和鲍罗廷主张对汪精卫进行妥协，暂不执行《五月指示》的命令，放弃激进的土改<br>运动，争取和汪精卫继续合作。但是陈独秀的妥协主张却遭到大部分激进共产主义分子们<br>的反对。张国焘、李立三、周恩来等人均明确反对陈独秀的“右倾投降主义路线”，李立<br>三更提出要陈独秀作检讨检查错误。</p><p>第二天，中共宣布改组，撤销陈独秀的总书记职务，由张国焘、李立三、周恩来等五人领<br>导小组组成临时中央常委会。五人领导小组当即起草了一份《宣言》，于１９２７年７月<br>１３日公开发表。《宣言》说：“目前，革命已处于危急存亡之时刻，武汉国民党中央和<br>国民党政府最近已公开准备政变……。因此，中国共产党决定撤回参加国民政府的共产党<br>员……。”</p><p>看到中共发表的宣言后，汪精卫于１９２７年７月１５日召开紧急会议，汪精卫拿出《五<br>月指示》说：“我们从这份指示中可以看出五层意思，都是很厉害的……。同志们，目前<br>本党已经到了严重的关口，必须在这个会上作出生与死的抉择。”到会的国民党军政要人<br>，孙科、李宗仁、唐生智等，纷纷发言支持分共，只有宋庆龄的代表陈友仁反对，声称三<br>大政策是孙总理亲自制定的，违背三大政策就是总理的叛徒。但陈友仁的发言遭到与会者<br>的一致反对，最后陈友仁不得不退出会场。</p><p>在这次会议上，通过的《统一本党政策案》，要求在国民政府和军队中任职的共产党员，<br>在即日声明脱离共产党，否则一律停止职务。但汪精卫说：“我们不象蒋介石那样搞武力<br>清党，而是采用和平的‘分共’，这是最稳妥的步骤。”本来武汉国民政府并没有打算象<br>蒋介石那样武力清共，而是准备让共产党和平地退出国民党，汪精卫也声称要“保护共产<br>党人之身体自由”。可是共产党在共产国际的激进指导下，张发奎第二方面军所辖的二十<br>军军长贺龙等人，于１９２７年８月１日，在南昌发动了武装暴动。</p><p>南昌起义使武汉国民政府放弃了和平分共的政策，开始搞武力分共。１９２７年８月８日<br>，汪精卫召开了国民党中央紧急扩大会议，通过了“武力分共”决议案。在武汉也开始了<br>大肆逮捕处死共产党人，第一次国共合作终于彻底破裂。</p><p>国共合作之所以破裂，根本还是在于两党的方针目标有根本的差异，两党合作其实不过是<br>一种相互利用。国民党利用联共争取苏联的军事经济支援，而共产党利用国民党来发展自<br>己的势力，两党最后走向诀别，也是终究要发生的必然事件。蒋介石搞暴力镇压共产党固<br>然不对，但如果共产党能够采取陈独秀等人的妥协政策，不搞激进的共产主义暴力运动，<br>共产党和汪精卫等国民党左派的联合，可能会持续更长一些。</p><p>第二部分之四：第一次反蒋的失败</p><p>共产国际指示中共抛开国民党干革命的《五月指示》密令，是造成武汉国民政府“分共”<br>的直接原因。为什么共产国际会突然传来一个《五月指示》呢？这与当时苏联内部进行的<br>斯大林和托洛斯基的权力斗争有关。在中国问题上，斯大林持比较现实的态度，要求中国<br>共产党在国民党统一中国以前，保持与国民党的合作。而托洛斯基却持比较激进的态度，<br>要求中国共产党抛开国民党干革命，通过暴力革命建立真正的苏维埃政权。</p><p>斯大林通过苏联驻国民党政府顾问来指导中国革命，苏联顾问鲍罗廷是斯大林的代表，而<br>托洛斯基却通过共产国际这个组织来指导中国革命，带来共产国际《五月指示》的印度人<br>鲁易则是托洛斯基的代表。这样的双重指导，也给中共带来了很多麻烦，中共内部也分为<br>现实的斯大林派和激进的托洛斯基派，在当时似乎支持激进革命论的人占了上风。在南昌<br>起义问题上，１９２７年７月２３日斯大林派来接替鲍罗廷的苏联代表罗米那兹，强烈反<br>对中共搞武装暴动的南昌起义，但并没有说服中共的激进派。</p><p>汪精卫看到共产国际指示中共抛开国民党干革命的《五月指示》后，开始要求以个人身份<br>加入国民党的共产党人退出国民党，进行所谓“分共”。当时武汉政府的大部分国民党人<br>都赞成分共，只有孙中山的遗孀宋庆龄和外交部长陈友仁等很少数人反对分共。宋庆龄反<br>对分共的理由，和后来中共的华国锋等“凡是派”差不多，声称凡是孙中山生前亲自制定<br>的方针政策都不能变，否则就是总理的叛徒。</p><p>汪精卫反驳宋庆龄等“凡是派”的意见时说：“孙先生的伟大之处就在于根据其三民主义<br>之原则来发展他的观点，改变他的策略。当初他联合袁世凯，后来经过事实的教训就发动<br>了讨袁，当初他依赖陈炯明，后来他又义无反顾地发动征讨陈逆。如果孙先生看到今天武<br>汉的形势，看到共党正虎视眈眈地欲篡我党之权、我党之军，他会怎样？他一定会改变他<br>的三大政策的。”</p><p>本来汪精卫和武汉国民政府并没有打算象蒋介石那样武力清共，而是准备让共产党和平地<br>退出国民党。但共产党１９２７年８月１日在南昌发动了武装暴动的“南昌起义”后，使<br>武汉国民政府的和平分共政策发生了一百八十度转弯，也开始逮捕处死共产党人。汪精卫<br>后来检讨说：“由于我的误谬纵容，才使共产党发展到这个地步”。汪精卫的“容共”政<br>策使他在国民党内部的威信受到很大影响。</p><p>武汉国民政府开始“清共”后，武汉政府和南京蒋介石政府之间的根本分歧就消失了，很<br>多国民党人开始要求分裂的武汉和南京政府重新统一。１９２７年８月初，冯玉祥分别致<br>电宁汉政府，请求双方重归于好，合二为一。武汉政府坚称自己是正统政府，斥责蒋介石<br>违背党统党纪，在南京另立政府是“以军治党、以党窃权”，是搞个人独裁的结果。汪精<br>卫提出宁汉政府重新联合的前提必须是蒋介石下台，南京方面的国民党人要求宁汉统一的<br>呼声也很高，特别是在南京的李宗仁桂系军队的势力膨胀，也从侧面催促蒋介石下台。</p><p>正巧蒋介石指挥的北伐军在１９２７年８月初的徐州作战中，又败于孙传芳的军队，蒋介<br>石在内外交困的情况下，提出需要“休息一下”，于８月１２日离开南京前往上海，８月<br>１４日正式发表下野宣言，前往日本访问。蒋介石的下野使汪精卫等反蒋派松了一口气，<br>８月１９日汪精卫代表武汉政府发表《迁都南京宣言》，汪精卫以为从此国民党就可以实<br>现“以党治军”的文人领导，消除军人独裁的疾患。</p><p>但汪精卫却想错了，当时的中国是一个谁枪多谁发言权就大的强权社会，各路将军拥兵自<br>重，汪精卫这样的文人政府根本无法对他们进行有效的管束，更不要说进行领导。蒋介石<br>宣布下野后，支持蒋介石的人纷纷离开南京，南京又成为李宗仁、白崇禧桂系军人掌权的<br>军人政权，所谓“才驱走虎，又来了狼”，桂系军人依靠手中的兵权，并不服从汪精卫文<br>人政府的领导。孙中山是一个文人革命家，最早跟随孙中山干革命的汪精卫等人也均是文<br>人政治家，没有效忠于自己的嫡系军队。作为文人政治家的汪精卫要想在枪杆子里面出政<br>权的社会中搞民主政治，几乎是一种空想。</p><p>随著北伐的进行，国民革命军中桂系军队的势力大大扩张，但桂系在党内却没有什么地位<br>，于是统治南京的桂系实力派把在上海的西山会议派国民党元老请来，帮他们在政府中撑<br>腰。西山会议派是国民党中最早开始反共的一派，１９２５年１１月曾在北京西山碧云寺<br>的孙中山灵前，召开过反共排共的西山会议，当时汪精卫主持下的广州国民政府在二届一<br>中全会上通过了《弹劾西山会议案》，并宣布开除林森等１８人的党籍。</p><p>然而西山会议派并没有就此绝迹，他们仍在坚持活动。后来西山会议派迁往上海，在上海<br>自行成立了国民党中央党部，和广州的正统国民政府相对立。在汪精卫和陈独秀发表国共<br>两党合作的《联合声明》时，西山会议派的上海国民党中央党部，曾以国民党中央的名义<br>斥责汪精卫的行为是“卖党、卖国之罪，愿与国人共弃之。”蒋介石在南京另立政府后，<br>作出了恢复林森等１８人党籍的决议，但武汉的汪精卫政府并不承认这个决议，所以西山<br>会议派对汪精卫耿耿于怀，极力反对汪精卫当国民党的领袖。</p><p>１９２７年９月１１日，武汉政府、南京政府和西山会议派的三方人士，在上海召开了宁<br>、汉、沪三方中央委员谈话会，讨论宁汉政府合并和统一党务的问题。西山会议派的张继<br>发言说：“既要统一党内各界同志，就要承认上海的中央党部，就要废除二届一中全会上<br>的《弹劾西山会议案》。这个非法决议案是当时左倾路线的产物，必须宣布废除，否则怎<br>么能团结统一党内同志？”</p><p>汪精卫反驳说：“中央的决议岂可任意废除，除非由将来的四中全会作出新的决议。”汪<br>精卫的发言遭到宁、沪代表的强烈反对。李宗仁说：“我们迁都南京后，于６月７日宣布<br>林森、张继等１８位同志恢复党籍的决议，所以才有今日统一党务的基础。汪同志，你也<br>不必再坚持过去的决议了。”</p><p>汪精卫仍坚持说：“南京的决议我们武汉中央并不知道。现在我提议：西山会议派决不能<br>参加二届四中全会，但为了团结同志，可容纳个人参加，不能容纳上海党部。二届四中全<br>会必须在武汉召开，否则我们武汉的同志不参加会议。”这时宁、沪代表们开始翻汪精卫<br>的旧帐，指责汪精卫反共不力，贻误了党国事业。宁方代表自称他们是反共的先进，而沪<br>方代表则更标榜他们是反共先进中的先进，这使汪精卫不得不自责说：“武汉方面防范共<br>产党过于迟缓，请求处分。”</p><p>在这种拔剑张弩的气氛中，孙科突然站起来提议说：“各位，兄弟提出一项折衷办法，由<br>宁、汉、沪三方共同组织一个中央特别委员会，作为过渡，先使合作告成，然后再谋补救<br>的办法。”孙科的折衷方案得到了大部分代表的同意，由于孙科是武汉方面的代表，汪精<br>卫不好坚持反对，也勉强同意这个方案。</p><p>后来在桂系军人和西山会议派的操纵下，推举出１４名中央特别委员会代表，汪精卫虽然<br>名列第一，但桂系军人和西山会议派的人占据多数，使特委会成为一个桂系军人、西山会<br>议派、以及孙科等人的联合体，汪精卫、胡汉民、蒋介石等国民党中的重量级人物，均反<br>对这个中央特别委员会。由于当时蒋介石和胡汉民均已下野，汪精卫也于９月１３日通电<br>下野，表示抗议特委会。汪精卫从反对蒋介石军事独裁，又转为反对桂系的军人统治。</p><p>汪精卫下野后，桂系军人和西山会议派虽然靠中央特别委员会的名义执掌国民党中央政府<br>，但他们在军事实力上无法和蒋介石相比，在党内的资历声望又无法与汪精卫相比，所以<br>桂系军人和西山会议派的政权注定难于长久。汪精卫辞职后，张发奎、李济深等人，在广<br>东召开了迎汪回粤大会，联名邀请汪精卫回广东指导革命。汪精卫于１０月２１日前往广<br>州，然后于１０月３０日召集在粤的中委会成员开会，通电全国否认南京的特别委员会的<br>合法性。汪精卫说：“中央执行委员会是党的全国代表大会选举产生的，非全国代表大会<br>无权取消。成立特委会取代中委会职权，等于取消了中委会，不合党的法统和组织原则。<br>”汪精卫邀集外地的中委会委员前来广州，在广州召开四中全会。面对汪精卫的攻势，南<br>京的孙科等人也发出通电，坚持特别委员会不能取消，邀请各地中委会委员到南京召开四<br>中全会。国民党又出现了宁粤分裂的局面。</p><p>就在宁粤双方对峙之时，蒋介石于１９２７年１１月１０日从日本回到上海。原来不少国<br>民党人看到蒋介石走后无人能够解决国民党内部的分裂混乱局面，纷纷电请蒋介石回国复<br>职，出面收拾混乱的残局。在南京的李宗仁桂系本来是反蒋的，但汪精卫公开反对他们的<br>特委会后，使他们的政权已难于支撑，所以也表示同意蒋介石回来复职。蒋介石在这次访<br>问日本时办成了两件大事，一是征得宋太夫人同意他与宋美龄的婚事，二是得到了日本方<br>面对北伐的理解和支持。</p><p>北伐军１９２７年３月进入南京时，发生了针对外国人的暴行，为此英美军舰曾向南京城<br>中炮击报复。１９２７年４月１１日，英美法意日５国向武汉和南京的国民党政府同时提<br>出了通牒，要求国民政府正式道歉，惩罚责任者，以及对被害者进行赔偿。南京的蒋介石<br>在列强提出通牒后的第二天发动了“清共”的４月１２日政变，作为对列强通牒的无言回<br>答。本来西方列强对苏联支持下的国民党势力的迅速发展十分担忧，蒋介石的反共政变使<br>英美日等以反共为第一国策的各列强，有了一块石头落地的安心感，所以没有再向国民党<br>要求道歉和赔偿。</p><p>蒋介石发动“四一二”政变还有一个重要的原因，就是争取英美日各国的政治支持和经济<br>援助。当时在中国如果没有外国政治和经济的援助，是不可能掌握政权的。蒋介石一旦离<br>开苏联的援助，就必须寻找新的援助国，蒋介石把眼光转向英美日等资本主义国家。但由<br>于以前国民党和苏联的关系太深，如果只是进行平和的分共，未必能消除英美日等国对国<br>民党反共之诚意的疑虑。所以蒋介石一不作二不休，用共产党人的鲜血来换取西方列强的<br>信任。果然西方各国对蒋介石的坚决反共大加赞赏，开始在政治上支持蒋介石，这也是蒋<br>介石后来能够在国民党的多次内斗中取胜的一个重要原因。</p><p>在为什么会发生杀戮外国人的南京事件问题上，国外学者比较倾向于北伐军战士自发地发<br>起反外仇外事件。当时北伐军战士在共产党代表的列宁“帝国主义理论”的教育下，相信<br>中国的贫穷落后皆为帝国主义国家的侵略掠夺所造成，所以非常痛恨作为“侵略者”的外<br>国人，自发地发起了杀戮外国人的事件。也有人认为南京事件是苏联的阴谋：由于当时蒋<br>介石反共的迹象已经比较明显，苏联顾问密令在蒋介石军队中的共产党员挑动士兵杀戮外<br>国人，这样就使蒋介石与西方国家的关系敌对化，从而断绝蒋介石投靠帝国主义国家的后<br>路。但苏联人的计谋却起了反作用，不但没有阻止蒋介石投靠西方国家，反而促成了蒋介<br>石彻底反共的决心。</p><p>蒋介石在１９２７年９月末到１１月初的访日期间，与日本首相田中义一，陆军大臣向川<br>义则等政府要人进行了多次密谈。日方要求蒋介石承认日本在满蒙的特殊权益，履行孙中<br>山以前的诺言（据说孙中山以前曾以满蒙的特殊权益作为日本援助中国革命的交换条件）<br>，蒋介石则要求日本不援助张作霖，支持国民党统一中国。最后双方达成协议：日本不援<br>助张作霖，支持反共反苏的国民革命取得成功，承认国民党在中国建立政府，并保证向蒋<br>介石提供一笔巨额借款。蒋介石则表示承认日本在满蒙的特殊权益，坚决反共到底。蒋介<br>石访日期间还与美国驻日本的特使进行了会谈，得到了美国支持蒋介石为首的国民党政府<br>的许诺，而蒋介石则许诺保障美国在中国的一切权益。蒋介石利用“下野”进行的外交活<br>动，取得了日美等列强的政治经济支持，大大增加了他在国民党中的政治资本。</p><p>蒋介石一回到上海，就立即给汪精卫拍电报“负荆请罪”，毕竟汪精卫在党内有相当的地<br>位威望，得到汪精卫的谅解才能顺利复职。蒋介石在电报中说：“此后党国重任，惟兄是<br>赖。凡能于党国有益，则弟必尽我心力，依照兄之意图，不渝始终，以尽区区之意。若兄<br>能来沪晤商一切，胜幸焉……”汪精卫见蒋介石有诚意，就于１１月１６日乘船赴上海和<br>蒋介石谈判国民党各派的联合问题。没有想到汪精卫一离开广州，张发奎等人就发动了一<br>场倒桂政变，将桂系在广州的部队缴械，尔后张发奎指挥的粤军在梧州一带和桂军相持。<br>共产党人则乘广州城内空虚之机，在叶挺、叶剑英的领导下于１２月１１日发动了广州暴<br>动。</p><p>共产党的起义部队自称“红军”，和回师镇压暴动的张发奎第四军发生了激战，使广州遭<br>到了极大的损害。李宗仁在回忆录中这样写道：共产党此次暴动，可说是毫无理性，烧杀<br>之惨，实无前例。市民均被迫以红巾系颈，表示拥护红军，否则格杀勿论。张发奎等人以<br>共党在后方捣乱，破坏其统一两广的大计，愤恨之余，遂也恣意杀戮。下令凡见颈系红巾<br>的，即格杀勿论。人民分不出孰为红军，孰为第四军，只知有红巾亦死，没有红巾亦死。<br>一时广州全市鬼哭神嚎，无辜人民被杀的不计其数。大火数日不绝，精华悉被焚毁。</p><p>广州暴动之后，全国哗然，一片声讨之声。张发奎等人见众怒难犯，均宣布辞职前往香港<br>。而蒋介石派、西山会议派、以及桂系军人派则借机攻击汪精卫，他们说汪精卫和张发奎<br>等人勾结共产党，蓄意制造了焚杀广州事件，甚至有人说汪精卫本人就是共产主义分子，<br>一时间搞得汪精卫说不清辩不明。南京的特委会要求查办汪精卫，白崇禧甚至找上海的青<br>帮头目杜月笙下绑票暗杀汪精卫。后来虽然查明广州事件和汪精卫并没有直接关系，但汪<br>精卫作为广州地区的政府首脑难以逃避责任，于是汪精卫１２月１６日发表了引退政界的<br>声明，和陈璧君一起前往法国。</p><p>汪精卫前往法国临行之前，陈公博前来送行。汪精卫劝陈公博也一起去法国，陈公博却提<br>出相反意见，陈公博说：“我总是不明白汪先生遇事便出国。中山舰事件发生时，先生本<br>可不必走的，却走了。四中全会快召开了，李宗仁、胡汉民都离开了，拥护汪先生的人不<br>是没有。凭汪先生的资历和威望，还担心选不上国民政府主席？”</p><p>汪精卫说：“蒋介石既然容我不得，我又何必留在他身边合作？合则留，不合则去，这是<br>我的办事原则。与其受人之羁縻，不如离去。”陈公博说：“我的想法与汪先生不同。合<br>则留，不合则去，虽然有古君子之风，但我认为每个国民对国家都有一份责任。我的处世<br>原则是：合则留，不合则打，打不过才去。我也知道留在上海有一定危险，但我要作一个<br>斗士，上海就是我的斗场。我手下没有兵，但我手中有笔，有一批朋友，我要同蒋介石展<br>开理论上的战斗！”</p><p>汪精卫走后，陈公博联合国民党内的一批反蒋民主人士组成了“改组同志会”，即所谓“<br>改组派”，在上海办杂志和蒋介石进行理论上的斗争，汪精卫则成为改组派的精神领袖。</p><p>汪精卫一走，国民党中就没有了能够制约蒋介石的重量级人物，蒋介石又开始独揽大权。<br>１９２７年１２月２８日，在蒋介石的压力下，桂系军人和西山会议派的特委会宣告结束<br>，１９２８年１月４日蒋介石回到南京正式复职。在蒋介石的主持下，２月２日召开了二<br>届四中全会，统一了国民党各派，使持续了半年之久的国民党党内斗争暂时告一段落。二<br>届四中全会明文取消了孙中山在一大时制定的联俄联共三大政策，凡因反对三大政策而被<br>开除党籍的人一律平反。</p><p>这次蒋介石重新上台接受了以前搞独裁引起党内强烈反对的教训，特别注意不给人造成独<br>裁的印象。蒋介石只作军事委员会主席，把最高职位的国民政府主席让给了谭庭楷。此外<br>蒋介石还建议除了南京中央政府之外，再在广州、武汉、开封、太原建立四个政治分会，<br>以便互相进行监督。广州、武汉、开封、太原的政治分会主席由掌握军队实力的李济深、<br>李宗仁、冯玉祥、阎锡山担任。</p><p>蒋介石统一全党后，于１９２８年４月重新开始北伐，这次北伐进军顺利，于６月８日攻<br>占北京。７月６日，蒋介石在李宗仁、冯玉祥、阎锡山等人的陪同下，前往北京西山碧云<br>寺霭见孙中山灵位，蒋介石热泪盈眶地向国父之灵报告他生前统一中国的愿望已经实现。</p><p>孙中山晚年在国民党中的作风近似于独裁，但国民党是由孙中山一手建起，孙中山在党内<br>具有无人可比、不可动摇的威望。汪精卫则是国民党内民主派的代表，汪精卫接班后，改<br>组国民党建立了新的集体领导体制，也得到了国民党人的拥护。然而蒋介石上台后，却要<br>学孙中山独揽一切的独裁作法，但蒋介石本人又没有孙中山那样的巨大威望，所以蒋介石<br>挟军队搞军事独裁的做法，在国民党内引起了极大的反感和反对，这也是后来国民党内部<br>激烈斗争频繁不断的主要原因。</p><p>这次汪精卫反蒋失败，虽然与汪精卫拘泥于孙中山的三大政策，没有把握好国民党内部反<br>共的呼声，搞反共过于迟缓有关，但最根本的还是在于汪精卫没有一只效忠于他本人的军<br>队，无法制止各路军人的拥兵自重，无法建立中央政府的有效权威。在具有“枪杆子里面<br>出政权”历史的中国，汪精卫这样没有军队背景的文人政治家，要想遏制蒋介石的军事独<br>裁，自然是非常艰难的。</p><p>第二部分之五：护党救国运动</p><p>１９２７年１２月中共发起广州暴动之后，汪精卫发表了引退政界的声明，和陈璧君一起<br>前往法国。汪精卫一走，国民党中失去了政治上能够制约蒋介石的重量级人物，蒋介石又<br>开始独揽大权。１９２８年２月，在蒋介石的主持下，国民党召开了二届四中全会，统一<br>了国民党各派，使持续了半年之久的国民党党内斗争暂时告一段落。蒋介石统一全党后，<br>于１９２８年４月重新开始北伐，这次北伐军进军非常顺利，除了在济南和日军发生小规<br>模冲突以外，几乎没有遇到什么阻挡，仅仅两个月后的６月８日就攻占了北京，宣告北伐<br>成功。</p><p>蒋介石这次北伐之所以非常顺利，有一个非常重要的原因，就是他得到了英美等西方诸国<br>的支持。在前一次北伐时，苏联支持国民党，而西方诸国支持北洋军阀。蒋介石于１９２<br>７年４月暴力反共以后，西方诸国开始放弃对其他腐败军阀的支持，转而支持蒋介石。蒋<br>介石统一中国之后，美国带头承认蒋介石的南京政府，其他西方诸国不久也承认了南京政<br>府，使蒋介石的国民党政府成为被国际上公认的合法政府。奉系军阀张作霖在战败后从北<br>京逃往奉天的途中，被日本关东军阴谋炸死。张作霖死后不久，继承父位的张学良宣布“<br>服从国民政府，改旗易帜”，新疆的杨增先不久也宣布效忠国民党政府，使中国在军阀混<br>战了十几年后，首次出现全国统一的局面。</p><p>按照国民党创始人孙中山的设想，在武力统一中国以后，要在中国建立一个民主政治的国<br>家。作为孙中山政治思想中核的三民主义：“民族主义，民权主义，民生主义”，把建立<br>民主政治作为中国革命的三大目标之一。但孙中山并没有准备在革命成功后立即在中国实<br>现民主政治，而是要经过“军政，训政，宪政”三个阶段逐步实现民主化。“军政”阶段<br>是指在军事革命时期，由革命军的军政府实行独裁的“军法之治”，这时既没有宪法也没<br>有议会。在军政府的军事统治下，用暴力推翻反革命政权，建立以三民主义为纲领的国民<br>政府。在国民党夺取政权，统一中国后，进入“训政”阶段。“训政”阶段是指在地方上<br>进行局部的民主化试验，对人民大众进行民主政治的指导和训练，但这时全国仍由中央政<br>府进行独裁的“约法之治”。等待人民大众的政治觉悟成熟以后，最后进入“宪政”阶段<br>。在“宪政”阶段由成熟的国民进行选举，制订宪法，然后解散独裁的中央政府，建立民<br>选政权，最终实现真正民主化的“宪法之治”。</p><p>根据孙中山的“三段论”民主化设想，蒋介石在统一中国后，于１９２８年６月１５日代<br>表国民政府宣布“军政阶段”正式结束，１０月３日发表了进入“训政阶段”的宣言，宣<br>布组建一个由行政、立法、司法、考试、监察五院组成的国民政府，这就是孙中山设想的<br>“五权分立”政治体系。但这种五权分立政体居然在政府中设立立法院和司法院，使立法<br>权和司法权均处于被国家政府所领导的地位，这与西方民主国家的立法机构和司法机构独<br>立于国家政府之外的“三权分立”体系是背道而驰的。所谓“五权分立”，只是把五种权<br>力集中于国民党之下的独裁体制，所有五院的院长由国民党中央委员会任命，皆由国民党<br>员担任。</p><p>当然这种由中央政府进行独裁的“约法之治”，是符合孙中山三民主义思想的，当时国民<br>党中并没有人对“五权分立”的国民政府提出异议。蒋介石自己出任国家元首的国民政府<br>主席，由胡汉民等人出任立法院长等高级职务。可是在召开国民党第三次全国代表大会的<br>问题上，蒋介石的行为引起了国民党内极大的反对。</p><p>１９２８年２月２１日，蒋介石以国民党中央常委会的名义宣布“三大”代表的产生方法<br>：在全部大会代表名额中，由中央指定一半，省市选举一半，而尚未成立党部的省市也由<br>中央圈定代表。按照这个方法，全部４０９名大会代表中，２１１人为指定代表，１２２<br>人为圈定代表，真正通过选举产生的代表只有７６人。这样一来，“三大”的代表几乎全<br>是蒋介石的御用代表，“三大”也就成为蒋介石个人包办的大会。</p><p>这简直是制造蒋家天下！大量的国民党人开始愤怒了，他们纷纷指责蒋介石借大会之名窃<br>党造派，把持中央，以发展其个人之地位。而反对蒋介石军政独裁最坚决的，是以陈公博<br>为首的“改组同志会”。１９２７年底汪精卫辞职前往法国后，陈公博和顾孟余、王乐平<br>等人组织起“改组同志会”，即所谓改组派。改组派主张恢复国民党１９２４年的改组精<br>神，重新改组中国国民党。陈公博办《革命评论》，顾盂余办《前进》等刊物，与南京的<br>蒋介石政权进行“笔战”。陈公博在《国民革命的危机和我们的错误》一文中指出：“今<br>日国民党已被军阀、官僚、政客、买办、劣绅、土豪所侵蚀盘踞盗劫把持，孙总理的三民<br>主义已被他们所篡改，第一、二次全国代表大会的纲领已被他们抛弃，南京的中央已成为<br>一切反动势力的大本营。”</p><p>陈公博生于广州，其父是原广西提督陈志源。陈志源早年参加了同盟会，起义失败后入狱<br>。此后陈公博开始以打工为生，后来又去当兵，做过班长、司务长。１９１４年陈公博考<br>入广州法政专门学校，１９１７年又考入北京大学哲学系，在老师陈独秀的教导下，接受<br>了共产主义思想。北大毕业后，陈公博回广东法政学校任教。１９２０年陈独秀到广东任<br>教育委员会委员长后，和陈公博等人一起组织起中国第一个共产主义组织：社会主义青年<br>团。１９２１年，经陈独秀提议，陈公博作为广东代表，去上海参加中共的“一大”。陈<br>公博在中共建党初期担任中共广东区委组织委员，但１９２３年陈公博去美国留学后，宣<br>布脱离中共，被中共开除党籍。陈公博在美国哥伦比亚大学学习经济学，一年后获硕士学<br>位。１９２５年陈公博回到广州，在广东大学当教授。陈公博最初得到廖仲恺的赏识，后<br>来又被汪精卫看中，１９２５年国民政府成立时，陈公博担任军委会政治训练部主任，在<br>廖仲恺遇刺后，接任国民党中央农民部长。陈公博一直是国民党左派的支持者，在各次党<br>内斗争中，均站在汪精卫的一边。</p><p>汪精卫的政治信条是基于民主思想的“均权”与“共治”，这与蒋介石的政治信条“专权<br>”与“独裁”是根本对立的。虽然汪精卫公开发表谈话时说：他只是同情改组同志会，并<br>不是改组会成员。但汪精卫对改组派有极大的影响，是改组派的“精神领袖”。改组派以<br>国民党内的知识分子和青年学生为主，他们要求在国民党内实行民主，在国民党内引起了<br>很大反响，一时间其组织发展很快，在全国各地和香港，以及日本、法国、新加坡、越南<br>等地都建立了分会，全盛时期成员曾多达万余人。改组派在蒋派的南京国民党区内也有相<br>当的力量，凡南京国民党有组织的地方，几乎都有改组派的组织。</p><p>在“三大”开幕前夕的３月１１日，陈公博、顾盂余、何香凝、王乐平等第二届中央执监<br>委员十三人，联名发表《关于最近党务之宣言》。《宣言》指出：“北伐胜利以后，党中<br>腐化分子及投机分子却违反民众要求，至人民之权利，则一无所获。而万民所望之党的‘<br>三大’，其代表选举法及代表产生法，将近百分之八十之代表，为中央所圈定与指派，将<br>本党民主制度之精神，蹂躏殆尽。本党曾反对段棋瑞之善后会议，以其为少数军阀政客所<br>操纵。今本党最高权力机关代表之产生，亦与类似。按照此种办法，则所谓代表者，己完<br>全丧失其意义。同人等对此违法之代表产生法，虽屡次提出异议，而主持中央者，竟充耳<br>勿闻。为此，对此种之会誓不承认。”</p><p>改组派的这篇檄文，在国民党中掀起了大澜，不少反对或不满蒋介石的大会代表也提出辞<br>呈表示抗议。３月１４日，中央大学学生、国民党员吴健带动一批党员到南京市党部请愿<br>，要求召开全市党员代表大会，讨论出席“三大”代表的问题，人们高呼：“反对蒋委员<br>长阴谋篡党夺权！”，“坚决反对蒋委员长包办操纵大会代表！”。南京市党部被迫同意<br>在夫子庙大礼堂召开全市党员代表大会，大会由吴健主持，全市十个区党部的代表都参加<br>了会议，在会议通过《反对非法的第三次全国代表大会案》后，忽然一群暴徒冲向主席台<br>殴打吴健和其他主持人，紧接著大批军警赶来冲进会场，大打出手，打伤多人，并当场逮<br>捕代表七人。这就是轰动一时的“三一四”事件。</p><p>“三一四”事件后，改组派的南京分会被暴徒捣毁，改组派在南京已无法立足，于是他们<br>转移到上海，以法租界为基地，建立起“中国国民党各省市党部、海外总支部联合办事处<br>”，继续进行反对蒋介石独裁专制的斗争。</p><p>国民党内反对蒋介石的除了改组派等文人团体外，还有很多军人将领。北伐胜利时，国民<br>革命军共有８４个军，２２０多万人，这还不包括张学良的数十万东北军。如此庞大的军<br>队，给国家造成了沉重的财政负担，对中国近代化构成严重的影响。当时中国的年度财政<br>收入约４亿５千万元，除去１亿元用于偿还各种外债以外，实际可以动用的财政约３亿５<br>千万元，其中３亿元为军事费用，占政府支出的８０以上。所以蒋介石在北伐胜利后提出<br>裁军，本来是有充足理由的。</p><p>但蒋介石的裁军计划，却引起了很多国民军将领的强烈抵制，因为蒋介石要搞的裁军只裁<br>旁系部队，却不裁他的直系部队。北伐时国民革命军有四个集团军，除了第一集团军是蒋<br>介石的嫡系部队以外，第二集团军是冯玉祥的西北军，第三集团军是阎锡山的晋军，第四<br>集团军是李宗仁、白崇禧为首的桂系部队。此外张学良的东北军，张发奎的粤军，唐生智<br>的川军，以及一些地方上的杂牌军，都是非嫡系的旁系部队。这些旁系部队并非绝对服从<br>于蒋介石，对于蒋介石的军事独裁显然是一种潜在的威胁，于是蒋介石想通过裁军来除掉<br>不听从他命令的旁系军队。</p><p>蒋介石这个带有私心的裁军方案，当然引起各路旁系部队将领的强烈反对，蒋介石首先拿<br>对他威胁最大的李宗仁桂系部队开刀，结果李宗仁害怕蒋介石暗算，于１９２９年２月私<br>自潜出南京，脱离南京政府重返广西。在蒋介石召开“三大”之前，白崇禧又宣布辞职抵<br>制蒋介石包办“三大”，拉开了桂系和蒋介石直接对抗的序幕。</p><p>在一片反对和抗议声中，１９２９年３月１５日，蒋介石在南京主持召开了国民党第三次<br>全国代表大会。在这次蒋介石包办的大会上，通过了很多处分反对蒋介石之人的决议案。<br>蒋介石在主席团报告中说：“今日讨伐叛徒，以国家论，是为讨伐叛将；以党论，即为讨<br>伐反革命分子。此等叛党分子，应由大会开除其党籍。”结果大会通过李宗仁、白崇禧等<br>人的“叛党乱国罪”，永远开除党籍，改组派领袖陈公博永远开除党籍，顾孟余开除党籍<br>三年。对汪精卫则予以书面警告的处分，处分汪精卫的理由是“迹近纵袒弄兵，酿成广州<br>共变”。</p><p>在“三大”结束后，蒋介石于１９２９年４月开始讨伐桂军，分兵三路进攻广西，与桂军<br>经过几次激战，结果桂系军大败，６月桂军将领李宗仁、白崇禧逃往香港，第一次蒋桂战<br>争结束。虽然蒋介石在蒋桂战争中取得了军事胜利，但在政治上却进一步陷入众矢之的。<br>１９２９年５月，以改组派为核心、联合其他国民党的反蒋派别，在上海成立了“中国国<br>民党护党革命大同盟”，唐生智、张发奎、李宗仁等地方实力派代表参加，阎锡山、冯玉<br>祥也与之建立联系。</p><p>“中国国民党护党革命大同盟”发表宣言，呼吁恢复党权，“铲除叛徒蒋中正的一切势力<br>”，“打倒盗窃党权政权的蒋介石”。宣言中还特别声明不承认蒋介石包办的“三大”，<br>声称南京政府的一切命令与外交等皆无效力。“中国国民党护党革命大同盟”尊远在法国<br>的汪精卫为领袖，号召“迎吾党领袖汪主席归国护党”，组织护党政府和护党革命军，直<br>捣南京政府，肃清反动势力。</p><p>１９２９年９月１７日，张发奎在湖北打出“护党救国军”的大旗，发表《拥汪讨蒋宣言<br>》，电请汪精卫回国：“主席回国方可对国内军事发挥号召力，对官兵之影响尤为重大。<br>即使返国不能深入军中，亦可居香港以指导军事，策励士气。”在这种情况下，汪精卫决<br>定回国抗蒋。临行前他与陈公博等人联名发表一篇《中国国民党第二届中央执监委员会最<br>近对时局宣言》，历数蒋介石的十大罪状：“习于专制，私利是图，首内启本党之纠纷，<br>复外援帝国主义及国内反动派以自固；啸聚群小，把持政权，摧残民众，排除异己……”<br>。汪精卫在这篇《宣言》提出五项主张：改组国民政府，筹备召开真正的“三大”，否认<br>蒋介石包办的“三大”以及会上通过的一切决议案，否认蒋介石出卖国家经济权利的一切<br>秘密文件。汪精卫说反蒋运动是“一常厚主势力与封建势力的大决战，广大党员应奉献自<br>身于民主势力，将血作水，以溉民主势力之根，将身作肥料，以沃民主势力之果。”</p><p>当时中国除了政界、军界掀起强大的反蒋运动外，在学术界也引发了民主与独裁之争。胡<br>适在１９２９年蒋介石发表训政的“约法之治”后，发表了著名的“人权与约法”的文章<br>，指出国民党政府作为中国民众的代言人，进行独裁的“约法之治”，违反了人民的基本<br>人权。胡适主张首先建立保障人权的宪法，开放“党禁”，实施多党政治，建立一个“以<br>法治国”的人民参政国家，而不是“以党治国”的一党独裁体制。</p><p>胡适这样的批评并不局限于蒋介石，还牵扯到了孙中山，在学术界与钱端升等专制拥护派<br>学者进行了激烈的笔战。但胡适提倡的人权思想并没有在国民党政界引起共鸣，国民党内<br>的民主派汪精卫等人虽然主张实行党内民主，但并不主张立即放弃国民党一党专政而搞西<br>方式的多政党体制。胡适的民主思想实在走得太远了。</p><p>１９２９年１０上旬，汪精卫来到香港，使改组派和“护党救国军”的精神大振。然而汪<br>精卫曾经在１９２７年带头反对过桂系李宗仁、白崇禧等人的“特委会”，所以双方有很<br>大的隔阂，但这次为了反蒋的共同目的，双方重新言归于好。汪精卫回国后，以“中国国<br>民党第二届中央执监委员联席会议”的名义发布命令，对各路“护党救国军”发出委任状<br>和番号。其中第一、二路的番号留给阎锡山和冯玉祥，张发奎、唐生智、石友三、胡宗锋<br>、何键、李宗仁，分别委以第三、四、五、六、七、八路军总司令。他一人统领六路反蒋<br>大军，一时声势极盛。</p><p>但这只七拼八凑的队伍内部矛盾错综复杂，指挥不灵，步调不一。不到半年，汪精卫的六<br>路反蒋大军很快被蒋介石各个击破或收买瓦解。虽然汪精卫的南方反蒋军队失败，但北方<br>冯玉祥和阎锡山的反蒋军队，并非汪精卫的六路反蒋军那样的乌合之众，而具有相当的战<br>斗力。１９３０年初，阎锡山联合冯玉祥和李宗仁组成反蒋联军，１９３０年４月１日，<br>阎锡山在太原宣誓就任“中华民国陆海空军总司令”，冯玉祥、李宗仁分别在潼关、桂林<br>宣誓就任“中华民国陆海空军副总司令”。三个司令部下辖七十余万军队，组成八个方面<br>军向南京围攻，浩大的“中原大战”爆发了。</p><p>“中原大战”爆发后，阎锡山电请汪精卫北上主持党务。在阎、冯等人的发起下，改组派<br>和西山会议派等反蒋各派，在北京联合成立了“中国国民党中央党部扩大会议”，汪精卫<br>被奉为“扩大会议”的领袖。本来左倾的改组派和右倾的西山会议派是势不两立的对头，<br>然而双方在遭到蒋介石的排斥打击后，深感只有团结一致，才能对抗蒋介石的军人独裁。<br>于是双方暂时摒弃前嫌，握手言和。</p><p>１９３０年８月７日，“中国国民党党部扩大会议”在北平中南海怀仁堂正式召开，汪精<br>卫、陈公博等人的改组派、谢持、邹鲁等人的西山会议派，以及阎锡山、冯玉祥等人的军<br>事实力派参加了会议。会议由汪精卫主持，颁布了《国民政府组织大纲》，宣布成立国民<br>政府，阎锡山当选政府主席。在领导分工上，汪精卫主党，阎锡山主政，阎锡山和冯玉祥<br>共同主军。</p><p>在中原大战中，蒋介石军队和阎冯联军都损失惨重，双方共有３０余万人伤亡，为中华民<br>国建国以来的首次恶战。此时决定战局的胜败就在于张学良的东北军，东北军加入哪个阵<br>营，就会使哪个阵营取得胜利的主动权。所以蒋介石和阎冯等人都在拉拢张学良，阎锡山<br>给他送来中华民国陆海空军副总司令的委任状，蒋介石也送来了同样的委任状，还同时将<br>数百万元巨款汇至沈阳，但张学良在中原大战初期一时间持袖手旁观的中立态度。</p><p>１９３０年９月，战局向有利于蒋介石军队的方向发展。９月１７日，张学良发出了拥护<br>南京中央政府的声明，派东北军入关，在十余天时间内先后接收了天津、北平和河北等地<br>，使阎、冯联军处于腹背受敌的困境，纷纷败退。１１月４日，阎锡山、冯玉祥见大势已<br>去，联名发表通电声明“即日释权归田”，长达七个月的中原大战遂告结束。</p><p>阎、冯联军败阵后，１９３１年元旦汪精卫在天津发表下野声明，并准备宣布解散改组派<br>，反蒋运动一时进入低潮。此时蒋介石不仅任国民政府主席，又开始兼任行政院长，独揽<br>国民党的党政军大权。但不久蒋介石因为软禁立法院长胡汉民，又引起了全国范围的反蒋<br>大潮。</p><p>胡汉民本是与汪精卫一起最早参加同盟会的元老，但胡在１９２５年的廖仲恺被刺案中，<br>因涉嫌而被迫出国。胡汉民回国后寓居上海“闭门读书”，不直接参与国民党的政事。１<br>９２７年４月蒋介石请胡汉民去南京，共商反共之事，胡汉民欣然同意，第一次与蒋介石<br>合作。１９２７年４月１８日蒋介石在南京另立国民政府，胡汉民出任国民政府主席，胡<br>汉民以国民党元老的身份主持南京国民党中央党部，在关键时刻帮了蒋介石的大忙，替他<br>支撑起了“另立中央”的门面，与当时武汉的汪精卫正统国民党中央相对抗。１９２７年<br>８月蒋介石下野后，胡汉民由于不愿和汪精卫合作，随之也辞职出国考察。</p><p>１９２８年９月胡汉民回国后，再次与蒋介石合作。１９２８年１０月，胡汉民帮助蒋介<br>石组成了五院制的国民政府，尊蒋介石为主席，自己当立法院长。此后胡汉民在新国民政<br>府的建设上出力颇多，对蒋介石打败阎冯的“护党救国军”也帮了大忙，在这段时间胡汉<br>民和蒋介石的合作比较密切。然而蒋介石取得中原大战的胜利后，越来越不尊重胡汉民这<br>位“老前辈”，蒋胡之间的矛盾日益尖锐，胡汉民常对人说：“我在中央不过是一个开会<br>机器罢了。”</p><p>蒋介石在中原大战胜利后，又设想招开国民会议，制定训政时期的“约法”，选举总统，<br>用法律程序确立自己作为国民党领袖的地位和独裁权力。此时胡汉民也开始反对蒋介石的<br>独裁，坚决反对蒋介石搞集党政军大权于一身的总统制，也不同意制定“约法”，从而发<br>生蒋胡的“约法之争”。１９３１年２月２８日，蒋介石以宴请议事为名，将胡汉民骗到<br>总司令部，逼胡辞去立法院长职务。次日胡汉民提出辞呈，将党部、政府职务全部辞去，<br>被宪兵押送南京郊外汤山温泉别墅软禁。</p><p>胡汉民被扣压一事，在国民党朝野引起了轩然大波。１９３１年３月１４日，汪精卫在香<br>港发表了《为胡汉民被囚重要宣言》，斥责蒋介石“一面摆酒请客，一面拔枪捉人，以国<br>民政府主席而出于强盗绑票之行径，较之青霜剑之狗官，有过之而无不及。”１９３１年<br>４月３０日，国民党中央四位监察委员古应芬、林森等人，发表了《弹劾蒋中正提案》的<br>通电，指责蒋介石排除异己，制造独裁，要求对蒋进行撤职查办。５月３日，两广将领陈<br>济棠、李宗仁、白崇禧等数十人联名发表通电，拥护“四监委”弹劾案，要求释放胡汉民<br>，蒋介石下野。</p><p>１９３１年５月２７日，两广地方实力派陈济棠、李宗仁等人，效法孙中山当年在广州召<br>开非常国会，成立了“中国国民党中央执监委员非常会议”，打出“打倒独裁”“护党救<br>国”的旗号，提出凡国民党第一、二、三届中央执监委员赞成反蒋者（共产党员除外），<br>均自然成为非常会议的委员。陈济棠、李宗仁等人邀在香港的汪精卫出任领袖，在汪精卫<br>的主持下，于５月２８日成立了广州国民政府，否认南京国民政府的合法性。</p><p>本来胡汉民和汪精卫在孙中山逝世后就长期不和，宁沪汉合流期间，汪精卫到上海胡汉民<br>府上登门求见，胡汉民竟拒之门外。然而这次在反蒋的共同目标下，两人又重新合作。汪<br>精卫对人说：“过去我和胡先生的不和，都是上了蒋介石的当。蒋之所以能专横跋扈，就<br>是因为我们不能团结。这回反蒋，一定要合作到底。即使万一失败了去跳海，也要大家抱<br>在一起去跳。”</p><p>这次在广州成立的国民政府，是一个反蒋势力的大联合，除了以前参加反蒋的改组派和西<br>山会议派外，又新添了胡汉民派，后来南京的林森和孙科也前来参加反蒋队伍。但派别越<br>多，派系之间的矛盾也越大，使汪精卫经常处于左右为难的境地。１９３１年９月初，广<br>州政府派军北上讨蒋，宁粤战争爆发。正在此时，９月１８日在东北的日本关东军发动了<br>“九一八”事变，完全改变了中国历史的进程。</p><p>对１９２７年到１９３１年这一段国民党人反对蒋介石独裁斗争的历史，国共两党的历史<br>书都有所曲解。由于台湾国府是蒋介石政府的班底，台湾的历史书把１９２７年到１９３<br>１年的反蒋斗争，曲绘为蒋介石消灭“新军阀”的派系斗争；大陆共产党的历史书，也把<br>这一段反蒋斗争描绘为国民党内部“狗咬狗”的权力斗争，这些都人为地歪曲了当时国民<br>党人反对蒋介石军人独裁的斗争。尽管这场反蒋斗争中可能包含有一些权力斗争的因素，<br>但后来国民党内几乎所有非蒋介石嫡系的政治派别和军队，都站到了反蒋的一边，说明蒋<br>介石的独裁在国民党内是非常不得人心的。这场反对蒋介石独裁的政治运动和军事行动，<br>从历史的眼光来看，应该属于正义和进步的。</p><p>如果没有日本发动的侵华战争，蒋介石的军事政权在广大国民党人的反对下，也未必能维<br>持很久。如果历史真是这样的话，蒋介石不但当不成民族英雄，反而要成为袁世凯那样搞<br>复辟倒退的民族败类。所以不但共产党感谢日本侵略的“帮忙”，蒋介石也感谢日本侵略<br>的“帮忙”，帮他从专横的独裁者走上了民族英雄的宝座。</p><p>第三部分：《和平运动曲线救国》</p><p>第三部分之一：从主战派到主和派的转变</p><p>蒋介石在中原大战胜利后，独裁的倾向越发明显化，以前支持他的国民党元老胡汉民等人<br>也转而加入了反蒋的战线。１９３１年２月蒋介石将胡汉民软禁，在国民党朝野引起了轩<br>然大波，又引发了另一次反蒋高潮。１９３１年５月，改组派、西山会议派、胡汉民派、<br>林森和孙科派、以及两广地方实力派陈济棠、李宗仁，在广州成立了“中国国民党中央执<br>监委员非常会议”，打出“打倒独裁”“护党救国”的旗号，在香港的汪精卫应邀出任广<br>州“非常会议”政府的领袖。１９３１年９月初，广州政府派军北上讨蒋，宁粤战争爆发<br>。正在此时，９月１８日在东北爆发了“九一八”事变。</p><p>１９２７年国民革命军进行北伐时，发生了武力强行收回英国租借和打杀外国人的南京事<br>件。在这种情况下，日本政府于１９２７年６月２７日到７月７日，召开了“东方会议”<br>，讨论对中国的对策。所谓“东方会议”，就是关于中国问题的会议，这里“东方”就是<br>指中国。虽然中国在地理上位于日本的西方，但日本却把中国称为东方，而自己称为西方<br>，这看上去似乎有些矛盾，其实与当时日本人的脱亚入欧思想有关。当时日本人说：“日<br>本在地理上属于东方，但在政治上属于西方；日本人外表上看是属于东方人，而在内心的<br>精神上却是属于西方人”。所以日本政府把关于中国问题的会议称为“东方会议”。</p><p>在东方会议上，执政党政友会的强硬派代表森格和关东军的强硬派，提出了满蒙分离，武<br>力解决满洲的主权问题。但田中义一首相和外交部强烈反对，认为这样明显地违反了九国<br>条约，对中国进行露骨的侵略，势必在国际上引来巨大的麻烦（九国条约是１９２２年日<br>本和英美法列强与中国签订的条约。条约规定九国共同保证中国的领土完整，但也要求中<br>国承认和保证现有的外国租界及特权）。在会上双方争执不下，最后达成协议：万一中国<br>的内战波及到满洲，危及日本在满洲的特殊利益时，日本将采取“自卫的措施”。</p><p>现在有一种说法：在召开“东方会议”时田中首相曾向日本天皇上奏说：“欲征服中国，<br>必先征服满蒙……”，这就是所谓的“田中奏折”。但现在已经证明，这份田中奏折是伪<br>造的，二战后盟军收缴了日本的全部档案，既没有发现田中奏折，也没有发现与田中奏折<br>有关的资料。现在有证据显示苏联的情报机关伪造了田中奏折，欲挑起中日战争，因为苏<br>联最愿意看到中国和日本这两个邻国相互火并。尽管日本的军政界高层在“东方会议”上<br>商讨过满蒙分离问题，但并没有制定一个征服满蒙的计划，也没有制定征服中国的计划。</p><p>东方会议以后，一些日本少壮派军人不满日本政府的优柔寡断政策，希望挑起事端，找借<br>口武力解决满蒙问题。１９２８年张作霖战败后，以关东军参谋河本大作为主谋，策划了<br>铁路爆炸事件，炸死了当时的东北军阀张作霖。河本大作本想张作霖一死会引起东北的内<br>乱，关东军可以用东北内乱为借口出兵满洲。但张作霖死后长子张学良平安接班，关东军<br>并没有找到出兵的借口。后来日本军部以河本大作违纪私自挑发事端为由，将河本解除了<br>军职。</p><p>不过河本大作却说：他很爱中国，也很爱中国人。他所痛恨的是中国那些欺压民众的军阀<br>土匪，他只与中国的军阀土匪为敌，从来不与中国人民为敌。河本还说他最大的愿望就是<br>死后化为中国之土。河本大作出身于日本贵族家庭，解职退伍后在满洲铁路公司作理事，<br>河本在大连郊外修建的高级住宅现在还被用作高级宾馆。日本战败后，河本大作并没有回<br>国，而是到山西的阎锡山那里作高级顾问。</p><p>１９４８年到１９４９年解放军攻打太原的太原战役中，河本大作作为老兵又重新拿起了<br>枪，参加了阎锡山的太原保卫战。阎锡山出逃太原时，曾经邀请河本一起走，却被河本拒<br>绝。太原战役中共有１１００余名原日本兵参战，战死７００余人，４００余人被俘。河<br>本大作被俘后，被关在太原战犯管理所。中共知道他曾经是策划张作霖爆炸事件的主谋，<br>希望他写一些回忆资料，但被河本拒绝了。１９５３年８月河本在太原战犯管理所病死，<br>尸体埋在太原城外的无名坟地，实现了他死后化为中国之土的念愿。</p><p>张作霖原来是东北的土匪，在奉天附近的新民屯抢夺富豪赵氏的女儿为妻，１９０１年生<br>下了长男张学良。后来张作霖率部归顺了清政府，在日俄战争中因为帮助日本军队得到了<br>日本人的赏识，和当时的作战部主任田中义一成为好友。田中义一当首相后不久张作霖就<br>被日本人谋杀，田中也颇为伤心，特地给张学良打电报安慰。</p><p>张学良却是一个放荡公子，张学良接班后，生活更是放荡。在张学良掌权的３年期间里，<br>对政事并不专心，每日沉溺于酒色之中。张学良尤其好色，和父亲张作霖有妻妾６人不同<br>，张学良对女色采取“用完就扔”的方法。张学良的近侧们投其所好，争相进献美女来讨<br>好张学良，朱铁生将自己的姐姐和妹妹献上，晋升为张学良的副官；朱光沐将自己的女儿<br>献上，当上了总务长；沈熊毅提供自己的妻子，当上财务局长；奉天省长翟文选的妹妹被<br>张学良强奸，翟文选敢怒而不敢言，只好出家作了和尚。</p><p>张学良曾说：“自古英雄爱美人，不爱美人不英雄。我虽不是英雄，但在爱美人方面和英<br>雄一样”。１９２８年底张学良易帜后，经常走访南京。张学良走访南京的目的不是和蒋<br>介石商谈政事，而是爱上了当时外交部长王正廷的妹妹，最后王正廷只好将妹妹进呈。张<br>学良最荒唐的事是将当时的电影明星胡蝶诱拐到北京，电影公司向张学良提出抗议，结果<br>张学良干脆出１０万元将胡蝶买了下来，可谓骄横之极。张学良因“九一八”事变后退避<br>不战而被迫辞职出国时，首先做的事却是向他的诸位爱妾一一告别，被当时的报纸责骂为<br>“娇妾重于国土”。</p><p>张学良如此挥金如土的生活，当然经常感到钱不够用，除了加收各种苛税外，还通过其它<br>渠道搞钱，特别糟糕的是盗卖故宫的珍宝。张学良掌管北京期间，从故宫搬出数百箱珍宝<br>运到上海拍卖，其中有一些极为珍贵的文物流失海外，比如英国图书馆以１２万英镑购入<br>了“王右军快雪时晴图”，美国石油大王洛克菲勒以６５万美元购入了“唐寅踏雪寻楼图<br>”。</p><p>谁是故宫宝物的所有者呢？从法律上讲故宫中的一切财物均为末代皇帝溥仪私人所有，这<br>是中华民国政府正式签订的清帝退位条约中所规定的。然而中国人并不重视法律条文，不<br>知什么时候故宫中属于清帝的私人珍宝已变成国家所有，却忘记了在法律上废除承认清帝<br>财产权的优待条约。</p><p>１９３０年张学良在中原大战中加入蒋介石一侧，出兵占领了北京天津等华北地区。但也<br>正是因为张学良把东北军的主力部队都开进了关内，使关外兵力空虚，日本关东军才有机<br>可乘发动“九一八”事变，并在一个月内占领东北全境。张学良的关东军没有进行任何抵<br>抗，就将整个东北让给了日本。虽然一些资料说张学良不抵抗是执行蒋介石的命令，但这<br>并不符合当时的情况。当时张学良的东北军并没有必要无条件地执行蒋介石的命令，而且<br>张学良本人也从来没有执行蒋介石命令的先例。如果张学良决心向日军开战的话，蒋介石<br>根本不可能阻止。蒋介石下野后，汪精卫曾代表国民党中央多次下令张学良对日出兵，收<br>复东北失地，张学良均拒不执行。可见张学良的不抵抗只不过是为了保存实力，而并不是<br>为了执行国民党中央的命令。</p><p>不过“九一八”事变并不是日本政府策划的，而是日本关东军的少壮派将校独自策划的。<br>少壮派将校们策划“九一八”事变的原因很多，其中一个原因就是日本政界高层的受贿。<br>因为当时中国政界行贿成风，中国军政要人也经常向外国政界要人行贿，来换取对自己的<br>支持。一些日军少壮派将校怀疑日本政府的高层被中国行贿收买，才不愿对中国采用强硬<br>政策，因此私自策划了“九一八”事变。“九一八”事变后，关东军从张学良的保险柜中<br>搜出５３张日本政界要人的收款单，最巨额的是政友会主要干部床次竹二郎５０万元。日<br>本政界要人的腐败受贿丑闻引起了日本国民的极大反感，军人们乘势发起打倒腐败政党政<br>治的军人夺权运动。当时日本社会舆论普遍倾向于军人，声称“宁要清廉的军人，不要腐<br>败的政治家”，这是日本走向军国主义的开始。</p><p>关东军侵占东北后，激起了全国人民，特别是热血青年学生们的激忿。学生们对蒋介石政<br>府的不抵抗政策非常愤怒，自９月下旬起，上海、北平、天津、广州等地的学生举行大规<br>模的示威活动，抗议日军入侵和政府的对日不抵抗。当时学生们认为外交部长王正廷是不<br>抵抗方针的责任者，南京中央大学的学生冲入外交部将王正廷殴打至重伤，王正廷被迫辞<br>职。１２月初，各地学生来到南京请愿，抗议蒋介石政府的畏缩政策，指责蒋介石患有“<br>恐日病”，要求蒋介石亲自率领中央军北上抗日。１２月５日，政府派军警逮捕学生１８<br>５人，即所谓“一二五”事件。为抗议政府的暴行，１２月１４日，各地学生再次进京，<br>打砸外交部，殴打了出来讲话的蔡元培等人。１７日，一万多学生包围国民党中央党部，<br>捣毁《中央日报》报社，受到了军警武力镇压，在珍珠桥附近打死、打伤学生３０余人，<br>逮捕数百人，制造了“珍珠桥事件”。</p><p>当时汪精卫领导的广州政府反对专制独裁，主张民主政治和主张积极抗日，于是学生们把<br>汪精卫奉为他们的政治领袖。前往南京游行的学生们，欢迎汪精卫到南京主持党国大计，<br>他们打出的口号为：“欢迎护党救国的汪先生”、“欢迎主张实现民主政治的汪先生”、<br>“欢迎反对不抵抗主义的汪先生”。汪精卫则一方面批评蒋介石动用武力镇压学生，另一<br>方面发表了他的政治主张。汪精卫在接见学生代表团谈话时说：“应付目前局势的方法，<br>兄弟认为有八个字，就是一面抵抗，一面交涉。军事上要抵抗，外交上要交涉，不失领土<br>，不丧主权。最低限度之下不退让，最低限度上不唱高调，这便是我们共赴国难的方法”<br>。</p><p>“九一八”事变，也使国民党内部燃起了停止内斗，一致对外的呼声。在这种情况下，蒋<br>介石迫于形势，将软禁的胡汉民释放，并派蔡元培、张继携带他写给汪精卫的亲笔信赴广<br>州议和。蒋介石在信中说：“弟当国三年，过去是非曲直，愿一人承之。惟愿诸同志以党<br>国危亡在即，各自反省，相见以诚，勿使外间以为中山党徒只顾内争，不恤国难。”蒋介<br>石邀请汪精卫代表广州政府到上海举行和平会谈。</p><p>１９２７年１０月２２日，汪精卫、蒋介石和胡汉民这国民党“三巨头”，在上海举行了<br>首次会谈，提出南京和广州两政府合并，团结一致，共赴国难。胡汉民提出两政府联合的<br>前提是蒋介石下野，所谓“讨蒋第一，抗日第二”，但汪精卫则表示要“团结宽容”，在<br>削减蒋介石权力的情况下，留蒋执政，所谓“抗日第一，讨蒋第二”。和平会议最后决定<br>宁粤双方在南京、广州分别召开国民党第四次代表大会，选出各自的中央委员后，在南京<br>召开四届一中全会，重组国民政府，广州政府随即取消。</p><p>１９２７年１１月１２日，南京政府的“四大”，召开，蒋介石在会上表示“虔诚悔过”<br>，通过了恢复汪精卫、陈公博等４８１人党籍的议案。广州政府的“四大”则于１１月１<br>８日在广州召开，由于各派争吵不休，汪精卫的改组派和西山会议派代表二百余人赴上海<br>，另外在上海召开了“四大”。１２月２２日，三个“四大”选出的中央委员在南京召开<br>四届一全会，此时蒋介石由于镇压学生的“珍珠桥事件”受到各方的强烈反对，被迫再次<br>宣布下野。</p><p>这次组成的国民政府主要由广州政府的人马组成，蒋介石派在政府中居于明显劣势。不过<br>为了搞好团结，汪精卫和胡汉民也没有在政府中担任职务。四届一中全会选举林森为国府<br>主席，但不负实际责任，由孙科任行政院院长，负责政府的实际领导，陆海空军总司令则<br>暂缺。蒋介石虽然下野，却有一只忠于他的私家军，没有蒋介石的命令，别人根本指挥不<br>动这只军队。所以蒋介石虽然在政界失势，但仍然是最有实力的实权者。</p><p>孙科为首的新政府为了争取民心，一反蒋介石的对日妥协“不抵抗”政策，开始对日本采<br>取强硬的态度。正好１９３１年１２月２８日日军向在锦州的张学良东北军发起进攻，新<br>国民政府下令张学良死守锦州。张学良称自己的兵力武器不足，请求中央政府予以增援。<br>孙科召集诸将领讨论对张进行增援，可是没有一个将军表示愿意去东北增援张学良军。在<br>此情况下，东北军不战而撤出锦州，全军退入山海关以内，试图保住他们在北平附近的最<br>后一块地盘。张学良在解释东北军为什么不执行中央政府死守锦州的命令时，批评中央政<br>府说：中央口头上要求东北军死守，实际上却不给予任何支援，想让东北军在抗日中耗尽<br>自己的实力。</p><p>这时孙科政府体会到“口头上抗日简单，实际上抗日行动难”的滋味。就在此时，又爆发<br>了让孙科难于应付的上海事变。１９３２年１月１８日，上海租界的５名日本僧侣忽然被<br>一群中国人围打，其中一人被打死，二人重伤。但二战后的调查发现，该事件原来是关东<br>军的高级军官委托日本上海总领事馆的武官，雇佣中国无赖所干。中国人打死日本僧侣一<br>事，在日本社会引起了巨大骚动。１月２０日，在上海居住的日本人近千人，到日本总领<br>事馆和海军陆战队总部门前示威游行，强烈要求日本政府立即出兵保护他们，在示威途中<br>这些日本人还捣砸了一些贴有反日标语的中国人商店。在此情况下，日方向国民政府提出<br>了类似于最后通牒的“限期要求”，要求中国政府道歉、赔偿、惩罚作案者和取缔解散上<br>海的民间反日团体。</p><p>由于孙科政府犹豫不决拿不出对策，日方则以中国没有接受“限期要求”为由，于１９３<br>２年１月２８日派兵强行进入中国管区，和驻守上海闸北地区的蔡廷锴十九路军发生了激<br>战。由于十九路军的顽强抵抗，给日军造成了重大伤亡。上海事变的战斗打响后，孙科自<br>感无力处理如此重大事件，请求汪精卫出马，自己于１月２５日辞职。新国民政府于１月<br>２８日成立，由汪精卫出任行政院长，负责领导政府。</p><p>在抗战初期，汪精卫是持主战态度的，可以划入主战派。汪精卫上台后，立即宣布迁都洛<br>阳，积极抗战，并称中国政府“决非威武所能屈，决不以尺土寸地授人”，１９３２年２<br>月１日，汪精卫主持召开了最高军事会议，决定把全国划分四个防区和一个预备区，摆出<br>了进行积极抵抗的姿态。２月８日，汪精卫代表国民党中央慰勉上海十九路军将士“忠义<br>之气，照耀天日”，犒劳十九路军５万元。</p><p>汪精卫同时下令其它部队增援上海的十九路军，但汪精卫指挥不动蒋介石的部队，蒋介石<br>私下指示他的嫡系部队不支持十九路军抗战，使十九路军的抗战陷于孤掌难鸣的困境。汪<br>精卫又下令在北平的张学良在北方起兵，牵制日军，并派陈公博到北平说服张学良起兵。<br>但张学良根本没有出兵的意思，只是以上宾招待陈公博等人，一谈到出兵之事就支吾过去<br>。３月６日，十九路军在孤掌难鸣的情况下全线撤退，发表停战布告，至此第一次上海事<br>变宣告结束。</p><p>想进行抗战的人没有军队，而有军队的人却避而不战。各路军队保存自己实力第一，抗战<br>第二的私心使汪精卫的抗战热情完全消散了，产生了只有用“和平”的方法才能挽救中国<br>的想法。汪精卫看到没有蒋介石出面国民政府就无法统领军队的窘境，只好提出让蒋介石<br>复出领导军事。１９３２年３月６日，蒋介石复出任军事委员会委员长，此后的国民政府<br>由汪精卫主政，蒋介石主军。由于上海为各国列强的利益所在，在列强们的调停下，中日<br>开始进行和平谈判，汪精卫派外交次长郭泰棋和日本谈判，双方于５月５日达成《淞沪停<br>战协定》。但停战协议的消息传出后，却在中国的民众中间引起了愤怒，上海的愤怒民众<br>把郭泰棋责骂为卖国贼并将其打伤。</p><p>１９３２年６月，汪精卫率领行政院副院长宋子文、外交部长罗文干等去北平会见国联调<br>查团团长李顿，共同调查日军占领东北三省问题。汪精卫在北平时找当时任北平绥靖公署<br>主任的张学良商谈东北问题和对日方针，张学良却一直称病不见，但又和宋子文一起去北<br>海游船，使汪精卫深感气愤。７月１７日，日军在热河发起了新的军事进攻，汪精卫以行<br>政院长的名义发表通电，命令张学良立即出兵热河，收复失地。张学良却声称汪精卫无权<br>过问军事，出兵要有军事委员长蒋介石的命令。蒋介石念及张学良过去帮他打赢中原大战<br>，也有意偏袒张学良的不抵抗行动。在此情况下，汪精卫只好宣布辞职，前往欧洲养病。<br>汪精卫在临行时电告张学良，指责他“去岁放弃沈阳，再失锦州，致三千万人民，数千里<br>土地陷于敌手，敌气益骄，延及淞沪。今未闻出一兵，放一矢，却不断向中央索要军款，<br>乃欲藉抵抗之名，以事聚敛。”汪精卫最后要求张学良“惟有引咎辞职，以谢四万万国人<br>，毋使热河平津，为东北锦州之续”。</p><p>汪精卫出国后，日军于１９３３年１月进攻山海关，２月中旬又占领承德。热河省的大片<br>领土再次沦陷，震动了全国，国民党内部再次出现请汪精卫归国主持抗战的呼声。汪精卫<br>则提出条件说：他回国主政的前提必须是张学良辞职，以平民愤。此时蒋介石也无法袒护<br>张学良，３月９日蒋介石和张学良在保定会晤，蒋介石说服张学良辞职出国考察。３月１<br>０日，张学良发表通电辞职，汪精卫则于３月底回南京复职。</p><p>汪精卫在复职后一方面批评张学良的避战不抵抗，另一方面又解释他的“一面抵抗，一面<br>交涉”政策。汪精卫说：“榆关以一日而失，热河以七日而陷，实不成话。像张学良这些<br>东北军畏敌如虎，敌必日益骄横。今后军队再不抵抗势必影响对日外交。须知先有抵抗然<br>后有交涉。今后抵抗愈得力，则交涉愈有希望。”</p><p>但是这次汪精卫复职后，改变了他以前的主战态度，变成了主和派。此后汪精卫开始和日<br>本进行和平交涉，蒋介石也积极支持汪精卫的和平计划。１９３３年５月３１日熊斌代表<br>何应钦与日军代表冈村宁次在天津塘沽举行会谈，共同签订了《塘沽协定》。这个协定承<br>认冀东为非军事区，准许日军在该地区视察，实际上是默认了日本对东北三省和热河的占<br>领。</p><p>《塘沽协定》公布后，社会舆论一片沸腾，强烈抨击蒋、汪批准的这一丧权辱国的协定。<br>当时的一份报纸这样写到：“如果要说那些以大刀、石头及血肉之躯英勇与日寇拼死的抗<br>日官兵值得后人永世颂扬的话，那么南京政府，尤其是蒋、汪二人，实为出卖中国领土主<br>权、出卖流血牺牲的爱国官兵、出卖爱国民众的千古罪人。”上海的市民团体还联合发出<br>通电：“我全国民众，誓死抗日，而汪精卫誓死媚日，竟至敢冒不韪，继《上海停战协定<br>》之后又签订卖国之《塘沽协定》，即加以卖国之名，岂得为过。”</p><p>面对全国一片讨骂汪精卫的气氛，陈公博找汪精卫说：“签了这个协定，先生遭到各界纷<br>纷批评，我真不知道汪先生为什么要背这个黑锅？”汪精卫说：“我们要复兴中国起码要<br>三十年，不止我这年纪看不见，恐怕连你也看不见。我已年过半百，无其他报国之道，只<br>要中国不再损失主权与领土，就可告慰平生了。”陈公博听后感动地说：“历代王朝危急<br>之秋总有人站出来背黑锅的。其实南宋秦桧也是一个大好人，他看南宋已无力与金抗战，<br>就挺身而出与金讲和。我想秦桧是一名状元出身的有学问的宰相，决不是傻爪。他当初何<br>尝没有想过以后要被世人唾骂？但他还是以牺牲自己来换取南宋日后的中兴。李鸿章、袁<br>世凯也都想复兴国家，都不想卖国。可是李鸿章死了，袁世凯也死了，中国还是不振，到<br>今日国难愈加沉重。”陈公博继续说：“现在有人说《上海停战协定》、《塘沽协定》是<br>卖国，我看与其说是卖国，还不如说是送国。卖国的人还有代价可得，送国却是没有代价<br>的。今日要送国的人大有人在，又何必要汪先生去送呢？”汪精卫听后说：“别人去送国<br>还不如我汪某去送。别人送国是没有限度的，而我送国则有限度，不能让他们把国都送完<br>。”陈公博又说：“不过我对于先生这种无代价的牺牲总觉得不值得。”汪精卫则说：“<br>说到牺牲，都是无代价的，有代价便不算牺牲，我已五十出头了，我决意当牺牲品。”这<br>番谈话后，陈公博下定决心跟汪精卫一起“牺牲救国”，这为两人后来共同与日本合作打<br>下了思想基础。</p><p>不久汪精卫遇刺，被一名抗日军人连发三枪至重伤。此后汪精卫不得不再次告别政坛，前<br>往欧洲疗养。</p><p>在１９３１年“九一八”事变时，蒋介石和张学良是主和避战的“主和派”，汪精卫则是<br>主张抗战的“主战派”，抗战初期积极抵抗的十九路军也是亲汪精卫的粤系部队，这和１<br>９３７年芦沟桥事变时的情况正好相反。由于掌握军队实权的蒋介石和张学良等人避而不<br>战，使没有军队的汪精卫的抗战计划成为一句空话。汪精卫从“主战”到“主和”的思想<br>变化，代表了一批中国知识分子对中国被个人把持的私家军队的失望。</p><p>第三部分之二：主和派的艰难</p><p>在中国历史上，每当发生对外战争时，那些坚持对外寸步不让的主战派，总是被尊为民族<br>英雄，而那些主张对外让步和解的主和派，总是被打入民族败类的汉奸行列。尽管如此，<br>在每次发生对外战争的时候，中国从来没有出现过清一色的主战，总会出现一批主张让步<br>和解、不怕当汉奸的主和派，中日战争时也同样如此。</p><p>中国分为“主战”与“主和”两派，敌国日本也同样存在“主战”与“主和”两派。日本<br>的军部和关东军是主战派，而日本政府和外交部则是主和派。关东军发动“九一八”事变<br>时，日本政府本想阻止，但却无能为力。当时的若榇首相后来以“不听命令的军队”为题<br>，描述了“九一八”事变的经历：“９月１９日一早，我突然接到陆军大臣南次郎的电话<br>，说昨晚９点关东军遭到中国军队的进攻，关东军进行了反击，现已占领奉天城，战斗仍<br>在进行中。政府随后立即召开了临时内阁会议，确定了不扩大事态的方针。然后通过陆军<br>大臣，向在满洲的部队下达了政府不扩大事态的指示，却被关东军当作耳旁风，关东军进<br>攻嫩江时说是为了保护嫩江铁桥，我以为他们占领嫩江就会停下来。可是他们占领嫩江后<br>，又说离敌军太近不安全，还要越过东支铁路。陆军大臣下令不许越过东支铁路，可是关<br>东军已进军到齐齐哈尔，并又向黑河进军。日本军队竟然不服从日本政府的命令，真是奇<br>怪的事情。”</p><p>但关东军扶植的满洲国并没有得到任何国家的承认，当时的日本政府也没有对满洲国予以<br>承认。１９３１年１２月，若榇政府倒台后，犬养毅接任首相。犬养首相反对在满洲搞一<br>个独立的满洲国，认为这样露骨地违反九国条约势必造成日本和欧美列强的正面冲突，同<br>时还试图对军队中“下克上”的作风进行遏制。但犬养的行动激怒了军国主义分子，１９<br>３２年５月１５日，一伙狂热的军人冲入首相官邸，明目张胆地将犬养首相杀害。犬养被<br>杀后，再也没有敢于挺身而出抵抗狂热军人的政治家，日本的政府其实成为军人控制下的<br>政府。</p><p>１９３２年９月１５日，日本政府正式承认“满洲国”，但这激起了全世界各国的反对。<br>１９３２年１０月２日，国联调查团发表调查结果，否认了“满洲国”的成立理由，要求<br>一切退回到“九一八”事变以前的状况。然而国联的调查结果却在日本国内引起爱国者们<br>的一片怒骂，谴责国联对日本内政的干涉。１９３３年２月２１日，国联进行了表决，以<br>４１票对１票（１票为日本）通过了要求日本从东北撤军的决议案。然而日本的松冈代表<br>却在表决后微笑退场，宣布日本退出国联，使大会一片谔然。松冈代表回国后受到了狂热<br>日本国民的夹道欢迎，舆论界也盛赞松冈“干得好”、“有骨气”。</p><p>在１９３３年３月到５月期间，日本关东军又独断发动了长城攻势，一直打到北平附近。<br>中国军队虽然进行了一些抵抗，但却节节败退。参加这次抗战的基本上都是地方杂牌军，<br>蒋介石的中央军主力仍在南方。１９３３年５月３１日，中日双方在塘沽签订了停战协定<br>，即《塘沽协定》。《塘沽协定》规定在长城以南设置１００公里的“非武装地带”，中<br>日双方撤出在非武装地带内的驻军，非武装地带的治安由中国警察担任。塘沽协定对于中<br>国来说是一个屈辱性的协议，它意味著中国政府默认满洲国的存在，而且对华北的主权也<br>有一定程度的丧失。</p><p>汪精卫和蒋介石主持批准的《塘沽协定》，被一般民众认为是一个卖国条约，引起了社会<br>舆论的强烈批评。而汪精卫认为政府签订这个条约是正确的，汪精卫在解释为什么签订《<br>塘沽协定》时说：</p><p>以前人们批评政府不抵抗而丢失了领土，现在我们进行了抵抗，结果却丢失了更多的领土<br>。中国是一个弱国，这就决定了这场被侵略的国难绝不是偶然发生的。以现在中国的国力<br>，无论进行怎样的抵抗，都没有取得胜利的可能，这是我们最初就明白的。既然没有取胜<br>的希望，我们为什么还要抵抗呢？这就是爱国心的缘故，她让我们明知不能取胜，还要准<br>备抗战到最后一兵一将。</p><p>现在很多人当中有两种错误的想法，一种是过分软弱，认为中国绝对不能对日本进行抵抗<br>，如果和日本交战，将和过去义和团的下场一样；另一种是过分强硬，就象一个人在旷野<br>中发泄一样，“杀尽倭奴”、“打到东京”，什么狂言都敢说，还能得到人们的拍手喝采<br>。以上两种看法都是错误的。政府和日本和平交涉，有一个最低的限度。只要停战条约在<br>我们可以忍耐的最低限度以上，政府就决心签署停战条约，即使受到国民一时的唾骂，也<br>要坚决进行负责任的签字。但如果停战条约在我们可以忍耐的最低限度以下，政府就决不<br>签字。这次政府和日本签署局部地区的停战条约，是为了让疲惫的军队、穷困的人民得到<br>一时的休息，其是非利害将得到历史的评判。</p><p>《塘沽协定》虽然暂时解决了东北问题，华北问题又浮出了水面。１９２７年国民党在名<br>义上统一了中国，但蒋汪联合政府的实际控制范围只限于长江流域，华北各省仍在各路军<br>阀的控制之下。当时华北五省的实权者是：察哈尔省：宋哲元，绥远省：傅作义，河北省<br>：商震；山东省：韩复渠，山西省：阎锡山。日军占领东北以后，华北的军阀们处于进退<br>两难的境地。一方面他们害怕日军继续向华北进攻，使华北变成满洲国第二；另一方面他<br>们也不愿意邀请国民党的中央军进驻他们的地盘帮助他们共同防日，因为一旦中央军进入<br>他们的地盘，他们便失去了对该地盘的控制力。</p><p>华北的军阀们既不愿意投靠日本人，也不愿意完全投靠蒋介石，于是出现搞一个“华北自<br>治系统”的提议。日本人显然高兴看到华北搞独立，这样将使“满洲国”得到一个安全的<br>屏障。蒋汪政府虽然不愿意看到华北独立，但又怕中央军出兵华北会引发和日军的全面冲<br>突，于是也睁一只眼闭一只眼允许华北“轻度独立”。１９３３年１２月２８日“冀察政<br>务委员会”成立，委员长为二十九路军军长宋哲元。宋哲元原来是冯玉祥的部下，宋的二<br>十九军属于地方杂牌军，在武器装备、士兵素质上和南京的中央军有巨大差别。</p><p>广田弘毅出任外务大臣以后，深感日本退出国联，在世界上已陷入孤立。试图从修复中日<br>关系入手，改善日本在世界上的孤立处境。１９３５年１月２２日，广田在议会发表了对<br>中国“不威胁、不侵略”的政策，在世界上引起很大反响，蒋汪联合政府也对广田修复中<br>日关系的倡议表示响应。２月１日，蒋介石发表讲话认为广田的演说“具有诚意”；２月<br>２２日汪精卫以行政院长的名义发布禁止“抵制日货”等排日活动的政府令；１９３５年<br>５月，中日两国将外交关系由公使级上升为大使级。</p><p>现在看来，汪精卫的对日和解政策也不是没有可取之处。日本国内并不是铁板一块清一色<br>的侵略扩张派，也有主张与中国和解的主和派。但中日两国的情况一样，都是强硬的主战<br>派占据绝对上风，中日两国政府的主和政策都遭到了各自国民和社会舆论的猛烈批评。汪<br>精卫的对日和解政策引起国民党内主战派的激烈反对，国民党内反汪的呼声日渐高涨。１<br>９３５年７月，南京政府监察院对汪精卫主持的行政院提出弹劾，指责汪精卫大搞媚日外<br>交。在这种情况下，汪精卫离开南京前往青岛休养，于８月８日发电给南京政府，提出辞<br>去行政院长和兼任的外交部长职务。支持汪精卫的铁道部长顾孟余、陈公博等人也跟著辞<br>了职。</p><p>汪精卫在位时承担著“卖国”的主责，使蒋介石的压力减轻了很多，汪精卫的辞职，将使<br>蒋介石不得不陷入单独承担“卖国”责任的困境。所以蒋介石这次一反常态，表示“绝对<br>支持”汪精卫，并派元老蔡元培飞抵青岛慰留汪精卫，国民政府主席林森也发电请汪留任<br>，国民党中政会和中常会再三电邀汪回南京主政。汪精卫则提出了复职的三个条件：一、<br>负责制定对日外交方针；二、行政院的政治外交不必均提交中政会决议；三、中央财政归<br>行政院独立主持。在蒋介石的支持下，汪精卫的要求被国民党中委会全部接受，汪则于８<br>月２３日宣告复职。</p><p>不过在当时的社会舆论中，汪精卫和蒋介石被认为是卖国主谋，激进的爱国者们把两人列<br>为暗杀的对象。１９３５年１１月１日至６日，国民党在南京召开四届六中全会，开幕式<br>后中央委员合影照相时，大礼堂里的秩序比较混乱，于是多疑的蒋介石临时决定不参加合<br>影，返回会议厅休息室。汪精卫见蒋介石迟迟不到，去休息室催促，蒋说：“今天秩序很<br>不好，说不定要出事，我决定不参加摄影，我也希望你不必出场。”汪精卫说：“各中委<br>已伫立良久，专候蒋先生，如我再不参加，将不能收场，怎么能行，我一定要去。”摄影<br>刚完，爱国军人孙凤鸣高呼打倒卖国贼，向正在转身的汪精卫连发三枪，一弹射进左眼外<br>角下颧骨，一弹从后贯通左臂，一弹从后背射进第六、七胸脊柱骨旁。</p><p>汪精卫被刺后，陈璧君首先赶来，见汪精卫倒在血泊之中，不由想起当年两人赴京暗杀摄<br>政王的情景，悲愤地说：“四哥，你放心罢，你死后有我照料儿女。革命党反正要横死的<br>，这种事我早已料到。”蒋介石也从休息室赶来，汪精卫以为自己要死了，对蒋介石说：<br>“蒋先生，你今天大概明白了吧。我死以后，要你单独负责了。”</p><p>不过汪精卫的伤势虽重，但所中的三枪并非致命伤，在南京中央医院将左臂、左颊的子弹<br>取出，但后背的子弹取不出来。汪精卫在遇刺后会见报社记者时说：“窃思本人生平并无<br>私仇。而最近数年，承乏行政，正值内忧外患重重煎迫之际，虽殚心竭力，而艰难周折，<br>外间何从得知？倘因此误会，致生暴举，于情不可无原。拟恳请国府，将牵连犯人从宽赦<br>免。”</p><p>汪精卫被刺受伤后离开南京前往欧洲疗养，辞去了行政院长和兼任的外交部长，行政院长<br>由蒋介石接任，外交部长由张群接任。此后蒋介石的独裁权力不仅在政府方面和军队方面<br>，在党的方面也增长起来。１９３５年１２月２日至７日召开的国民党五届一中全会上，<br>中央常务委员会主席为胡汉民，蒋介石为副主席；最高决策机关的中央政治会议主席则为<br>汪精卫，蒋介石亦为副主席，但胡汉民和汪精卫都在国外养病，实际国民党已由蒋介石一<br>手操纵。</p><p>汪精卫被刺后，主和派的外交部副部长唐有壬又遭暗杀，此后国民党内主张对日强硬的主<br>战派成为主流。蒋介石在军政上“单独负责”后，没有汪精卫那样敢承担“卖国责任”的<br>勇气，所以蒋介石主政后的南京政府开始向主战派的方向倾斜。１９３６年１月２２日，<br>外交部长张群对日本驻华大使表示：希望调整中日关系，否则只有靠战争解决问题。１９<br>３６年６月蒋在讲话中说：“中国和日本的冲突已不可避免，而且为期不远了”。１９３<br>６年７月的国民党五届二中全会上，主战派大占上风，确定了对日本采取强硬态度的政府<br>方针。蒋介石在该会上表示：“绝不容忍任何侵害领土主权之事实，如危及国家生存，则<br>必出最后牺牲之决心”。</p><p>１９３６年２月２６日，日本发生了军人暴动的“二二六”事件，此后日本政府基本被军<br>人所控制。日本“二二六”事变以后，一些军国主义狂热分子又开始策划“华北分治运动<br>”，试图将华北五省也纳入日本的势力范围内。五届二中全会后的南京政府，在华北问题<br>上以不妥协的强硬姿态和日方进行交涉，１２月３日双方的谈判决裂。正在这时，发生了<br>西安事变。</p><p>“九一八”事变的最大“受害者”是张学良，《塘沽协定》又使张学良军完全失去了自己<br>的地盘。１９３３年４月到１９３４年１月，张学良周游欧洲各国，张回国后被任命为西<br>北剿匪副司令，东北军移驻西北，执行剿灭共产红军的任务。张学良在失去地盘后，一改<br>过去的对日妥协政策，成为坚决的抗日者。张学良不满蒋介石“攘外必先安内”的政策，<br>要求蒋介石停止对共产党红军的围剿，联共一致抗日。１９３６年１２月１２日，张学良<br>等人在西安武力扣留了蒋介石，试图以“兵谏”的方式来迫使蒋改变“攘外必先安内”的<br>政策。</p><p>当时国内的许多人虽然对蒋介石的对日妥协政策不满，但也不赞成张学良以武力对国家元<br>首进行逼迫的作法。除共产党以外的各路军阀和各地实权者纷纷通电支持蒋介石，社会舆<br>论也基本站在蒋介石一边。南京政府更是采取了对张学良坚决不让步的政策，包括苏联在<br>内的各国也督促张无条件释放蒋介石，使张学良处于十分为难的处境。蒋介石开始拒不接<br>受张学良的建议，后来在周恩来的说服下，口头答应：“准备向停止内战、一致抗日的方<br>向努力”，但没有签署任何有文字的文书。</p><p>１９３６年１２月２６日，蒋介石返回南京，象凯旋的英雄一样受到国民政府官员、各路<br>军阀的代表、以及数以万计市民的盛大欢迎。１２月２８日，蒋介石以自己要对西安事变<br>负责为由提出了辞呈，被中央政府慰留。１２月３１日，在南京的军事法庭以反乱罪对张<br>学良判刑１０年，但随后蒋介石提出对张学良进行特赦，１９３７年１月４日军事法庭对<br>张学良进行了特赦，此后张一直被软禁。张学良的东北军失去领导人后发生了内讧，被中<br>央军改编接收。</p><p>西安事变大大提高了蒋介石的威信。在西安事变中，包括以前和蒋有很深恩怨的各路军阀<br>将领都以国家利益为重，一致表示无条件支持蒋介石。同时中共在西安事变中许诺接受蒋<br>介石的领导共同抗日，表面上也是蒋的胜利。此外国共合作对于南京政府和苏联改善关系<br>也有重要作用。为了争取日本之宿敌苏联的帮助，蒋介石调整了以往反苏反共的政策，１<br>９３６年初开始试探和苏联改善关系。由于与苏联改善关系的关键在于中国共产党问题，<br>西安事变后的国共合作，消除了蒋介石和苏联改善关系的难点。反共的南京政府和苏联改<br>善关系的结果，使蒋在后来的抗日战争中，得到了苏联多方面的援助。</p><p>西安事变后汪精卫从欧洲回国，不过由于身体原因，汪精卫并没有在政府内任职。此时国<br>民党三巨头之一的胡汉民已经病逝，留下汪、蒋两巨头。尽管汪精卫不担任政府职务，汪<br>仍为国民党最高决策机关的中央政治会议主席，在政治上还在蒋介石之上，对国民党的方<br>针政策仍有极大的影响力。</p><p>１９３７年以后，南京政府开始采取强硬的姿态对待“华北自治政权”。１９３７年２月<br>国民党召开五届三中全会时，要求华北五省的领导人也出席。阎锡山和韩复渠同意出席，<br>而宋哲元以立场特殊为由要求不出席会议，但蒋介石却给宋发出必须出席会议的强硬电报<br>，宋只好派他的副手秦纯德代理出席。此后宋哲元颇受日本和南京的两面挟板之苦，１９<br>３７年５月１０日，宋干脆回山东老家，不问华北政事来回避责任。６月２１日，南京政<br>府向冀察政务委员会发出二十九路军实行国军化，以及停止使用河北省货币等强硬命令。</p><p>１９００年义和团事变后，清政府承认八国联军可以在北京有一定数量的驻军。此后日本<br>一直在北平附近维持数千人规模的条约驻军，日本将其称为“天津军”。此外在１９３７<br>年，英国和法国也在北平附近派有驻军。由于日本“天津军”和二十九军同驻一处，磨擦<br>颇多。１９３７年７月７日，在北平附近进行演习的“天津军”，在芦沟桥附近与二十九<br>军发生了军事冲突，引发了中日全面战争。</p><p>１９３７年的芦沟桥事变和１９３１年的“九一八”事变，在性质上是完全不同的。由于<br>日本是战败国，战前的档案已全部公开，“九一八”事变是关东军策划的阴谋已毫无疑问<br>，但现在仍找不到日本人首先挑发芦沟桥事变的证据。在战后远东国际法庭上明确判定“<br>九一八”事变是由日本人所挑发，但并没有断定芦沟桥事变是日本人挑发的。近年日本一<br>些学者的研究认为，芦沟桥事变是隐藏在二十九军中的共产党间谍首先向日军开枪而引发<br>的，因为从动机上来看共产党最希望发生中日战争。特别是中共中央在芦沟桥事变发生数<br>小时后就发出了号召全面抗战的《为日军进攻卢沟桥通电》，让人感到似乎中共已经预知<br>芦沟桥事变的发生，所以才会这么迅速地作出反应。</p><p>日本方面对芦沟桥事变的记载是：１９３７年７月７日晚，一个小队的日军在北京芦沟桥<br>附近进行演习。突然响起了一阵枪声，日军小队长立即进行点名，发现少了一名士兵。日<br>军小队长联想到刚才的枪声，以为该士兵已在刚才的枪声中被打死，于是小队长下令向中<br>国军队进行还击，形成了军事冲突。但不久那个失踪的士兵又回来了，说当时因为闹肚子<br>去解手而没有赶上点名。</p><p>芦沟桥事变发生后，日本国内的社会舆论对蒋介石一片恶骂，指责蒋介石有意挑起事端，<br>应该对蒋以及他领导下的南京政府进行军事惩罚。但在军部内却分成“事变扩大派”和“<br>事变不扩大派”，两派进行了激烈的争论。不扩大派的代表人物就是“九一八”事变的主<br>谋石原莞尔少将作战部长，他根据“胜利的极限点”的理论，坚决反对日本“得陇望蜀”<br>，再继续向华北进出。石原认为一旦和中国发生全面战争，日本将陷入无法自拔的战争泥<br>潭，绝无取胜的希望。而军部中的大部分却是事变扩大派，他们无视中国团结一致抗日力<br>量的形成，认为中国军队会象以往一样一打就跑。他们提出“对支那一击”论，以为只要<br>给中国一个强大的打击中国政府就会屈服。</p><p>卢沟桥事变发生时，蒋介石和汪精卫等正在庐山邀请政府要员和社会名流召开国事座谈会<br>。卢沟桥事变发生后，１９３７年７月１７日，蒋介石在庐山发表了著名的“最后关头”<br>演说：“我们既是一个弱国，如果临到最后关头，便只有拼全民族的生命，以求国家生存<br>，那时节再不允许我们中途妥协，须知中途妥协的条件，便是整个投降，整个灭亡的条件<br>。如果战端一开，只有牺牲到底。那就地无分南北，人无分老幼，无论何人皆有守土抗战<br>之责任，皆应抱定牺牲一切之决心。”</p><p>蒋介石离庐山回南京进行军事部署后，由中政会主席汪精卫继续主持会议，汪精卫发表讲<br>话说；“牺牲两个字是严酷的，我们自己牺牲，我们并且要全国同胞一齐牺牲。因为我们<br>是弱国，我们是弱国之民，我们所谓抵抗，无他内容，其内容只是牺牲，我们要使每一个<br>人，每一块地，都成为灰烬。我们如不牺牲，那就只有做傀儡了。历史上的元灭宋、清灭<br>明，这两次被外族侵略而亡，不是侵略者能使我们四万万人被杀尽，能将我们的土地毁尽<br>，而是我们死了几个有血腥的人之后，大多数没有血腥的人，将自己的身体连同所有的土<br>地，都进贡给侵略者，以为富贵之地。所以我们必定要强制我们的同胞一齐牺牲，不留一<br>个傀儡的种子。无论是通都大镇，无论是荒村僻壤，必使人与地俱成灰烬。我们牺牲完了<br>，我们抵抗之目的也达到了。”汪精卫的话很不动听，但他讲的却是实话：中国是弱国，<br>绝无打败日本的可能，所以中国的抗战结局只能是两条路，牺牲和投降。如果后来没有美<br>国参战，中国和日本进行单独较量的话，结局只能是牺牲和投降两条路。在抗战的开始阶<br>段，西方列强对中日战争大都持旁观态度，只有德国愿意出面调停。中国要求《九国公约<br>》的签字国开会讨论制裁日本违反《九国公约》的侵略行为。１９３７年１１月３日，《<br>九国公约》签字国在比利时的布鲁塞尔举行会议，会议特邀的苏联代表表示支持中国，主<br>张各国对日本进行集体制裁。但美国代表却说：“既然日本政府已由德国出面调停，美国<br>政府认为中国代表的态度不要偏激，以免影响调停，刺激日本。”美国代表还建议中国应<br>该：“公开宣布消除抵制日货，保护日侨生命财产，与日本进行经济合作，避开谈论恢复<br>战前国土原状的问题，前景还是乐观的。”</p><p>英国代表表示：“英国政府将与美国采取完全一致的步调。”意大利代表则公然为日本辩<br>护：“在战事发生中，很难确定谁开的第一枪，这个责任便属谁的问题，意大利打算谴责<br>冲突的任何一方。”最后会议仅通过了一份宣言，指责日本在华行动违反了《九国公约》<br>，建议日本停止军事行动，但只是一纸空文，毫无任何制止日本侵略的措施。所以当时汪<br>精卫对抗战的悲观看法并不太离谱，中国抗战胜利不过是赶上运气好的险胜，在１９３７<br>年的时候，谁又能预测到八年后中国会沾美苏之光成为战胜国呢？</p><p>汪精卫还有一些话不便公开讲，他私下说：别看现在全国一致高喊“彻底抗战，牺牲到底<br>”的口号，实际上真的准备为国家牺牲的人能有百分之几？大部分人嘴上高喊牺牲，但他<br>们内心里牺牲的概念是让别人去牺牲，而并不是自己牺牲。为什么大部分人不肯讲出不愿<br>牺牲的老实话？是因为他们害怕卖国的罪名，害怕承担亡国的责任。中国后来抗战的结果<br>，的确应验了汪精卫的分析，大多数人都以保全身家性命为第一目标，真正勇于流血牺牲<br>的人是极少数。</p><p>中华文化的特征之一就是“不准投降”，中国人可以原谅临阵脱逃的逃兵，却绝不原谅向<br>敌人投降的降兵，这与西方国家正好相反。在西方国家中可以原谅向敌人投降的降兵，却<br>绝不原谅临阵脱逃的逃兵。西方人认为在无力抵抗的情况下向敌人缴枪投降，也算尽到了<br>军人的责任，不算什么可耻之事。而临阵脱逃则是逃避军人的责任，是军人最大的耻辱。<br>二次大战中西方战场上降兵很多，逃兵却很少；而中国战场上降兵很少，逃兵却很多，这<br>也反映出东西文化的差别。</p><p>蒋介石也明白中国不可能打败日本，只有借助第三国的军事力量对抗日本。但借助外国军<br>队打日本也是非常危险的一步棋，这就是所谓的“引虎赶狼”，外国军队不会无偿帮助中<br>国打仗，其索要的代价可能也非常高昂。后来苏联出兵东三省帮中国赶走了日本人，但作<br>为代价中国不得不将外蒙古交给苏联，外蒙古独立也正是蒋介石借助第三国抗日所付出的<br>代价。</p><p>现在看来，中国和日本主和派的下场都不妙，在日本，主和的犬养毅首相被杀，后来还陆<br>续有多位主和派高官被杀；在中国，主和的汪精卫被刺几乎丧命，主和派的唐有壬等人也<br>遭暗杀。在当时的情况下，对于一个高官来说，做少数的主和派要比做多数的主战派需要<br>更大的勇气。因为主战派高官们号召别人流血牺牲，自己并不需要直接上战场，并没有什<br>么生命危险，而做主和派却要冒被狂热主义者暗杀的生命危险。</p><p>日本在战争时，也是一片主战的狂热叫嚣，但主战派尽管主张战争，却不能保证战争的胜<br>利。日本战败遭到割地赔款的苛刻制裁后，主和派方得以“平反”。人们才开始后悔当时<br>没有听从主和派的劝告，才开始批判当年那些不负责任的主战言论。由于中国有幸成为战<br>胜国，现在我们可以轻松地批评当年主和派的卖国求荣，可是我们如果理解当时主张和解<br>妥协甚至要冒生命危险的话，我们也许就不会轻易批评他们主和是为了卖国求荣了。</p><p>第三部分之三：和平运动的开始</p><p>芦沟桥事变后，日军向中国发动了全面进攻，但这种进攻又显得毫无战略章法，不禁使人<br>怀疑到日本发起侵华战争的目的究竟是什么？李宗仁在回忆录中这样写道：“侵华战事既<br>已发动，而日本人又没有气魄来大举称兵。等到中国民愤达到最高潮，以致芦沟桥“事变<br>”无法收场，大规模用兵势在不免之时，日本又不愿倾全国之师来犯。只是在华北、华东<br>用少数兵力与中国作战，到兵力不敷时，才逐次增兵，深入作战。这种“逐次增兵法”便<br>犯了兵家大忌……所以日本既处心积虑要征服中国，就应乘欧洲多事之秋，一举把中国吞<br>下。日本平时国防军有二十个师团，稍一动员便可递增至四、五十个师团。如果芦沟桥战<br>事发动前夕，日本便动员全国，首批派遣三十个师团同时分途进犯……一举而占领中国各<br>重要城市，将我方野战军主力摧毁，将零星游击队赶入山区，支解我们整体抵抗的局面，<br>陷全国于瘫痪状态，并非难事。到那时，我政府只有俯首听命。”</p><p>难道日本人的战略眼光真的这么差？连李宗仁所说的军事常识都看不到？其实这里面还有<br>另外一层原因。当时日本少壮派军人发动侵华战争，似乎是把中国作为其敌人，然而少壮<br>派军人真正想打倒的对手并不在中国，而在日本国内的官僚集团，中国被他们利用作为挑<br>战日本官僚政权的工具。</p><p>１９２９年美国开始的经济大恐慌很快就波及到整个资本主义国家，经济危机特别严重的<br>是美国和德国，日本也不例外，大恐慌后经济也陷入极度的萧条。经济大恐慌使人们对自<br>由市场的资本主义体制失去信心，国家统治的计划经济被很多人看成是解决经济危机的灵<br>丹妙药。１９３０年代苏联计划经济的成功已经非常令人瞩目，德国希特勒上台后搞准计<br>划经济的国家社会主义，也使德国在两年之内就走出了经济危机，这些都使人们更加怀疑<br>资本主义体制的后进性，苏联式的共产主义体制，德国式的国家社会主义体制，意大利式<br>的法西斯体制，都是作为取代传统资本主义市场经济体制的“试点”。</p><p>在这样的国际大形势下，日本军中的少壮派们也提出要改变现有国体的设想。他们提出要<br>废除以追求利润为目的的资本主义型利益国家，建立一个人人灭私奉公的、尽忠报国的、<br>以道义而不是以利益为本的新型国家。当然日本国内的资本主义当权派不会轻易让出他们<br>的政权，军人们要想夺取政权，最好的方式就是在海外制造军事纠纷，使日本国内陷入非<br>常时期的战时状态，这样军人们就可以用军事上必要为理由征收个人财产，侵犯个人人权<br>，以国家大义为借口堵住一切反对派的嘴，为改造国家体制创造必要的条件。尽管日本军<br>人在战时建立起来的国家资本主义体制没有能使日本打赢战争，却成为了战后日本在国家<br>的主导下发展经济的国家主导市场经济体制的原型。</p><p>在这种改变国体的呼声下，１９３７年６月４日近卫文吕（借字，原字上麻下吕）内阁成<br>立。近卫是一个完全新型的政治家，虽然出身于贵族家庭，但思想却十分活跃敏捷；虽然<br>近卫是文人，但在军人集团与文人政治集团发生冲突时，近卫对军人持同情态度，所以近<br>卫内阁得到军人和文人双方的支持。近卫上台后，在开始著眼改革日本国体的工作，近卫<br>宣布他的政府方针时说：“要建立基于国际正义的和平，建立基于社会主义的施政”。此<br>后日本政府开始学习苏联搞国家主持的五年计划，实施国家控制主要产品价格的统购统销<br>战时经济制度，不久后又解散了所有政党，试图建立一个希特勒式的“举国一致”独裁内<br>阁。以上这些国体变革如果没有中日战争作为借口，在和平环境下是很难推行下去的。</p><p>但日本历史上并没有个人独裁的传统，一贯是集体领导体制，所以独裁体制在日本颇难立<br>足，近卫也无法成为希特勒那样的独裁者。现在有一种说法，说二次世界大战是民主阵营<br>对独裁阵营的战争，但这并不准确，民主阵营的苏联中国都是独裁国家，而独裁阵营的日<br>本却是民主国家。尽管在二战期间日本军人试图建立一个独裁国家，但并没有成功，日本<br>一直没有出现过一个称得上独裁者的人。有人试图把日本的东条英机和希特勒、墨索里尼<br>并列成为独裁者，这完全偏离了历史的真实，东条英机实在无法算成是一个独裁者。</p><p>近卫文吕上台才一个多月，就发生了芦沟桥事变，成为近卫内阁的棘手问题。当时近卫本<br>想采用不扩大的方针，军部作战部长石原莞尔也积极鼓动近卫亲自飞往南京和蒋介石“促<br>膝谈心”，彻底解决中日间的纠纷。近卫对石原的设想有所动心，甚至准备了出访的飞机<br>，但后来由于遭到日本军方强硬派的反对而不了了之。近卫又派亲中派国会议员宫崎龙介<br>乘船前往南京与蒋介石会谈，但宫崎龙介在上船时被日本宪兵逮捕，强行送还东京，可见<br>当时日本军方把首相的人都不放在眼里。在这种情况下，近卫不得不向军方妥协，采取了<br>对中国的强硬姿态。</p><p>蒋介石也明白中国独自不可能打败日本，必须借助第三国的军事力量对抗日本。蒋介石在<br>抗战爆发不久就在上海主动向日本驻扎上海的海军陆战队进攻，试图使上海这个国际城市<br>陷于战火而引起英美法各国列强的干涉。但英美法对中日战争的反应意外的冷淡，英法忙<br>于对付欧洲的希特勒，已无暇顾及远东事务，而美国的民众正处于严重的孤立主义中，不<br>愿卷入外国的纷争。如果没有外援的话中国将必败无疑，在中国军队从上海败退后，蒋介<br>石也开始考虑在德国的调停下和日本进行停战谈判。</p><p>德国当时已与日本和意大利签订了三国条约，德国愿意出面调停中日战争，其主要原因是<br>因为中国和日本都是德国的友好国家。当时欧美国家围堵希特勒德国，德国在国际上朋友<br>不多，所以十分重视和蒋介石政府的关系。中国当时虽然没有石油，却是镍等战略金属的<br>主要供应国，德国的战略金属主要依靠中国供应，而作为交换，德国以向中国借款的方式<br>，“借”给中国大量军事装备，这是抗战初期蒋介石军队均为德式装备的原因，也是蒋介<br>石聘用３０多名德国军事顾问的原因。中日全面战争爆发后，日本以同盟国的身份向德国<br>提出抗议，要求德国停止向中国供应武器，召回在中国的军事顾问。德国在日本的压力下<br>不得已停供中国军火并召回军事顾问，但中德仍是友好国家，请德国出面调停，中国也比<br>较放心。</p><p>于是德国大使陶德曼担任了调停的主角，陶德曼对中国人说：“中国到目前为止的抗战已<br>经向全世界充分展示了中国人的勇敢精神，现在应该到结束战争的时候了。第一次世界大<br>战时，德国有好几次讲和的机会，但我们却过分自信自己的国力，没有走上讲和的轨道，<br>后来德国无条件降服时，不得不悲惨地接受战胜国的所有条件。”陶德曼希望中国人吸取<br>前车之鉴，不要象德国那样搞到无条件降服的地步。１９３７年１１月５日，陶德曼向中<br>国方面透露了日本讲和的条件：（一）内蒙成立自治政府；（二）华北非武装区域扩大，<br>主权归南京政府，治安由中国警察维持；（三）上海非武装区域扩大，治安由国际警察管<br>理；（四）中国停止反日排日政策；（五）共同反共；（六）减低日货关税；（七）尊重<br>外国人在华的权利。</p><p>１２月２日，蒋介石与顾祝同、白崇禧、唐生智等国民党高级将领开会，征求大家对陶德<br>曼转达的日方和谈条件的意见。与会者均认为日本没要求成立华北自治政权，没要求承认<br>满洲国，也不要求赔款，条件不算苛刻，白崇椿甚至说：“如果条件只是这些，那为什么<br>还非要打仗不可呢？”１２月２日下午，蒋介石会见陶德曼，表示中国愿意接受德国的调<br>停，可以以日本提出的条件作为和平谈判的基础，但华北的主权和完整不得侵犯，和谈始<br>终由德国担任中介人。蒋介石还说：假如他全部同意这些要求，中国就会被舆论浪潮冲倒<br>，中国就会发生革命。他要求德方、日方对谈判一事严格保密。</p><p>１９３７年１２月６日，汪精卫在汉口主持召开了国防最高会议常委会，讨论陶德曼大使<br>转达的日方停战条件。与会者也基本同意接受日方条件，在郑州部署军事的蒋介石打来电<br>话：和谈可依照国防最高常务委员会议的决定，通过外交途径进行。这暗示蒋介石不准备<br>直接主持和谈，要把卖国的帽子扔给汪精卫。汪精卫倒是不怕汉奸帽子，他说：“现在是<br>抗战时期，所以‘和’的一字，是一般人所不愿意听的，因为讲和的结果自然没有胜利的<br>结果来得畅快。如今大家因为痛恨日本的侵略，恨不得把日本整个灭亡，然后痛快，听见<br>讲和自然满肚子的不舒服。一般民众如此是不足为怪的，但政府却不可为一般民众所转移<br>。对于民众同仇敌忾之心，政府固然要加以鼓励，才不致一鼓作气，再而三，三而竭。然<br>而政府更应注意虚骄之足以误事。民众尽管可以唱高调，而政府则必须把握现实，不得不<br>战则战，可以议和则和，时时刻刻小心在意，为国家找出一条生路，才是合理的办法。”</p><p>１２月１３日日军轻取首都南京后，使日本人以为中国的抵抗已到穷途末路，于１２月２<br>２日又增加了三项苛刻的和谈条件：（一）在华北、内蒙、华中的非武装地带设立特殊机<br>构（亲日政权）；（二）承认满洲国；（三）中国向日本赔偿战费。日方请陶德曼将新增<br>三项条件转达中国，并把谈判期限规定为１９３８年１月１５日。陶德曼看后摇头道：“<br>这样的条件中国是不会接受的”，果然不出陶德曼所料，中国政府没有按期答复日方的条<br>件。于是日本政府决定向中国施加高压，１月１６日日本首相近卫发表了由大本营联席会<br>议通过的《不以国民政府为对手的声明》，宣布：“帝国政府今后不以国民政府为对手，<br>而期望能与帝国合作之中国新政权的建立与发展，并将与此新政权调整两国邦交，协助建<br>设复兴的新中国。”</p><p>１月１８日国民政府发表声明，表明了中国的强硬态度：“全力维持主权与行政之完整，<br>任何恢复和平方法，如不以此原则为基础，决非中国所能忍受。”日本在中国发表声明后<br>即日撤回驻华大使，中国也于１月２０日撤回驻日大使，两国外交关系正式断绝，陶德曼<br>的调停以失败告终。</p><p>抗战开始后，蒋介石以加强军事为由，提出国民党中设立国防最高会议为全国最高决策机<br>关，取代以前的最高决策机关中政会。国防最高会议的《组织条例》规定：国防最高会议<br>主席由军委会委员长担任，副主席由中政会主席担任，蒋介石是军委会委员长，汪精卫是<br>中政会主席，所以蒋介石自然出任主席，汪精卫出任副主席。１９３８年３月召开的国民<br>党临时全国代表大会上，又修改党章重新确立国民党的领导体制，规定国民党设总裁１人<br>，副总裁１人，大会选举蒋介石为总裁，汪精卫为副总裁。这样蒋介石就借战争的理由名<br>正言顺地夺取了汪精卫长期在党内的最高领袖地位。尽管如此，汪精卫在党内的影响还是<br>巨大的，蒋介石虽然掌握实权，但在表面上也要让汪精卫这位老前辈三分。</p><p>由于英美法不肯出兵干涉，蒋介石开始考虑请求苏联干涉，不过蒋介石在是否应该动用苏<br>联这张牌时也非常犹豫不决：苏联曾经是侵占中国领土最多的国家，曾经在１９０４年和<br>日本为了争夺在中国的霸权而大打出手，因此与日本成为死敌。中国请苏联出兵，即使赶<br>走了日本人，进入中国的苏军会轻易撤出吗？请神容易送神难。更为严重的是，苏军一旦<br>进入中国，中国共产党岂不要在中国做大，国民党还能掌握政权吗？当时以汪精卫为首的<br>一批人非常反对请苏联干涉中日战争。后来苏军进入东北后，把东北交给了中共，成为中<br>共打败国民党的基地，这些都验证了汪精卫等人的担心。</p><p>但战场上中国军队的被动局面，使蒋介石不得不铤而走险，请求苏联的出兵援助。１９３<br>７年８月２日蒋介石召见苏联大师鲍格莫洛夫，请求苏联给与全面的军事援助，苏联方面<br>答应向中国提供军事援助，但要求首先在两国之间签订“互不侵犯条约”。“互不侵犯条<br>约”的主要目的是使中国承认以前被沙皇俄国侵占的领土，不再向苏联提起领土要求。８<br>月２１日，中苏互不侵犯条约在南京签字。</p><p>尽管蒋介石和中共都强烈要求苏联直接出兵，但斯大林却对出兵一事含糊其词。１１月１<br>１日，斯大林在召见中国特使杨杰时说：“现在世界上大多数国家都同情中国的抗战，如<br>果苏联出兵，中国就会在世界上失去道义的支持。现在中国在军事上还有很大余地，万一<br>中国军队实在坚持不住时，苏联再出兵也不迟”。不过斯大林答应向中国派遣志愿军和紧<br>急提供武器，苏联的第一批志愿军飞行队４０余架飞机进入中国，于１１月２１日在南京<br>附近首次和日军交战。</p><p>１９３７年１１月３０日，蒋介石亲自向斯大林发电报，要求苏联表态是否同意出兵，斯<br>大林最后说：“如果签署九国条约的国家共同出兵制裁日本的话，苏联就出兵。如果苏联<br>单独出兵的话，世界舆论就会把苏联看成是趁火打劫的侵略者”，拒绝了蒋介石直接出兵<br>的要求。但苏联加大了对中国援助的力度，１９３７年底立法院长孙科访问苏联，苏联答<br>应向中国提供２０个师的装备，１９３８年３月，苏联正式签署向中国提供３０００万美<br>元的第一批军事借款。但后来欧洲战线吃紧，苏联以增强本国军事力量为重，放慢了对中<br>国的军事援助。不过在１９４１年苏德战争爆发以前，苏联共向中国提供飞机９００余架<br>，军用车辆２０００余辆，大炮１０００余门，弹药１亿８０００万发。３０００多名苏<br>联志愿军在中国直接参战，不少人长眠于在中国的土地上。</p><p>英美法隔岸观火，苏联也不肯出兵，中国的抗战只剩下“焦土战”这条严酷的道路。由于<br>日本是一个资源贫瘠的岛国，非常不利于打持久战，所以蒋介石就把希望寄托于用持久战<br>来拖垮日军。当然日本也明白本国资源有限的弱点，提出了“以战养战”，用中国的资源<br>打中国人的设想。蒋介石为了不让敌人利用中国的资源达到以战养战的目的，在中国各战<br>场大搞烧光毁光的焦土战术。但焦土战的最大受害者并不是日军，而是中国的平民百姓，<br>国民党内部对这种残酷的焦土战术也有不少反对之声。</p><p>１９３８年６月９日，国民党军在没有预告的情况下，突然炸开黄河大堤，泛滥的黄河水<br>并没有淹死一个日军，却淹死十多万中国老百姓，上百万人成为无家可归的流民。不久，<br>国民党军又在预定撤退的长沙误放火，烧死平民数万。长沙大火后，汪精卫批评蒋介石说<br>：“我们烧东西也许是怕自然物资变成‘自然汉奸’被敌人利用，但如果没有人出来做汉<br>奸的话，自然又怎么会变成汉奸呢？如果象长沙一样把每处每地都焦土化的话，我方抗战<br>所需的物质又从何而来？如果把沦陷区内的物质全烧光，剩下的只有一大群无食无住的饥<br>民，这些人怎么处理？带他们一起跑吧，他们又跑不动；将他们杀了吧，又于心不忍。如<br>果把他们扔给敌人，他们必然要被敌人所用，必然要当汉奸。”</p><p>汪精卫在一次演讲时说；“从前法国有一个国王，叫做亨利四世，他讲过一句很有名的话<br>：我希望我的人民，在每个星期六的晚上，在他家里的火炉子上面、瓦罐子里面，都偎著<br>一只鸡。我们再看看我们中国的老百姓，他们有的连鸡毛都没有见过，还谈鸡？一生都吃<br>不著一只，还要说在每个星期六？他们从小到老都在劳动，田地和工厂接受了他们的血汗<br>，等到血汗用尽了，生命也完了，就离开了世界。那好比火炉需要柴炭，等柴把精力完全<br>贡献出来，只剩下灰未、只剩下煤屑的时候，不讲情面的铁铲就把它们铲出去！不让它们<br>再在火炉里停著……”</p><p>汪精卫越来越对这种建立在人民惨痛牺牲基础上的焦土抗战感到疑问：抗战的目的是什么<br>？法国国王还企望人民百姓能有鸡吃，我们的领导人想到过老百姓的疾苦没有？抗战的最<br>大牺牲者不就是那些连鸡肉的滋味也不知道的平民百姓吗？我们不惜牺牲四万万老百姓的<br>生命来培养一个民族英雄，这值得吗？如果不出现奇迹的话，这场战争要经过多少年才能<br>结束？在这期间中国老百姓要遭受多大的惨祸？汪精卫越来越觉得他的和平救国理念是正<br>确的。</p><p>当然国民党内部持“和平救国”观点的，不止汪精卫一人。周佛海、顾祝同、熊式辉、梅<br>思平、陶希圣、胡适、高宗武等人组成了一个“低调俱乐部”，主张和平救国。“低调俱<br>乐部”是胡适起的“雅号”，以区别于那些唱抗战高调的人。周佛海说：“共产党、桂系<br>以及一切失意分子，都很明白地知道，抗日是倒蒋唯一手段。他们因为要倒蒋，所以高唱<br>持久全面的抗日战争。蒋先生本想以更高的调子压服反对他的人，而这些人就利用蒋先生<br>自己的高调，逼著蒋先生钻牛角。调子越唱越高，牛角就不得不越钻越深。当抗战到底的<br>调子高唱入云的时候，谁也不敢唱和平的低调，故我们主张和平的这一个小集团，便名为<br>‘低调俱乐部’。”１９３８年９月胡适被任命为驻美大使，与“低调俱乐部”中断了联<br>系。</p><p>汪精卫虽不直接参加“低调俱乐部”的活动，却是这个组织的灵魂，无形中形成了以汪精<br>卫为中心的“和平运动”。“低调俱乐部”批评主战派说：“蒋委员长等主战的结果，一<br>个是丢，一个是烧，丢不了也烧不焦的地方，都给了共产党的游击队。共产党以游击战争<br>回避对敌作战，人称‘游而不击’，他们是想借抗战保全实力，待国军消耗光了，他们就<br>可颠覆政府。”江精卫则说：“主战有主战的道理，不过，主战的目的是什么呢？为的是<br>国家能够独立生存下去。如果能达此目的，和日本言和也不失为一种手段。一味主张焦土<br>抗战的、唱高调的应该再坦诚一点，要说老实话。依我看来，日军占领区日益扩大，重要<br>海港和交通路线大多丧失，财政又日益匾乏，在战祸中喘息著的四万万国民，沉沦于水深<br>火热的苦难之中。为尽早结束战争，我曾多次向蒋委员长进言，要打开谈判的大门。”</p><p>不过在国民党内主战派压倒多数的情况下，汪精卫感到已不可能说服蒋介石等人走“和平<br>救国”的道路，于是他开始走自己独自的和平道路。汪精卫委托“低调俱乐部”的梅思平<br>、高宗武等人和日本私下接触，谈判停战的条件。</p><p>日本国内也有一批主和派，主张尽早以较为宽大的条件和中国停战言和。主要人物是陆军<br>参谋本部支那课长影佐祯昭大佐，还有在华日本纺织同业株式会社理事长船津辰一郎，日<br>本南满铁路驻京办事处主任西义显，同盟通讯社上海支局长松本重治，前首相犬养毅的三<br>子犬养健等民间人士。影佐祯昭等主和派也在没有政府批准的情况下，私下与中国接触打<br>探和平的可能性。高宗武和西义显等人私交不错，双方不久就达成了初步协议：日方以宽<br>厚的讲和条件支持汪精卫出马，汪精卫则脱离国民党另立政府和日本签订停战条约，实现<br>两国间的停战与和平。</p><p>对于汪精卫来说，迈出这一步的确是非常艰难的。正如梅思平所说：“这件事也实在犯难<br>，搞好了呢，当然对国家有益；搞不好呢，汪先生三十多年来的光荣历史只怕让人一笔勾<br>销。”汪精卫也明白，他迈出这一步的代价有多大，岂止勾销三十多年来的光荣历史，甚<br>至要千夫所指、万人痛骂，陈公博也从成都打来电报，劝告汪精卫说：“先生若离重庆将<br>遭到全国民众的反对和唾弃”。汪精卫考虑了整整两天，最后说：“决定了！只要能救民<br>于水火，我决心跳火坑了。”</p><p>第三部分之四：对日和约的实态</p><p>中日战争爆发后，日本对战局的形势有三种看法：一、快胜论：认为中国军队不堪一击，<br>可以在“三个月内解决支那问题”；二、持久战论：认为中国国土辽阔，战场的纵深太大<br>，日军只能占据一些军事据点，不可能有效地控制整个中国。中国政府如果坚持不降，中<br>日战争将成为旷日持久的持久战；三、外国干涉论：认为中日战争将导致第三国的武装干<br>涉，日本会在外国的政治军事压力下被迫退出中国。</p><p>随著战局的发展，证明“快胜论”的预言是错误的，但外国也没有积极干预中日战争，所<br>以“持久战”的预言成为现实。日本非常不愿意打持久消耗战，持久战拖得越久，对人口<br>资源丰富的中国就越有利，日本将在消耗战中拖垮。到１９３８年底，日本用在中国战场<br>的兵力已增至２４个师团，军费激增，财政困难，税收加重，国内危机日渐困重。在这样<br>的情况下，日本内部也出现了尽快解决战争的呼声。</p><p>在１９３８年初，日本还寄希望于用高压手段迫降中国政府，１９３８年１月１６日近卫<br>首相发表了《不以国民政府为对手》的强硬声明。１９３８年１０月，日军本想在武汉战<br>役中一举歼灭中国军队主力，但中国军队主动撤退，中国政府也迁都重庆，使日本通过武<br>力高压迅速解决中国问题的企图破产。此后，日本政府内要求“重新检讨对华政策”的呼<br>声抬头，１９３８年１１月３日，近卫首相发表了第二次对华声明，一改过去的“不以国<br>民政府为对手”方针，表示：“帝国所期求者即建设确保东亚永久和平的新秩序。只要国<br>民政府抛弃以前的一贯政策，更换人事组织，取得新生的成果，参加新秩序的建设，我方<br>并不予以拒绝”。</p><p>１９３８年１２月６日，陆军省参谋部公布《１９３８年秋季以后的对华处理方略》，决<br>定今后的对华总方针：“以攻占汉口、广州为行使武力时期，今后自主指导新中国建设，<br>切戒急躁。为此，目前应以恢复治安为根本，其他各项施策都应与此相适应。”对华总方<br>针还规定军事上“以不扩大占领区”为宗旨，确定新黄河、合肥、芜湖、杭州一线以东的<br>占领区为治安地区，以西为作战地区。在不扩大占领区的原则下，对国民党军实施有限的<br>局部进攻，同时加强航空作战，轰炸重庆国民政府大后方及中国国际补给线，打击中国的<br>抗日意志，促使国民政府崩溃。</p><p>１９３８年底以后，日本政府和军部的对华方针由“军事打击为主，和平谈判为辅”，改<br>为“军事打击为辅，和平谈判为主”，由否认重庆国民政府改变为承认重庆国民政府。１<br>９３８年１１月以后，日本政府开始考虑作出一定让步的情况下，和中国政府谈判，结束<br>战争。１９３９年３月，日本新首相平沼在国会演说中公开表示说：“蒋介石将军与其领<br>导之政府，假使能重新考虑其反日态度，与日本共同合作，谋东亚新秩序之建立，则日本<br>准备与之进行中止敌对行动的谈判”。</p><p>中日战争爆发后，中国对战局的形势有四种看法：一、胜利论：认为中国军队已具有击退<br>日军的实力，可以击败日本的军事进攻，赢得军事上的胜利；二、亡国论：认为中日战争<br>的结果将导致中国亡国；三、最后胜利论：中日战争成为持久战后，最终将引发外国的武<br>装干涉介入，中国在外国的帮助下最终战胜日本；四、和平救国论：中日战争成为旷日持<br>久的消耗战后，日本也难于忍受长期的消耗战，所以日本不能灭亡中国，不得不与中国进<br>行停战和谈。而中国也应该积极响应和谈，尽快结束在中国土地上进行的破坏性巨大的战<br>争，减少中国国力的损失。</p><p>日本对华政策改变后，开始发出和谈的信号和放出和平的气球，这正好与汪精卫等人的“<br>和平救国”论看法不谋而合，国民党内对“是战还是和”的问题上，发生了重大分裂。但<br>由于“主战”和正义联系在一起，“主和”不免戴上投降叛国的汉奸帽子，所以国民政府<br>内“主战”派还是占绝对多数。在此情况下，汪精卫等“主和派”开始了自己独自的“和<br>平工作”。不过蒋介石在“主战”和“主和”之间持机会主义态度，一方面他高唱抗战到<br>底的高调，另一方面对汪精卫等人的“和平工作”睁一只眼闭一只眼，为中日战争的结局<br>留一条后路。蒋介石并没有制止和惩处参与“和平工作”的官员，使汪精卫的“和平工作<br>”得以顺利进行。</p><p>国民政府外交部亚洲司日本科科长董道宁，通过私人关系与在上海的日本南满铁路驻京办<br>事处主任西义显、同盟通讯社上海支局长松本重治等人进行接触，摸索与日本和谈的可能<br>性。西义显和松本重治劝董道宁直接到日本与军方人士会谈，于是在松本的安排下，董道<br>宁于１９３８年２月，即近卫首相发表“不以国民政府为对手”声明的一个月后，来到日<br>本与陆军参谋本部中国课课长影佐祯昭大佐进行了会谈。董道宁是一个小小的科长，肯定<br>是在某个上层人士的指派下到日本秘密谈判的，但董道宁到底是受谁的指派直到现在也还<br>搞不清楚。</p><p>参谋本部中国课长的影佐祯昭大佐是日本的主和派，是早期参与和平工作的唯一军人。董<br>道宁向影佐询问日本改变“不以国民政府为对手”政策的可能性，影佐说：军部中也有很<br>多人反对近卫首相发表那样的强硬声明，但近卫首相的声明亦是事出有因，不可能那样简<br>单地取消。但影佐表示日本希望和平的人也大有人在，非常愿意与中国进行停战谈判，期<br>望中国也能够表示出具有和谈的诚意。董道宁请影佐给蒋介石写封信，影佐认为他以一个<br>课长的身份给蒋介石写信不太合适，于是他给在陆军士官学校的老同学何应钦和张群分别<br>写了信，影佐在信中说：“不以国民政府为对手的声明是一桩不幸的事件，董道宁此番来<br>日本表示了中国的诚意，日本深为感谢”。</p><p>董道宁回国后将影佐的信交给上司高宗武（外交部亚洲司司长），高宗武又将信转交给蒋<br>介石的近侧宣传部长周佛海，周佛海再将信转交给汪精卫和蒋介石。不久高宗武向西义显<br>转达了蒋介石向影佐祯昭的好意表示的谢意。周佛海又向蒋介石进言派亚洲司司长高宗武<br>到上海“收集情报”，蒋介石同意高宗武到上海进行秘密外交，并从军委会秘密经费中每<br>月支６０００元作为高宗武的活动经费。周佛海不久又背著蒋介石，密派高宗武直接到日<br>本会谈，高宗武有些担心：“我去日本蒋先生知道吗？”周佛海说：“你就放心去吧，一<br>切责任由我承担。”</p><p>周佛海之所以敢瞒著蒋介石和日方谈判，是因为周佛海对蒋介石抱有这样一种看法：抗战<br>后蒋先生一反他以往的表现，如果把过去蒋先生的行为贯穿起来进行研究，就会知道蒋先<br>生的真正态度是“主和”的。由于举国上下高唱全面持久抗战，蒋先生不能不附合，而且<br>比别人的调子更高，以便压服反对他的人，争取舆论的支持，蒋先生是被逼迫著走上他不<br>愿意走的路。所以周佛海决定“以自己的胆识，把蒋先生的作法反过来加以灵活运用，等<br>决心和平后，再向蒋先生报告。”周佛海认为蒋介石终究会明白他的一番苦心。蒋介石在<br>知道高宗武未经他许可私下到日本谈判时，只是说：“荒唐，荒唐”，并没有提出对高宗<br>武进行处罚，更没有强调今后要严格禁止类似事件发生。</p><p>１９３８年６月高宗武在松本重治的陪同下来到日本，高宗武到日本后首先表示他并不是<br>蒋介石派来的使者，而是中国主和派的代表。高宗武说：“我首先想说明我的立场，为了<br>实现和平，我准备不惜做出任何牺牲。为了中国，我最为重视的不是对日作战，而是对共<br>产党的斗争。关于这一点，蒋委员长周围的一部分军人，主张即使把对共产党的斗争置之<br>以后，也要把抗日看成国家的当务之急，我对此是反对的。但汉奸我可不当，我所奋力争<br>取的仅仅是实现和平，这条界限是明确的。如果是不当汉奸的和平工作，那么有什么困难<br>我都忍耐，但倘若这样做会成为汉奸，那么我马上就此作罢，即使说我中途脱逃也好，或<br>说我是叛徒也罢，我都要退出。”后来高宗武果然因为害怕当汉奸，退出了“和平运动”<br>。</p><p>高宗武怀疑蒋介石愿意冒卖国的罪名进行和谈，高宗武说：“关于中日和谈的大义，如果<br>从我的信念上来说，我不得不以汪先生为同伙。随著战祸的扩大，国民是不能忍受的。蒋<br>先生冷酷，而汪先生温暖。”高宗武努力推荐汪精卫，他对影佐帧昭说：“为了造成中日<br>之间的和平，也许必须找蒋先生以外的人。除了汪先生之外，就不容易找到别人。汪先生<br>早已痛感有迅速解决日中问题的必要，而国民政府内部终究不能容纳他的主张。为此，不<br>如从政府外部掀起国民运动，开展和平运动，由此造成蒋先生听从和平论的时机，这样较<br>为适当。”</p><p>日本军方逐渐为中日战争的长期化感到头疼，对影佐的和平计划开始产生兴趣。１９３８<br>年７月初在影佐帧昭的斡旋下，高宗武与日本陆军大臣板垣征四郎进行了会谈。会谈时高<br>宗武提出由汪精卫出马，从政府外部掀起和平运动的计划，希望日本方面为汪精卫出马提<br>供有利条件。日方同意以“不要领土，不要赔款”的优惠条件，支持汪精卫出马进行“和<br>平运动”。高宗武于７月２１日返回中国。</p><p>高宗武因未经蒋介石允许擅自赴日，而且此行得到的结果也对蒋介石不利，所以不敢回武<br>汉，只向周佛海报告了日本之行的情况，并付一封致蒋介石的信：“委员长钧鉴：职于六<br>月二十三日由香港秘密东渡，刻已平安返港。兹谨将职东渡日记及在东京会谈记录与职个<br>人观感三项，分别呈阅。倘有可能以供钧座参考之处，则或可赎职擅赴之罪于万一”。周<br>佛海先把高宗武的报告送给汪精卫，因高在报告中写有“日本希望汪先生出马”字句，周<br>佛海征求汪精卫的意见：“在呈送蒋先生以前要不要把这段删去？”。汪精卫则说“没有<br>关系，他不是那种斤斤计较的人”。蒋介石看完高宗武的报告后，转交行政院副院长兼国<br>防最高委员会秘书长张群，并嘱咐张群看完后转交汪精卫，他不知道汪精卫早已看过。过<br>了三天蒋介石忽然大发雷霆：“高宗武是个混蛋。谁让他到日本去的？”</p><p>不过蒋介石仍然没有深究高宗武私自赴日谈判一事，这使周佛海更加敢于放手进行“和平<br>运动”。不久高宗武因肺病复发住院，周佛海改派军委会政略部秘书主任梅思平接替高宗<br>武进行秘密谈判。１９３８年８月２９日至９月４日，梅思平与近卫首相的私人代表松本<br>重治在香港进行了五次谈判，初步确定了日本政府以“不要领土，不要赔款，两年内撤军<br>”为条件，支持汪精卫搞和平运动。梅思平将日方的内容转交汪精卫，汪精卫同意在此条<br>件下出马主持和平运动。</p><p>１９３８年１０月２２日，汪精卫与周佛海、梅思平、陶希圣、陈壁君等人秘密召开会议<br>，讨论和平运动的具体计划。当时他们计划的“和平运动”分五个阶段：一、汪精卫离开<br>重庆，在外地宣布下野，脱离国民政府。然后日本政府立即发表声明，提出不要领土，不<br>要赔款，两年内撤军的条件，倡议与中国进行和谈；二、汪精卫以个人身份发出响应日本<br>政府的和平倡议，建议国民政府接受日本的条件和平停战；三、云南等地的地方实力者通<br>电响应汪精卫的和平号召，在云南等日军未占领地区建立新的独立政府；四、日本承认新<br>政府并与新政府进行和平谈判，日军撤退回长城以北，将日军占领区转交新政府；五、新<br>政府统一全国，实现中日两国间的真正和平。</p><p>汪精卫当初的这个和平计划是在日军未占领的地区建立新政府，然后新政府接收日军撤军<br>后的占领地，在不割让领土、不赔款的条件下和日本实现和平。如果这个计划能够实现，<br>对于中国人来说还是有相当的可接受性，汪精卫未必被国人责骂为卖国者。但后来由于种<br>种原因，汪精卫的和平计划和他当初的设想出现了很大的偏差，汪精卫自己也成了牺牲品<br>。</p><p>１９３８年１１月３日，日本政府发表第二次对华声明，提出只要国民政府更变人事组织<br>，日本就可以与中国进行停战谈判。日本所说的“更变人事组织”，就是指蒋介石下野。<br>１１月１６日，汪精卫和蒋介石一同吃饭时，劝蒋介石下野促成中日和谈。汪精卫说：“<br>使国家民族濒于灭亡是国民党的责任，我们应迅速联袂辞职，以谢天下。”蒋介石则反问<br>汪：“我们如果辞职，到底由谁负起政治的责任？”两人进行了激烈地争辩，最后蒋介石<br>说：“说什么都是一样，我们不必再争论了。我已经困了，要睡觉去了”。于是蒋介石将<br>汪精卫一个人弃置不顾，自己回去睡觉了，这也促使汪精卫最后下定离开重庆的决心。</p><p>汪精卫和平计划的第一个关键问题是要得到云南政府主席“云南王”龙云的支持。汪精卫<br>派陈璧君找龙云秘密商谈和平计划，龙云对蒋介石改编他的军队，调用云南的物质，削弱<br>他的势力耿耿于怀。龙云对陈璧君说：“汪先生是党国元老，在国内外声望极高，只要他<br>登高一呼，应者必然云集于他的旗帜之下。蒋介石一贯阴险奸诈，排除异己，所以汪先生<br>发动和平运动、另立新政府是天经地义之事。除了共产党和冯玉祥等少数人之外，都会拥<br>护汪先生出来倡导和平事业，在国际上也会得到许多国家的支持。”</p><p>有了龙云支持和平运动的许诺，下一个问题就是日本是否承诺宽大的和平条件。１９３８<br>年１１月１２日，汪精卫派梅思平、高宗武等人为代表，日本派影佐帧昭、今井武夫等人<br>为代表，在上海虹口公园附近的“重光堂”举行最后谈判，双方经过８天的讨价还价，最<br>后达成了所谓“重光堂协议”。（一）缔结华日防共协定，内蒙为特殊“防共”地区，日<br>本在“防共区”驻兵。（二）承认（默认）满洲国。（三）日本废除在中国的治外法权，<br>归还日本的在华租界。（四）华日经济提携，在开发利用华北资源方面，为日本提供特殊<br>方便。（五）补偿因事变而造成的在华日本侨民所受的损失，日本不要求赔偿战费。（六<br>）恢复和平后，日军在两年以内撤军。</p><p>另外还有一个极为重要的问题，就是日本军方对中国分而治之的战略。日本军方感到一个<br>统一的大中国对日本总是一个威胁，最好的消除中国威胁方法就是把中国分为数个国家“<br>分而治之”。日军先在东北制造了一个满洲国，又于１９３７年１２月在华北制造了一个<br>以王克敏为首的北平中华民国临时政府，再于１９３８年４月在长江下游地区制造了一个<br>以梁鸿志为首的南京中华民国维新政府。日方本来计划汪精卫出面建立一个局限于云南两<br>广的地方政府，而汪精卫坚持必须撤销梁鸿志和王克敏等的地方政府，由汪精卫的中央政<br>府统一领导中国。由于汪精卫在此问题上态度十分坚决，日方最后让步同意汪精卫的新政<br>府统一领导中国。</p><p>梅思平把重光堂密约抄在丝绸上，缝在西装马甲里，于１１月２６日带到重庆，向汪精卫<br>、周佛海汇报。但最后汪精卫比较动摇，决定了又推翻，推翻了又决定，在周佛海等人的<br>劝说下，终于下决心选择“和平救国”的道路。汪精卫等人策划了一个脱离重庆的计划：<br>１２月５日，周佛海先去昆明，１２月８日，江精卫夫妇去成都，两日后到达昆明再去河<br>内。日本政府于１２月１１日发表第三次对华声明，汪精卫随后在昆明、河内或香港中任<br>何一地宣布下野。与此同时汪精卫也接到日方的通知，表示对重光堂协议无异议，希望一<br>切按计划实行。</p><p>但多年跟随汪精卫的陈公博并不知道汪精卫与日本秘密商定的和平计划，汪精卫把在成都<br>任四川省党部主任的陈公博请来，希望陈也参加他们的和平计划。陈公博看了“重光堂协<br>议”后徒然变色：“汪先生，这协议书是哪儿来的？委员长他知道吗？”周佛海说：“委<br>员长暂时不知。”汪精卫说：“委员长不出来议和，我准备来议和，不然，焦土抗战，死<br>且不知！”陈公博听后不安地说：“汪先生，依公博之见，先生这样做恐怕是难为人理解<br>的，还可能出大乱子。”汪精卫则向陈公博解释说：“你我相处二十年，患难与共，我这<br>次到外面去，和以前一样非常希望能够得到你的理解和支持。有路可走，我是不会离开重<br>庆的，可现在只能离开重庆才能去谈和。我在重庆谈和，人家定会误以为是政府主张，这<br>是于政府不利的。我离开重庆，那么和谈便是我个人的主张了，如果交涉得当，再来劝政<br>府，由政府出面接受。如果政府仍然执迷不悟，那就只能撇开他们另组班子了。我与佛海<br>一批人的良苦用心，将来是会得到国人理解的。”周佛海也劝陈公博说：“历史的评价问<br>题，牵涉到战局如何发展问题，很复杂，不是我们今天所能定得下来的。成事在天，谋事<br>在人，要谋事总要付出代价和牺牲的。”陈公博见众人都同意，只好说：“你们都统一意<br>见了，我还有什么可说的？不过我总觉得这事还欠考虑，背著政府去和敌方谈和，无论结<br>果怎样，总还有个立场问题。更何况还牵涉到要组织另一个政府问题，而日本方面是否有<br>此诚意？此事须得慎重，最好放弃。”不过最后陈公博表态：“汪先生走到哪里，我跟到<br>哪里。我不想留在四川，眼看众人在我面前骂汪先生，更不愿被别人看成是汪先生留在政<br>府里的密探。”</p><p>１９３８年１２月８日，汪精卫准备飞离重庆的时间，本来是蒋介石外出不在重庆的日子<br>，但１２月８日蒋介石突然从桂林飞抵重庆，打乱了汪的行动计划。汪精卫只好暂时留在<br>重庆，等待时机。１２月１８日，蒋介石飞往陕西出席军事会议，汪精卫以外出演讲为名<br>，偕夫人陈璧君、秘书曾仲鸣、女儿汪文惺和未婚夫何文杰等人飞往昆明。汪精卫到达昆<br>明后，云南省政府主席龙云率领省、市各厅局官员列队相迎，后面是一排排学生和市民夹<br>道欢迎。当天晚上，汪精卫与龙云作了一次恳切的谈话，汪精卫把自己和平运动的计划告<br>诉龙云，说到达河内后即公开提出与日本议和的建议，接著由龙云发表拥汪通电，然后四<br>川、西南和两广各实力派也纷纷行动起来，造成以汪为首的和平运动区，一面与日本交涉<br>和平，一面也促使蒋介石的重庆政府议和。龙云听后满口表示赞同。</p><p>１２月１９日，汪精卫夫妇、周佛海、陶希圣、曾仲鸣等一行十余人，乘龙云代为包租的<br>专机离开昆明，飞抵法属殖民地越南的河内，迈出了和平运动的第一步。据说汪精卫在离<br>开重庆前，给蒋介石留下一封长信，信中最后写道：“君为其易，我任其难”。在当时的<br>情况下，“主和”的道路要比“主战”困难更多。</p><p>汪精卫“主和”难，日本的“主和派”也阻力重重。由于这次发表的声明是正式声明，需<br>要陆、海、外务三省协商后拟成正式文本，然而首先在最重要的参谋本部发生了意见分歧<br>，参谋本部的要员坚决反对明确指出日本撤兵的日期，声称战胜国万不可做出向战败国许<br>诺撤兵日期这样有损于国家威严之事，这样做太对不住前线浴血奋战的士兵。最后近卫向<br>强硬派妥协，在声明中删去了“重光堂协议”中最为重要的日本撤兵一项。近卫在得知汪<br>精卫于１２月１９日到达河内后，于１９３８年１２月２２日发表了第三次对华声明。</p><p>日方和平运动的发起者之一犬养健在他的回忆中，评论近卫的第三次对华声明时说：“不<br>要求领土，不要求赔款，归还外国租界，撤销治外法权等，如果按照重光堂会议的精神发<br>表，确实会引起中国人的共鸣。可是，这次声明竟把最为重要的撤兵约定忘得一干二净，<br>实在让人担心汪精卫和平运动会走上歧途，我深感失望。”日方和平运动的另一个发起者<br>西义显听到近卫修改“重光堂协议”内容的声明后感叹说：“日本把汪精卫欺骗了”，松<br>本重治对近卫的声明内容也感到愕然：“感到和平运动的未来已经出现了暗影”。</p><p>汪精卫对近卫修改“重光堂协议”内容的声明也深感不满，但他亲身体会“主和派”的艰<br>难，近卫发表这样主和口气浓厚的声明，也一定有他的难处。虽然近卫声明删去了最为重<br>要的撤兵内容，但在不要求领土、不要求赔款、归还外国租界、撤销治外法权等方面基本<br>上符合“重光堂协议”，所以汪精卫决定按重光堂协议的规定，发表声明响应近卫的和平<br>倡议。</p><p>１９３８年１２月２８日，汪精卫发出《致中央常务委员会国防最高会议书》，要求蒋介<br>石和国民政府认真考虑日本政府的和平倡议，其原文如下：</p><p>“兹有上中央一电，除拍发外，谨再抄呈一纸，以备鉴察。本月９日，铭谒总裁蒋先生，<br>曾力陈现在中国之困难在如何支持战局，日本之困难在如何结束战局，两者皆有困难，两<br>者皆自知之及互知之，故和平非无可望。外交方面，期待英、美、法之协助，苏联之不反<br>对，德、意之不作难，尤期待日本之觉悟，日本果能觉悟中国之不可屈服，东亚之不可独<br>霸，则和平终当到来。”</p><p>“凡此披沥，当日在座诸同志，所共闻也。今日方声明，实不能谓无觉悟。犹忆去岁１２<br>月初南京尚未陷落之际，德大使前赴南京谒蒋先生，所述日方条件，不如此明划，且较此<br>为苛，蒋先生体念大局，曾毅然许诺，以之为和平谈判之基础。其后日方迁延，南京陷落<br>之后，改提条件，范围广漠，遂致因循。今日方既有此觉悟，我方自应答以声明，以之为<br>和平谈判之基础，而努力折冲，使具体方案得到相当解决，则结束战事以奠定东亚相安之<br>局，诚为不可再失之良机矣。”</p><p>“英、美、法之助力，今已见其端倪，惟此等助力仅能用于调停，俾我比较有利，决不能<br>用于解决战事。俾我得因参战而获得全胜，此为尽人所能知，无待赘言。苏联不能脱离英<br>、美、法而单独行动，德、意见我肯从事和平谈判，必欣然协助，国际情势，大致可见。<br>至于国内，除共产党及惟恐中国不亡、惟恐国民政府不倒、惟恐中国国民党不灭之少数人<br>外，想当无不同情者。铭经过深思熟虑之后，始敢向中央为此提议。除已另函蒋先生陈述<br>意见外，仅再披沥以陈。伏望诸同志鉴其愚诚，俯赐赞同，幸甚，幸甚。专此，敬候公祺<br>。汪兆铭谨启”</p><p>１２月２９日，汪精卫又发表了所谓的“艳电”。“艳电”这个词并没有什么特殊的意义<br>，当时电报为了节省字数，把日期用一个字代替，１２月２９日的电报代号为“艳”字，<br>故称之为“艳电”。汪精卫的“艳电”并不是宣布与日本“合作”的声明，而是以公开向<br>国民党中央党部、国民党总裁蒋介石、国民党中央执监委员会提出建议的形式发表的。“<br>艳电”的大致内容如下（手头暂时查不到“艳电”的原文）：</p><p>近卫首相在最近的对华声明中指出日本对中国无领土要求，尊重中国主权独立，并提出了<br>“善邻友好”、“共同防共”、“经济合作”三原则，表明日方已有和谈的诚意，希望蒋<br>介石和国民政府以近卫声明为谈判基础，与日本政府交换诚意，以期恢复和平，汪精卫还<br>特地提出近卫声明中没有提到的日本撤兵问题。“艳电”说：“抗战年余，创巨痛深，倘<br>犹能以合于正义之和平而结束战争，则国家之生存独立可保，即抗战之目的已达。”</p><p>汪精卫出走重庆后，不少外国电台报道说：汪精卫外出是代表国民政府军事委员会与日本<br>谈判和平问题。１２月２４日，蒋介石让外交部紧急发表声明：“汪兆铭无权和任何人谈<br>判和平。”由于汪精卫在党内的地位，蒋介石担心汪精卫的出走影响人们对国民党的信心<br>，最初只是对外声称汪精卫前往河内治病，为汪精卫返回重庆留下一条后路。</p><p>蒋介石先派正在河内洽办武器运输事务的外交部长王宠惠劝汪精卫回重庆，王宠惠说：“<br>委员长三番五次对人说，汪先生只是赴河内治病，现在回去，仍然名正言顺。”汪精卫回<br>答说：“谢谢重庆方面目前还给我留条退路。虽然这样，我还是不能回去，为什么呢？我<br>这次离开重庆，只是对政局有不同意见，并不夹杂其他任何个人意气在内，这一点务请你<br>们转告中央，请他们理解。在重庆，我要发表个人意见很不容易，我不离开重庆，这份艳<br>电就不能发出，和平工作就难以开展。我的和平主张能否采纳，权操中央，我丝毫不勉强<br>。如果政府出面主和，改变立场，我可以从旁做些协助工作，或者退隐山林不问国事都可<br>以，但如果政府不转变立场，那我只能出面来谈和了。”</p><p>汪精卫来到河内后，他的和平计划遭到很大的挫折。第一是近卫食言没有在声明中公布撤<br>军的许诺。汪精卫本想近卫也有困难，准备今后再继续交涉撤兵一事，所以于１９３７年<br>１２月２９日发表了响应近卫声明的“艳电”。没想到近卫内阁又于５天后的１９３８年<br>１月３日宣布总辞职，使汪精卫陷入十分被动的境地。第二是龙云变心，没有按照当初的<br>承诺发表对汪精卫和平运动的响应，迎接汪精卫在云南建立新政府。汪精卫本来并没有考<br>虑在日军占领区建立政府，所以龙云的变心使汪精卫设想的和平运动完全泡了汤。</p><p>从汪精卫与日本人秘密和约的情况来看，并不是汪精卫一厢情愿的对日投降，而是双方都<br>有和平停战意愿的情况下达成的双边协议。在整个秘密交涉的过程中，汪精卫并非十分主<br>动，最初与日方进行接触的董道宁和高宗武也并非汪精卫派出的使者。而日方却比汪精卫<br>主动得多，日方主动提出汪精卫出马的有利条件，汪精卫考虑再三后才答应的。而且汪精<br>卫在秘密协议中提出日本撤军和建立统一中央政府的条件，都是对中国有利的。</p><p>如果日本当初不答应撤军的话，汪精卫也不太可能会离开重庆另立政府。然而日方却在汪<br>精卫离开重庆走上不归路后，违背诺言收回了撤军的承诺。汪精卫的和平运动最能让人谅<br>解的地方就在于日本撤军这一条，没有了日本撤军的保证，汪精卫的和平运动自然成为卖<br>国投降行为。从这一点看，汪精卫也可以说是被日本人出卖了。但日方倒也未必是有意出<br>卖汪精卫，就象后来美国出卖对自己忠心耿耿的台湾国府与中共大陆建交一样，国家之间<br>只有利益，却没有情谊，弱者总是处于被出卖的危险之中。</p><p>第三部分之五：汪精卫的成立南京政府计划</p><p>汪精卫既没有绝对效忠于自己的私家军，也没有掌握垄断国家财政的命脉企业。汪精卫之<br>所以能够在一无兵二无钱的情况下，在中国政治舞台上扮演顶峰人物，唯一依靠的就是他<br>的名望。汪精卫是国民党的建党元老，文才口才过人，是孙中山最为信任的左右手，加之<br>有曾经冒死刺杀满清摄政王的英雄壮举，这样的辉煌资历在国民党中无人可比。更加重要<br>的是汪精卫拥有近似于完璧无瑕的正派人品，不贪污、不赌博、不吸毒、不近女色，这在<br>当时腐败的中国政界是绝无仅有的高洁人物，汪精卫走到哪里，哪里的空气就会变得清高<br>起来。汪精卫的政敌们虽然批评汪精卫的政治见解，但对汪精卫的人品都是非常敬服的。</p><p>汪精卫的唯一政治资本就是他的名声，一旦名声毁坏，汪精卫的政治生命也就完结了，这<br>和那些即使恶名昭著，也照样执政掌权的军事实力派完全不同。１９３８年１２月１８日<br>汪精卫出走重庆搞“和平计划”，是用他唯一政治资本的“名望”来背水一战。但汪精卫<br>的和平计划遭到了很大的挫折：汪精卫按照与日方达成的密约离开重庆前往河内，日方却<br>违背密约收回了撤军的承诺。本来在汪精卫和日方代表秘密签订的“重光堂协议”中，日<br>方答应以“撤军”来支持汪精卫的和平运动，如果当时日方不提出撤军的承诺，汪精卫也<br>不会离开重庆。可是日本首相近卫在发表声明时，忽然临时删去了有关撤军的承诺。</p><p>汪精卫和平运动的设想是建立在日方撤军的基础上，这样的和平运动是有可能得到中国人<br>理解的。日方食言收回撤军的承诺，就使人感到汪精卫等人是无条件地接受日方的“招降<br>”，这就完全毁坏了汪精卫的名声，断送了汪精卫的政治前途。云南省政府主席龙云等人<br>答应声援汪精卫，也是把日本撤军作为基本前提，在日本不撤军的情况下搞“和平运动”<br>，自然要背上汉奸的恶名。龙云等人见日本收回了撤军的许诺，也就不再响应汪精卫的和<br>平运动，因为他们还有退路，不象汪精卫已经离开重庆出国，没有退路了。</p><p>日本近卫首相在１９３８年１２月２２日发表的第三次对华声明中，尽管没有提到撤军，<br>但在不要求领土、不要求赔款、归还外国租界、撤销治外法权等方面基本上符合“重光堂<br>协议”，所以汪精卫还是按照重光堂协议的密约，于１９３８年１２月２９日发表了响应<br>近卫声明的“艳电”。但汪精卫万没想到近卫内阁居然在他发表“艳电”５天后的１９３<br>９年１月３日宣布总辞职，由于“重光堂协议”是汪精卫和近卫首相之间的密约，近卫辞<br>职就使汪精卫的和平运动彻底流产。日方的和平运动参加者影佐帧昭等人也不满近卫的做<br>法，影佐说：“近卫竟奇怪地干出这种事，他把汪先生这样的中国元老拉到河内，自己却<br>立即辞职，简直没有一点国际信义。”</p><p>答应支持汪精卫和平运动的近卫首相辞职后，汪精卫的和平运动一时间就象断了线的风筝<br>一样没有著落。在国内则是一片谴责声讨汪精卫之声，国民党中常会于１９３９年１月１<br>日召开临时会议，通过了永远开除汪精卫党籍，撤销其一切职务的决议。形势对汪精卫极<br>为不利，汪精卫曾一度产生退出政坛隐居欧洲的设想，但这次和他以前８次光明正大地前<br>往欧洲不同，将被人看作是国家的叛徒逃往欧洲，汪精卫对此计划也非常踌躇。正在此时<br>，发生了高朗街暗杀事件。</p><p>汪精卫到达河内后，住在河内郊外一座位于小山上的避暑别墅中。１９３９年１月１６日<br>，在香港的梅思平在路上被数人袭击打伤头部；１月１７日，亲汪精卫的香港《南华日报<br>》社长林柏生在回家途中被两个大汉用斧头砍伤头部，幸亏一个外国船员发现出面制止，<br>林柏生才免一死；１月１８日，在澳门的汪精卫外甥沈次高被人开枪打死。１月２８日，<br>突然有十几个身分不明的人从汪精卫住的山下向上攀登，汪精卫得报后紧急下山。此后汪<br>精卫搬入人口稠密的河内市内的高朗街２７号一幢西式三层洋楼居住，并向法国殖民当局<br>申请保护，但法国当局只是派一个警察在门外象征性地站岗。</p><p>１９３９年３月２１日凌晨，四名暗杀者越墙攀上三楼走廊，劈开位于三楼正中的主卧室<br>之门，刺客在黑暗中对准睡在床上的一对男女乱打数十枪，以为汪精卫必死无疑。然而被<br>刺的不是汪精卫，而是汪精卫的秘书曾仲鸣。高朗街２７号洋楼的三楼有四个房间，汪精<br>卫夫妇、汪的女儿汪文惺与女婿何文杰、朱执信的女儿各住一间房，把最好的一间主卧室<br>让给刚从郊外旅馆搬来的曾仲鸣夫妇，没想到这反而送了曾仲鸣的命。暗杀发生前的晚上<br>曾仲鸣曾对汪精卫说：“现在重庆方面正想从肉体上消灭汪先生。先生的身体是属于中国<br>四万万人民的，请千万珍惜。”</p><p>曾仲鸣早年留学法国，１９２５年回国后，在广州中山大学任教。同年７月１日国民政府<br>成立时，汪精卫任主席，曾仲鸣任秘书，从此一直相随左右。在枪击中曾仲鸣腹部中了十<br>余弹，其妻方君壁也受重伤。曾仲鸣被紧急送往法国陆军医院抢救，汪精卫要去医院看望<br>曾仲鸣，别人都说现在出门太危险，法国警察也劝汪精卫不要冒险去医院。但汪精卫仰天<br>流泪说：“我是从小看著仲鸣长大的，又为我工作多年，我一定要去看他！”结果汪精卫<br>乘坐曾仲鸣法国朋友的私人汽车到达医院。</p><p>当汪精卫到达医院急救室时，曾仲鸣已昏迷多次，他醒来时对汪精卫说：“我能代汪先生<br>死，死而无憾，国事有汪先生，家事有吾妻，我没有不放心的事。”曾仲鸣临死前又挣扎<br>起来，把以他的名义替汪精卫在国外银行存款的支票上一一签了字，为汪精卫尽了最后的<br>一份力。高朗街暗杀对汪精卫来说已是第二次遇刺了，但汪居然又大难不死，亦可谓天意<br>。</p><p>曾仲鸣死后汪精卫极度悲愤，亲笔写了悼念曾仲鸣的《曾仲鸣先生行状》，又在３月２７<br>日的《南华日报》上发表了《举一个例》的文章，作为对蒋介石暗杀行为的抗议。汪精卫<br>在《举一个例》一文中，披露了１９３７年１２月６日国防最高会议常务委员会的会议记<br>录，这次会议听取外交部次长徐漠的报告，讨论德国大使陶德曼转达的日方和平条件。陶<br>德曼在南京会见了蒋介石，转达了日本的和谈条件，蒋介石同意以日本的条件为基础进行<br>和谈。汪精卫用这个实例说明：与日本谋和并非自他开始，以蒋介石为首的领导集团早已<br>秘密进行了。</p><p>汪精卫在文中责问蒋介石：“主和是大家共同的主张，当时陶德曼大使奔走调停时，南京<br>尚未陷落，蒋介石认为和谈可以进行，那么在近卫发表第三次声明后的今天为什么和谈就<br>不可以进行？而且还要对主和的人横加诬蔑，诬蔑不足，还要夺其生命。再何况，一年多<br>前日本提出的和谈条件十分苛刻，而蒋介石居然说不是亡国条件，同意作为谈判的基础，<br>而今天近卫声明所提出的条件大大让步了，却为什么不可以作为谈判的基础？”</p><p>近卫内阁倒台，继任者平沼首相见汪精卫发起和平运动后，西南省份的中国军政要人并没<br>有象预计的那样通电支持汪精卫，因此对汪精卫的号召力和影响力产生了怀疑，但他们忘<br>记了日方食言收回撤军承诺对汪精卫个人威望的打击。在１９３９年最初的几个月里，日<br>本方面对汪精卫相当冷淡。但是河内发生汪精卫暗杀事件后，因为汪精卫毕竟是响应日方<br>的和平号召才到河内的，日方召开了首相、陆相、海相、外相及藏相参加的“五相会议”<br>，研究决定派遣影佐祯昭、犬养健等人前往河内营救汪精卫，帮助汪精卫转移到安全的地<br>方，汪精卫在日本人的保护下到达上海，暂时住在法租界。</p><p>在轮船尚未到达上海之时，汪精卫就对影佐祯昭和犬养健说：“到今天为止，我们的方针<br>一直是以国民党为中心组织和平团体，用言论来揭露、指责重庆政府对日抗战的错误，宣<br>传中日和平以拯救中国、拯救东亚，扩大和平运动的阵营，从而使重庆政府改弦易辙。原<br>来设想在西南日军未占领的地区建立一个和平运动基地，但自从我离开重庆后情况发生了<br>变化。现在我的想法也有了改变，我想不如推进百步，索性建立一个和平政府，通过日本<br>政府对中国和平的诚意，用事实来证明抗战已毫无意义，从而促使重庆政府转向和平路线<br>，这样比较适当。”</p><p>汪精卫提出建立政府一事大出影佐等人的意料之外。当时日本政府只是吩咐影佐帮助汪精<br>卫建立一个“反共救国同盟会”的民间组织，并没有设想汪精卫在日占区建立政府。所以<br>影佐为难地说：“诚然，这也确是一个好办法。但是事实上我们只是受命专来帮助先生转<br>移到安全的地点而已。关于现在您所说的话，在公务上我没有答复您的资格。不过作为和<br>平运动的同志，我还是发表我的意见。我认为，首先要看日本政府是否彻底实行近卫声明<br>，这是前提条件。假如日本政府在这个态度上有所改变的话，那么先生的这个新建议将会<br>完全失败的。我作为一个日本人说这样的话，不免有些奇怪，但这的确是一个需要慎重行<br>事的事。”</p><p>汪精卫说：“我也有同感。比如说，重庆政府还不信任贵国，他们认为日本嘴上说得好听<br>，实际上心中所想的却完全相反。各地希望和平的同志如今踌躇不前，也是出自同一理由<br>。近卫声明是否实行，这是我们和平运动的分歧点。”</p><p>犬养健问：“不知汪先生在组织新政府时要向帝国政府提出什么要求？”</p><p>汪精卫说：“主要是希望日本政府坚持实行近卫首相的声明，如果不能践行声明，我必将<br>遭到国人的讥笑，认为我是受日本的欺骗而离开重庆的。重庆方面也更不会相信日本政府<br>，认为贵国口是心非，不守诺言。”汪精卫还说：“倘若将来贵国政府要利用我们新政府<br>的兵力，把我们看作日军的一翼，让我们与重庆军队作战的话，势必会引起内战，造成同<br>民族间的流血牺牲，这是绝对要避免的。我们的最终目的，并不是要打倒重庆政府，而是<br>在可能的情况下与之合作。这一点与所谓的反蒋运动有本质的区别。”</p><p>汪精卫又说：“对于中国人来说，抗日论也好，和平论也好，都是爱国心的表现，都是以<br>不同的形式热爱国家。从另一方面来说，抗战论总容易让一般的中国人接受。与之相比，<br>和平论几乎就等于卖国论，是很难让人接受的。从现在中国国民的心情来讲，哪怕是内地<br>的一、两个省份因抗战而生存下来，人们也会确信，它将来必定成为国家振兴的根据地。<br>这种主张最容易使血气方刚的中国青年热血沸腾。但是倘若青年们没有这样旺盛的精神，<br>中国的将来和亚洲的将来也就令人担心了。由于这些缘故，在我们和平运动的征途上会遭<br>受到相当的责难，要经常不断地被骂为卖国贼、汉奸，但我已做好挨骂的思想准备。我所<br>盼望的只有一件事，就是日本的政策能按照与我们约定的那样在中国广泛宣传，到那时我<br>们所经历的苦难，才会放射出异彩。我们在那个时候才能与抗日的青年们见面，互相笑著<br>说明以前各自所走的不同的道路。”</p><p>影佐祯昭被汪精卫的话深为感动，在他的回忆录《曾走路我记》中，给予了汪精卫最高级<br>的赞词：“汪氏的行动表现出他对支那、对东亚的热爱和赤诚，其崇高的精神、高洁的人<br>格连鬼神都会为之感动。我除了真正地敬服感佩以外还能有什么呢？”</p><p>不管怎样，汪精卫提出建立政府的“主动出击”，使日本政府一时感到为难。日本对中国<br>的方针原来是分而治之，因为一个统一的大中国对日本总是一个威胁。日本于１９３７年<br>１２月在华北制造了一个以王克敏为首的北平中华民国临时政府，再于１９３８年４月在<br>长江下游地区制造了一个以梁鸿志为首的南京中华民国维新政府。日本并不打算在日占区<br>建立一个统一的中央政府，所以对汪精卫提出在日军占领区建立政府的计划并不感兴趣。<br>但汪精卫毕竟是中国政坛上的超重量级人物，日方还是认真考虑了汪精卫的建立政府设想<br>。</p><p>１９３９年５月２６日，汪精卫在上海召集高级干部会议，研究向日本政府主动提出“建<br>立政府”的计划问题，参加会议的有周佛海、陶希圣、高宗武、梅思平等人。会议经过三<br>天的讨论，拟订出了《关于收拾时局的具体办法》，准备以书面形式提交日方，汪精卫亲<br>赴日本和日方谈判。《关于收拾时局的具体办法》提出：先召开国民党临时全国代表大会<br>，修改党章，重新制定政纲及政策，授权汪精卫组织中央政治会议，负责改组国民政府以<br>及“还都南京”。该文件还规定：在“国府还都”南京的同时，王克敏的北平中华民国临<br>时政府和梁鸿志的南京中华民国维新政府自动取消，并宣布重庆国民政府为非法政府，其<br>对国内发布的法令、对外缔结的条约协定一律无效。</p><p>１９３９年５月３１日，汪精卫、周佛海、梅思平、高宗武等十一人，在影佐侦昭和犬养<br>健陪同下秘密飞往东京。日方尽管对汪精卫的来访并没有多大热情，但还是给予汪精卫很<br>高的礼遇，前首相近卫文吕和外相有田八郎亲往机场迎接。为了对外保持秘密，汪精卫被<br>安排住在东京郊外的一所高级私人别墅。对汪精卫的来访，新任首相平沼骐一郎召开政府<br>首脑紧急会议，讨论汪精卫提出在南京组建政府的要求，平沼说：“原来我国政府鼓励汪<br>氏出逃重庆是为了促进重庆政府内部分化而与帝国政府议和，这样战事就可能更加顺利一<br>些。原先我们只是计划在经济上支持汪氏进行和平运动，现在汪氏要求我国政府支持他在<br>南京组织中央政府，这是我们未曾想过的。”</p><p>日本政府内部对汪精卫提出建立政府的设想意见很不一致，经过激烈的争论后，日方终于<br>统一意见，同意汪精卫建立新政府。１９３９年６月５日，日本内阁五相会议拟出一个《<br>建立新中央政府的方针》，该方针规定：１、中央政府由汪精卫、吴佩孚、临时政府、维<br>新政权共同组成，吴佩孚主军，汪精卫主政；２、新建中央政府根据《调整日华新关系的<br>方针》与日本建立调整国交；３、中央政府必须具备一定的号召力，成立日期由日本决定<br>；４、中央政府与地方政府的关系，以分治合作为原则；５、关于国民党和三民主义，在<br>不妨碍亲日、满和反共的原则下，可允许存在。日方以《建立新中央政府的方针》为原则<br>和汪精卫进行谈判，但日方的建立政府方针和汪精卫的建立政府设想相去甚远。</p><p>６月１０日，汪精卫首先与平沼首相会谈，但没有什么实质内容。第二天与陆军大臣□垣<br>的会谈，是这次谈判的最主要重头戏。□垣先提出陆军不赞成汪精卫在南京建立政府的意<br>见，□垣说：“难道除了南京，汪先生没有考虑设法在其它地方建立新政权吗？譬如在皇<br>军占领区以外。”汪精卫回答说：“原来我也是这样考虑的，只是形势发生了变化，才作<br>出还都南京的决定。”□垣又说：“南京已经有了维新政府，再由汪先生建立一个新政府<br>，不是好办法。”汪精卫回答说：“我们不说在南京建立新政府而是说还都南京。因为国<br>民政府原在南京，重庆被称为陪都。还都能使重庆方面产生一种冲击力和向心力，使国内<br>一切爱好和平之国民思和之心凝聚于故都南京。南京和平政府将是一个独立自主的中央政<br>权，目前北平和南京的临时、维新两个政权应加以撤销，或自行解散，使之在中央政府统<br>一领导下。”□垣听后反论说：“分治合作是五相会议决定的原则，临时、维新两政府经<br>过与汪先生协商可以考虑废除名义，但不能取消其内容及已形成的事实。”汪精卫则反论<br>说：“阁下的意思似乎与五相会议提出的内政问题交给中国方面的原则有了距离，如果只<br>废除临时、维新两个名称而照旧保留其实体，要我出来收拾时局实感困难。因为中央政府<br>有名而无实，势必会发生中央与地方之间的权限之争。这样的中央政府实在不是我们所设<br>想成立的独立自主政权，如果阁下要坚持，我只有退让或延期组织政府。”最后□垣作出<br>一些让步，说只要汪精卫能够说服王克敏、梁鸿志自愿放弃政府，日方也不反对。</p><p>日本原指望汪精卫在日军占领区之外建立政府，分化瓦解中国的抗日力量。至于在日军占<br>领区之内建立傀儡政府，王克敏、梁鸿志这样的人更加可靠。平沼内阁对汪精卫的建立政<br>府计划很不积极，所以汪精卫这次秘密访日并没有太大收获。汪精卫回国后，曾走访王克<br>敏、梁鸿志，试图说服两人同意放弃地方政府，支持成立统一的中央政府。但王、梁两人<br>均支支吾吾，没有表示出愿意放弃地方政府的意思，这样汪精卫在日占区建立政府的计划<br>又濒临死路。</p><p>汪精卫在河内发表“艳电”时，吴佩孚曾表示支持汪精卫的和平运动，吴给汪去信说：“<br>中日辅车相依，为友为敌，利害本昭然，但目前危亡抗战之中，更须化敌为友，因有史以<br>来，从无久战不和之理。故自芦沟桥变起，身居故都，一直以启导和平为信念。”但汪精<br>卫到北平约见吴佩孚时，吴佩孚态度很傲慢，结果会谈没有实现，不过不久吴佩孚忽然急<br>病而死。</p><p>１９３９年８月，平沼内阁倒台，原陆军大将阿部信行出任首相。阿部上台后，开始积极<br>支持汪精卫，同意取消临时、维新两个政府而由汪精卫领导成立一个统一的中央政府。１<br>９４０年３月３１日，汪精卫才正式“还都南京”，在日占区成立了一个统一的“国民政<br>府”。</p><p>如果说日本人扶持汪精卫在日占区成立一个傀儡政府，倒不如说这个傀儡政府是汪精卫尽<br>力“争取”而来，而且是来之不易。日本人一方面怀疑汪精卫搞和平计划是中国人的诡计<br>，试图以此来缓解日本的军事压力。另一方面，日本也怀疑汪精卫等人对日本的忠诚，尽<br>管重庆开除了汪精卫等人党籍职务，但汪等原国民党人与重庆国民政府的高级官员仍有各<br>种难于切断的千丝万缕联系，日本人担心汪精卫等人会在关键的时候反叛，会把日本的军<br>事机密传递给重庆。事实上抗战期间重庆政府正是通过汪精卫政府获得了大量的军事情报<br>。</p><p>日本人要在日占区建立一个傀儡政府，最重要的考虑之一就是傀儡政府对日本的忠诚可靠<br>程度。从这方面来讲，王克敏、梁鸿志等人显然比汪精卫更加可靠。日本从刚开始就没有<br>考虑过让汪精卫在日占区成立政府，只是希望汪精卫在日军未占领区成立政府。多亏影佐<br>侦昭等和平运动发起人尽力奔走，向日本领导层说明汪精卫的诚意，最后日方才同意汪精<br>卫成立政府的要求。</p><p>汪精卫本来性格清高，对金钱权力看得并不是很重，自动放弃了多次争夺权力的机会。但<br>这次汪精卫却一反常态，竟然“别人不请我自来”，争著在日本人手下作一个傀儡政府的<br>领导人，让人感到有些不可思议。难道汪精卫真是出于一种责任感，怕别人“卖国”把国<br>家卖完，自己亲自来搞有限度的卖国？汪精卫的确说过：“别人去送国还不如我汪某去送<br>。别人送国是没有限度的，而我送国则有限度，不能让他们把国都送完。”</p><p>不过从另一方面来看，汪精卫也许因为被人们所误解而难过。蒋介石不采纳他的和谈建议<br>，他不得不出走重庆，在中国人的土地上建立一个新政府，和日本达成和平撤军的协议，<br>救百姓于战火之中。这本来是一个可行的计划，他本人也不会因此被人们耻为卖国求荣的<br>汉奸。可是没想到日本人临时变卦，收回了撤军的承诺，把汪精卫推进了汉奸的行列。</p><p>对此汪精卫是有苦难言，在当时他无法向别人解释清楚他离开中国是被日本人欺骗了。如<br>果汪精卫隐遁欧洲，等于默认他干了卖国之事而出逃欧洲。汪精卫想干点什么事来进行挽<br>回，因此汪精卫才迫不及待地要建立一个政府，想作一些对中国有益的事来改变人们对他<br>的看法，澄清人们对他的误解。可是汪精卫的努力反而起了相反的作用，越陷越深，越洗<br>越黑。政治仕海险处丛生，一步走错，当年最让人尊敬的革命老英雄就变成最大级的卖国<br>贼。</p><p>不过从客观来看，在１９３９、１９４０年时，德意日的势力正如日中天，很多人都认为<br>德意日要夺取世界领导权，至少要平分世界。假如当时日本和德国联手首先打败苏联，逼<br>和英美，中国的命运就很悲惨了。如果历史真的走到这条路上，没有汪精卫在敌占区成立<br>的统一中央政府，中国就要被分裂成几个国家了。</p><p>第三部分之六：短命的南京政府</p><p>１９３９年８月，日本平沼内阁倒台，８月３１日阿部信行陆军大将的新内阁成立。阿部<br>首相在上台后的第二天发表声明，声称处理中国事变是日本外交政策的核心，转变了以往<br>对中国“分而治之”的方针，表示支持汪精卫成立中央政府，迅速处理中国事变。１９３<br>９年９月１５日，日本参谋本部起草了《以建立中央政府为中心处理事变的最高方针》，<br>声称：“建立新中央政府的工作，其实质包括促成重庆实现停战，以及吸收重庆的军力和<br>财力”。</p><p>阿部首相的新方针使汪精卫在日占区建立中央政府的计划成为可能。汪精卫在策划新政府<br>的同时，也展开了各种宣传活动。汪精卫在“我对中日关系的根本理念和前景目标”的广<br>播讲话中，提出了中日间“结怨不如解怨”的看法，汪精卫说：“现在中国面临两条道路<br>，一条道路是把蒋介石先生等人夸口的抗日战争继续下去，但我实在看不出重庆有取得抗<br>战胜利的军事力量，抗战的结果只能使共产党受益；另一条道路是继承孙中山先生的遗志<br>，朝化敌为友、解怨的方向努力。前者是中国走向亡国之路，后者是中国走向复兴之路，<br>也是亚洲走向复兴的道路。我决心选择后者的道路，也希望全国各党派和无党派的有志之<br>士加入我们的行列。”</p><p>１９３９年１０月１日，汪精卫在日本的《中央公论》上发表一篇《寄语日本》的文章，<br>试图警告那些热衷于侵略中国的军国主义分子。汪精卫在文章中说：“侵略主义和共产主<br>义都是我们可怕的敌人。中国人都知道日本正在排除共产主义，却不知道日本排击侵略主<br>义。在中国人看来，日本也是一个侵略主义者，而且对中国的侵略最甚，中国人把“东亚<br>共同体”、“东亚新秩序”看成是灭亡中国的代名词。如果日本有灭亡中国的企图的话，<br>中国就不得不和共产主义势力联合起来反抗日本。这虽然无异于饮鸠止渴，以暴易暴，而<br>且是暴中之暴，但也是无可奈何。”</p><p>１９３９年１０月，日本兴亚院起草了一个《日华新关系调整要纲》，以此作为与汪精卫<br>谈判成立中央政府的基本条件。所谓“兴亚院”，是日本政府于１９３８年７月成立的一<br>个专门处理中国问题的部门。兴亚院提出的《日华新关系调整要纲》，包括《调整原则》<br>、《调整要项》、《调整要纲附件》，比起前首相近卫文吕去年宣布的“善邻友好、共同<br>防共、经济提携”三原则有很大的倒退。《要纲》把中国划分为东北、内蒙、华北、华中<br>、华南五种地带或五个层次。最深的一层是“满洲国”，第二层是“蒙疆自治政府”（１<br>９３９年９月，在日本的策划下，蒙古的德王在张家口成立了“蒙疆联合自治政府”），<br>第三层是华北，第四层是华中，第五层是华南。《要纲》对这五个层次采取不同的政策。</p><p>对于东北，《要纲》要求中国承认“满洲帝国”，使东北从中国完全独立出来；对于蒙疆<br>地区，《要纲》要求中方同意“特别设定军事上及政治上之特殊地位”，在中国的名义主<br>权下实行自治；对于华北地区，《要纲》要求成为“日满华高度结合地带”，日本在“高<br>度结合地带”实行“防共驻兵”；对于华中和华南地区，《要纲》称恢复和平后，日军将<br>从这些地区撤军，但要让日本军舰在“长江沿岸特定地点及华南特定岛屿驻屯停泊”。《<br>日华新关系调整要纲》的“附件”中，把蒙疆地区解释为长城（包括长城）以北的地域”<br>，把华北地区解释为长城（不包括长城）以南的河北省、山西省和山东省。</p><p>日方的“和平运动人士”对兴亚院的《日华新关系调整要纲》也感到不满。影佐帧昭说：<br>“如果以此方案为基础与汪先生谈判，就会使人怀疑日本政府的信义。即使汪先生接受了<br>这个条件，和平运动也不会成功”。犬养健说：“除了《日华新关系调整要纲》，还有附<br>件等八件，好比一座大山压在汪先生身上，怎么能使他开展国内的和平运动呢？又怎么能<br>使他得到中国民众的信任呢？”</p><p>汪精卫看了影佐送来的兴亚院《要纲》后大失所望，《要纲》的内容不仅与他向日本提出<br>的要求相距甚远，而且大大超过了上海重光堂协议的范围，也违反了近卫第三次声明的精<br>神。汪精卫考虑再三，还是准备在这个基础上进行谈判。汪给影佐回信说：“尊函及日华<br>关系调整拟订方案已收到，似与近卫声明宗旨相当差异，颇以为憾。但对此拟订方案为基<br>础进行谈判，则无异议。谈判委员以周佛海为主任，梅思平、高宗武、陶希圣、周隆庠为<br>委员。希肝胆相照，和睦相处，以审拟东亚问题。”</p><p>１９３９年１１月１日，以周佛海为首的汪方代表开始与日方代表举行秘密谈判。汪方要<br>求谈判以近卫声明、上海重光堂协议和东京谈判的三个文件为基础，表示很难接受上述三<br>个文件中所没有的东西，而日方则态度强硬，坚持《要纲》的方针。由于双方一度争执不<br>下，只好中途休会。汪精卫听完陶希圣的谈判汇报后，流著泪说：“日本如能征服中国，<br>就来征服好了。他们征服不了中国，要我签一个字在他的计划上，这种文件说不上什么卖<br>国契。中国不是我卖得了的，我若签字，就不过是我的卖身契罢了。”</p><p>汪精卫当时思想也有犹豫，准备搬到上海法租界的私宅暂住，发表声明停止和平活动。影<br>佐得知汪精卫准备打退堂鼓后，赶紧去见汪精卫，汪精卫对影佐说：“很感谢诸位对谈判<br>的成功所作的努力。但这次日方提出的原案，和近卫声明的宗旨相差太远，我们无法让步<br>，而你们如果让了步也无法向日本政府交待。现在我们是在讨论一个不可能的问题，所以<br>我认为不如停止谈判，撤回建立新政府的设想。”</p><p>影佐一边听汪精卫的谈话一边笔记，当他听到汪最后一段话时，两行眼泪竟掉落到笔记本<br>上。影佐说：“我协助汪先生迁居，并请法租界布防。但我认为汪先生放弃新政府的计划<br>还为时尚早。正如您所说的那样，谈判进展非常困难。这个原案表面上虽然强硬，但并不<br>是没有交涉的余地，我们也不明白日本政府最后的打算是什么。我将立刻回东京交涉，请<br>先生暂时留下来等候我的消息。”</p><p>汪精卫认为影佐还是有诚意的，于是留下来等待影佐的消息。影佐回到东京后，向陆军大<br>臣等人汇报了谈判情况，并说明了汪精卫的立场，希望日方能作出适当的让步。１１月下<br>旬，影佐从东京返回上海，可是并没有带回满足汪精卫要求的让步。１２月双方的谈判再<br>开，日方同意在协议书上附加一份《绝密谅解事项》，其中加入汪精卫的一些要求。</p><p>日方的让步之一是把日本在华驻军分为防共和治安两类，前者驻军的区域规定为蒙疆，以<br>及正大铁路以北的晋、冀北部及胶济铁路沿线地区，后者的治安驻军则另行协定，其余地<br>区的日军在和平恢复后两年内撤退完毕，但并没有说明什么时候才算恢复和平。另外日方<br>同意取消向汪精卫政府派遣中央政治顾问，改为聘请日本军事顾问。</p><p>虽然日方的让步很有限，汪精卫最后还是决定忍辱接受日方的条件成立中央政府。与以前<br>国民党副总裁的身分相比，现在汪精卫的身价已跌为一个被政府通缉之人，不再有太多讨<br>价还价的资本了。１９３９年１２月３０日，周佛海代表中方在协议草案上签字，周佛海<br>解释说：“弱国无外交，现在我们暂时失去了某些主权，一旦新政权建立后，经过和平建<br>设，国势日盛，到那时我们再与日方交涉来废除有关的条约和协定也不是不可能。”</p><p>１９４０年３月２０日，新政府在南京宣布成立。这天是个晴朗的日子，南京市的市民在<br>警察的引导下，各家都挂出了青天白日满地红的国旗。日本本来主张新政府使用以前北洋<br>政府时代的五色旗，因为青天白日满地红的国旗和重庆方面的国旗一样，容易造成混淆敌<br>我。但汪精卫坚持用国民党的这个国旗，最后双方达成妥协，在国旗下增加一个写有“和<br>平、反共、建国”字样的黄色三角巾。南京市民们看到以前的国旗又飘扬在街头心里确有<br>几分高兴，但看到国旗下的黄色三角巾心里又有几分酸楚。这天还发生了日本兵枪击国旗<br>事件，因为中日开战以来前线的日本兵一直对著这个旗帜而战，很多日本兵在这个旗帜面<br>前倒下，现在这面旗帜突然在他们面前升起，使不少日本兵在感情上一时接受不了。</p><p>１９４０年４月２６日，新政府在南京举行“还都”仪式。此时日本的阿部信行内阁已经<br>倒台，１９４０年１月１６日成立了米内光政内阁。前首相阿部信行作为特使，和日本众<br>议院议长、贵族院议长、以及日军总参谋长等要人出席了还都仪式。仪式在国民政府大礼<br>堂举行，里面挤满了文武官员和前来祝贺的市民，文官身穿中式礼服，武官身穿军装，但<br>大家的脸上都没有表现出还都的兴奋。大礼堂里人头攒动，却是一片肃静，偶尔还传来低<br>声的叹息声甚至哭泣声。汪精卫宣读完《还都宣言》后，不禁流出了两行热泪，周佛海和<br>影佐帧昭也落下了眼泪。</p><p>汪精卫的中央政权建立半年后，在以前密约的基础上又进行了一次谈判，签订了公开的《<br>华日基本条约》。１９４０年１１月３０日在南京举行《华日基本条约》签字仪式，汪精<br>卫以行政院长的身份出席签字。汪精卫身穿礼服站在礼堂的石阶前，等待日方特使阿部信<br>行到来时，眼泪忽然忍不住夺眶而出，沿著双颊一滴滴流下。突然他以双手抓住自己的头<br>发，用力地拔拉，鼻子里不断发出了“恨！恨！”的声音。这时军乐声响起，汪精卫身旁<br>的翻译周隆庠悄声提醒汪精卫说：“先生，阿部大使来了。”汪精卫这时才恍然从梦中醒<br>来一般，周隆庠用手帕替汪精卫拭去泪水，用梳子梳整一下汪的头发，此时汪精卫的脸上<br>重新浮现出一丝微笑，走下台阶迎接阿部特使。</p><p>汪精卫政府成立后的第一大任务，就是诱招重庆政府的军政要人加入他们的“曲线救国”<br>行列。这个诱招行动虽然没有很大的成果，但也并非一事无成。到１９４３年８月，投奔<br>汪精卫的重庆政府官员有国民党中央委员２０人，高级将领５８人，军队５０余万，这些<br>人都是不满蒋介石的政客和被蒋介石排挤的地方杂军。但１９４３年８月以后，日本的败<br>色已浓，就再也没有人投奔汪精卫政府了。</p><p>汪精卫政府的第二大任务是建军。汪精卫深感以前没有自己军队的苦恼，决心组建一只自<br>己的军队。只要有了军队，有了实力，他的政府才能摆脱傀儡政权的地位，日本也无法对<br>他随心所欲地控制。汪精卫效法孙中山办军校的方法，主办起“中央军政干部训练团”，<br>由中央军委直接领导，汪精卫亲自兼任团长，陈公博兼任教育长，周佛海兼教务长。训练<br>团的对象是收编的投奔他们的地方杂军，训练以三个月为一期，自上而下，一直训练到排<br>长为止。汪精卫的国民政府最多时曾有军队百余万，但在短短的一两年时间里汪精卫还得<br>不到军队的绝对效忠，１９４３年日本显出败色后，许多投奔汪精卫的军队又转投蒋介石<br>。另外日本对汪精卫的建军也十分警惕，所以汪精卫的建军计划成果也不明显。</p><p>汪精卫成立政府后比较成功的一件事就是“清乡”。所谓“清乡”就是清除国民党残军，<br>共产党新四军在乡村中的势力，建立起汪精卫政府统治的末端机构。经过１年多的时间，<br>完成了江苏、浙江、安徽三省的清乡工作。以往日军是在秋收的时候出动军队武力收缴粮<br>食，不但引起很大的民愤，而且收缴到的粮食也不多。汪精卫政府在“清乡”地区改为政<br>府出面征收粮食，结果日占区百姓渡过了没有日军侵犯骚扰的安稳的一年。</p><p>１９４１年１２月８日，日军偷袭美珍珠港，太平洋战争爆发。不少人以为日本向美国宣<br>战是丧失理智的疯狂行为，其实日本对美开战也是有国民感情为基础的。</p><p>日本在历史上就一直处于人口非常过剩的状态，对外移民是日本解决巨大人口压力的一个<br>好办法。由于美国是最富有吸引力的移民国家，１９世纪末日本开始了移民美国的热潮，<br>大量日本人纷纷移居美国。然而日本移民在美国却受到严重的种族歧视和迫害，当时美国<br>的很多州规定禁止“有色人”拥有土地，许多在美国出生的日本移民的二世、三世，虽然<br>已成为地道的美国公民，但仍然被禁止拥有土地，只能从事低贱的职业。</p><p>当时中国移民在美国也同样受到严重的种族歧视和迫害，但中国政府向来不对自己的人民<br>负责，对自己的同胞被外国人迫害充耳不闻。而日本政府却是一个负责任的政府，日本就<br>美国歧视迫害日本侨民的问题提出了抗议。于是美国开始制定限制日本移民的“排日移民<br>法案”，１９２４年美国制定了“关于移民问题的宪法修正案”，事实上完全禁止了日本<br>向美国的移民。</p><p>当时美国对来自欧洲的白人移民完全没有人数限制，但是从１９２４年到１９４５年日本<br>投降，美国没有批准过一个日本人移民美国。这明显是对日本人、以及亚洲有色人种的歧<br>视。当时美国的“排日移民法案”，在日本引起了很大的民愤，国内反美情绪高涨，使日<br>本的亲美派陷入了穷地，刺激日本走上了狂热民族主义的道路。这是日本偷袭珍珠港的远<br>因。</p><p>造成日本对美开战的直接原因是美国的石油禁运。当时日本９０％以上的石油依赖美国进<br>口，在依赖飞机军舰坦克的现代化战争中，只要美国切断日本的石油供应，日本必然陷入<br>不战自败的困境。据近年的一些资料显示，美国的美孚石油公司在１９２０年代就发现了<br>中国的大庆油田。但美国政府却不让美孚公司公布这个发现，反而让美孚公司对外宣称在<br>中国东北没有找到石油，还装模作样地提出一个“中国贫油论”的理论，把中国的石油判<br>了死刑。</p><p>当时日本为了摆脱石油被别人卡脖子的窘境，也在中国东北勘探寻找石油，但凡是美国人<br>勘探过的地方日本人就不再去勘探了，他们相信在美国人勘探过的地方真的没有石油。日<br>本人万万没有想到美国人会骗他们，真相信了“中国贫油论”，没有继续在东北勘探石油<br>。如果日本人发现了中国东北的大庆油田，日本也很可能不会因为美国禁运石油而去偷袭<br>珍珠港，第二次世界大战的历史就要改写。后来日本人知道美国人欺骗他们时，感叹输给<br>美国人输得心服口服，美国人战略眼光的高明真是没话说。</p><p>太平洋战争爆发后，汪精卫提出代表中国向英美宣战，并向日本提议南京政府派兵到太平<br>洋前线与日军共同作战。汪精卫向日本提出此项建议的目的主要是为南京政府建立一只强<br>大军队找理由，但是日本并没有同意汪精卫的参战计划。日本人毕竟对南京政府的忠诚持<br>有疑虑，帮南京政府建立起强大的军队后，中国人会不会把枪口掉过来对准自己？</p><p>１９４２年以后日本在太平洋战线上投入了主要兵力，在中国战场上已捉襟见肘。南京政<br>府也看出日本的窘境，逐渐采取强硬的态度，要求日本交还主权，扩大政府力量。１９４<br>２年９月２２日，汪精卫向访问南京的日本特使，前平沼骐一郎提出了强化南京政府建议<br>，汪精卫在建议中要求日本不要继续干涉南京政府的行政和经济。１９４３年１月９日，<br>南京政府与日本签订了《租界返还和废除治外法权》，将英法租界和日租界返还中国。１<br>９４３年２月２日，汪精卫发出主席令，撤除国旗上“和平、反共、建国”字样的黄色三<br>角巾，使国旗恢复了原来的模样。１９４３年１０月３０日，南京政府和日本重新签订了<br>《华日同盟条约》，大大改善了１９４０年签订的《华日基本条约》中的主权丧失部分。</p><p>虽然汪精卫利用太平洋战争大大改善了南京政府的地位，但如果日本战败，汪精卫的努力<br>将一切付之东流。１９４３年以后，日本已露败迹，南京政府的官员也感到忧心忡忡，一<br>旦日本败战，他们的出路在哪里？周佛海等不少高官开始暗地里和重庆方面取得联系，为<br>自己准备一条退路。</p><p>蒋介石的重庆政府和毛泽东的中共也对汪精卫政府十分注目。俗话说：“两湖熟，天下足<br>”，汪精卫南京政府正是占据了中国最富庶的地带，和上海这个最大的国际都市。日本战<br>败后，南京政府投向重庆和延安的哪一方，就会大大增加该方的力量。蒋介石通过周佛海<br>等旧部下拉拢南京政府，毛泽东也试图和汪精卫接近。１９４３年３月７日，中共代表冯<br>龙在上海与周佛海秘密接触，冯龙说他是受中央军事委员会副主席刘少奇的直接指派，中<br>共知道这件事的只有毛泽东等最上层三、四人，但中共和南京政府的交涉似乎没有什么成<br>果。</p><p>１９４３年８月，汪精卫的健康开始恶化。１９３５年遇刺时留在背部未取出的子弹造成<br>的隐患，使汪精卫经常感到背部、胸部及两肋的剧烈疼痛。１１月２１日，日本政府派内<br>科专家黑川利雄教授到南京为汪精卫检查身体。汪精卫希望将体内的子弹取出，但黑川认<br>为还是保持现状，不取为好。黑川走后汪精卫的病痛日益加剧，又请南京日本陆军医院院<br>长后藤治疗。后藤认为病痛是由于子弹压迫神经所致，认为非取出弹头不可，并保证手术<br>能够成功。汪精卫同意施行手术，１２月１９日后藤亲自主刀为汪取出了子弹。</p><p>但手术后汪精卫的病情突转恶化，体温上升，下肢麻痹。１９４４年元旦以后，汪精卫已<br>不能从床上坐起。１９４４年２月，日本政府再派黑川到南京为汪诊治，黑川认为弹头取<br>出后汪的两腿才变得麻木，是脊椎压迫神经所致，形成“多发性骨髓肿”。“骨髓肿”是<br>一种外伤引起的疾病，没有有效的医治方法，死亡率高达９０％。黑川建议汪精卫前往日<br>本，用其先进设备为汪治疗。３月１日，名古屋帝国大学的日本神经外科医学权威斋藤真<br>教授奉首相东条英机之命，到南京为汪精卫会诊。斋藤会诊后同意黑川的诊断，认为汪有<br>必要到日本进行治疗，宜早不宜迟。</p><p>１９４４年３月３日，汪精卫在陈壁君及其子女的陪同下，乘专机去日本就医。临行前汪<br>精卫召集陈公博、周佛海到病床前召开会议，并写下手书：“铭患病甚剧，发热五十余日<br>不能起床，盟邦东条首相派遣名医来诊，主张迁地疗养，以期速愈。现将公务交由公博、<br>佛海代理，但望早日痊愈，以慰远念。兆铭。”</p><p>汪精卫飞抵日本后，住进了名古屋帝国大学医院的特别病房里。汪精卫的住房除了极少数<br>高级医务人员知道外，其他人员毫不知情。３月４日，名古屋帝国大学附属医院组织黑川<br>利雄、斋藤真等八名教授对汪精卫进行会诊，再一次确诊为因子弹头在体内过久，诱发成<br>为多发性骨髓肿，第四至第七胸椎骨的肿胀已由背部向前胸扩散，严重压迫脊髓神经。会<br>诊结束后，斋藤亲自主刀对汪施行“椎弓切除”，切除左右胸背骨七片，以缓解汪精卫的<br>疼痛。手术后，汪精卫感觉尚好，失去知觉两个月的双腿也恢复了知觉。</p><p>但到１９４４年９月，汪精卫的病势又开始恶化。汪精卫问主治医生黑川教授：“请坦诚<br>地告诉我，我的病能治好吗？如果治不好的话，我想回中国。”黑川说：“请放心，我保<br>证一定能治好。”这当然是医生经常用来安慰病人的话。１９４４年１０月，汪精卫的病<br>势转危。日方得知汪精卫病危后，不少高官前来探望，病房中摆满了垂危病人不可能下咽<br>的水果和点心等慰问品。</p><p>１１月８日，美军对名古屋进行大规模空袭，医院将汪精卫转入地下室。因地下室没有暖<br>气设备，非常寒冷，汪精卫因此得了肺炎。次日汪精卫体温高达四十度，呼吸困难。１１<br>月１０日午后，病房中传来汪夫人陈壁君的大声呼叫。黑川教授赶入病房，见汪精卫浑身<br>颤抖，痛苦不已。黑川握住汪精卫的手查看脉搏，汪精卫吃力地说：“我要回中国……”<br>，这成了汪精卫最后的话。</p><p>１９４４年１１月１０日下午４时２０分，汪精卫停止了呼吸。汪精卫去世后的第二天，<br>日本现任首相小矶、前首相东条英机和前首相近卫文吕等人赶到医院向汪精卫的遗体告别<br>。特别是前首相近卫在汪精卫的遗体面前默默站立了一个多小时，汪精卫今天的下场可以<br>说是近卫一手造成的，也许他感到有些内疚。汪精卫的遗体于１１月１２日由专机运回中<br>国，小矶首相、近卫等人前往机场为汪精卫的遗体送行。</p><p>汪精卫生前酷爱梅花，曾把南京的市花定为梅花。汪精卫在名古屋大学养病时，曾赠送名<br>古屋大学纪念红梅树苗株，种在病房前，现在还有两株尚存。汪精卫死后葬于南京郊外的<br>梅花山，蒋介石还都后将汪精卫的坟墓炸毁，遗体烧却。</p><p>第三部分之七：汪精卫死后南京政府的结局</p><p>汪精卫于１９４４年１１月１０日客死于日本名古屋，他的遗体于１１月１２日由专机运<br>回中国。汪精卫死后，南京国民政府专门成立了哀典委员会，由陈公博任主任委员，周佛<br>海、王克敏、褚民谊为副主任委员。南京政府于１１月１２日发出公告：“国民政府汪主<br>席于民国三十三年十一月十日申时，在日本名古屋帝大医院逝世，距生于民国纪元前二十<br>九年五月四日已时，享寿六十有二，谨于十一月十二日恭迎遗体回国成殓，择期举行国葬<br>，饰终典礼，由国民政府会同中央党部组织哀典委员会敬谨办理。”</p><p>１１月１２日下午六时，装载汪精卫遗体的专机降落在南京光华门外机场、陈公博、周佛<br>海、王克敏等一百余名官员到机场迎候。南京政府按照汪精卫生前的遗愿，把汪的陵墓建<br>在国父孙中山陵墓左侧的梅花山上，表示他生前是孙中山的助手，死后也要追随左右。由<br>于汪精卫生前有过陵墓不要劳民伤财的遗嘱，加上南京政府的财政有限，所以汪精卫陵墓<br>的规模不大。不过汪精卫的棺木外面用钢筋混凝土浇灌了厚厚的一层墓壳，倒是十分坚固<br>。</p><p>汪精卫死后，南京政府推举陈公博为国府主席，继任行政院长及军事委员会委员长，但陈<br>公博坚持在最高职务上加个“代”字，陈公博说：“现在汪先生走了，人亡政息，这台戏<br>也该结束了。我来继承汪先生的职位，是来办理收场的，而不是来继续演出的。”此时日<br>本的败局已定，南京政府也处于风雨飘摇之中。</p><p>１９４５年８月１５日，日本宣布无条件投降。８月１７日，陈公博在南京主持召开中央<br>政治会议，决定解散南京国民政府，把中央政治会议改为南京临时政务委员会，军事委员<br>会改为治安委员会。当晚，陈公博广播发表了《国民政府解散宣言》，至此，历时５年４<br>个月的短命政权宣告结束。</p><p>陈公博解散南京政府后，向日本方面提出到日本避难的意愿。此时日本已投降，但还是安<br>排让陈公博、林柏生、周隆庠等人于８月２５日秘密飞往日本。陈到日本后，化名东山公<br>子，隐居于京都郊外的金阁寺。但不久陈公博等人潜居日本的消息泄露，中国政府向日本<br>提出将陈公博等人引渡回国的要求，作为战败国的日本只得无条件答应中国的要求。日本<br>前首相近卫文吕得知陈公博要被引渡回国，匆匆赶到金阁寺和陈公博道别，近卫说：“实<br>在对不起。。。“，陈公博倒爽快地回答说：“大家都是为了自己的国家和民族，说不上<br>谁对不起谁。”</p><p>１９４５年１０月３日，陈公博一行７人被引渡回中国受审。１９４６年４月４日，江苏<br>高等法院开庭审讯陈公博。陈公博对指控他的汉奸罪表示不服，在法庭上为自己辩护说：<br>“我认为抗战应该，而和平是不得已。平心静气去想想，当日汪先生来京之时，沦陷地方<br>至十数省，对于人民只有抢救，实无国可卖。在南京数年为保存国家人民的元气，无日不<br>焦头烂额，忍辱挨骂，对于个人只有熬苦，更无荣可求。到了今日，我们应该念念汪先生<br>创立民国的功勋，念念他的历史和人格”。１９４６年４月１２日，法庭判决陈公博死刑<br>，于１９４６年６月３日执行。临行前，陈公博要求向陈璧君告别。在陈璧君的囚室外，<br>陈公博向陈璧君深深鞠了一大躬，双手捧上自己用过的一把茶壶，说：“夫人，我先随汪<br>先生去了。牢中别无长物，一把茶壶，权做留个纪念吧！”</p><p>陈璧君被捕后，更是表示坚决不服罪。１９４６年４月１６日江苏高等法院开庭审讯陈璧<br>君，陈璧君在法庭上说：“日寇侵略，国土沦丧，人民遭殃，这是蒋介石的责任，还是汪<br>先生的责任？说汪先生卖国？重庆统治下的地区，由不得汪先生去卖。南京统治下的地区<br>，是日本人的占领区，并无寸土是汪先生断送的，相反只有从敌人手中夺回权利，还有什<br>么国可卖？汪先生创导和平运动，赤手收回沦陷区，如今完壁归还国家，不但无罪而且有<br>功。”法庭最后判处陈璧君无期徒刑，陈璧君接到判决书时却说：“本人有受死的勇气，<br>而无坐牢的耐性，所以希望法庭改判死刑。”</p><p>陈璧君个性十分刚烈，汪精卫在日本治病时，陈璧君一直伴随汪身旁，但从来没有对日本<br>人说过一句感谢的话，日本人对她也很发怵。１９４９年共产党夺取大陆后，蒋介石并没<br>有把陈璧君移往台湾，而是把陈留给共产党。１９５２年，和陈璧君私交很深的孙中山夫<br>人宋庆龄和廖仲恺夫人何香凝，去监狱探望陈璧君。１９１２年汪精卫和陈璧君结婚时，<br>何香凝还曾作过陈璧君的伴娘。宋庆龄和何香凝告诉陈璧君，中央已经决定，只要陈璧君<br>承认汪精卫有罪，写一篇悔过书就可以释放出狱。陈璧君却立即拒绝：汪精卫无罪。她宁<br>可坐牢，也不承认汪精卫有罪。１９５９年６月１７日，６８岁的陈璧君死于监狱中。</p><p>与陈公博相比，周佛海要随机应变得多。早在日本呈现败迹时，周佛海就暗自与重庆联系<br>，为自己留好了退路。当年汪精卫与日本密谈基本上是周佛海一手包办，陈公博不仅没有<br>参与，而且还表示反对。最后汪精卫组建政府时，陈公博感到汪精卫正值用人之际，出于<br>与汪精卫的私人情谊才接受了汪精卫的邀请，到南京政府任职。如果论“卖国罪”的话，<br>与日本签定密约的周佛海，显然要大于没有参与密约的陈公博。但最后周佛海却比陈公博<br>罪轻一等，只判了一个无期监禁，而官职比周佛海小得多的林柏生、梅思平等人都判了死<br>刑，可见当时的汉奸审判亦不公正。</p><p>尽管蒋介石抗战后成为中国的民族英雄，但蒋介石在抗战时期也多次和日本进行过秘密和<br>谈。除了抗战初期德国大使陶德曼的调停外，１９３９年１２月蒋介石密令戴笠手下的军<br>统特务曾广冒充财政部长宋子文的弟弟“宋子良”，在香港与日方举行秘密谈判。日方对<br>此会谈十分重视，要求继续举行高级别的谈判。１９４０年３月７日至１０日，双方在香<br>港举行了高级别的秘密会谈，中方代表除了假“宋子良”外，还有重庆行营参谋处副处长<br>陆军中将陈超霖，最高国防会议主任秘书章友三，副侍从长陆军少将张汉年。</p><p>会议开始时，日方出示了陆军大臣的证明书，而中方陈超霖、章友三两人只出示了最高国<br>防会议秘书长张群的证明书，却没有蒋介石的证明书，说明蒋介石不愿直接承担和谈的责<br>任。但陈超霖说蒋介石亲自过问此事，并在他离开重庆前，特别嘱咐他三件事：（一）必<br>须取得日本撤兵的保证；（二）明确日本的条件；（三）会谈在秘密中进行。日方答应考<br>虑蒋介石的撤军要求，但提出了几项撤军条件：（一）原则上承认伪满洲国；（二）放弃<br>抗日容共政策；（三）以密约规定日军在内蒙及华北若干地区驻军防共；（四）停战后与<br>汪精卫一派合作。</p><p>据参加会谈的日方代表今井武夫在回忆录中透露，这次会谈争论的中心是满洲国的承认问<br>题、撤军问题、以及与汪精卫合作的问题。重庆方面表示：“满洲问题中国原则上同意考<br>虑，但方式如何另详商议”；“关于撤兵问题，日本应将在华军队尽快全部撤退，不得另<br>找借口延迟撤退（撤兵步骤另细订）；“关于汪精卫问题，纯属中国内政问题。在恢复和<br>平后，根据汪氏与国民党的历史关系，中国将适当处置，无须提为和平条件之一。”但后<br>来重庆方面表示在承认满洲国问题上政府内部意见对立，要求会谈延期。后来重庆方面一<br>拖再拖，谈判也就不了了之。</p><p>１９４３月１１月２３日，美国总统罗斯福、英国首相丘吉尔和蒋介石在开罗举行会议，<br>会后发表的《开罗宣言》中声明三国将联合向日本侵略势力作最后的反攻，在战争胜利后<br>，把中国东北、台湾和澎湖列岛归还中国。但１９４５年２月美、英、苏三国首脑在雅尔<br>塔举行制定最后对日作战方针的最高会议时，却没有邀请蒋介石参加。１９４５年８月，<br>美、英、苏三国发表敦促日本政府立即无条件投降的《波茨坦公告》时，竟然也没有邀请<br>中国这个对日作战最久的国家一起敦促日本投降。这些使蒋介石感到一种屈辱感，也是弱<br>国无外交的另一种表现。</p><p>不过蒋介石又对美英苏三国不邀请中国参加最后对日作战方针会议表示担心：三国是不是<br>准备出卖中国的利益对日讲和？蒋介石最怕日本与三国进行有条件投降的谈判，把保存汪<br>精卫政府作为日本从中国撤军的条件。另外蒋介石也担心苏联对日宣战，出兵中国战场和<br>日军作战，这样中国就要成为共产党的天下了。在担心被美英出卖和担心苏联出兵的情况<br>下，蒋介石通过地下渠道，派南京政府的考试院副院长缪斌赴日与日本秘密谈判单独讲和<br>。缪斌表面是汪精卫的人，背后却又是蒋介石的人。１９４５年３月，缪斌受蒋介石的重<br>托，化名“佐藤”来到东京，开始了“佐藤工作”。日本对这次谈判非常重视，当时的首<br>相小矶国昭亲自领导与缪斌的谈判。</p><p>中国方面提出的与日本单独讲和的条件是：日本从中国全面撤军，解散南京政府和取消满<br>洲国国号，中国即可与日本单独签署和平条约。小矶首相对中国的方案很感兴趣，有意接<br>受中国的条件。当时日本正准备进行本土决战，如果能和平体面地解决中国问题，把几十<br>万大军撤回日本，可以有效地解决兵员不足的问题。此外和中国单独讲和还有助于瓦解同<br>盟国阵营，在外交上也是一大胜利。但日本的军部却极力反对与中国单独讲和，小矶首相<br>最后遗憾地说：“错过这次机会，百年以后都要后悔。”</p><p>抗战胜利后，缪斌被作为汉奸逮捕。缪斌本以为他很快就会被无罪释放，但不久却传来了<br>尽快执行死刑的命令。缪斌于１９４６年５月２１日被处决，比“第一汉奸”陈公博的刑<br>期还早。原来美军占领日本后，发现中国准备与日本单独讲和的“佐藤工作”秘密资料，<br>麦克阿瑟大怒，要传唤缪斌到东京法庭出庭作证。蒋介石赶紧向美国否认曾经和日本进行<br>过秘密和谈，另一方面却下令立即处死缪斌，这可以说是“杀人灭口”。缪斌作为南京政<br>府的考试院副院长，并非政府要职，缪斌本人也没有特别重大的卖国行为，本来不应判死<br>刑。将缪斌如此迅速地处死，也反映出蒋介石害怕得罪美国人的心虚。不过在日本福冈久<br>留米市的有名古寺善导寺中，却有供祭缪斌的牌位；在东京中央区的稻荷神社，还有“和<br>平神缪斌显彰碑”，把缪斌奉为“和平神”，表示不忘缪斌的“和平工作”。</p><p>１９４６年１月，在重庆的蒋介石通知何应钦：在重庆政府还都南京之前，必须将汪精卫<br>在梅花山上的坟墓处理掉。１月２１日工兵用炸药炸开汪精卫的墓壳，打开棺木，见汪精<br>卫的尸体上覆盖著青天白日满地红旗，身穿南京政府的文官礼服：黑色长马褂，胸佩大绶<br>，头戴礼帽。由于使用过防腐剂，尸体尚未腐烂。棺内没有任何陪葬品，只发现尸体的上<br>衣口袋里有一张３寸长的纸条，上书“魂兮归来”四个字，这是陈壁君在名古屋帝大医院<br>汪精卫去世时写的。</p><p>汪精卫的棺木和尸体被运往清凉山火葬场彻底焚化，梅花山的坟地由工兵铲平后建了一座<br>小亭，四周添植许多花木，彻底改变了模样。１９９４年时，在汪精卫的原墓地上面修建<br>了一座汪精卫跪像，似乎是模仿岳飞墓前的秦桧跪像供人们唾骂。但到１９９９年１月，<br>汪精卫跪像突然被撤除，原因尚不明了。</p><p>尽管人们常说“不以成败论英雄”，但实际上往往是“成者英雄败者贼”。如果客观分析<br>一下当时的形势，汪精卫的南京政府存续下来的可能性亦不算小。第一种情况是日本胜利<br>，美国放弃远东地区；第二种情况是日本有条件投降，从中国和南洋各地撤军，但日本很<br>可能把保留汪精卫政权作为撤军条件。如果美国没有及时发明原子弹，对日本进行本土作<br>战必然要付出巨大伤亡，美英为了自己的利益，很可能出卖中国的利益接受日本的有条件<br>投降。另外从反共一面来看，如果苏联参战的话，苏军的首先攻击目标肯定是在中国的日<br>军，这样中国就不免会共产化。而汪精卫政权是反共的，美英看来保留汪精卫政权总比苏<br>联出兵中国强。第三种是日本向美英苏无条件投降，却不向中国无条件投降，这从美英苏<br>三国不邀请中国一起发表敦促日本政府无条件投降的《波茨坦公告》可以看出这种可能性<br>。如果这样日军就会给汪精卫政府留下一批武器装备后突然撤军，留下汪精卫政府自生自<br>灭，就象美国抛下南越政府撤军一样。由于汪精卫政府掌握了中国三分之一的土地和近半<br>数的人口，蒋介石要想消灭汪精卫政权也非易事。因此从“运气”的角度来看，汪精卫南<br>京政府的结局可以说是一种最糟的结局。</p><p>从汪精卫的一生来看，汪精卫是个典型的“文人革命家”，善于用笔而不善于用枪。孙中<br>山非常重视汪精卫的文才，孙中山的重要文件均由汪精卫起草，孙中山阅后总感满意，极<br>少改动，汪精卫其实担任了孙中山秘书的角色。１９０５年成立的同盟会，孙中山任总理<br>，黄兴任执行部部长，汪精卫任评议部部长，可见孙中山对汪的器重，也说明汪在同盟会<br>里有相当高的声望。</p><p>不过使汪精卫在中国名声大振的，还是他以“精卫”的笔名在同盟会主办的《民报》上发<br>表的一系列文章。汪精卫写的《满洲立宪与国民革命》、《驳革命可以召瓜分说》、《驳<br>革命可以生内乱说》等一系列文章，都是当时广为流传的政论文佳作。１９０８年８月１<br>９日，孙中山在新加坡《中兴日报》上以“南洋小学生”为笔名发表文章《论惧革命召瓜<br>分者乃不识时务者也》，文中说：“自精卫先生《民报》第六号《驳革命可以召瓜分说》<br>一论出，言中外情势原原本本，使中国人士恍然大悟，惧外之见为之一除。。。。拜读精<br>卫先生革命可杜瓜分之论，不禁五体投地，神圣奉之。”此文后来收入《孙中山全集》。</p><p>但汪精卫的命运和他的老师孙中山一样，都是只有威望却无实权的领袖人物。文人革命家<br>在夺取政权以前起著极其重要的舆论制造工作，可是一旦政权到手，他们就被掌握军队的<br>军人政治家们排挤到一边。孙中山被袁世凯摆布，汪精卫被蒋介石摆布，都是中国“枪杆<br>子里面出政权”的牺牲品。不过汪精卫对国民党建立和发展的“功勋”是无法抹煞的。现<br>在台湾的国民党，在召开重要会议以前必先朗读孙中山总理的遗言。然而这个遗言其实却<br>是汪精卫所写，孙中山不过签个字而已。这也表现出汪精卫对国民党的影响仍然“阴魂不<br>散”。</p><p>汪精卫一生以生命为赌注进行了两次拼搏，一次是刺杀摄政王，另一次是发起和平运动，<br>前一次赌博巨大成功，得到世人的喝采，后一次赌博却完全失败，遭到世人的唾骂。不过<br>“人算不如天算”，在很多重大事件中，运气或天命起著重要的作用。汪精卫行刺摄政王<br>时抱著必死的决心，根本没有想到生还。清政府对行刺满人王公的刺客一直都没有不处死<br>的先例，只是到了汪精卫时才破例免死。如果当时清政府成全汪精卫必死的决心处死汪精<br>卫，中国就会少一个大汉奸而多一个大英雄，现在我们的中小学生们将代代朗读汪烈士“<br>引刀成一快，不负少年头”的豪言壮语。</p><p>如果汪精卫在１９３５年遇刺时被打死，也会成为中国可歌可泣的光荣老革命家，而汪精<br>卫却只伤不死。如果１９３９年重庆特务不是错杀曾仲鸣而是打死汪精卫，人们也只是叹<br>惜汪精卫一时糊涂，不会使汪精卫背上史上最大级汉奸的恶名。但命运之神好象是在故意<br>捉弄人，汪精卫最后对自己的人生也是不满意的，在他６０岁还历时曾经写下一首《朝中<br>措》的述怀词：城楼百尺倚空苍，雁背正低翔；满地萧萧落叶，黄花留住斜阳。栏杆拍遍<br>，心头块垒，眼底风光；为问青山绿水，能禁几度兴亡。汪精卫在词前还写了这样一段话<br>：“重九日登北极阁，读元遗山词，至‘故国江山如画，醉来忘却兴亡’，悲不绝于心，<br>亦作一首。”元好问这样的亡国诗人之作引起汪精卫的共鸣，可见汪精卫的内心亦是郁郁<br>颓丧。</p><p>不少人把汪精卫投靠日本人解释为与蒋介石争权，但从汪精卫的历史来看，汪精卫并不是<br>特别醉心于权力的人。１９１２年辛亥革命胜利时，以汪精卫当时在党内的地位和社会影<br>响，他至少可以当一个部长以上的官员，胡汉民就作了广东都督。当时汪精卫才３０岁，<br>这样的高官对于一个３０岁的青年应该是很有吸引力的。而汪精卫却提出“不做官、不做<br>议员、不嫖、不赌、不纳妾、不吸鸦片”的“六不主义”，放弃作官到法国留学。辛亥革<br>命后象汪精卫这样具有功劳威望之人却没有作官的，只有汪精卫一人。后来汪精卫任广州<br>国民政府主席时，在完全可以不辞职的情况下主动自责辞职，也反映出汪精卫对权力看得<br>不是很重。所以简单地把汪精卫离开重庆搞和平运动看成是争权夺利，其实是把历史人物<br>脸谱化了。</p><p>汪精卫个人的悲剧，其实也是近代中国的悲剧。试想如果当时中国是一个富裕强大的国家<br>，又怎么会遭到外国的侵略？又怎么会有汉奸？一个国家历史上的汉奸越多，就说明这个<br>国家越弱。对于一个遭到强敌侵略的弱国，总要有人挑起“汉奸的担子”，古今中外的历<br>史都是如此。因此我们不应该公式化地把“汉奸”理解为一群整天想著卖国求荣的民族败<br>类，而应从另外一个角度来理解“汉奸”们的悲剧。</p><p>附：汪精卫叛国“艳电” </p><p>１９３８年１２月２９日 </p><p>汪精卫 </p><p>重庆中央党部，蒋总统，暨中央执监委员诸同志均鉴： </p><p>今年４月，临时全国代表大会宣言，说明此次抗战之原因，曰：“自塘沽协定以来，<br>吾人所以忍辱负重与日本周旋，无非欲停止军事行动，采用和平方法，先谋北方各<br>省之保全，再进而谋东北四省问题之合理解决，在政治上以保持主权及行政之完整<br>为最低限度。在经济上以互惠平等为合作原则。”自去岁７月芦沟桥事变突发，中<br>国认为此种希望不能实现，始迫而出于抗战。顷读日本政府本月２２日关于调整中<br>日邦交根本方针的阐明：第一点，为善邻友好。并郑重声明日本对于中国无领土之<br>要求，无赔偿军费之要求，日本不但尊重中国之主权，且将仿明治维新前例，以允<br>许内地营业之自由为条件，交还租界，废除治外法权，俾中国能完成其独立。日本<br>政府既有此郑重声明，则吾人依于和平方法，不但北方各省可以保全，即抗战以来<br>沦陷各地亦可收复，而主权及行政之独立完整，亦得以保持，如此则吾人遵照宣言<br>谋东北四省问题之合理解决，实为应有之决心与步骤。第二点，为共同防共。前此<br>数年，日本政府屡曾提议，吾人顾虑以此之故，干涉及吾国之军事及内政。今日本<br>政府既已阐明，当以日德意防共协定之精神缔结中日防共协定，则此种顾虑，可以<br>消除。防共目的在防止共产国际之扰乱与阴谋，对苏邦交不生影响。中国共产党人<br>既声明愿为三民主义之实现而奋斗，则应即彻底抛弃其组织及宣传，并取消其边区<br>政府及军队之特殊组织，完全遵守中华民国之法律制度。三民主义为中华民国之最<br>高原则，一切违背此最高原则之组织与宣传，吾人必自动的积极的加以制裁，以尽<br>其维护中华民国之责任。第三点，为经济提携。此亦数年以来，日本政府屡曾提议<br>者，吾人以政治纠纷尚未解决，则经济提携无从说起。今者日本政府既已郑重阐明<br>尊重中国之主权及行政之独立完整，并阐明非欲在中国实行经济上之独占，亦非欲<br>要求中国限制第三国之利益，惟欲按照中日平等之原则，以谋经济提携之实现，则<br>对此主张应在原则上予以赞同，并应本此原则，以商订各种具体方案。以上三点，<br>兆铭经熟虑之后，以为国民政府应即以此为根据，与日本政府交换诚意，以期恢复<br>和平。日本政府１１月３日之声明，已改变１月１６日声明之态度，如国民政府根<br>据以上三点，为和平之谈判，则交涉之途径已开。中国抗战之目的，在求国家之生<br>存独立，抗战年余，创巨痛深，倘犹能以合于正义之和平而结束战事，则国家之生<br>存独立可保，即抗战之目的已达。以上三点，为和平之原则，至其条例，不可不悉<br>心商榷，求其适当。其尤要者，日本军队全部由中国撤去，必须普遍而迅速，所谓<br>在防共协定期间内，在特定地点允许驻兵，至多以内蒙附近之地点为限，此为中国<br>主权及行政之独立完整所关，必须如此，中国始能努力于战后之休养，努力于现代<br>国家之建设。中日两国壤地相接，善邻友好有其自然与必要，历年以来，所以背道<br>而驰，不可不深求其故，而各自明了其责任。今后中国固应以善邻友好为教育方针，<br>日本尤应令其国民放弃其侵华侮华之传统思想，而在教育上确立亲华之方针，以奠<br>定两国永久和平之基础，此为吾人对于东亚幸福应有之努力。同时吾人对于太平之<br>安宁秩序及世界之和平保障，亦必须与关系各国一致努力，以维持增进其友谊及共<br>同利益也。谨引提议，伏祈采纳！汪兆铭，艳。 </p><p>（《中国近代对外关系史资料选辑》上海人民出版社１９７７年版） </p>]]></content>
      
      
      <categories>
          
          <category> 转载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>“哲学”与“生物学“之间的见解探讨</title>
      <link href="/2017/10/11/%E2%80%9C%E5%93%B2%E5%AD%A6%E2%80%9D%E4%B8%8E%E2%80%9C%E7%94%9F%E7%89%A9%E5%AD%A6%E2%80%9C%E4%B9%8B%E9%97%B4%E7%9A%84%E8%A7%81%E8%A7%A3%E6%8E%A2%E8%AE%A8/"/>
      <url>/2017/10/11/%E2%80%9C%E5%93%B2%E5%AD%A6%E2%80%9D%E4%B8%8E%E2%80%9C%E7%94%9F%E7%89%A9%E5%AD%A6%E2%80%9C%E4%B9%8B%E9%97%B4%E7%9A%84%E8%A7%81%E8%A7%A3%E6%8E%A2%E8%AE%A8/</url>
      
        <content type="html"><![CDATA[<p>关于”哲学“与”生物学“之间的关系好似是有一番”矛盾“的。在我的浅陋寡闻的基础上，我想对此作一些感想，记录在下。</p><p>我所认为的“哲学”是以人类本身的意识认知为基础的，即大多数我们认为的“哲学”是在我们认知的这个自然之内的思考，对于种种之内的现象的思考，并且都是以我们的“意识”为基础的思考从而得出的一系列认知。而我所认为的“生物学”更多的则是在所谓的“科学手段”上的得出的一系列以研究实践或许也是掺杂着一些假设的的认知发现所得出的一系列认知。</p><a id="more"></a><p>而我想表达的是，前者注重个人意识上的思考，而后者可能注重实践加部分的思考。而它们之间的“矛盾”则是在于“意识为主”与“实践为主”的矛盾。这真的是一种矛盾吗？我在现在却也是得不到一个清晰的给我自己也说得过去的答案。</p><p>对于它们的认知或许还是需要我去更多的去了解，去思考的。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>这“完美”的一切如同“神设”，而我们还是依旧一无所知</title>
      <link href="/2017/10/11/%E8%BF%99%E2%80%9C%E5%AE%8C%E7%BE%8E%E2%80%9D%E7%9A%84%E4%B8%80%E5%88%87%E5%A6%82%E5%90%8C%E2%80%9C%E7%A5%9E%E8%AE%BE%E2%80%9D%EF%BC%8C%E8%80%8C%E6%88%91%E4%BB%AC%E8%BF%98%E6%98%AF%E4%BE%9D%E6%97%A7%E4%B8%80%E6%97%A0%E6%89%80%E7%9F%A5/"/>
      <url>/2017/10/11/%E8%BF%99%E2%80%9C%E5%AE%8C%E7%BE%8E%E2%80%9D%E7%9A%84%E4%B8%80%E5%88%87%E5%A6%82%E5%90%8C%E2%80%9C%E7%A5%9E%E8%AE%BE%E2%80%9D%EF%BC%8C%E8%80%8C%E6%88%91%E4%BB%AC%E8%BF%98%E6%98%AF%E4%BE%9D%E6%97%A7%E4%B8%80%E6%97%A0%E6%89%80%E7%9F%A5/</url>
      
        <content type="html"><![CDATA[<p>如今我们有看到的，未看到的这世上的一切，这自然的一切都好似被创造的“完美”。想一想吧，在我们身上的这一切的运转运作都是那么的完美无缺，在这自然中的一切，如整个星球的运转运作，如整个星系的运转运作，一切都在井然有序的在运作着，无声无息的，像是被谁创造的，这个谁除了用如今的“神”来解释或许是再恰当不过了，除了此之外我们也无从解释。我想说的是，这所有的一切像是“神设”的一般。</p><a id="more"></a><p>从我们熟而简知的一切的先人们对于我们生活的这一片土地的发现，有如这个星球上的真真切切存在着的磁场，真真切切存在的电波等等，我们可以知道的是，这一些东西与我们如今生活的这个星球是有着密切的关系的，我们如今有发现或还有一些未发现的这一些现象东西，是与如今的我们生活的这个星球的运转运作是离不开的。而在除了我们的这个星球外的，还有那么多的形形色色的星球，又或许是数不清的未知的星系，有如地球的这样的现象，这样的在这些个星球上的形形色色的现象东西在无形当中支撑着整个星球运转运作着的，在数量上毫不犹疑的可以确认是数不胜数的。而在这一些个星球当中的相互的联系又是那么的井然有序如同一个都在无声无息的运作着的作品，又或者说是被谁创造，到被创造到我们的如今一直被“展示”着，如今被我们发现，发现这其中的奥秘是多么的无穷，又或者说是如今我们真的还有太多的未知，是的，我想说的是，人类一直以来都是“无知”的生物，因为对于这整个自然，我们无从解释，我们也无从下手，不知如何去发掘这其中的一切井然有序的，无声无息的奥秘究竟是从何而来。除了拿“神”拿这一切如同“神设”来解释之外难道还有什么可以作为“借口”被人们信服吗？没有，从来就没有，从人类出现以来一直都没有。</p><p>对于如今的在这个非常火热的“人工智能”的科技项目中，我们又是因为对于生物的未知而停止不前，或者说是除此之外已是无从下手了，毫无办法了，如果无法正确解释解开我们人体的奥秘，“人工智能”就只能是在人类历史时代中出现的一个嚎头，一个“大笑话”罢了，因为那会因为人类的无知而终止对于这个项目的进行，而这个项目在如今的这个时代又是吸引如此多的人们去学习去探索，人们像是对待某一种所谓的“高大上”一样去对待“人工智能”，可能在此中的人人都以为自己在改变世界，在创造历史，可以明确的是，他们的确在创造历史，仅仅是因为如今的“人工智能”的浪潮就可以足以载入人类历史，如果因为人类的无知，对于区区我们的人体之中的奥秘都无法解释得知，毫无疑问，这一次的“人工智能”浪潮必将又是失败，而且是因为人类的无知与无能为力而失败告终。我曾经思考，我们会不会是曾经存在于这个星球上的上一代的“另类”所创造出来的他们所认为的所谓的一类“人工智能”呢？因为在这个我们都知道的自然当中是有着自我循环恢复与自我循环修复的循环过程的。但是很快我又拒绝思考这个假设问题了，因为若是如此，那么创造我们的那一群“另类”又是从何而来？关于他们的奥秘又是从何而来？难道都可以用“自然循环”来解释吗？绝非如此，因为本源的问题并非如此，而是“来”的来由，“来”的来源。我不知，我承认我又一次被无知打倒。而在人类历史上，这样的无知还算是少吗？不少了，因为人类从“无”到“有”以来对于这个所谓的“自然”是一无所知的，除了在我们生活的这个地球上的一些简小发现以外，我们人类的探索之路还是未知的，但是可笑的是还有我们的一些人将这些时间花费到不在“探索”的这条路上。我只能说，他们只会更加的无知罢了。</p><p>可以仔细想一想，区区的一个人体我们如今都无法去正确解释解开其中的奥秘究竟是从何而来，那么对于还有那么多的未知，自然之间的这个如同无声无息的井然有序的巨大未知的奥秘，我们又如何去解释解开？难道说还是需要所谓的“神设”去解释这一切吗？只会让人类更加的无知罢了，只会添加人类的无知，只会凸显人类的无能罢了。</p><p>我对于整个人体的假设想，是在大脑的方面有一些假设想的。因为如今的“人工智能”的瓶颈在探索“人脑”的路上停滞不前，在没有在搞清楚人脑的奥秘之前，所谓的“人工智能”永远也难有大的突破，那一些担心未来被机器人统治的危机的人们又何必大惊小怪呢，因为我们在如今已经是无法将“人工智能”这个项目再进一步的突破了，瓶颈已是清晰了然，至少是在人类发掘出人体的奥秘之前。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（忘记密码下）更改华为手机解锁屏幕密码</title>
      <link href="/2017/10/11/%EF%BC%88%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E4%B8%8B%EF%BC%89%E6%9B%B4%E6%94%B9%E5%8D%8E%E4%B8%BA%E6%89%8B%E6%9C%BA%E8%A7%A3%E9%94%81%E5%B1%8F%E5%B9%95%E5%AF%86%E7%A0%81/"/>
      <url>/2017/10/11/%EF%BC%88%E5%BF%98%E8%AE%B0%E5%AF%86%E7%A0%81%E4%B8%8B%EF%BC%89%E6%9B%B4%E6%94%B9%E5%8D%8E%E4%B8%BA%E6%89%8B%E6%9C%BA%E8%A7%A3%E9%94%81%E5%B1%8F%E5%B9%95%E5%AF%86%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<blockquote><p>今天早上一大早来到图书馆，发现我的华为手机青春版G9的屏幕锁密码早已是在我的脑海里消失得一丝不挂。why?So，I decide to 找方法去将这个烦人的东西给解开啊，现在也终于解开了，花了我宝贵的生命中的一个钟！<strong>一个钟</strong>啊！！</p></blockquote><ul><li><strong>前提，在忘记之前</strong> </li></ul><p>你忘记了屏幕锁密码！</p><a id="more"></a><p>你的手机不是在关机状态！（如果是关机的情况下忘记了，等着恢复出厂设置吧！因为她妈的华为手机是要求开机输入屏幕锁密码的！）</p><p>你的手机可以通过指纹进入！</p><ul><li><strong>开始这烦人的过程吧，实际上简单的我想跳舞</strong></li></ul><p>假设你已经进入了手机界面（通过你那恶心的指纹或者是其他的方法！）</p><p>点击 <code>手机找回</code> –&gt; 将<code>允许查找手机</code>开启 –&gt; 点击<code>查找我的手机</code> –&gt; <code>选择你现在的要更改解锁密码的手机的华为账号</code> –&gt; <code>开始定位</code><br>–&gt; 手机已经开始定位（当然你得要是在他妈得有网的情况下！）–&gt; 成功之后会提示重新输入密码（这就是他妈得我们的新的密码！记好了！）–&gt; 确认之后，手机会自己锁屏了 –&gt; 你打开输入刚刚的新的密码或者是通过指纹发现都可以解锁了！</p><ul><li>教程他妈的到此结束了！</li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> 华为 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于科学上网的基本知识</title>
      <link href="/2017/10/10/%E5%85%B3%E4%BA%8E%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/"/>
      <url>/2017/10/10/%E5%85%B3%E4%BA%8E%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在如今科学上网被越来越多的人所重视的今天，基本的科学上网的知识必不可少。我从这一篇<a href="https://doub.io/kxsw-zysx/" target="_blank" rel="external">文章</a>中看到了一些需要注意的基本知识，打算在这里记下，并且加上我本人的语言重新组成一篇新的文章。</p></blockquote><a id="more"></a><ul><li><strong>我有话说</strong></li></ul><p>昨天我发现一直可以免费使用的ss账号突然不能使用了，而如今越来越接近“十九大”，想必也是情理之中。在普及科学上网知识的过程中，我发现了<strong>不能使用过多的国产软件，在使用迅雷时不能在科学上网的情况下，也就是在ss或者是ssr开启的情况下下载BT种子，因为这样易导致IP被封杀。</strong>我在想是否是因为我的粗心导致了一直免费使用了近两个月的ss账号被封杀？有一些愧疚的…打算在此记录下。避免更多的人的劳动成果与爱心（分享）被因为无知给“浪费”。</p><ul><li>不能过多的相信“免费（free）”VPN软件！</li></ul><p>现在是一个<strong>大数据时代</strong>，并且因为我国的“特殊情况”下，许多的公司（包括我国的，也包括外国的）可能会<strong>不惜手段的获取用户的信息资料</strong>！仔细想一想，这都是合乎情理的，当然我不否认也有许多的人在有爱心的无私分享资源软件，比如我🤓这个有爱心，又有才华的帅哥。我的意见是，<strong>不要在有重要的信息的机器上使用免费的相关的软件，特别是如今的手机，包含了太多的信息，想一想就知道了。</strong>本人已经将免费的软件都换成了ss代理，并且将软件删除，是找的可信的人合租的。</p><hr><ul><li>资源：<a href="http://pan.baidu.com/s/1b5Tt9c" target="_blank" rel="external">ss,ssr客户端各版本下载</a></li></ul><hr><ul><li>自己搭建服务器，安全，无限制：<a href="https://jasper-1024.github.io/2016/06/26/VPS科学上网教程系列/" target="_blank" rel="external">VPS科学上网教程系列</a></li></ul><hr><ul><li>以下是上面的那一篇文章中的精华内容。</li></ul><p>科学上网<strong>必清CNNIC根证书</strong>，否则你在科学上网的时候他会一直粘着你，你会成为GFW的DDOS的肉鸡，并且他可能还会导致你的VPN、SS被封！所以必须要清除，否则你永远无法安心科学上网！</p><ul><li>关于 安全卫士/杀毒软件/浏览器 等说明</li></ul><p>各种国产杀毒/安全卫士和360/百度浏览器等软件都不能使用！简单给你们解释一下为什么。</p><p>安全卫士和杀毒软件，常常会在你访问 有病毒/木马网站 或者 嘿嘿嘿的网站的时候，突然弹窗提醒你这个网站不安全什么的。</p><p>他为什么知道这个网站不安全？因为他在监视你的一举一动，这很容易。</p><p>然后明知道国内在正常途径是不可能访问Google等网站，结果你突然 访问了Google等被墙的网站，那 安全卫士/杀毒软件 又不是傻子，自然知道你在使用代理或者VPN等方式科学上网。</p><p>杀毒软件和安全卫士都会以保护电脑不被侵害的理由监控电脑的一举一动，一旦你使用了vpn，他就可以检测到你正在使用vpn，虽然他无法知道你的传输数据，但是只要知道你在使用vpn就够了，然后再查询下你的ip就可以后台上传信息了，或许很快你的vpn的ip就被封了！</p><p>浏览器同样也是，比如你访问了国内根本不可能通过正常途径访问的网站（Google、Youtube），这样子浏览器肯定就知道你用了代理或者vpn，然后就会查一下ip然后上传信息，同样就会被封。</p><p>还有一些浏览器都有的同步数据功能，鬼知道他会不会借着同步你的数据作掩护去上传你的某些隐私和科学上网证据，反正加密了。对外声称这是在同步数据，骗过了大部分人。而且就算你关闭，他或许也会换个其他的理由继续上传，反正只要是个浏览器总不能禁止上传流量吧。</p><p>很多人会说：“我用了360安全卫士和360浏览器也没见到我的vpn/ss被封啊？”这只能说是时候未到，我们不应该把自己的vpn/ss安全寄托到不靠谱的希望上！我们要未雨绸缪，在问题出现前清除隐患！</p><p>各种国产杀毒/安全卫士和360/百度浏览器等软件都不能使用！简单给你们解释一下为什么。</p><p>安全卫士和杀毒软件，常常会在你访问 有病毒/木马网站 或者 嘿嘿嘿的网站的时候，突然弹窗提醒你这个网站不安全什么的。</p><p>他为什么知道这个网站不安全？因为他在监视你的一举一动，这很容易。</p><p>然后明知道国内在正常途径是不可能访问Google等网站，结果你突然 访问了Google等被墙的网站，那 安全卫士/杀毒软件 又不是傻子，自然知道你在使用代理或者VPN等方式科学上网。</p><p>杀毒软件和安全卫士都会以保护电脑不被侵害的理由监控电脑的一举一动，一旦你使用了vpn，他就可以检测到你正在使用vpn，虽然他无法知道你的传输数据，但是只要知道你在使用vpn就够了，然后再查询下你的ip就可以后台上传信息了，或许很快你的vpn的ip就被封了！</p><p>浏览器同样也是，比如你访问了国内根本不可能通过正常途径访问的网站（Google、Youtube），这样子浏览器肯定就知道你用了代理或者vpn，然后就会查一下ip然后上传信息，同样就会被封。</p><p>还有一些浏览器都有的同步数据功能，鬼知道他会不会借着同步你的数据作掩护去上传你的某些隐私和科学上网证据，反正加密了。对外声称这是在同步数据，骗过了大部分人。而且就算你关闭，他或许也会换个其他的理由继续上传，反正只要是个浏览器总不能禁止上传流量吧。</p><p>很多人会说：“我用了360安全卫士和360浏览器也没见到我的vpn/ss被封啊？”这只能说是时候未到，我们不应该把自己的vpn/ss安全寄托到不靠谱的希望上！我们要未雨绸缪，在问题出现前清除隐患！</p><p><strong>大数据时代，就是要尽一切可能的收集任何用户的资料信息。</strong></p><blockquote><p>360浏览器、百度浏览器等国内浏览器官方内置的科学上网功能都不支持使用，这些代理很可能会被用于中间人攻击。如果该“中间人”与浏览器官方同一阵线，那么浏览器验证机制就会放行这种攻击。国内产浏览器也不推荐使用，有用户透露，360浏览器在安装的过程中就引发了win7系统报警，证明该程序有规避认证的行为。全球三大桌面浏览器在隐私保护方面的比较一般认为，Firefox最优，其次是Chrome/Chromium，再其次是IE。</p></blockquote><p>发照片自爆是很多网友的喜好，但经常发表敏感政治言论的网友这方面就要小心些了，很容易因此被人肉搜索到。另，建议登陆海外网站的时候尽可能不使用和在大陆平台上同样的昵称和同样的本人照片头像，即便墙内身份暴露，只要否认墙外身份，“有关部门”就基本无法获取证据。</p><p>很多社交平台都有分享地理位置的功能，比如墙内的微信、微博和墙外的推特等，但不推荐使用，如果您用的是苹果产品，可以直接选择在设置中关闭定位服务的方法来保护行踪隐私。</p><p>有些网站希望用户输入求学就业经历，以便联系到同学同事互相添加。如果该应用是大陆开发的产品就不推荐使用这项功能。您肯定有其他方式联系到您觉得值得联系的同学和同事。</p><p>尽可能不使用公共场合免费的wifi，如果遭遇恶意搭建的wifi，很容易被盗取个人信息，其他安全性不明的wifi网络也要谨慎选择。</p><p>曾经有网友曝，小米手机和小米平板都会在用户使用加密数据或使用VPN科学上网時，窃取数据并发送到北京某服務器；360系列软件则会监控用戶的qq、skype等通讯窃取数据。对于后者已能基本确信，对于前者建议谨慎选择以防患于未然。</p><p>国内产的杀毒软件也不推荐使用，比如：360“监控”猥士、腾讯“收集”管家、百度猥士，本网曾有报道，奇虎 360 投资的一家微型公司“麦芽地”，其前身是个人网站“麦克孤独”，被曝是“WireLurker(MacHook)”木马制作者和传播者。</p><blockquote><p>最近发现了一个很有趣的事情，北京大学的校园网VPN也注明了禁止使用360等安全软件，而且说必须卸载。看来他们也知道一些什么事情！</p></blockquote><ul><li>11月3号出台的《反恐法草案》中第十五条提到：</li></ul><blockquote><p>电信业务经营者、互联网服务提供者应当在电信和互联网的设计、建设和运行中预设技术接口，将密码方案报密码主管部门审查。未预设技术接口，或者未报审密码方案的，相关产品或者技术不得投入使用。已经投入使用的，主管部门应当责令其立即停止使用。在中华人民共和国境内提供电信业务、互联网服务的，应当将相关设备、境内用户数据留存在中华人民共和国境内。拒不留存的，不得在中华人民共和国境内提供服务。</p></blockquote><p>该草案很可能全盘通过，也就是说，极大程度上增强了使用国内平台和服务的危险性。</p><p>所以说，国内的软件千万不能用！国内的软件千万不能用！国内的软件千万不能用！很重要所以说三遍！！！</p><p>给你们普及一下相关的法律法规，免得水表被炒爆了也不知道！</p><ul><li>根据《计算机信息网络国际互联网安全保护管理办法》（公安部令第33号）第五条：</li></ul><blockquote><p>任何单位和个人不得利用国际联网制作、复制、查阅和传播下列信息：<br>(一)煽动抗拒、破坏宪法和法律、行政法规实施的；<br>(二)煽动颠覆国家政权，推翻社会主义制度的；<br>(三)煽动分裂国家、破坏国家统一的；<br>(四)煽动民族仇恨、民族歧视，破坏民族团结的；<br>(五)捏造或者歪曲事实，散布谣言，扰乱社会秩序的；<br>(六)宣扬封建迷信、淫秽、色情、赌博、暴力、凶杀、恐怖，教唆犯罪的；<br>(七)公然侮辱他人或者捏造事实诽谤他人的；<br>(八)损害国家机关信誉的；<br>(九)其他违反宪法和法律、行政法规的。<br>违反法律、行政法规，有本办法第五条、第六条所列行为之一的，由公安机关给予警告，有违法所得的，没收违法所得，对个人可以并处五千元以下的罚款，对单位可以并处一万五千元以下的罚款；<br>情节严重的，并可以给予六个月以内停止联网、停机整顿的处罚，必要时可以建议原发证、审批机构吊销经营许可证或者取消联网资格；构成违反治安管理行为的，依照治安管理处罚条例的规定处罚；构成犯罪的，依法追究刑事责任。</p></blockquote><p>情节较轻的只是警告一下，并进行经济处罚。虽然不多但是那些键盘侠屌丝就别再出去丢人乱说了，否则你也只能一辈子屌丝了！</p><p>但是情节严重给予的处罚就会很严重了，构成犯罪的还会追究刑事责任。所以那些反gong心理的人自己注意点吧！</p><ul><li>根据2013年9月发布的最高人民法院和最高人民检察院</li></ul><p>《关于办理利用信息网络实施诽谤等刑事案件适用法律若干问题的解释》中的第五条：</p><blockquote><p>利用信息网络辱骂、恐吓他人，情节恶劣，破坏社会秩序的，依照刑法第二百九十三条第一款第（二）项的规定，以寻衅滋事罪定罪处罚。<br>编造虚假信息，或者明知是编造的虚假信息，在信息网络上散布，或者组织、指使人员在信息网络上散布，起哄闹事，造成公共秩序严重混乱的，依照刑法第二百九十三条第一款第（四）项的规定，以寻衅滋事罪定罪处罚。<br>这条司法解释曾经遭到了部分律师强烈反对，认为其对于网络言论的控制和镇压违背宪法有关言论自由的权利精神。</p></blockquote><p>有些人看了上面的内容之后就会很担心科学上网会不会犯法、查水表，所以我在科普一下科学上网的相关法律法规。</p><p>从国内关于互联网管制立法角度上来讲，目前可以将科学上网行为解释为犯法的法律和条文只有如下条文</p><ul><li>《中华人民共和国计算机信息网络国际联网惯例暂行规定》（国务院令第195号）中的第六条：</li></ul><blockquote><p>计算机信息网络直接进行国际联网，必须使用邮电部国家公用电信网提供的国际出入口信道。任何单位和个人不得自行建立或者使用其他信道进行国际联网。<br>牵强一点的讲，提供和开发科学上网工具的行为，可以算作自行建立或者使用其它信道进行国际联网。而对这一条的违法行为的处罚措施，则列于同一规定的第十四、十五条：</p><p>第十四条 违反本规定第六条、第八条和第十条的规定的，由公安机关责令停止联网，给予警告，可以并处15000元以下的罚款；有违法所得的，没收违法所得。<br>第十五条 违反本规定，同时触犯其他有关法律、行政法规的，依照有关法律、行政法规的规定予以处罚；构成犯罪的，依法追究刑事责任。<br>应该说，这项规定处罚较低，只是经济处罚，但另外约定构成犯罪的行为，也将追究刑事责任，但具体是什么行为构成犯罪，处罚依据哪条刑律，都没有具体言明。而且在实际操作中，也从未援引过这条法令对科学上网工具的开发者和使用者进行处罚。</p></blockquote><p>综上所述，被查水表的往往是因为不当言论造成的，但是如果开发出科学上网软件并广泛传播 难以封锁，那么也会被墙查水表来断绝软件前途，当然也不排除上述多种因素的共同作用。</p><p>所以目前状况下不必因为使用科学上网服务而过分担心被查水表（简单的说你们还没被查水表的资格），但随着目前互联网管制的日趋紧张，今后的形势不容乐观。</p><p>最后，据称网警是通过“钓鱼执法”假扮一个需要购买科学上网服务的客户，通过QQ等通讯工具查水表的。</p><ul><li><strong>声明</strong></li></ul><p>转载请超链接注明：逗比根据地 » 科学上网的注意事项及相关法律（必读）<br>责任声明：本站一切资源仅用作交流学习，请勿用作商业或违法行为！如造成任何后果，本站概不负责！</p><p>链接已在上方的文章声明。</p>]]></content>
      
      
      <categories>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用免费的SuperVPN翻墙</title>
      <link href="/2017/10/09/%E5%88%A9%E7%94%A8%E5%85%8D%E8%B4%B9%E7%9A%84SuperVPN%E7%BF%BB%E5%A2%99/"/>
      <url>/2017/10/09/%E5%88%A9%E7%94%A8%E5%85%8D%E8%B4%B9%E7%9A%84SuperVPN%E7%BF%BB%E5%A2%99/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>SuperVPN是一个安全的，免费的，无限制的翻墙软件，并且在经过我的手机端测试确实是如此，是一个不可多得的好的良心软件作品。更加重要的是，它是一个<strong>适合全平台的软件，即手机端，PC端都可以用其翻墙</strong>。</p></blockquote><ul><li><p>了解SuperVPN：</p><p> <a href="http://forpcapps.net/supervpn-free-vpn-for-pc-windows-10-and-mac/" target="_blank" rel="external">SuperVPN官网</a></p></li></ul><blockquote><p>在其中的官网中还有<strong>很多的免费的VPN软件的链接</strong>可以进入，即表示这里是有很多的<strong>免费VPN软件可以给我们使用的</strong>，刚刚经过我的测试，好像不需要翻墙就可以进去官网了。</p></blockquote><a id="more"></a><h1 id="开始下载安装过程"><a href="#开始下载安装过程" class="headerlink" title="开始下载安装过程"></a>开始下载安装过程</h1><ul><li>以下是官网对于其的介绍：</li></ul><blockquote><p> SuperVPN Free VPN For PC, Windows 10, And Mac<br>SuperVPN Free VPN for PC is a free and best one VPN client app. It’s an easy to use app like with one click you can easily connect to VPN. With SuperVPN Free VPN app you can browse your internet in safe and secure place. You will find this app quite easy to use. As this app asked access to a lot of personal information so you may be found it little interrupted. But being a VPN app users, this SuperVPN Free VPN app did require this information in order to function properly. So you will find this option good for you.</p><p>This app can easily protect your privacy and keep you safe from 3rd party tracking. SuperVPN Free VPN app has</p><p>SuperVPN for pc<br>many interesting features such as you can unblock geographically restricted websites. You don’t need any kind of registration or settings. You also can encrypt your internet traffic. you can use most VPN solution. With its free layout VPN client, you can easily  navigate those users who haven’t used VPN clients before. The best feature of this app is to allows you to connect those websites whose access has been restricted to you. You must ever want privacy while you are browsing the world-wide, so in that case VPN is the best app to keep up your sensitive information secret. Now you can free download SuperVPN Free VPN for PC client. This app provides 20 days trial after that you can use this app for 60 minutes each sessions. And when you want to reconnect, simply end the session and reconnect.</p></blockquote><ul><li>官网介绍的免费的SuperVPN的功能</li></ul><blockquote><p>Main features of SuperVPN Free VPN Client:</p><p>Bypass internet censorship<br>Secure your connection<br>you can protect your privacy<br>Also can unblock websites and Apps<br>You can hide your public and local IP Addresses.</p></blockquote><ul><li>官网中如何在PC端下载SuperVPN的介绍：</li></ul><blockquote><p>How To Download SuperVPN on PC:</p><p>First you need to download BlueStacks Android emulator on your PC or Windows and Mac. Once you download complete install the pack, and add your Gmail account in Bluestacks by go to setting then Accounts and add your Gmail account. SO type in your search bad “SuperVPN” by Next Streaming. Click on the app and install it on your Bluestacks. Once installation is complete go to your apps area and find the downloaded application. Find SuperVPN and start using it. See also: Best Android Emulator For Windows 10</p><p>即在上方提到的需要下载<code>BlueStacks</code> 这个软件可以在官网之中下载，当然也可在我的百度云可以下载：<a href="http://pan.baidu.com/s/1dF5xxrb" target="_blank" rel="external">下载BlueStacks</a></p></blockquote><ul><li>下载完成之后根据上方提到的，绑定账号之后，搜索<code>SuperVPN</code>并且下载。打开之后选择地区连接，即可使用了。</li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><p>关于安卓手机端的SuperVPN的下载与使用可以参考官网的教程，当然也可以参考我的这一篇文章：</p><p>  <a href="https://liujunjie11.github.io/2017/10/09/（安卓）手机利用SuperVPN破解版无限制翻墙/#more">手机利用SuperVPN无限制翻墙</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（安卓）手机利用免费的SuperVPN翻墙</title>
      <link href="/2017/10/09/%EF%BC%88%E5%AE%89%E5%8D%93%EF%BC%89%E6%89%8B%E6%9C%BA%E5%88%A9%E7%94%A8%E5%85%8D%E8%B4%B9%E7%9A%84SuperVPN%E7%BF%BB%E5%A2%99/"/>
      <url>/2017/10/09/%EF%BC%88%E5%AE%89%E5%8D%93%EF%BC%89%E6%89%8B%E6%9C%BA%E5%88%A9%E7%94%A8%E5%85%8D%E8%B4%B9%E7%9A%84SuperVPN%E7%BF%BB%E5%A2%99/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>每次看看新闻，查询资料都要打开电脑用ss翻墙，现在决定用手机翻墙了。因为用的是来自网上的资源，担心是少不了。经过测试是<strong>安全，无毒，可行的，关键是无限制的，速度上游</strong></p></blockquote><ul><li><p>安卓系统</p></li><li><p>SuperVPN</p></li><li><p>华为浏览器</p></li><li><p><strong>声明</strong></p><p>资源参考：<a href="http://www.zdfans.com/7216.html" target="_blank" rel="external">资源参考</a></p></li></ul><blockquote><p><strong>大家有钱的请还是要支持正版哦！</strong>，在此说说华为手机上的自配的浏览器，体验挺不错，有点像是Mac上的 <code>Safari</code> 浏览器，也使用过了谷歌浏览器与火狐，最终选择了自带的，毕竟内存也是个问题。</p></blockquote><a id="more"></a><ul><li><p>SuperVPN官网：</p><p><a href="http://forpcapps.net/supervpn-free-vpn-for-pc-windows-10-and-mac/" target="_blank" rel="external">SuperVPN官网</a></p></li></ul><blockquote><p>在官网中也是支持PC端的，即是说，SuperVPN是支持全平台的，并且都是<strong>免费的，无限制的使用的</strong>！</p></blockquote><ul><li><p>关于PC端的使用与下载可以参考我的这一篇文章：</p><p><a href="https://liujunjie11.github.io/2017/10/09/利用免费的SuperVPN翻墙/#more">PC端下载SuperVPN</a></p></li></ul><h1 id="安装使用过程"><a href="#安装使用过程" class="headerlink" title="安装使用过程"></a>安装使用过程</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul><li><p>下载SuperVPN</p><p><a href="http://pan.stnts.com/s/sLVxpKe" target="_blank" rel="external">下载地址</a></p></li><li><p>如下图选择SuperVPN相关的软件，选择 <code>SuperVPN_v4.4_NoAD.apk</code> 本地下载，如果想用蓝灯破解版可以选择 <code>Lantern-2.2.5 (20160627.192617).apk</code> ，后者是经过其他人测试过的。</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/F2579BCB47C339EF114801FAAB267F8A.jpg" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/C49AAC73F4666DFB69B3F42D9AE4976B.jpg" alt=""></p><hr><ul><li>下载完安装过程中，选择 <code>在后台开启</code> ，也可以选择<code>在启动时开启</code> ，<strong>因为是破解版，将其的权限全部选择为 <code>拒绝</code></strong>。之后安装成功之后如下图出现图标：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/4BC95429FE712E4A6AE7461F0DA3A6D1.jpg" alt=""></p><hr><ul><li>如图选择地区，实际上都可行，差不多<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/A320BBD67856459F06AAC46F538A7EC6.jpg" alt=""></li></ul><ul><li><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/2E134946D7C191F0E27774076C5E08F8.jpg" alt=""></li></ul><hr><ul><li><p>保持软件在后台运行（如图1），连接打开浏览器上谷歌，发现可以上去了，并且速度还是不错滴，VeryGood！（如图2）</p></li><li><p>图1</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8BE7A714C1570AD959FAF11E6C1EB6B8.jpg" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/55EB2F7C1F4813B83B97468E0E8FF4AB.jpg" alt=""></p><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li>在资源参考的那一篇文章中有关于蓝灯破解版的下载资源。因为是破解版，在交易什么的界面，还是关闭软件的好..</li></ul><blockquote><p>GoodJ！翻墙愉快。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科学上网 </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识到庸愚的我</title>
      <link href="/2017/10/08/%E8%AE%A4%E8%AF%86%E5%88%B0%E5%BA%B8%E6%84%9A%E7%9A%84%E6%88%91/"/>
      <url>/2017/10/08/%E8%AE%A4%E8%AF%86%E5%88%B0%E5%BA%B8%E6%84%9A%E7%9A%84%E6%88%91/</url>
      
        <content type="html"><![CDATA[<p>从前的我是愚蠢的，我必须要认识到这一点。</p><blockquote><p>“真正的自由就是要消灭欲望。”</p><p>“那么，又是什么使人们感到不安和害怕呢？是暴君和他的卫兵吗？但愿不是这样。本性自由的事物，除了会受到它本身的阻碍和困扰以外，是不会受任何其他事物的阻碍与困扰的。所以，困扰我们的往往都是我们自己的观念。当我们逃出了这种思维，就会豁然开朗。”</p></blockquote><a id="more"></a><ul><li>摘录来自: 马可·奥勒留. “沉思录大全集(超值白金版)。 </li></ul><p>通过阅读《沉思录》，我认识到了自己对于“自由”的认知是多么的肤浅与无知。并且对于我的思维我认为是有着巨大的缺陷的。当然我并没有认为这本书可以就此定义我的人生意想，又或者是定义我对于这个人世间的看法，又或者是我对于这个宇宙的看法。奇怪的是我又在就此解释一些什么？为了一些所谓的观众？还是用来解释说服自己？我对于此问题，我可以说，以上的两者我都是有一些“偏好”的。可笑不可笑呢。这就是我的自以为是了罢，我的肤浅，我的无知罢。我曾经自以为着的，以为自己可以是一个“写作手”，我如今现在想起，真的是让我自己都羞愧不已。我想我是真的有一些忘记了，我开这个博客的初衷了。而现在我又试图解释一些什么，为了我那愚蠢的不行的想法。</p><p>关于对于我自己这一段时间的沉沦，在这片土地上的所谓的“国庆节”假期的中的这一段时间中的沉沦，我想大部分的缘由不就是看到了自己最厌恶的一些东西吗，一个“九评”？罢了罢了，我又在找什么借口说服自己呢？不过是自己的无能与愚蠢罢。关于对于恐惧，我竟然如从前一般的窝囊，我的意志的坚定是我没有想到过的脆弱易碎，这真的是我未曾想到的，我的勇气，我的热血好似因为那一场沉沦都好似不见了，我也开始变得比从前更加的恐惧了。如果说是由外来的威胁与行为所影响波及到了我，使得我出现了“恐惧感”与“无力感”，那么我自身的引发亦然是不可或缺的过渡过程，可以断定的是，我是因为内心意志的不稳定与自心对于自身的思维的不契合与不坚定所被外界波及，继而影响到了我自身的感觉层面的波动，也就是我的“恐惧感”与“无力感”的出现的缘由罢。这么一说来，我还是因为自己的无能所以才把自己推向了“恐惧感”与“无力感”的空间，让自己饱受这些个感觉的影响的。这亦然是可以解释我的无能的，我的懦夫行为的。我在如今现在发现，我的勇气层面还在吗？还剩多少？我没有了勇气，所以我感觉到了自己的无能，我必须要承认。</p><p>有一些事情与认知依旧需要我去发现，需要我去思考，找回我的勇气。然而在这之前，我还需要更多的学习，更多的去挖掘，去稳定我的内心意志，这样我的勇气才会有朝一日在默默中回归。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20岁的今天</title>
      <link href="/2017/10/08/20%E5%B2%81%E7%9A%84%E4%BB%8A%E5%A4%A9/"/>
      <url>/2017/10/08/20%E5%B2%81%E7%9A%84%E4%BB%8A%E5%A4%A9/</url>
      
        <content type="html"><![CDATA[<p>今天一早，母亲打电话过来，我还在睡梦中呢，醒来也是像从前那一般一样的不屑。后来我才知道原来我已经20岁了。</p><p>哇，“20岁”。可是我却是没有什么特别的感觉，或许是在从前我会感觉是一个还难以碰触到的数字，而今天我到了“20”这个数字了，而在此刻在如今，真的是一点感觉都没有，一点点悲伤都没有，奇怪，为什么我要悲伤呢？哈哈。</p><a id="more"></a><p>今天的哈尔滨有一点冷啊，不过像去年的这个时候都已经下雪了的。今天是这片土地上的“国庆节”的假期的最后一天，我还是像往常一样吃完了早饭来到了图书馆，看完了一些想看的新闻，写完了要求的作业，之后便是捧着《沉思录》看了起来。再之后，看了看微信上的信息，才知道我已经20岁了。那么祝我生日快乐吧🎂。</p><p>“20岁”究竟意味着什么呢？对于现在的我来说或许真的是一个数字罢了，因为我不再对此拥有什么幻想了。但是又仔细想想，我向往过大学生活，但是从来没有向往过“20岁”这个字词呢😹，我也向往过那一些个大学生活像电影那般的青春热血好玩，但是反观现在，我过的真的是狼狈的不行呢，为了以后的生活做努力，为了自己的需求，为了自己的理想，每天干着自己从前不曾想过的事，过着自己从前从未想过的大学生活。但是我可以大声的说这是我自己的选择啊，我不后悔呀。真的是这样吗？我突然感觉到了一股悲伤了呢。我明明就是在苟且着，何必又要找什么烂借口来说服自己？真的是有一点可笑的意味了，哈哈。我一直相信着，大学之道不是为了去苟且，而是为了在之后能够更好的生活。</p><p>我现在在说这一些的时候我却是能够心平气和的去接受，去诉说，去毫不留情面地去笑自己，去告诫自己，去批判自己。这就是所谓的“成长”吧，所谓的更好的能与自己生活吧。</p><p>现在的已经20岁的我，干着不是我想干的事情，但是这是我想要改变这个世界上的一些东西的工具，我想为这个世界带来更多的需要，带来更多的“爱”与“希望”。我想要这个世界更加的美好，人们能够更好的生活。</p><p>“刘俊”是我的父母在我出生之后给我的名字，也是我在这个世界上的代名词，那么这样就好了，我要向这个世界大声的说：刘俊，祝你20岁生日快乐呀！</p><p>“20岁”，真的是一个好的数字呢，给我带来了那么多的惊喜，那么的感悟，那么多的未知，还有那么多的如今的我从未想过的未来。谢谢啦，刘俊的“20岁”，😁。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观读“九评”有感</title>
      <link href="/2017/10/06/%E8%A7%82%E8%AF%BB%E2%80%9C%E4%B9%9D%E8%AF%84%E2%80%9D%E6%9C%89%E6%84%9F/"/>
      <url>/2017/10/06/%E8%A7%82%E8%AF%BB%E2%80%9C%E4%B9%9D%E8%AF%84%E2%80%9D%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>原来我也不过是一个懦夫。一个不敢言声，一个在中共邪灵下的自以为是的，却是正中其下怀的懦夫罢。</p><p>我是被中共这个人类历时难得有的邪灵所震撼到了。遥想这个中华大地，遥想这片土地上的社会人群，遥想这个社会的人文风气，一切都是契合的那么的天衣无缝，但我认为这绝对不是什么为了哗众取目的言辞，这真的是现实的真实写照。共产党的产生真的是人类历迹上的一大悲哀，因为从此又一个真正的魔鬼被释放到了人间。而我却是在认识了这个魔鬼的真相之后，居然不由自主的感觉到了可怕，这是怎样的一个恶魔般的团体啊，从此将噩梦带来到了这片土地，带来了无数的谎言与欺骗，带来了比噩梦还要可怕的毒药，可悲的是，无数的人们却是在它的毒害下却是毫不知情，居然反过来帮着魔鬼“求情”。</p><a id="more"></a><p>不可否认的是，现在的我，又或者是现在的许多的国人们心中还残留着这个魔鬼给我们灌输的毒药，这是一种精神毒药，真正的让我感觉到细思恐极，我感到愤怒，然而更多的是恐惧与无奈，我们的这一片中华大地如今因为这个魔鬼是一个怎样的国度啊，这里的人们还是可以称之为“人”的吗？我发至内心的感到了恐惧。我也同时对于这个民族的未来而悲叹，对这个魔鬼的嗔恨无处安放，而我如今现在却只有在此像个懦夫一样的在此记录下我的不甘。这是我的悲哀，亦是这个民族的悲哀！</p><p>所幸，现在还有着许多的在内外的一些爱国人士没有放弃对这个好似被上帝摒弃的中华大地的拯救，他们与中共这个魔鬼在做着斗争，冒着随时可能被夺取生命的危险，真的是让人感到一丝欣慰与一丝希望呀，中国的未来的希望就是因为这一群人们而在前方闪闪发光，我们每一个有良知的中国人都应该站起来，为了将“中共”这个魔鬼赶出中华大地尽我们的一份力，甚至于我们的生命。</p><p>“九评共产党”是一部可以帮助国人看清离这个离自己是多么近的魔鬼的真面目的，我们从前在童话故事中听说过的魔鬼，如今在现实中却是离我们是多么的近呀，然而这个魔鬼却是比童话故事中更加的恶毒，不由得让人感觉到对于它的无尽的恐惧与嗔恨。这是一部有勇气的，敢于向魔鬼挑战的片子，可以唤醒国人们的一部良心之作，亦然是一部为国人为中国大地着想的一部救国的之作。感谢这一些不畏魔鬼暴权的人们的默默贡献。希望能让更多的后来人看到，真正的了解自己身边的这个魔鬼的真面目。</p><p>那一些还在违背良知帮助“中共”这个魔鬼的人们，亦或者是仍然麻木不仁的人们啊，你们是多么的可悲呀。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思学，思己</title>
      <link href="/2017/10/05/%E6%80%9D%E5%AD%A6%EF%BC%8C%E6%80%9D%E5%B7%B1/"/>
      <url>/2017/10/05/%E6%80%9D%E5%AD%A6%EF%BC%8C%E6%80%9D%E5%B7%B1/</url>
      
        <content type="html"><![CDATA[<p>哲学，哲，有折射世间成理的意味，也有以理为基口授于人的意味。学，则是学无止境的意味罢。“道”与“理”，源于生活，来于生活，简与生活。思想与宇宙自然之理，一切的“道”与“理”好似都是早已有之，好似都是井然有序的了。学，人生的意义在于学？人生以学为铺。不光光是对于我们自己的人生亦或者是仅限于这个我们生活的人世间，而是整个自然。反观自然，若是仅仅的以为是我们所在的这个所谓的地球上的大自然，那真的是愚不可及了。整个自然的范围是我们人类所思索不到的，以这个所谓的我们已知的这个宇宙来描述自然？还是整个所谓的星系来描述？那也是微不足道的。自然的奥秘在于它的未知的广阔与“成理”的魅力，这对于那一些拥有追求未知的强盛求知欲的人们来说，这真的是让人兴奋的，同时也是让人好奇与敬畏的。好奇与兴奋是因自然的未知与我们的求知欲望相吻合，所以我们如此。而敬畏，是因为这个自然的未知范围真的是太广太阔，它的无边无际，它的学无止境，足以给人一种人生短暂之叹。人生是要以“学”为铺的，思索人生，思索并且不断的追与自然的未知，再也不会有比这更让人热血沸腾的了，以此来记得自己还活着，真是一件美好之事呀。</p><a id="more"></a><p>人啊，没有勇气去拷问我们自己的灵魂，没有勇气去改变我们自己的灵魂所有的丑恶，是一件多么愚蠢，多么可悲的事情。如果是因为此而随之带来给我们烦恼与恼怒，那又是更高一层的可笑了，何为更高一层的可笑？我所认为的即是比可笑更为可笑罢。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有感</title>
      <link href="/2017/10/02/%E6%9C%89%E6%84%9F/"/>
      <url>/2017/10/02/%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>最近香港，四川的大游行让我热血沸腾。我看到了国人的血性与中国未来的希望。我衷心的希望每个中国人都要站起来为这片土地，为中华民族，为我们，为我们的子孙后代，为我们自己的人权，为了实现这片我们自己的土地的民主。加油，所有在争取的人们。</p><a id="more"></a><p>我始终相信着一场变革将会在不久到来。一场我们中国人自己的变革，一场我们中国人自己争取的民主变革。</p><p>我热血沸腾，我也好狠自己却是在行动上在现在无能为力，我也狠还有那么多的国人没有血性继续麻木。我心向着所有在争取的人们，以你们正在争取为自豪，我永远支持你们！</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看电影“飞越疯人院”有感</title>
      <link href="/2017/10/01/%E7%9C%8B%E7%94%B5%E5%BD%B1%E2%80%9C%E9%A3%9E%E8%B6%8A%E7%96%AF%E4%BA%BA%E9%99%A2%E2%80%9D%E6%9C%89%E6%84%9F/"/>
      <url>/2017/10/01/%E7%9C%8B%E7%94%B5%E5%BD%B1%E2%80%9C%E9%A3%9E%E8%B6%8A%E7%96%AF%E4%BA%BA%E9%99%A2%E2%80%9D%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<p>刚刚看完了“飞越疯人院”这一电影，对我的感触是有一些的，至少能使得我看的比较认真。在更多的看到的是“自由”之外，我又想起对于这个世界上的所谓的“体制”的感想了。所谓的“体制”只是一些人的自己的“私欲”罢了。</p><a id="more"></a><p>如果说科学是完全可信的，权威是不可撼动的，那才是真正的所谓的“体制”了吧。想一想，这是多么的可怕。几个人拿出它们所谓的“证明书”，并且打着“科学”的，“权威”的帽子用以来使得让人们去相信，去拥护他的想法与他的所谓的成果，说到底，那也不过是一个人的想法罢了。有一些时候，所谓的“科学”与“权威”才是真正意义上的“邪教”罢。</p><p>这一些的，被一少部分人所“制定”的“体制”，真的是让人们失去了太多宝贵的东西，更加受伤的是我们每个人生来据有的“自由”。难道不是吗，在我们这个人世间处处都是所谓的“体制”，处处都是“限制”。无论是所谓的“素质”与“修养”，什么是“素质”与“修养”？还不是这个人世间可笑的“体制”说的谎言。还有那可笑的“信仰”，什么是信仰？去信奉一个人人都爱去信奉的不知是真是假的人，一个由自己的“私欲”所得的各种“道”与“理”？还是所谓的“爱”与“神”？，这就是信仰？还不是给人设置了种种的“体制”。这是一个处处都是“体制”的世界，由人类自己创建的“体制”世界，或许在其中的人们还在天天喊着追求“自由”呢，多么的可笑啊。</p><p>我开始懂了在《沉思录》中说的，人是没有自由而言的，在这个处处都是“体制”的人世间，这个大自然的自然“体制”的万物世界中。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>(Mac下）hadoop2.8.1伪分布式的搭建，以及用eclipse开发Hadoop</title>
      <link href="/2017/10/01/(Mac%E4%B8%8B%EF%BC%89hadoop2-8-1%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%E6%90%AD%E5%BB%BA%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%A8eclipse%E5%BC%80%E5%8F%91Hadoop/"/>
      <url>/2017/10/01/(Mac%E4%B8%8B%EF%BC%89hadoop2-8-1%E4%BC%AA%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%E6%90%AD%E5%BB%BA%EF%BC%8C%E4%BB%A5%E5%8F%8A%E7%94%A8eclipse%E5%BC%80%E5%8F%91Hadoop/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><p>声明</p><blockquote><p><strong>我所有参考的文章，均在我的<a href="http://www.jianshu.com/u/f8941dd1c677" target="_blank" rel="external">简书</a>中已标明参考链接出处。</strong></p></blockquote><ul><li><p>Mac系统。（当然其他的系统也可以参考，区别并不大。）</p></li><li><p>Hadoop2.8.1</p></li><li><p>homebrew</p></li><li><p>eclipse</p></li><li><p>相关的插件</p></li></ul></li></ul><blockquote><p>最近在学习Hadoop，在搭建环境当中遇到了一些问题，如今总算是解决了，花了不少时间，毕竟万事开头难嘛，现在也有一些了解了。在此，我将记录下我遇到的所有的问题以及搭建的所有详细过程，以此帮助需要的朋友。</p></blockquote><hr><a id="more"></a><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li><p>homebrew下载：</p><p><a href="https://brew.sh/index_zh-cn.html" target="_blank" rel="external">homebrew官网</a></p></li></ul><blockquote><p>用homebrew下载可以自动为此配置系统环境，是Mac系统不可或缺的下载神器，但就是它的镜像在国外，所以有时下载会非常慢，甚至于没有动静。若是下载太慢，可以参考这篇<a href="http://w3cboy.com/post/2017/03/homebrew-speed-up/" target="_blank" rel="external">文章</a></p></blockquote><ul><li>homebrew下载之后打开终端，输入 <code>brew install Hadoop</code> ，开始自动下载Hadoop，我的是Hadoop2.8.1版本。homebrew下载到的目录（如图）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%8812.19.28.png" alt=""></p><hr><ul><li>Hadoop-eclipse-plugin2.7.3.jar插件，见我的<a href="https://pan.baidu.com/s/1VxOomqUK0h0u-rOCWHp2-Q" target="_blank" rel="external">百度云下载</a> 。实际上这个插件对于Hadoop2.8.1版本同样适用，本人已经用此搭建环境成功。当然，如果你有强迫症之类的可以见我的<a href="http://pan.baidu.com/s/1kUVYPE3" target="_blank" rel="external">百度云下载2.7.3版本</a> ，这个版本已经在官网查找不到了，实际上经过我的测试这个对应的版本问题多多..</li></ul><ul><li>GitHub上的Hadoop-eclipse-plugin2.X.jar插件，见我的<a href="http://pan.baidu.com/s/1kVuvsR9" target="_blank" rel="external">百度云下载</a></li></ul><ul><li>eclipse下载。自行去<a href="https://www.eclipse.org/downloads/" target="_blank" rel="external">官网</a>解决吧。</li></ul><ul><li><strong>声明</strong></li></ul><blockquote><p>以上的插件资源来自<a href="http://blog.leanote.com/post/2630794313@qq.com/基于Eclipse搭建hadoop开发环境" target="_blank" rel="external">此处</a></p></blockquote><h1 id="开始Hadoop的伪分布式配置"><a href="#开始Hadoop的伪分布式配置" class="headerlink" title="开始Hadoop的伪分布式配置"></a>开始Hadoop的伪分布式配置</h1><ul><li><p>参考：</p><p><a href="https://blog.xinshangshangxin.com/2017/04/26/mac-hadoop/" target="_blank" rel="external">参考</a></p><p><a href="https://hadoop.apache.org/docs/r1.0.4/cn/quickstart.html" target="_blank" rel="external">Hadoop官网</a></p></li></ul><h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><ul><li>打开 <code>系统偏好设置</code> –&gt; <code>共享</code> –&gt; <code>远程登录</code> –&gt; <code>所有用户</code>（如图）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%8812.48.04.png" alt=""></p><ul><li>配置ssh<blockquote><p>即为免密码输入的繁琐过程的配置</p></blockquote></li></ul><p>打开终端，输入 <code>ssh localhost</code> 是否以前有过配置，没有的话 输入<code>ssh-keygen -t dsa -P &#39;&#39; -f ~/.ssh/id_dsa</code>  回车至可以输入下一行命令行，输入 <code>cat ~/.ssh/id_dsa.pub &gt;&gt;~/.ssh/authorized_keys</code>，再次输入验证 <code>ssh localhost</code>，发现不需要密码输入了（如图）</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%8812.54.02.png" alt=""></p><hr><h2 id="配置Hadoop伪分布式"><a href="#配置Hadoop伪分布式" class="headerlink" title="配置Hadoop伪分布式"></a>配置Hadoop伪分布式</h2><blockquote><p>找到下面所有需要的配置文件 <code>Finder</code> –&gt; <code>hadoop2.8.1</code> –&gt; <code>libexec</code> –&gt; <code>etc</code> –&gt; <code>hadoop</code> </p></blockquote><h3 id="打开-hadoop-env-sh"><a href="#打开-hadoop-env-sh" class="headerlink" title="打开 hadoop-env.sh"></a>打开 <code>hadoop-env.sh</code></h3><p> 将其中的<br><code>export HADOOP_OPTS=&quot;$HADOOP_OPTS -Djava.net.preferIPv4Stack=true&quot;</code></p><p>改为<br><code>export HADOOP_OPTS=&quot;$HADOOP_OPTS -Djava.net.preferIPv4Stack=true -Djava.security.krb5.realm= -Djava.security.krb5.kdc=&quot;</code></p><hr><p>`</p><h3 id="打开-yarn-env-sh"><a href="#打开-yarn-env-sh" class="headerlink" title="打开 yarn-env.sh"></a>打开 <code>yarn-env.sh</code></h3><p>在下面添加<br><code>YARN_OPTS=&quot;$YARN_OPTS -Djava.security.krb5.realm=OX.AC.UK -Djava.security.krb5.kdc=kdc0.ox.ac.uk:kdc1.ox.ac.uk&quot;</code></p><hr><p>`</p><h3 id="打开-core-site-xml"><a href="#打开-core-site-xml" class="headerlink" title="打开 core-site.xml"></a>打开 <code>core-site.xml</code></h3><p>添加配置如下：</p><pre><code>` &lt;configuration&gt;    &lt;property&gt;      &lt;name&gt;fs.defaultFS&lt;/name&gt;    &lt;value&gt;hdfs://localhost:9000&lt;/value&gt;                &lt;/property&gt;&lt;/configuration&gt;`</code></pre><p>如图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.44.27.png" alt=""></p><blockquote><p>其中端口号：<code>9000</code>的对应以下的用eclipse搭建Hadoop时的窗口连接的 <code>DFS Master Port</code></p><p>其中的 <code>localhost</code> 对应本机号，也可以自己根据需要设置</p></blockquote><hr><h3 id="打开-hdfs-site-xml"><a href="#打开-hdfs-site-xml" class="headerlink" title="打开 hdfs-site.xml"></a>打开 <code>hdfs-site.xml</code></h3><p>添加配置如下：</p><pre><code>`&lt;configuration&gt;     &lt;property&gt;       &lt;name&gt;dfs.replication&lt;/name&gt;       &lt;value&gt;1&lt;/value&gt;    &lt;/property&gt;&lt;/configuration&gt;</code></pre><p>`</p><blockquote><p>因为是一台机伪分布式，<code>1</code> 即可</p></blockquote><hr><h3 id="打开-mapred-site-xml-，其中一般没有，需要将文件-mapred-site-xml-template-改为-mapred-site-xml-之后再进行配置过程"><a href="#打开-mapred-site-xml-，其中一般没有，需要将文件-mapred-site-xml-template-改为-mapred-site-xml-之后再进行配置过程" class="headerlink" title="打开 mapred-site.xml ，其中一般没有，需要将文件 mapred-site.xml.template 改为 mapred-site.xml 之后再进行配置过程"></a>打开 <code>mapred-site.xml</code> ，其中一般没有，需要将文件 <code>mapred-site.xml.template</code> 改为 <code>mapred-site.xml</code> 之后再进行配置过程</h3><p>添加配置如下：</p><p>`<configuration></configuration></p><pre><code>&lt;property&gt;&lt;name&gt;mapreduce.framework.name&lt;/name&gt;&lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt; &lt;property&gt;&lt;name&gt;mapred.child.java.opts&lt;/name&gt;&lt;value&gt;-Xmx4096m&lt;/value&gt;&lt;/property&gt; &lt;property&gt;&lt;name&gt;mapred.job.tracker&lt;/name&gt;&lt;value&gt;localhost:9001&lt;/value&gt; &lt;/property&gt;</code></pre><p>`</p><blockquote><p>其中的 <code>localhost</code> 同样对应本机端，<code>9001</code> 默认端口号对应eclipse Hadoop环境搭建时的连接窗口中的 <code>Map／Reducr Master Port</code>，均可根据需要更改</p></blockquote><hr><h3 id="打开-yarn-site-xml"><a href="#打开-yarn-site-xml" class="headerlink" title="打开 yarn-site.xml"></a>打开 <code>yarn-site.xml</code></h3><p>添加配置如下：</p><p>`<configuration></configuration></p><!-- Site specific YARN configuration properties --><pre><code> &lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt;&lt;/property&gt;</code></pre><p>`</p><hr><h3 id="启动过程"><a href="#启动过程" class="headerlink" title="启动过程"></a>启动过程</h3><ul><li><p>打开终端，先将目录对应到Hadoop2.8.1安装目录 <code>cd /usr/local/Cellar/hadoop/2.8.1/sbin</code></p></li><li><p>格式化 HDFS </p></li></ul><p>若是以前有过Hadoop启动，清除 <code>rm -rf /tmp/hadoop-tanjiti</code></p><p>格式化 <code>hadoop namenode -format</code></p><ul><li>启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`./start-all.sh`</div></pre></td></tr></table></figure><ul><li>输入 <code>jps</code>,查看是否部署伪分布式成功（如图）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.34.05.png" alt=""></p><ul><li>在想要关闭Hadoop可以如下输入推出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">`./stop-all.sh`</div></pre></td></tr></table></figure><blockquote><p>配置Hadoop伪分布式介绍结束，开始eclipse的Hadoop开发环境搭建，这是一个折磨人的过程，我花了一天时间终于建好（比较幸运了..）。记录在下</p></blockquote><ul><li><strong>再次声明</strong>，在我的<a href="http://www.jianshu.com/u/f8941dd1c677" target="_blank" rel="external">简书</a>均已声明来处，同时感谢那一些默默分享的人们。</li></ul><hr><h1 id="eclipse搭建Hadoop开发环境"><a href="#eclipse搭建Hadoop开发环境" class="headerlink" title="eclipse搭建Hadoop开发环境"></a>eclipse搭建Hadoop开发环境</h1><h2 id="配置好需要的前提"><a href="#配置好需要的前提" class="headerlink" title="配置好需要的前提"></a>配置好需要的前提</h2><blockquote><p>参考：<a href="http://www.powerxing.com/hadoop-build-project-using-eclipse/" target="_blank" rel="external">参考</a></p><p>进行以下过程前提： <strong>在Hadoop端打开的情况下进行连接开发</strong></p></blockquote><hr><ul><li><p>将下载好的插件放入eclipse的  <code>plugin</code> 目录文件夹（如图1，图2），之后重新打开eclipse之后，打开eclipse <code>preferences</code> 偏好设置可以看到插件（如图3）</p></li><li><p>图1</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.35.57.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.36.11.png" alt=""></p><ul><li>图3</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.37.41.png" alt=""></p><hr><ul><li>对应自己的Hadoop下载地址（如图）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.37.41.png" alt=""></p><ul><li>打开窗口端添加 <code>Map／Reduce</code> 窗口（如图）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.40.05.png" alt=""></p><hr><ul><li><p><strong>右键</strong>添加 DFS Locations 连接配置（如图1，图2）</p></li><li><p>图1<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.47.15.png" alt=""></p></li><li><p>图2<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.47.49.png" alt=""></p></li></ul><blockquote><p>其中 <code>Localtion name</code> 随意</p><p>两边的端口号根据我上方提到的，可以根据需要自行更改</p></blockquote><hr><ul><li>若是有文件夹出现（如图），表示连接成功</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.51.47.png" alt=""></p><hr><blockquote><p>如果是文件显示为0，不要慌张，这是需要自己来增加文件的（如图1）增加文件，<strong>注意，并且在在每一次创建文件要自行刷新（如图2）</strong>，也大大避免了运行命令行的繁琐过程，增加一个 <code>user</code> 文件夹（如图3），在<code>user</code> 下增加一个 <code>hadoop</code> 文件夹，在 <code>hadoop</code> 下增加一个 <code>input</code> 文件夹，在其下并且导入安装Hadoop目录中的 <code>README.txt</code>文件（如图4，图5）。<strong>注意，许多教程中说的 <code>output</code> 文件夹是不需要自行增加的，是系统在运行结果出来后自行创建的，这是一个坑</strong></p></blockquote><ul><li>图1</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.00.36.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.00.44.png" alt=""></p><ul><li>图3</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%881.51.47.png" alt=""></p><ul><li>图4</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.04.36.png" alt=""></p><ul><li>图5</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.05.08.png" alt=""></p><p>最终效果：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.05.18.png" alt=""></p><hr><h2 id="建立一个Hadoop项目"><a href="#建立一个Hadoop项目" class="headerlink" title="建立一个Hadoop项目"></a>建立一个Hadoop项目</h2><ul><li><p>如图1，图2，图3</p></li><li><p>图1</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.06.32.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.06.44.png" alt=""></p><blockquote><p>名字随意取</p></blockquote><ul><li>图3</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.07.00.png" alt=""></p><hr><ul><li><p>在这个项目下像建立一个java工程一样建立一个Hadoop工程名为 <code>WorkCount</code> 文件（如图1），<strong>并且自行配置导入所有的Hadoop的包（如图2，图3），包得要自行导入了，这个是比较麻烦一点，但是毕竟一个项目导入一次就一劳永逸啦～</strong></p></li><li><p>图1</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.13.01.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.13.27.png" alt=""></p><ul><li>图3</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.14.09.png" alt=""></p><ul><li>之后效果如下</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.15.32.png" alt=""></p><hr><ul><li><p>将Hadoop内的被修改过的文件与日志文件加入在工程下，即将配置过的文件与其中的日志文件加入到工程文件中的 <code>src</code> 目录下，否则会发生不必要的错误。如下图</p></li><li><p>我是将整个的 <code>Hadoop</code> 目录（<strong>其中包括所有配置文件的哪个Hadoop文件夹</strong>）都加入在了 <code>src</code> 目录下</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%889.58.54.png" alt=""></p><ul><li>效果如下<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%889.59.54.png" alt=""></li></ul><hr><h2 id="测试WorkCount例子"><a href="#测试WorkCount例子" class="headerlink" title="测试WorkCount例子"></a>测试WorkCount例子</h2><blockquote><p><strong>注意，工程命为 <code>WorkCount</code> 的前提下</strong></p><ul><li>在建立的工程中输入如下</li></ul></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.StringTokenizer;</div><div class="line"> </div><div class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.util.GenericOptionsParser;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCount</span> </span>&#123;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TokenizerMapper</span> </span></div><div class="line"><span class="class">    <span class="keyword">extends</span> <span class="title">Mapper</span>&lt;<span class="title">Object</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt;</span>&#123;</div><div class="line"></div><div class="line"> <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> IntWritable one = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</div><div class="line"> <span class="keyword">private</span> Text word = <span class="keyword">new</span> Text();</div><div class="line"></div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(Object key, Text value, Context context</span></span></div><div class="line"><span class="function"><span class="params">                 )</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</div><div class="line">   StringTokenizer itr = <span class="keyword">new</span> StringTokenizer(value.toString());</div><div class="line">   <span class="keyword">while</span> (itr.hasMoreTokens()) &#123;</div><div class="line">     word.set(itr.nextToken());</div><div class="line">     context.write(word, one);</div><div class="line">   &#125;</div><div class="line">   </div><div class="line"> &#125;</div><div class="line">&#125;</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">IntSumReducer</span> </span></div><div class="line"><span class="class">    <span class="keyword">extends</span> <span class="title">Reducer</span>&lt;<span class="title">Text</span>,<span class="title">IntWritable</span>,<span class="title">Text</span>,<span class="title">IntWritable</span>&gt; </span>&#123;</div><div class="line"> <span class="keyword">private</span> IntWritable result = <span class="keyword">new</span> IntWritable();</div><div class="line"></div><div class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values, </span></span></div><div class="line"><span class="function"><span class="params">                    Context context</span></span></div><div class="line"><span class="function"><span class="params">                    )</span> <span class="keyword">throws</span> IOException, InterruptedException </span>&#123;</div><div class="line">   <span class="keyword">int</span> sum = <span class="number">0</span>;</div><div class="line">   <span class="keyword">for</span> (IntWritable val : values) &#123;</div><div class="line">     sum += val.get();</div><div class="line">   &#125;</div><div class="line">   result.set(sum);</div><div class="line">   context.write(key, result);</div><div class="line"> &#125;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">    Configuration conf = <span class="keyword">new</span> Configuration();</div><div class="line">    String[] otherArgs = <span class="keyword">new</span> GenericOptionsParser(conf, args).getRemainingArgs();</div><div class="line">    <span class="keyword">if</span> (otherArgs.length != <span class="number">2</span>) &#123;</div><div class="line">      System.err.println(<span class="string">"Usage: wordcount &lt;in&gt; &lt;out&gt;"</span>);</div><div class="line">      System.exit(<span class="number">2</span>);</div><div class="line">    &#125;</div><div class="line">    Job job = <span class="keyword">new</span> Job(conf, <span class="string">"word count"</span>);</div><div class="line">    job.setJarByClass(WordCount.class);</div><div class="line">    job.setMapperClass(TokenizerMapper.class);</div><div class="line">    job.setCombinerClass(IntSumReducer.class);</div><div class="line">    job.setReducerClass(IntSumReducer.class);</div><div class="line">    job.setOutputKeyClass(Text.class);</div><div class="line">    job.setOutputValueClass(IntWritable.class);</div><div class="line">    FileInputFormat.addInputPath(job, <span class="keyword">new</span> Path(otherArgs[<span class="number">0</span>]));</div><div class="line">    FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(otherArgs[<span class="number">1</span>]));</div><div class="line">    System.exit(job.waitForCompletion(<span class="keyword">true</span>) ? <span class="number">0</span> : <span class="number">1</span>);</div><div class="line">  </div><div class="line">&#125;</div><div class="line">  </div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="配置参数"><a href="#配置参数" class="headerlink" title="配置参数"></a>配置参数</h2><ul><li><p>如图1，如图2，其中的参数配置，<strong>即机号，端口号，我们先前建立的 <code>user</code> <code>hadoop</code> <code>input</code> 一一对应，可以根据需要自行更改，其中的 <code>output</code> 是结果出来以后自行创建的，并且记得要在每一次运行结果前更改 <code>output</code> 为其他的不冲突的名字，比如 <code>output1</code>(如图3）</strong></p></li><li><p>图1</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.19.31.png" alt=""></p><ul><li>图2</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.25.08.png" alt=""></p><ul><li>图3</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.19.59.png" alt=""></p><hr><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><ul><li>点击运行刚刚配置好的参数配置运行（如图）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.25.26.png" alt=""></p><hr><ul><li>在系统自行创建的 <code>output</code> 的文件夹（<strong>看不到文件夹就如上刷新</strong>）下面的文件可以看到结果输出了（如图）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-10-01%20%E4%B8%8B%E5%8D%882.28.04.png" alt=""></p><hr><blockquote><p><strong>至此，环境搭建大功告成！！！期间没有像其他人遇到什么问题，不过虽然是迟早的事，不过也是在以后了，哈哈😹。</strong></p></blockquote><ul><li><strong>GoodJ,可以开始安心学习Hadoop基础理论了🤓</strong></li></ul><h1 id="在eclipse中直接读取Hadoop源码"><a href="#在eclipse中直接读取Hadoop源码" class="headerlink" title="在eclipse中直接读取Hadoop源码"></a>在eclipse中直接读取Hadoop源码</h1><ul><li>参考我的这一篇<a href="https://liujunjie11.github.io/2017/09/30/eclipse下直接读取Hadoop源码配置/#more">文章</a></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><blockquote><p>提示</p></blockquote><ul><li><p>要记得在看不到文件时就刷新。</p></li><li><p>注意配置的字母多少与大小。</p></li><li><p>每一次在输出时要将参数中的 <code>output</code> 部分更改名字，以免冲突。</p></li></ul><blockquote><p>资源链接</p></blockquote><ul><li><p><a href="https://hadoop.apache.org/docs/r1.0.4/cn/quickstart.html" target="_blank" rel="external">Hadoop官网快速入门参考</a></p></li><li><p><a href="http://hadoop.apache.org/docs/r1.0.4/cn/index.html" target="_blank" rel="external">Hadoop官网文档</a></p></li><li><p><a href="http://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html" target="_blank" rel="external">MapReduce官网学习</a></p></li><li><p><a href="http://dataunion.org/13562.html" target="_blank" rel="external">Hadoop零基础学习资源</a></p></li></ul><p><a href="https://liujunjie11.github.io/2017/09/30/eclipse下直接读取Hadoop源码配置/"></a></p>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
          <category> Hadoop </category>
          
          <category> Eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eclipse下直接读取Hadoop源码配置</title>
      <link href="/2017/09/30/eclipse%E4%B8%8B%E7%9B%B4%E6%8E%A5%E8%AF%BB%E5%8F%96Hadoop%E6%BA%90%E7%A0%81%E9%85%8D%E7%BD%AE/"/>
      <url>/2017/09/30/eclipse%E4%B8%8B%E7%9B%B4%E6%8E%A5%E8%AF%BB%E5%8F%96Hadoop%E6%BA%90%E7%A0%81%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>参考源码很重要啦，记录下来。</p></blockquote><ul><li><p>参考：</p><p>  <a href="https://segmentfault.com/a/1190000004908147" target="_blank" rel="external">参考</a></p></li></ul><ul><li><p>Mac系统</p></li><li><p>eclipse</p></li><li><p>Hadoop2.X.src源码包（已经解压） 如以下例图</p><p><a href="https://dist.apache.org/repos/dist/release/hadoop/common/hadoop-2.7.4/" target="_blank" rel="external">官网下载</a></p></li></ul><a id="more"></a><p>例图：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-30%20%E4%B8%8B%E5%8D%8810.06.15.png" alt=""></p><p>例图（解压后）：</p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-30%20%E4%B8%8B%E5%8D%8810.06.40.png" alt=""></p><h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><ul><li>在需要的关键词上停留，按F3快捷键，或者是如图选择 <code>Open Declaration</code></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-30%20%E4%B8%8B%E5%8D%8810.07.49.png" alt=""></p><ul><li>配置，手动写上解压包的位置，之后会发现可以查看源码了。</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/1804582849-5709b3620b7b0_articlex.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程笔记 </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 博客结合七牛云超链接视频与音乐</title>
      <link href="/2017/09/30/hexo-%E5%8D%9A%E5%AE%A2%E7%BB%93%E5%90%88%E4%B8%83%E7%89%9B%E4%BA%91%E8%B6%85%E9%93%BE%E6%8E%A5%E8%A7%86%E9%A2%91%E4%B8%8E%E9%9F%B3%E4%B9%90/"/>
      <url>/2017/09/30/hexo-%E5%8D%9A%E5%AE%A2%E7%BB%93%E5%90%88%E4%B8%83%E7%89%9B%E4%BA%91%E8%B6%85%E9%93%BE%E6%8E%A5%E8%A7%86%E9%A2%91%E4%B8%8E%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<p><strong>七牛云结合hexo博客，导入视频与音乐文件</strong></p><ul><li><p>前言</p><p>需要<a href="https://portal.qiniu.com/signup?code=3le1u3mtt0j82" target="_blank" rel="external">注册七云牛</a></p></li></ul><blockquote><p>可以参考我的这一篇<a href="https://liujunjie11.github.io/2017/09/26/（Mac下）用Hexo3-X-next5-1-2搭建自己的博客，安装，正确配置，部署谷歌，结合用七云牛写作/#more">文章</a></p></blockquote><ul><li><p>以下为视频教学，点击查看效果(由于为了节省在七🐂云的空间，本人将它放在了YouTube） </p><p><a href="https://youtu.be/VruWpl2uq_Q" target="_blank" rel="external">点击查看教学视频</a></p></li></ul><a id="more"></a><ul><li>音乐效果如下（这个是本地的，可以直接查看）</li></ul><p><a href="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E6%96%B9%E4%BE%BF%E4%BE%BF-Here%20We%20Are%20Again%20%28Remix%29.mp3" target="_blank" rel="external">音乐欣赏</a></p><ul><li>一条龙部署谷歌视频教学（在YouTube）：</li></ul><p><a href="https://youtu.be/RuVc4RBX6p4" target="_blank" rel="external">点击查看</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程笔记 </tag>
            
            <tag> 七牛云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大道至简</title>
      <link href="/2017/09/28/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80/"/>
      <url>/2017/09/28/%E5%A4%A7%E9%81%93%E8%87%B3%E7%AE%80/</url>
      
        <content type="html"><![CDATA[<p>不可否认，在生活中的大多数思考的目的我们都只是在尽力地在去说服我们自己罢了。</p><p>今天看了《沉思录》的一些章节，又是引发了我的思考。当然，这本书真的对我来说是对我影响最为大的一本书了，至少是目前在我看过的所有书中，她曾无数次引发我思考，对这个世间，对整个自然，又或者是对整个宇宙。冥冥之中，我从中收获了许多，我的精神因此较从前也开朗不少。这是一本好书。</p><p>今天看到的是，作者说了关于性行为的一些看法。</p><a id="more"></a><blockquote><p>“性行为能为你带来快乐，但是经过时间与经验的总结，随意的性行为并不能给你带来长久的满足，只能表示我们对自己和他人的不尊重。性行为并不是一种游戏，它在情感上和生活中都会产生实实在在的后果。所以要避免随意性行为，就要避免婚前性行为。忽视这一点，就是在自我贬低，漠视人类关系的重要性。<br>也许有人会觉得这种想法过于拘谨和老套，遇到这种人，他们可能会把随意性行为当作一种正常的生活方式。不必去强迫他们接受我的观点，因为这会让他们觉得我在自以为是。<br>不要因为贪图一时快乐而发生随意的性行为，带有责任和义务的积极的性行为，才能构成你完整的人生、健康的生活。”</p></blockquote><ul><li>摘录来自: 马可·奥勒留. “沉思录大全集(超值白金版)”。 </li></ul><p>然而关于作者的看法我是有一些异议的，我是不怎么认同的。如果说我们因为此而应该对我们有这方面的约束，那么也毫无疑问是关乎到我们的自由的，有人会说我的这个自由属于任性，我当然不认同这种说法，自由与任性根本就是两回事。</p><p>如果说我们不认同作者的这种说法，我们热衷于你情我愿的性行为，又或者说是自由的选择对象去享受性交，即便是在有了配偶之后，当然，必须是在双方都愿意的情况下。那么肯定有人会说这是不人道，不道德的，是不合理的，也是不允许的。我的意思是这当然不属于所谓的“淫乱”，我说的是在双方只是单单因为这方面的需求，并且是没有利益方面的做交换的筹码的，并且双方都是你情我愿的，不存在强迫的情况下的这种性行为。那么我为什么要说这么一大堆的东西来解释我的不认同呢？说到底，这是对于绝大多数人类来说是一种不可碰触的禁区的，这是对于他们来说是一种渗入脑子里的一种限制的。那么又何来的这种限制？</p><p>人类由所谓的野蛮社会进步到了今天的所谓的文明社会，当然不能全全说是所谓的“文明”。无论在哪个国家，都有他们所认为的“礼节”与“道德”的，这恰恰是对我们的限制的主要来源，对于多数人看来，没有这种限制，人类与野蛮社会的“文明”无区别，即人类会因为没有这种限制而后退到野蛮社会，对于他们来说，这是一种社会后退的，错乱的进步，也是不应该，不允许的。这些个限制不难知道是从野蛮社会之中繁衍出来的，即为是在以野蛮社会的基础下得出的这些个”礼“与”道“，并且渐渐的得到多数人的认可，以致成为了如今人类社会所谓的精神与行为限制。</p><p>我清楚的认识到这些个所谓的”礼“与”道“，都是提出的那些个不同于大多数的当时社会并且见识到了野蛮是残暴的应该是不可取的人是为了”和“而提出来的。即”以和为贵“的思想下才繁衍了这些个”礼“，”道“。</p><p>当今的人类之所以认同亦然也是因为认同这是正确的，即为”和“对于他们来说是需要的，对这个社会来说是需要的，所以这些个”礼“与”道“自然会占到了”限制“的作用了，换取得来的将是多数人想要的”和“，即我们平时都说的“和平”一词。</p><p>以上是我认为的，“礼”与“道”这些个“限制”的来由。</p><p>但是，我们看书读书，并不是为了完全的盲目的去吸收一个人的全部思想，不然真的是与行尸走肉没有任何的区别。对于我们来说，大多数的人来说如果我们认可的，我们可以选择性吸收，来增加自己对于这个人世间的种种看法，即自我思考的能力。然而对于不认同的，我们也应该来加以思考来“说服”自己，并且允许自己的“异议”存在。</p><p>大“道”至简，源于生活。这个人世间因为每个人的选择与思维的不同，所以才精彩。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初学Linux有感</title>
      <link href="/2017/09/27/%E5%88%9D%E5%AD%A6Linux%E6%9C%89%E6%84%9F/"/>
      <url>/2017/09/27/%E5%88%9D%E5%AD%A6Linux%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近看《鸟哥的Linux私房菜》学习Linux，体验非常的不错，关键是没有想到这部书里面在第一节还介绍了一些计算机概论的知识，虽然并不是非常的深入，但是经过此入门认识已经是足够了，至少是达到了我的一些需求，也达到我的预期。之后的若是再需要想要认识的话，我想还是有必要去找一本专门的书来补充的，亦或者是需要在网上看一些详细的介绍的。</p></blockquote><a id="more"></a><h2 id="初学Linux的一些感想"><a href="#初学Linux的一些感想" class="headerlink" title="初学Linux的一些感想"></a>初学Linux的一些感想</h2><ul><li><p>没想到终端的命令行会让我感到非常的兴奋，大概是在Mac上也是经常使用终端的缘故吧，但是在Linux上的体验又是更胜一筹，也有可能与我本身喜欢小界面编写有一定关系啦。</p></li><li><p>命令行功能的强大。</p></li><li><p>还有待去了解更多..</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 博客在谷歌搜索引擎中的优化，目标：上头条..</title>
      <link href="/2017/09/27/Hexo-%E5%8D%9A%E5%AE%A2%E5%9C%A8%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8C%96%EF%BC%8C%E7%9B%AE%E6%A0%87%EF%BC%9A%E4%B8%8A%E5%A4%B4%E6%9D%A1/"/>
      <url>/2017/09/27/Hexo-%E5%8D%9A%E5%AE%A2%E5%9C%A8%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E4%B8%AD%E7%9A%84%E4%BC%98%E5%8C%96%EF%BC%8C%E7%9B%AE%E6%A0%87%EF%BC%9A%E4%B8%8A%E5%A4%B4%E6%9D%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p> 在搜索引擎中的优化可以增加在他人搜索相关的字词时，可以增加我们自己的博客的展现几率，自己的东西，自己的成果可以帮助更多的人，可以与他人分享是一件快乐的事。而现在的我，是快乐的。（如图）🤓</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8810.58.59.png" alt=""></p><blockquote><p>我的博客内容因为优化已经登上了相关内容的<strong>第一名</strong>，意味着上了谷歌搜索引擎的头条了，而看完我接下来的文章，你也可以登上<strong>谷歌之巅</strong></p></blockquote><a id="more"></a><hr><h2 id="开始优化的过程"><a href="#开始优化的过程" class="headerlink" title="开始优化的过程"></a>开始优化的过程</h2><ul><li><p>前提是当然你的博客已经是被谷歌收录了，没有的话可以参考我的这一篇<a href="https://liujunjie11.github.io/2017/09/26/（Mac下）用Hexo3-X-next5-1-2搭建自己的博客，安装，正确配置，部署谷歌，结合用七云牛写作/#more">文章</a></p></li><li><p>进入谷歌搜索平台 –&gt; <code>抓取</code> –&gt; <code>Google抓取工具</code></p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8811.10.48.png" alt=""></p><hr><ul><li>输入自己的文章域名，完成之后点击 <code>抓取</code></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8811.11.19.png" alt=""></p><hr><ul><li>完成之后会有以下界面</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8811.11.38.png" alt=""></p><hr><ul><li>点击下方的 <code>请求编入索引</code></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8811.11.45.png" alt=""></p><hr><ul><li>进入这个界面，验证提交即可</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8811.12.26.png" alt=""></p><hr><blockquote><p>当然在每次写完文章之后，都可以这样请求，这样你的文章就可以让更多的人看到了。</p></blockquote><h2 id="限制谷歌搜索引擎对博客内容的抓取"><a href="#限制谷歌搜索引擎对博客内容的抓取" class="headerlink" title="限制谷歌搜索引擎对博客内容的抓取"></a>限制谷歌搜索引擎对博客内容的抓取</h2><ul><li>即通过修改我们的 <code>robots.txt</code> 文件内容，即这个文件是在我们通过生成 <code>sitemap.xml</code> 文件自动生成的，修改完上交谷歌控制平台就好了。修改完可以将其中的内容手动复制粘贴上去，然后提交就好了。如图</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8810.59.54.png" alt=""></p><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li>参考：</li></ul><p>  <a href="http://www.jianshu.com/p/86557c34b671" target="_blank" rel="external">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> SEO优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下VirtualBox虚拟机Centos7配置Wifi，用佩带的火狐翻墙</title>
      <link href="/2017/09/27/Mac%E4%B8%8BVirtualBox%E8%99%9A%E6%8B%9F%E6%9C%BACentos7%E9%85%8D%E7%BD%AEWifi%EF%BC%8C%E7%94%A8%E4%BD%A9%E5%B8%A6%E7%9A%84%E7%81%AB%E7%8B%90%E7%BF%BB%E5%A2%99/"/>
      <url>/2017/09/27/Mac%E4%B8%8BVirtualBox%E8%99%9A%E6%8B%9F%E6%9C%BACentos7%E9%85%8D%E7%BD%AEWifi%EF%BC%8C%E7%94%A8%E4%BD%A9%E5%B8%A6%E7%9A%84%E7%81%AB%E7%8B%90%E7%BF%BB%E5%A2%99/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li><p>Mac系统   </p></li><li><p>VirtualBox虚拟机</p></li><li><p>已经安装好的Centos7系统</p></li><li><p>可用的WiFi</p></li></ul><blockquote><p>最近自己在学习Linux系统，想到了在虚拟机中如何为系统配置WiFi的问题，毕竟以后下载软件也需要。我仅仅花了两分钟就把这个给摸索出来了，哈哈，<strong>绝对是原创哦</strong>。</p><p>废话不多说，马上开始我的表演。</p></blockquote><hr><a id="more"></a><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>第一步当然是在有Wi-Fi的情况下咯</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%889.39.40.png" alt=""></p><hr><ul><li>第二步当然是已是打开了虚拟机咯</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%889.40.17.png" alt=""></p><blockquote><p>点击图标（如上图），再点击 <code>有线设置</code> ，选择 <code>网络代理</code>，之后写上本机连接的Wi-Fi的名称（当然本机要是在连接的情况下咯）</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%889.40.38.png" alt=""></p><ul><li>然后发现可以正常的在虚拟机上上网了，是不是很溜？我是天才，哈哈！</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%889.42.12.png" alt=""></p><h2 id="用佩带的火狐浏览器翻墙"><a href="#用佩带的火狐浏览器翻墙" class="headerlink" title="用佩带的火狐浏览器翻墙"></a>用佩带的火狐浏览器翻墙</h2><ul><li><p>打开佩带的浏览器点击 <code>添加组件</code></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8810.28.32.png" alt=""></p></li><li><p>搜索 <code>hoxx</code> 的插件，并且下载</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8810.28.59.png" alt=""></p><ul><li>登陆账号。没有的话就申请一个好了</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8810.25.32.png" alt=""></p><ul><li>选择免费服务器</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8810.29.09.png" alt=""></p><ul><li>可以上谷歌咯</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-27%20%E4%B8%8B%E5%8D%8810.28.11.png" alt=""></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li><strong>goodluck</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> VirtualBox虚拟机 </tag>
            
            <tag> Centos7 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac下解决Matlab License Manager Error -8问题</title>
      <link href="/2017/09/27/Mac%E4%B8%8B%E8%A7%A3%E5%86%B3Matlab-License-Manager-Error-8%E9%97%AE%E9%A2%98/"/>
      <url>/2017/09/27/Mac%E4%B8%8B%E8%A7%A3%E5%86%B3Matlab-License-Manager-Error-8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<ul><li>问题如下：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-10eb6927f4f8096c.png" alt=""></p><blockquote><p>其实很简单。</p><p>前提是各位一定都是下的<a href="http://www.yichengruanjian.com/?p=176" target="_blank" rel="external">盗版</a>的…（在我本人的<a href="http://www.jianshu.com/p/4367e64890c3" target="_blank" rel="external">简书</a>博客的“资源”这一篇文章里也有下载资源，不过各位有钱的尽量还是支持正版哦…）</p></blockquote><a id="more"></a><ul><li>打开下好的盗版文件之中是有一个补丁名为Crack的文件的：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-938c77f284ec32fd.png" alt=""></p><hr><blockquote><p>（即为其中的Crack文件）<br>其中有一个插件：如下图</p></blockquote><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-d33a61afe6a2c6c9.png" alt=""></p><blockquote><hr></blockquote><ul><li>新建一个窗口打开matlab的包的内容：如下图</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-fbe4c2e613b7d95b.png" alt=""></p><ul><li>打开bin:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-fbb3582394a1036b.png" alt=""></p><hr><ul><li>点开maci64:</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-f17e286203f0a333.png" alt=""></p><hr><ul><li>再将这个插件移动到maci64文件当中：</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-2f90b9be95662984.png" alt=""></p><ul><li>替换即可。</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-cd9342c10244f0db.png" alt=""></p><hr><ul><li>关闭窗口。</li></ul><blockquote><p><strong>注意：最好还是将前面的提到的Crack文件备份一个，避免又出现同样的问题。</strong></p></blockquote><ul><li>最后则可以正常打开了。</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/8038616-18ba4bf017322f65.png" alt=""></p><hr>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题记录笔记 </tag>
            
            <tag> Mac </tag>
            
            <tag> Matlab </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谈专家组来学校检查与“利”</title>
      <link href="/2017/09/27/%E8%B0%88%E4%B8%93%E5%AE%B6%E7%BB%84%E6%9D%A5%E5%AD%A6%E6%A0%A1%E6%A3%80%E6%9F%A5%E4%B8%8E%E2%80%9C%E5%88%A9%E2%80%9D/"/>
      <url>/2017/09/27/%E8%B0%88%E4%B8%93%E5%AE%B6%E7%BB%84%E6%9D%A5%E5%AD%A6%E6%A0%A1%E6%A3%80%E6%9F%A5%E4%B8%8E%E2%80%9C%E5%88%A9%E2%80%9D/</url>
      
        <content type="html"><![CDATA[<h2 id="专家组来学校检查"><a href="#专家组来学校检查" class="headerlink" title="专家组来学校检查"></a>专家组来学校检查</h2><p>留在窝里，又要出来活动活动了，这一群所谓的专家们。</p><p>他们靠抽签的方式来决定去哪个专业的哪一些班级来听课，“有幸”的是我们班级被抽中了，喔～，代表着学校的名义来应付所谓的专家组的检查，我是有一些不自然了，昨天在专家组眼皮子底下上课的老师们个个也都是不自然了，上课的声音不是颤抖就是结巴。笑死我了。这个是与学校的名誉相挂钩的，所以我的母校来啦，多么低级的各种“战术”开始发行了，所谓的导员游说，面卷考察，多么愚昧的领导人才能想得出这样的方式。反正我也是不会去关注。</p><p>你们随意。你们就与“专家组”去自娱自乐好了。</p><a id="more"></a><h2 id="“利”"><a href="#“利”" class="headerlink" title="“利”"></a>“利”</h2><p>谈“利”这个字词仿佛都是让人不舒服的，无论是“利益”，还是“利用”，好似都给人一种不好的印象。我们从小在这个国家，看得到的有关的电视，书籍，关于“利”却大都是来描述一些所谓的“恶”与“坏”的，也是无可奈何了吧，底层的老百姓除了被人管制的苟且之外，也只有通过一些轨道来表达自己的思想了。但是如此久而久之，“利”便是容易把人都给洗脑，脑子里关于它的都是“厌恶”的印象。今天看了《沉思录》的一些章节，里面关于“利”的相关的字词都是信手拈来，我却是读不出什么厌恶的感觉了。</p><p>可以知道，明显的是各个国家地区的人文景观与社会风气有不一般的差别的。但是在中国，在这一片土地上的这个字词却是给我一种明显的敏感的不舒畅。</p><p>我也只是底层的老百姓，被人管制着。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>（Mac下）用Hexo3.X  next5.1.2搭建自己的博客，安装，正确配置，部署谷歌，结合用七牛云写作</title>
      <link href="/2017/09/26/%EF%BC%88Mac%E4%B8%8B%EF%BC%89%E7%94%A8Hexo3-X-next5-1-2%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%8C%E5%AE%89%E8%A3%85%EF%BC%8C%E6%AD%A3%E7%A1%AE%E9%85%8D%E7%BD%AE%EF%BC%8C%E9%83%A8%E7%BD%B2%E8%B0%B7%E6%AD%8C%EF%BC%8C%E7%BB%93%E5%90%88%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E5%86%99%E4%BD%9C/"/>
      <url>/2017/09/26/%EF%BC%88Mac%E4%B8%8B%EF%BC%89%E7%94%A8Hexo3-X-next5-1-2%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%8C%E5%AE%89%E8%A3%85%EF%BC%8C%E6%AD%A3%E7%A1%AE%E9%85%8D%E7%BD%AE%EF%BC%8C%E9%83%A8%E7%BD%B2%E8%B0%B7%E6%AD%8C%EF%BC%8C%E7%BB%93%E5%90%88%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E5%86%99%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li><p>Hexo3.X</p></li><li><p>next主题5.1.2</p></li><li><p>Mac系统</p></li><li><p>github账号密码</p></li></ul><blockquote><p>在自己终于搭建了一个自己的个人独立博客后，虽然还有一些小的空间之类的限制，不过也是有余了。</p><p>因为这个版本的不同导致我在这个新的版本走了不少的弯路，看了官网也发现了有一些不正确的配置，现在打算记录下来帮助需要的朋友。</p></blockquote><a id="more"></a><hr><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><ul><li><p>了解Hexo:</p><p>  <a href="https://hexo.io/zh-cn/index.html" target="_blank" rel="external">Hexo官网</a></p></li></ul><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p> 因为安装的这个部分没有变动，所以本人不再详细介绍了。下面提供我在安装时参考的网页教程，按照其中的顺序步骤安装即可。</p><p>不过我会在此提醒一下一些细节的问题。</p></blockquote><ul><li><p>参考网页：</p><ul><li><p><a href="www.jianshu.com/p/4eaddcbe4d12">参考1</a></p></li><li><p><a href="gonghonglou.com/2016/02/03/firstblog/">参考2</a></p></li><li><p><a href="jeasonstudio.github.io/2016/05/26/Mac上搭建基于GitHub-Page的Hexo博客/">参考3</a></p></li></ul></li></ul><blockquote><p>这是我个人感觉比较好的几篇文章，在以上的页面中可以依次参考，最好是同时打开参考，看一遍左右就可以知道大概需要做那一些工作了。</p></blockquote><hr><h2 id="安装过程中的细节提示"><a href="#安装过程中的细节提示" class="headerlink" title="安装过程中的细节提示"></a>安装过程中的细节提示</h2><ul><li><p>写完后的空格应该要注意留。</p></li><li><p>大小写的严格要求，应该反复检查，往往可以抓出问题的所在。</p></li><li><p>配置文件的编写，或者是文件的误删。</p><blockquote><p>比如在需要GitHub的域名时的前面的<br><code>repo</code> 或者是 <code>repository</code> ，两者都是可行的。</p></blockquote></li><li><p>各个命令行的顺序运行。</p></li></ul><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>详细的配置都在next主题的官网可以找到：<a href="http://theme-next.iissnan.com" target="_blank" rel="external">next主题官网</a></li></ul><blockquote><p><strong>但是其中有一些配置是错误的，配置完达不到预期效果的，我将一一进行补充说明，以下的相关的配置说明是经过本人配置了多次得到的发现问题的所在。</strong></p><p><strong>配置完主题后必须要记得使用命令 <code>hexo s -debug</code> 表示主题调试，否则肯定达不到预期的效果！并且应该要注意记得在每次配置完主题在使用这个命令后，应该要打开 <code>http://localhost:4000/</code> 来进行查看网页的情况，以便出现错误了，可以提前知道。</strong></p></blockquote><hr><h3 id="开始使用的配置"><a href="#开始使用的配置" class="headerlink" title="开始使用的配置"></a>开始使用的配置</h3><p>  <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">next开始使用的官网</a> </p><p><strong>即在配置标签的小图标时的错误，以下才是正确的配置，即不要分开来编写</strong>：<br>    <code>即为菜单的小图标的配置问题</code></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%883.52.20.png" alt=""></p><h3 id="next主题配置"><a href="#next主题配置" class="headerlink" title="next主题配置"></a>next主题配置</h3><p><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">next主题配置官网</a></p><p>   <code>以下为配置链接时的小图标的问题</code></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%883.52.31.png" alt=""></p><p><strong>以上是next主题开始使用及主题配置的相关的官网配置的纠正错误</strong></p><ul><li><p>但是如果想要解决自己的网页打开慢的问题，可以如下配置：</p><p>  即在 <code>font</code> 下的 <code>global</code> 的子目录处 <code>family</code> 对应的字体去掉<br>并且在上方加上 <code>use_font_lato: flase</code> （如图），这是因为在打开博客网页的时候会加载谷歌字体，需要占大量的时间，官网还有一个加速的配置，继续往文章下看。</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%884.06.09.png" alt=""></p><h3 id="第三方服务配置"><a href="#第三方服务配置" class="headerlink" title="第三方服务配置"></a>第三方服务配置</h3><p><a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="external">第三方配置的官网</a></p><ul><li><strong>注意在百度统计的这个配置上面是行不通的，即为以下的这个配置是可产生错误的，本人经过多次测试</strong></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%884.13.21.png" alt=""></p><hr><h3 id="内建标签"><a href="#内建标签" class="headerlink" title="内建标签"></a>内建标签</h3><p><a href="http://theme-next.iissnan.com/tag-plugins.html" target="_blank" rel="external">next主题的内建标签官网配置</a></p><ul><li><strong>本人暂时没用到</strong></li></ul><hr><h3 id="进阶配置"><a href="#进阶配置" class="headerlink" title="进阶配置"></a>进阶配置</h3><p><a href="http://theme-next.iissnan.com/advanced-settings.html" target="_blank" rel="external">next进阶配置官网</a></p><blockquote><p><strong>在这个配置中是可以加速网页打开的，本人亲自测试，快了不止一点点（如下图1），注意的是需要将其中的（如下图2）<code>_internal:</code> 后面改为 <code>lib</code> ,因为新的版本已经将 <code>vendors</code> 文件夹改为了 <code>lib</code>,若是不改，动画效果展示会没有预期的效果出现的！ </strong></p></blockquote><ul><li><p>图1<br><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%884.21.08.png" alt=""></p></li><li><p>图2</p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-28%20%E4%B8%8B%E5%8D%881.40.30.png" alt=""></p><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><ul><li><p><strong>在每次配置完主题，或者是写完文章上传命令的顺序应该是：</strong></p><p><code>hexo s -debug</code>  主题调示生效</p><p> 并且打开 <code>http://localhost:4000</code> 查看是否无问题</p><p> <code>hexo clean</code>. 清理页面缓存</p><p> <code>hexo g</code> </p><p> <code>hexo d</code> 上交到GitHub</p></li></ul><hr><h2 id="将网页部署到谷歌，即被谷歌收录"><a href="#将网页部署到谷歌，即被谷歌收录" class="headerlink" title="将网页部署到谷歌，即被谷歌收录"></a>将网页部署到谷歌，即被谷歌收录</h2><ul><li>第一步</li></ul><p> <a href="https://www.google.com/webmasters/tools/home?hl=zh-CN" target="_blank" rel="external">注册谷歌</a></p><ul><li>因为本人时间问题，请参考：</li></ul><blockquote><p> 仅仅参考其中的验证过程及后续的站点地图过程即可，中间的过程我来进行补充，不然会发生错误！！！！！！！</p></blockquote><p>  <a href="http://fengdi.org/2017/08/10/Hexo博客提交百度和Google收录.html" target="_blank" rel="external">参考1</a></p><p>  <a href="http://www.troylc.cc/hexo/2016/06/16/Hexo-4.html" target="_blank" rel="external">参考2</a></p><ul><li><strong>在验证之后的配置补充</strong></li></ul><p><strong>进入主要配置文件，将url对应的网站换成自己的之后（如图）    再命令<code>npm install hexo-generator-sitemap --save</code> <code>hexo -g</code> <code>hexo -d</code> 生成自己对应的 <code>sitemap.xml</code> 文件之后再进行站点的环节！！！</strong></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%889.40.51.png" alt=""></p><p><strong>是这样的才是正确的，如图</strong></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%889.42.36.png" alt=""></p><p><strong>如果是在配置站点时提示出现错误的，即为错误的原因是没有更改url的问题</strong></p><blockquote><p><strong>修改文件 <code>robots.txt</code> 配置，即为你允许搜索引擎搜索你的哪一些的内容的配置。如我修改的</strong></p></blockquote><ul><li><p>具体可以参考此篇文章，seo优化，让你的博客在谷歌搜索得到优化：</p><p> <a href="http://www.jianshu.com/p/86557c34b671" target="_blank" rel="external">参考</a></p></li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%884.56.22.png" alt=""></p><hr><h2 id="将图片存在七牛云，一齐写作"><a href="#将图片存在七牛云，一齐写作" class="headerlink" title="将图片存在七牛云，一齐写作"></a>将图片存在七牛云，一齐写作</h2><ul><li>第一步，为什么要用七牛云？因为我们的博客基于GitHub上会有内存的限制，不能将每一张图片上传GitHub空间，而七云牛之类的可以解决这个问题，并且空间也足够用了。</li></ul><p>  <a href="https://baike.baidu.com/item/七牛云存储" target="_blank" rel="external">了解七云牛</a></p><p>  <a href="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%884.56.22.png" target="_blank" rel="external">注册七云牛</a></p><ul><li>点击 <code>存储对象</code> 新建一个空间，名字随意</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%885.09.24.png" alt=""></p><ul><li>点击 <code>镜像储存</code>之后绑定自己的域名，可以加速访问，并且写作添加图片也需要。</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%885.11.38.png" alt=""></p><ul><li>之后可以上传文件了</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%885.11.52.png" alt=""></p><hr><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%884.59.05.png" alt=""></p><ul><li>在写作时的添加图片格式，复制外链，然后运用markdown语法即可完成图片添加</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%885.00.07.png" alt=""></p><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8B%E5%8D%885.22.53.png" alt=""></p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><ul><li><p>在Mac上的可以用Macdown来写markdown语法</p><p><a href="http://macdown.uranusjr.com" target="_blank" rel="external">Macdown下载</a></p></li><li><p>在使用命令行的过程时，有时使用 <code>hexo -g</code> <code>hexo -d</code> 会出现找不到命令行的错误提示。使用完整的命令行就可以解决了，即 <code>hexo clean``hexo generate``hexo deploy</code></p></li></ul><blockquote><p>在出现 <code>unable to access &#39;https://github.com/...</code> 之类的问题，也是切换命令行的简写或者是全写即可解决。</p><p><strong>声明</strong></p><p>被参考的其他网页均在我的<a href="http://www.jianshu.com/p/737e1dd8adb9" target="_blank" rel="external">简书</a>上已经声明</p></blockquote><h1 id="更新：多个设备写Hexo博客"><a href="#更新：多个设备写Hexo博客" class="headerlink" title="更新：多个设备写Hexo博客"></a>更新：多个设备写Hexo博客</h1><ul><li>可参考：<a href="https://weicools.com/20181111/hexo-sync-on-multidevice/" target="_blank" rel="external">比较合适的Hexo多设备同步方法</a></li></ul><h1 id="更新：为hexo添加繁-简体转换功能"><a href="#更新：为hexo添加繁-简体转换功能" class="headerlink" title="更新：为hexo添加繁/简体转换功能"></a>更新：为hexo添加繁/简体转换功能</h1><ul><li>可参考：<a href="http://qingbo.site/2016/10/11/how-set-Chinese-Simplified-switch-to-Chinese-Traditional/#" target="_blank" rel="external">两步让你的网站支持简体繁体切换</a></li></ul><h1 id="更新：hexo博客的功能添加以及优化"><a href="#更新：hexo博客的功能添加以及优化" class="headerlink" title="更新：hexo博客的功能添加以及优化"></a>更新：hexo博客的功能添加以及优化</h1><p>可参考：</p><ul><li><p><a href="https://zhuanlan.zhihu.com/p/30836436" target="_blank" rel="external">Hexo+Next主题优化</a></p></li><li><p><a href="https://blog.csdn.net/qq_33699981/article/details/72716951" target="_blank" rel="external">hexo的next主题个性化教程：打造炫酷网站</a></p></li><li><p><a href="https://www.jianshu.com/p/c311d31265e0" target="_blank" rel="external">hexo页脚添加访客人数和总访问量</a></p></li></ul><h1 id="更新：GitHub不支持密码验证了"><a href="#更新：GitHub不支持密码验证了" class="headerlink" title="更新：GitHub不支持密码验证了"></a>更新：GitHub不支持密码验证了</h1><p>就会报出如下错误：</p><pre><code>remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.fatal: unable to access ‘https://github.com/XXX/XXX.git/‘: The requested URL returned error: 403</code></pre><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>1.将<code>GitHub</code>中的Token覆盖在Mac钥匙串中的对应的GitHub账户的密码。</p><blockquote><p>具体操作方法可参考：<a href="http://odcowl.com/2021/08/16/Hexo%E5%8D%9A%E5%AE%A2%EF%BC%9Agithub%E4%B8%8D%E5%86%8D%E6%94%AF%E6%8C%81%E5%AF%86%E7%A0%81%E9%AA%8C%E8%AF%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%882021-8-13%E6%9B%B4%E6%96%B0/" target="_blank" rel="external">Hexo/MacOs github不再支持密码验证解决方案2021.8.13更新</a></p></blockquote><p>2.在终端要求输入密码时将Token输入即可。<br>失效要求重新输入<code>username</code>及<code>password</code>验证时的操作：</p><pre><code>username:你的GitHub账户名称password：Token</code></pre><blockquote><p><strong>注意：Token期限要根据习惯设定。</strong></p></blockquote><h1 id="更新：Git-SSL-ERROR-SYSCALL-问题解决"><a href="#更新：Git-SSL-ERROR-SYSCALL-问题解决" class="headerlink" title="更新：Git - SSL_ERROR_SYSCALL 问题解决"></a>更新：Git - SSL_ERROR_SYSCALL 问题解决</h1><p>即出现的如下问题：</p><pre><code>Error: fatal: unable to access &apos;https://github.com/liujunjie11/liujunjie11.github.io.git/&apos;: LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443</code></pre><blockquote><p>因为这个问题并未影响我正常使用<code>Hexo</code>，并且依旧能够正常上传展示到博客，则先未能尝试解决此问题。但可参考：<a href="https://blog.hyperzsb.tech/git-ssl-error/" target="_blank" rel="external">Git - SSL_ERROR_SYSCALL 问题解决</a></p></blockquote><h1 id="更新：Hexo-LibreSSL-SSL-connect-SSL-ERROR-SYSCALL-in-connection-to-github-com-443问题解决"><a href="#更新：Hexo-LibreSSL-SSL-connect-SSL-ERROR-SYSCALL-in-connection-to-github-com-443问题解决" class="headerlink" title="更新：Hexo LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443问题解决"></a>更新：Hexo LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443问题解决</h1><p>即在<code>deploy</code>命令时出现的如下问题：</p><pre><code>LibreSSL SSL_connect: SSL_ERROR_SYSCALL in connection to github.com:443</code></pre><p>解决：打开终端输入如下命令(根据情况)</p><pre><code>git config --global --unset http.proxygit config --global --unset https.proxy</code></pre><blockquote><p>最好在能科学上网的情况下完成。如：使用<code>SS</code>时打开全局代理。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
          <category> 笔记 </category>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 教程笔记 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在自己的独立博客，第一篇总得说一些什么..</title>
      <link href="/2017/09/26/%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%EF%BC%8C%E7%AC%AC%E4%B8%80%E7%AF%87%E6%80%BB%E5%BE%97%E8%AF%B4%E4%B8%80%E4%BA%9B%E4%BB%80%E4%B9%88/"/>
      <url>/2017/09/26/%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E7%8B%AC%E7%AB%8B%E5%8D%9A%E5%AE%A2%EF%BC%8C%E7%AC%AC%E4%B8%80%E7%AF%87%E6%80%BB%E5%BE%97%E8%AF%B4%E4%B8%80%E4%BA%9B%E4%BB%80%E4%B9%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本来在前几天就建立好了这个独立博客了，到现在才来写上，日期更改了一下。</p></blockquote><p><strong>开门见山吧。</strong></p><a id="more"></a><h2 id="为什么要建立这个博客"><a href="#为什么要建立这个博客" class="headerlink" title="为什么要建立这个博客"></a>为什么要建立这个博客</h2><h4 id="我对于一个博客的见解："><a href="#我对于一个博客的见解：" class="headerlink" title="我对于一个博客的见解："></a>我对于一个博客的见解：</h4><ul><li><p>一个自己的博客应该是一个自由的个人空间，可以是开放，也可以是封闭的，决定权在于自己。</p></li><li><p>一个自己的博客应该是代表着自己的个人的想法与展示个人思维的空间，即在这里应该是不受任何约束的。</p></li><li><p>一个自己的博客应该是自己的一个思维空间，在这里可以大胆的说出自己的想法的，这里是自我言论的地方，并且都仅仅是代表个人的。</p></li><li><p>一个自己的博客可以是一个家的样子，自己来搭配，自己来管理，可以迎接来到这里的来访者，到了晚上的时候，也可以是自己聆听自己的心灵空间。</p></li></ul><h4 id="我建立的初衷："><a href="#我建立的初衷：" class="headerlink" title="我建立的初衷："></a>我建立的初衷：</h4><ul><li><p>自由。自由对我来说是不可或缺的。</p></li><li><p>空间。我想要一个空间来记录自己的成长与学习的资料，我是要求把他开放的，并且希望通过这个空间能与更多的人交流。</p></li><li>回报。我是因为在这个拥有无数个默默贡献者的巨大网络空间才成长到今天的这个模样的，而现在，我希望我也能对这个网络世界贡献一点力量，帮助后来人成长，就像当初的我被那一些默默的，不知姓名的人们帮助一样。这对于我来说是一件可以让我感到开心的事。</li></ul><h4 id="对于我影响很大的："><a href="#对于我影响很大的：" class="headerlink" title="对于我影响很大的："></a>对于我影响很大的：</h4><ul><li>哲学。主要是古代西方世界的哲人们，主要是自然哲学。让我至今生活的更美好，我很感谢她。</li><li>自己感兴趣的科技力量。</li><li>乔丹。他的精神与华丽的球技影响了我。</li><li>乔布斯。活着就是为了改变世界。哈</li></ul><h4 id="最后的："><a href="#最后的：" class="headerlink" title="最后的："></a>最后的：</h4><ul><li>希望可以帮助更多的人，这应该是我建立这个博客的主要原因。</li><li>希望自己可以坚持记录自己的成长的一历一迹。</li></ul><h4 id="特别的："><a href="#特别的：" class="headerlink" title="特别的："></a>特别的：</h4><ul><li>感谢<a href="https://hexo.io/zh-cn/index.html" target="_blank" rel="external">Hexo</a>。</li><li>也感谢其创始者，给我提供了这个平台，实现了我的个人独立博客需求。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SS的使用与下载</title>
      <link href="/2017/09/25/SS%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E4%B8%8B%E8%BD%BD/"/>
      <url>/2017/09/25/SS%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<p>虽然说是Mac演示，其实其他的PC平台也可以参考参考。</p><p>好了。其实我老早就想写一篇这之类的文章了。很多同学学习的时候需要翻墙什么的啦，即教一下还不会利用一些方式去翻墙的同学朋友了，废话不多说，我现在开始说说怎么利用SS去代理网桥！！</p><a id="more"></a><p><strong>第一步</strong>：结合你的PC平台去下载相关的SS软件：</p><ul><li><p><a href="http://ss.ishadowx.com/index_cn.html" target="_blank" rel="external">点击这里下载</a>（注意你的PC平台对应好再点击下载）</p></li><li><p>下载之后，安装界面一路点击就好了。</p></li><li><p>下载好之后，打开会有一个飞机样式在屏幕上方。</p></li></ul><p><strong>第二步</strong>：</p><ul><li>点开软件，点击服务器（我的是Mac，其他的PC平台应该都差不了多少啦）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/7612949-e702ce02404e9384.png.png" alt=""></p><ul><li>（在这里点击打开服务器设定）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8A%E5%8D%888.19.45.png" alt=""><br>￼</p><ul><li>（点击“+”号，创建服务器连接界面，在此就需要一些帐号了）</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8A%E5%8D%888.19.55.png" alt=""></p><p>￼</p><ul><li>有些可以通过二维码登录的，可以先打开相关的帐号网页，点击相关帐号的二维码，再到软件上点击“从屏幕上扫描二维码”即可自动识别登录</li></ul><p><img src="https://liu-1258031152.cos.ap-beijing.myqcloud.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-09-26%20%E4%B8%8A%E5%8D%888.20.45.png" alt=""></p><p><strong>第三步</strong>：好了各位，现在你们需要的就是找这些SS的帐号（有免费，也有收费的），并且输入相对应的号就O了。再去打开浏览器搜索谷歌之类的就发现可以进去了。（当然，如果是进不去，可能是帐号的问题，换一个帐号试试看）<br>帐号就下面分享一些网站（有一些免费的帐号可以使用）：</p><ul><li><a href="https://ss.ishadowx.net/index_cn.html" target="_blank" rel="external">免费账号</a></li></ul><ul><li><a href="http://sstest.cc/shadowsocks免费账号/" target="_blank" rel="external">免费账号</a></li></ul><p><strong>第四步</strong>（个人建议）：（若是没必要可以跳过）：</p><ul><li><a href="https://fanqianghou.com" target="_blank" rel="external">点击这里</a></li></ul><p>（请看到最后，总有你想要或者是感兴趣的）</p><p>最后：<br>好了，到这里就差不多了。谢谢大家的查看。废话：这个世界很大很大，还有很多很多的事情需要我们去了解。<br>本人去暗网查看过一些想看的资料，一些实情。有机会可以与各位分享如何进暗网的文章。<br>文章在这里就结束了，希望每个人都有开开心心的每一天。</p><p>参考:</p><ul><li><a href="blog.chinaunix.net/uid-25518484-id-5698444.html">参考</a></li></ul><p>Shadowsocks原理以及介绍：</p><ul><li><a href="blog.021xt.cc/archives/98">原理</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 软件使用 </category>
          
          <category> 科学上网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SS </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集思</title>
      <link href="/2017/09/25/%E9%9B%86%E6%80%9D/"/>
      <url>/2017/09/25/%E9%9B%86%E6%80%9D/</url>
      
        <content type="html"><![CDATA[<blockquote><ul><li>1.</li></ul></blockquote><p>在这里，在今天，我也有了自己的博客了。哈哈。</p><p>我很小的时候便是七龙珠迷呢，二话不说，我想我应该把头像换成这个。哈哈。</p><p>我是一个有自我约束力的人，设置的时候但我有一些犹豫了。哈哈</p><p>从前我一直期待着有这样一个自己的平台，即尝试着去写博客玩玩，没想到这么快就可以开始了。但是现在刚刚创建了自己的小窝后，居然不知该如何说一些什么是好了。</p><a id="more"></a><p>来说说为什么来这里的一些想法吧，这个地方将是我的新的小窝了，没错，属于我自己的小窝。平时在生活中会有好多的想法与心得呢，想着有这么一个平台可以记录下来。不过现在该是实现了一半了吧。</p><p>我想在这里从现在就开始记录下来一些想写的，或者是想法呀，心得啊，现在此刻有一些小窃喜，我知道这种感觉，但我说不出来，怎么描述呢。就像是小时候偷偷地买了一本新的漫画书到手的那种感觉吧，哈哈。</p><p>简书的这个排版挺好，不至于密密麻麻的咯，哈哈。</p><p>这个文集显示的是日记本，但对于我来说，随笔与日记本好像是没有区别，随心所欲咯，从小到大都不怎么喜欢被约束呢。不过，日记本的格式倒是合我的胃口的，哈哈。</p><p>我不喜欢取目哗众的感觉，但是从前我总是有这么一个流弊，现在在这个平台可能亦然是对于我是一个锻炼。如今，每次看到从前的被记录下来的自己的言语，总是会有莫名的羞愧感。</p><p>为何要来这里写下一些东西呢，除了是这里的空间大之外，可能就是我迫切希望能得到与更多优秀的人交流的机会。</p><p>现在，我开始冷静下来了一些，第一篇文章难免会有一些激动之情呢。哈哈</p><p>我从来都不愿意刻意去想一些不必要的东西，事实上，就如去想着去写一篇文章该怎么写之类的。有感而发咯。</p><p>我承认我写到这里，我开始有一些飘飘然的感觉了，这样一点都不好。这真的是一个对于我来说是一个流弊，我个人并不喜欢这种感觉。我想我还是需要去尝试更多一些，改变这个让人不舒服的感觉。一面飘飘然，然而更多的是羞愧的感觉。</p><p>最后，我应当知道并且去记住。</p><p>这里终究只是记录我成长点滴的平台罢了。</p><p>终于写完了。</p><blockquote><ul><li>2.</li></ul></blockquote><p>由于时间问题至于整个文章我将要分开来进行记录了。</p><p>为什么要写这个文章，我认为很有必要，其实我亦有这个冲动。</p><p>我想从以下几个主要方面来一一记录。</p><p>一，关于我：</p><p>每一个时段都是决定我这一生是否是我追求理想当中的人那个样子的重要衡量（至少现在以为的那个理想的人的样子），我相信我的思维绝对还会改变的。</p><p>现在我在这里写下，我这一生永远也不会向世俗妥协，即使我会有一人走向肉体灰飞烟灭的那一刻。</p><p>我如今快要步入20岁的年纪了，毫无疑问，这将是我的一个思维大转变的时段。我能感觉的到现在的我真的是与从前有了很大的改变了，当然，我指的是我的思维。</p><p>从前的我和从前的人们好似格外不同又好似分毫未差，这就是从前的我的想法。在同一年纪的人群里，我看到了有人在努力的学习，也有的人在自甘堕落，对于自甘堕落的那一些人总是要多一些呢，哈哈，这又或许是像我现在理解的那般，真正醒悟的人并且不断努力去寻求人生意义追求真理的人在这个世上总是占少数部分的，现在的人们和过去的人们相比又是如何如何，我不知也不愿去了解了，真正的历史只有时间知道，至少我现在理解的是这样。</p><p>从前我总是会有莫名的像是被周围的人们抛弃的一种感觉，后来现在意识到不过是自己的自尊心受不了罢了，我是有一些非常的强势的（孩子气叛逆类型的强势），现在的我可能还会有那么一点点，哈哈，不过我已经尽量在克制了，我开始变得很会“照顾自己”了，说成这样，不如说是我的自我约束力越来越强了，我开始意识到我的身体应该要健康，前提是我平常要不断的自我约束与不断的克制，我开始意识到我要不断的寻求真理，而真理在平常生活的每一个角落，我在想，如果有上帝与我谈及真理，它会不会也是这样说呢？哈哈。真理至简，我如今一直很认同这句话。我也想着要好奇的去发现真相，现在发现所有的如此为此付出，不过是浪费我的生命罢了，我开始对于这一方面的好奇变淡了，当然，有一些好奇真的是我不应该去寻求的，但我平时也会有这种冲动，哈哈，不过我也开始意识到，谣言有时或许就是真相，而真相在这个人类社会太难得了。</p><p>现在的我在写现在的这些竟然会有一些兴奋了，这是我没有想到的。</p><p>从前的我不爱读书（仅仅指的是单纯的读书），在我出生的这个国家，人们总是在自己的孩子还小的时候叫他们（她们）好好读书，而这只是一少数人，即真正懂得的人给他们的后人说的教训罢了，现在的多数人以为的读书就是在学校里的成绩，多数人是不知道读书的好处在哪里还且去跟那些真正的追求真理用尽一生至于最后生命在这个世上殆尽的人的“风”并且打着“爱”口号来要求自己的孩子去学校考得好成绩的，多数人在人群里久了也就离世俗越来越近了。后来在世俗里的他们以为这就是人类应该有的文化，居然去教导自己的后人应该这样去做，这真的是一件可笑可悲的人类历迹。多数人是不知道这个世界上有真理这一回事的。</p><p>我很感谢我在别人空闲的时候爱上了读书，读书，是我在这个世界上感觉最美好的一件事情。从前我看完一本书，会为作者的离去而伤心落泪，而现在的我除了感激毫无感觉。西方的文学对我的影响是有改变性的，让我的思维有了巨大的改变，我很感谢能在这个美好的年纪感受到了这么好的书籍，了解到那些真正在不断追求人生意义的人的一些思维与想法。我很爱这种感觉，一种教会我自由的感觉，一种教会我如何生活的更好的感觉。读书将会是我这一生会一直做的事，至死不渝？哈哈。</p><p>我预感到这一篇文章将要进入尾声了。</p><p>现在的我能够按照我的思维去看待更多的问题了，然而我意识到我的能力还远远不够我的预期，除了不断地去尝试去探索，别无他法。</p><p>从前的我相信有人身上存在伟大，现在的我依然相信着。我相信伟大在每一个生活的角落，在这整个世界的，宇宙的每一个角落里，而不应该以一些个为人类进步带来改变的人的品质来衡量真正的伟大，那对于他们来说或许只是他们的工作，他们热爱的并且愿意去付出生命地去探索的。每个人都是伟大的，有的我们看到了，有的我们看不到，更多的是我们没有机会看到。</p><p>关于平凡，当我们想象着整个无边的宇宙，在这里在这个星球上的每一个人难道还有不平凡可言？在平凡之路上的我们，却是总是在想着不平凡，殊不知所谓的不平凡就是平凡。</p><p>人似一片一片落叶，从同一颗树上出生，随着一年四季的变化，我们都要长大，都要离开。有的叶子随风走了，飘来飘去飘到了异乡，他们之间最后有的回来了，有的没有回来。回来的，落叶归根。没有回来的，有的不知去向，有的腐烂在异乡，大树除了默默还是默默。又一年，大树上新的叶子慢慢的像从前一样的无变化的，都冒出来了。</p><p>关于人生，我所认为的人生，就是来去都是一无所有。我们带着无知的空壳来到这个世上，急急忙忙过着我们一种以为的生活，到了最后，我们流着泪离开这个世界，不是因为不舍，也不是因为有着种种遗憾，而是发现了我们到了自己忙忙碌碌一生的最后，我们真的是一无所有，好似从来没有来过这个人世上一般。</p><p>我很喜欢一句话：真正的人生，是翻过一座座大山，到了最后发现，背后却是什么也没有。</p><p>对于现在，我只想要尽可能的去了解更多，去发现我未曾看到，听到的人世间。</p><p>（想着也是对于自己的一封信，还是留下时间地点吧，哈哈）。</p><p>写于：大学（黑龙江科技大学图书馆）</p><p>时间：2017.8.29</p><p>（我的现在的这个人生时段学弟学妹快要来了….）</p><blockquote><ul><li>3.</li></ul></blockquote><p>我从未像今天一样感到无尽的孤独。从来未曾像今天一样，渴望得到真正的那些有良知的人们的心声。</p><p>我为祖国的未来担忧，为无数的在这里的人们担忧，而我如今现在除了流下泪水，却是什么也干不了。</p><p>我热爱这片土地，而如今这片土地却被没有良知的绝大多数人侵占着，人们没有人权没有言论自由，我在这里看到的除了愚昧无知的人们，居然还有企图将残暴的无人性可言的留给一群手无寸铁的学生们，将毒药强加于他们，他们还是成长的阶段啊。为什么这一群没有人性的人们可以走上讲台，为什么要将这样的毒药赋予他们，我看不到祖国这片我热爱的热爱的土地未来的模样。</p><p>一群愚人管理着这片土地，这里曾经散漫了无数人鲜血的土地，这一群人们却是在这里为了自己的私欲残忍地对待无数手无寸铁的人民，夺走了本应该属于人民的权利，这一群人们手里嘴里全是一徒虚名。</p><p>这一群人们为了霸占这片土地，为了虚有的权利与钱财，创建了自己的拥有邪教性质的团党，打着是热爱这片土地与正义的口号，欺骗与隐瞒，扩大着自己的阴谋，对于这里的人民的死活不顾不问，这一群对于人之性命不顾不问的暴徒们啊，真的是可悲可恨的一群苟活者们。为何要将暴力与谎言带来这片土地，这片神圣土地，这片我可以不顾一切为之付出生命的土地，这片我一直热爱着的土地，为何要加害于勇于争取人权的人民们，将谎言与无知带来这片土地，一群可恨的暴徒们啊，利用无尽的谎言欺骗着这里原本纯洁无邪的人们，为了那虚有徒表的政权？可笑啊可悲啊，中华民族几千年的伟大历程，无尽伟大的人文文化，在这里居然被一群暴徒企图想要在他们的统治下来扭曲，建立自己更为邪恶的王国。</p><p>无数的人们却是毫不知情，无数的人们又是装着毫不知情，无数的人们被这具有邪教性质的谎言洗脑慢慢的变得人不像人，还有着人们为了拯救这个国家，为了拯救这片土地，却是被这一群暴徒们加以残害。</p><p>国人们啊，什么时候可以站起来与这一群暴徒们决斗，拿回我们的这片土地，拿回这片生我们养我们的这片土地。但我现在看不到，在这一群暴徒之下，看不到我的祖国，我的这片土地未来的样子。</p><blockquote><ul><li>4.</li></ul></blockquote><p>所有的曾经存在于这个世上的却是还在如今被尊奉的人们，以及他们的曾经说过的却是如今依旧被现在的人所当做名言在这个人世间流传的话语，真的是人类史上一个天大的笑话，又或许是人类史上巨大的一个悲剧。</p><p>这是当今的人们没有信仰，不知真理何在的一种表现。</p><p>曾经过去存在的都已经成为过眼云烟，本应该消失殆尽，为何又要被这一群没有信仰，没有真正的去认识真理的人们到如今还要被拿来做为他们自己的所谓的信仰，无非是一种拿来掩饰自己从未追求真理的，如同行尸走肉的真实面目罢了。</p><p>唯有理性才能让我们在追求真理的路上不会迷失方向，没有理性又何来人格，又如何去挖掘自己的本性何在，本性的方向何在，说是一具行尸走肉又何妨。</p><p>唯有不断的维持理性，真理永远不会太远。唯有理性，才能真正的接触到真理的面貌。才不至于如同一具行尸走肉。虽然在这人世间，我们都会成为过眼云烟，永远离去至于回归大地，然而对于自然法则的原则，这只是属于自然的一种罢了，在这整个宇宙，整个自然，都无法避免，来来去去，更秋换代。</p><blockquote><ul><li>5.</li></ul></blockquote><p>既然这个人世间的所有不过是这个自然，这个宇宙法则的其中种种罢了，大多数人类到原始以来的野蛮与残暴，与当时的所有存在的生物没有任何区别，更为简便的可以理解为，人类只是这个自然的一部分，更是这个宇宙的小小砂砾。可以想象的到，人类如今的多元化并没有什么非常新鲜的东西存在可言，一切在自然中不过早已是司空见惯的现象罢了。为何如今总是会有一些东西让人们感到新奇呢，甚至于有人感觉不可思议的存在，我想这与历史的那一部分被时间所埋没的关系，或者是被人为的生物所有意的埋没亦然是有着不可或缺的关系的。</p><p>人类之中从诞生以来，是肯定有着乐于思考的那一群人们存在的，这一点从古罗马或者是古希腊的那一些哲人们留下的哲言就可以得知的，可想而知，有着这一群的存在是多么有意义的一件事，他们发现的自然宇宙的法则存在于这个所在的世间的种种之间的关系，流传至今，给予了无数后来人去认知到了这一些，并且会不断的传承下去，被那些乐于不断思考的后人去发现更多的法则秘密，这真的是人类最为伟大的一处了：思考。</p><p>那么既然善与恶都是法则之中情理之中的事情，并且在现在我开始慢慢的理解，认识到了那些所谓的有着邪恶的思想的坏人们也只是自然法则中不可或缺的存在罢了，我开始是有一些怜悯之心了。然而这却是与我在之前的为了人权人道这一些不过也是属于法则之中的一部分罢了的东西，我开始有一些思考了，即既然那些邪恶的存在是属于法则中的情理之中的，那我去做究竟会不会与法则产生冲突？我继续的维持人道人权会不会是属于反法则？这让我陷入了思考。</p><p>在这个法则中所谓的“好”与“坏”是共存的这一点是无可置疑，也是无可争议的，然而之所以在法则之中的所谓的“好”与“坏”是属于共存的，那就应该是有一点平衡存在的，即所谓的“好”与“坏”之间是有着一条界线存在的。当任何一方超越了这一界线之后，都是会有反抗出现的，要不然在人类没有参与到从前的自然生活里的时候从而导致了一些自然生物的永远离去（至少是这么认为的），为什么在这之前却是没有一方生物独大的时刻呢，即便是在所谓的恐龙时代这一点好似也没有发生过的。</p><p>现在在这一片土地上，可能是“坏”的一方的势力快要超越那一条界线了，所以有“好”的一方要来争取了，不准自己一方的界线被“坏”超越了，这真的是自然宇宙法则的一个再也不过典型的其中一个有力的依据罢了。而我是属于旁观者还是站出来成为所谓的“好”的一方呢（至少我现在是有这个想法的，即为“好”的一方）？</p><p>然而我开始意识到了，我并不是上帝，所以亦然不可能是不变的旁观者（当然不否认有人选择），即对于所谓的旁观者而言，这一切这一群不过是属于法则之中的情理之中的罢了，所以不会选择去干涉这一切。我是属于这个法则中的一部分，所以我必须要从“好”或者是“恶”之中来进行选择吗？又或者是选择旁观者的身份？我开始有一些思考了。</p><p>或许对于我而言，在目前是倾斜于所谓的“好”的一方面的，因为所谓的“坏”是真正的侵犯到了真正的人所应该的生来具有的权利与本性的，这也是毫无疑问的是属于破坏法则的行为，即人生自由的所谓的称之为人权的东西。而这对于我而言亦然是不可或缺的。</p><p>所以在目前我选择”好“的一方。</p><blockquote><ul><li>6.</li></ul></blockquote><p>一群垃圾们，你们应当记住了，你们到死永远都是垃圾，不会有翻身之日的。</p><p>笑吧哭吧，这并不是你们的命运，只是你们应当的结果，为何自然在自古以来会有优胜劣汰之言，冥冥中这已是许多人信奉的所谓的真理了，因为已有了无数人在这个验证上做了牺牲品。而现在你们就是后来居上的牺牲品，可悲吗？可笑啊。不要去抱怨，不要去狡辩了，现在的你所在做的一切就是最好的表迹，害怕吗？可是现在的你们以此为荣啊。</p><blockquote><ul><li>7.</li></ul></blockquote><p>一：</p><p>所有的在这个地方或者是世上还在愤世嫉俗的人们真的是一群自以为是，和他们以为的那一群人们其实都是一样无异的人，无知并且愚蠢。即便曾经我亦是如此，即使这个地方及世界上有那么多的慵懒与处处都是的各个有理有据的借口不去自己去争取去进步去学习的人存在，那也不能因为如此而愤世嫉俗，且让自己变得“有色”去看待所有的人，这个真的是最傻不过的思维想法了。</p><p>清醒的人是很少的，但却更多的是一群自以为的清醒却是总是在愤世嫉俗的生活着的人们。不愿意去接受他们认为的所谓不如他自己的人的意见或者是想法，并且不愿意去看到他人不去学习争取进步的面貌，他们的想法总是抱有极端与自我为中心的思维看法，并且更容易的因此而越发狭义，从而使得自己的灵魂充斥着愤怒与偏见，然而，他们应该意识到这样伤害却总是自己，这真的是一种典型的无知与自以为是了，可笑的是，他们却总以为自己就是那一群清醒的为数不多的人类精英，这是多么可笑的一种思维想法。他们应该想到这个自然宇宙的宽广与容忍，并且多去思考这方面的问题，不要以为这是可笑的无知的幼稚的问题，若是真的这么认为，那你才是真正的无知与麻木啊，这样的人又是多么可悲啊。</p><p>二：</p><p>这个国家的领导人若是真正的关心人民与未来，若不是为了权力与利益而存在，为何在同胞们在外遇害之时没有做到雪中送炭？又是为何想要极力的去掩埋这一段历史悲剧？这真的是腐败无能的一种表现。从中国自古以来的所谓的“礼”与“仁爱”的一直的以传统文化去教导人们去以平和的态度去解决纷争与挑衅，然而这个国家的领导人却是以这个为借口，为了和平的去争取更多的利益去贪腐人民的血肉，只顾自身与所谓的亲人们的未来，不顾不管人民的死活，这样一群腐败无能的人们为何还有资格去领导这个国家去占有这块土地，为了继续的腐败，并且不断的去迫害更多的心智未曾成熟的年轻人们，去施以暴力并且还不忘打着人民的名义与国家的名义去镇压那一些真正的有良知的清醒的人们的反抗，在对外却是打着自以为的“大国”之名义对外宣传与他国建立交流，这个是多么可怕地一个国度啊。一群暴徒们霸占了这一片曾经有着孔子孟子这一般的圣人的土地，却还拿着“孔孟”之识去为自己当借口，不断的施以暴政，使得更多的国人因此磨灭了血性，自由人权与梦想。只有血性与梦想才能证明一个人还是活着的，若是没有血性没有梦想没有本性生就以来的自由人权，若是在他人伤及自身与亲人的情况下却是依然麻木着无动于衷，任人摆布，不争与妥协是为“礼”之道？可笑之极。虽然在西方哲学中，有哲人教人以平和与宽容去对待这一切，然而在伤及自身自由人权或者是生命安全之事，我们应该去有血性的去反抗，而不是选择沉默与容忍这一切真真切切的发生着的。</p><p>人就应该不失血性与梦想与自由，不然这有如行尸走肉一般又有何区别？没有区别。人可以有宽容与容忍，但是在必要时刻我们必须要去反抗争取，不是为了我们，而是为了无数后来的人们与人类的未来命运，亦然是为了这个自然宇宙之法则的平衡。</p><p>三：</p><p>今日荒唐之事如此之多，更多的是人太荒唐。</p><p>而我在想下一个百年，国人会醒吗？</p><blockquote><ul><li>8.</li></ul></blockquote><p>不可否认，人真的是一种愚昧的生物。</p><p>今日晚看了一些关于中国共产党本质与一些关于“火星男孩”的文章，让我又有了一些新的思考，与其说是新的思考，不如说是从前的被我搁下的问题又被这一些内容给唤醒了，我又有了想要去思考的欲望了。在此不打算谈及中国共产党如何如何，其中一些东西我想已是许多人都心知肚明的了。</p><p>关于报道的”火星男孩“的一些其中的对话，让我有了思考的冲动的。  关于这一方面，即是关于宇宙的一些奥秘的方面。是的没错，我在现在是有了一些动摇了，我开始有一些相信上帝的存在的这一说法是否真实的而产生的动摇了。怀疑？倒不至于，我是相信自然之力是存在的（我所认为的自然之力包括了她的规律联系与种种的冥冥能力），这一点是毫无疑问的，无可争意的了，但我不相信上帝是否是真的存在的这一说法，因为在人类的历程中，有太多的不可思议的虚假被捏造致于它们的存在并且一直流传至今的。我是相信自然之力的规律与其中的冥冥联系的，但我依旧不相信有命运的这一说法，把所有的一切甚至于自己的生命交给所谓的命运，未免太可笑了。</p><p>既然在中国古代有着由人世间的一些种种事情而出现的一些用词并且都有流传至今的，有如因为一些残暴的无人性可言的政权打压与所谓的在当今来说的一些反人类的做法等一系列人为做法，才致于一些名家在他们的文章中的用词的描述，有如地狱，有如妖魔与鬼怪等等，我相信这一些不过是当时这一些人在当时的所见所闻但是真正的是为了用来描述惨状世态所虚构出来的词语罢了。那么，在所谓的西方的上帝一说，即也有可能的，是被人用来描述美好世界的一种追求或者是一种美好的信仰的才所被虚构出来的，并且流传至今的？其中固然结合了自然之力的种种关系，当然，在其他的宗教也是存在的，有如佛教等，都是有结合自然之力的规律的，后加以描述的所形成的如今的状态的。无可非议，自然之力的规律是深入人类的理解与已是渗入人心的存在了。</p><p>继续讨论”火星男孩“的所说的，有一个”神国“存在的，在控制着整个宇宙的存在的这样的一个”众神“国度。与我之前的一些想法却是不谋而合的，即整个宇宙是被”有为“地创造出来的”实体“，并且是被操控着的监管着的，是的，我们都是被创造的，是创造我们的那一些创造者的”玩具“罢了，不光光是我们人类，即整个所有的宇宙都是有可能的。但是在这之前，我又有了新的疑惑，即那一些创造者又是怎么来的呢？难道真的要以所谓的人类科学去解释这一切已发生的实体？事实上，科学有时就有如同所谓的邪教一般的洗脑性质的意喻的，无可逃避的可以说，所谓的人类科学才是人类史上最为”邪恶“的，因为至于如今的越来越多的人们去开始”信仰“它了，实为是有一些可怕的。</p><p>人是需要有独立思考的，并且去以达到真正的独立去成长的。</p><p>现在的我只能依靠着自己的猜测去想象整个宇宙的奥秘了，目前只能是这样的了。</p><blockquote><ul><li>9.</li></ul></blockquote><p>最近心情郁闷的不行，今日早上开始就又有了一些荒唐事。</p><p>所谓的中央要来人检查这里的所谓的大学了，而在这里的大学的管理者却是那么的愚蠢。当然，所谓的中央的那一群人究竟是以什么样子的方式去考察的呢，像检查小学一样的？我想不会差到哪里去。</p><p>听说是来的是专家来检查的呢，可笑的不行，专家会像这样天天考察来考察去的吗，不如在家里研究怎么把中国教育措施建设的更加的合人意一些，更加的有意义一些吧。不过是一些无所事事的寄生虫。这片土地，这个时代，好像人人都可以成为专家呢，说到底还是人们太无知，太愚笨。</p><blockquote><ul><li>10.</li></ul></blockquote><p>今天看了龙应台的书，从前好久不曾有的感觉好似都回来了。</p><p>关于人生，或许都是沉沦与沉默的。</p><p>真的，这样的感觉，好似又回到了从前在年少的时候的感觉，好像一下下地全部回来了，而我不知说一些什么。</p><p>人生啊，给我的感觉，除了在所谓的各种人世牵绊中忘记了人生这一回事，然后在孤凉的时候，所有的一切都好似都真正的感觉到了，是沉沦与加倍的虚无。</p><p>路的尽头，是虚无。我们还在真正的去在意什么？所谓人世一趟。</p><blockquote><ul><li>11.</li></ul></blockquote><p>无他，现在我只是想讨论一下规矩。</p><p>规矩，每个人都有自己的所谓的规矩，那就难免一些人被动的被接受种种规矩，既然是在他人之下的工作与生活又怎么能说可以避免他人对我们的规矩？</p><p>原则导致出来的规矩，就是大部分的人的所谓的原则与私心所认为的值得他本人肯定的思维想法，难免会被他用在自己的东西上面，又或者说难免用在他所认为的是他自己的东西上面。</p><p>就是这样的罢了，人世间的种种规矩，都是因为种种“人类”罢了。</p><p>人类，人的类型是种种的，即各种规矩所以又是种种的。</p><p>打算就此在此完结了。不知怎么的，我的心现在怎么的无端飞起来了。。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思考笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2017/09/25/hello-world/"/>
      <url>/2017/09/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
